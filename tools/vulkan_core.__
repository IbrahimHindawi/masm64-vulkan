
; TYPEDEF VkBool32 = uint32_t, TypeKind.ELABORATED
VkBool32 typedef dword

; TYPEDEF VkDeviceAddress = uint64_t, TypeKind.ELABORATED
VkDeviceAddress typedef qword

; TYPEDEF VkDeviceSize = uint64_t, TypeKind.ELABORATED
VkDeviceSize typedef qword

; TYPEDEF VkFlags = uint32_t, TypeKind.ELABORATED
VkFlags typedef dword

; TYPEDEF VkSampleMask = uint32_t, TypeKind.ELABORATED
VkSampleMask typedef dword

; TYPEDEF VkBuffer = struct VkBuffer_T *, TypeKind.POINTER
VkBuffer typedef qword

; TYPEDEF VkImage = struct VkImage_T *, TypeKind.POINTER
VkImage typedef qword

; TYPEDEF VkInstance = struct VkInstance_T *, TypeKind.POINTER
VkInstance typedef qword

; TYPEDEF VkPhysicalDevice = struct VkPhysicalDevice_T *, TypeKind.POINTER
VkPhysicalDevice typedef qword

; TYPEDEF VkDevice = struct VkDevice_T *, TypeKind.POINTER
VkDevice typedef qword

; TYPEDEF VkQueue = struct VkQueue_T *, TypeKind.POINTER
VkQueue typedef qword

; TYPEDEF VkSemaphore = struct VkSemaphore_T *, TypeKind.POINTER
VkSemaphore typedef qword

; TYPEDEF VkCommandBuffer = struct VkCommandBuffer_T *, TypeKind.POINTER
VkCommandBuffer typedef qword

; TYPEDEF VkFence = struct VkFence_T *, TypeKind.POINTER
VkFence typedef qword

; TYPEDEF VkDeviceMemory = struct VkDeviceMemory_T *, TypeKind.POINTER
VkDeviceMemory typedef qword

; TYPEDEF VkEvent = struct VkEvent_T *, TypeKind.POINTER
VkEvent typedef qword

; TYPEDEF VkQueryPool = struct VkQueryPool_T *, TypeKind.POINTER
VkQueryPool typedef qword

; TYPEDEF VkBufferView = struct VkBufferView_T *, TypeKind.POINTER
VkBufferView typedef qword

; TYPEDEF VkImageView = struct VkImageView_T *, TypeKind.POINTER
VkImageView typedef qword

; TYPEDEF VkShaderModule = struct VkShaderModule_T *, TypeKind.POINTER
VkShaderModule typedef qword

; TYPEDEF VkPipelineCache = struct VkPipelineCache_T *, TypeKind.POINTER
VkPipelineCache typedef qword

; TYPEDEF VkPipelineLayout = struct VkPipelineLayout_T *, TypeKind.POINTER
VkPipelineLayout typedef qword

; TYPEDEF VkPipeline = struct VkPipeline_T *, TypeKind.POINTER
VkPipeline typedef qword

; TYPEDEF VkRenderPass = struct VkRenderPass_T *, TypeKind.POINTER
VkRenderPass typedef qword

; TYPEDEF VkDescriptorSetLayout = struct VkDescriptorSetLayout_T *, TypeKind.POINTER
VkDescriptorSetLayout typedef qword

; TYPEDEF VkSampler = struct VkSampler_T *, TypeKind.POINTER
VkSampler typedef qword

; TYPEDEF VkDescriptorSet = struct VkDescriptorSet_T *, TypeKind.POINTER
VkDescriptorSet typedef qword

; TYPEDEF VkDescriptorPool = struct VkDescriptorPool_T *, TypeKind.POINTER
VkDescriptorPool typedef qword

; TYPEDEF VkFramebuffer = struct VkFramebuffer_T *, TypeKind.POINTER
VkFramebuffer typedef qword

; TYPEDEF VkCommandPool = struct VkCommandPool_T *, TypeKind.POINTER
VkCommandPool typedef qword

; enum VkResult {
    VK_SUCCESS equ 0
    VK_NOT_READY equ 1
    VK_TIMEOUT equ 2
    VK_EVENT_SET equ 3
    VK_EVENT_RESET equ 4
    VK_INCOMPLETE equ 5
    VK_ERROR_OUT_OF_HOST_MEMORY equ -1
    VK_ERROR_OUT_OF_DEVICE_MEMORY equ -2
    VK_ERROR_INITIALIZATION_FAILED equ -3
    VK_ERROR_DEVICE_LOST equ -4
    VK_ERROR_MEMORY_MAP_FAILED equ -5
    VK_ERROR_LAYER_NOT_PRESENT equ -6
    VK_ERROR_EXTENSION_NOT_PRESENT equ -7
    VK_ERROR_FEATURE_NOT_PRESENT equ -8
    VK_ERROR_INCOMPATIBLE_DRIVER equ -9
    VK_ERROR_TOO_MANY_OBJECTS equ -10
    VK_ERROR_FORMAT_NOT_SUPPORTED equ -11
    VK_ERROR_FRAGMENTED_POOL equ -12
    VK_ERROR_UNKNOWN equ -13
    VK_ERROR_OUT_OF_POOL_MEMORY equ -1000069000
    VK_ERROR_INVALID_EXTERNAL_HANDLE equ -1000072003
    VK_ERROR_FRAGMENTATION equ -1000161000
    VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS equ -1000257000
    VK_PIPELINE_COMPILE_REQUIRED equ 1000297000
    VK_ERROR_SURFACE_LOST_KHR equ -1000000000
    VK_ERROR_NATIVE_WINDOW_IN_USE_KHR equ -1000000001
    VK_SUBOPTIMAL_KHR equ 1000001003
    VK_ERROR_OUT_OF_DATE_KHR equ -1000001004
    VK_ERROR_INCOMPATIBLE_DISPLAY_KHR equ -1000003001
    VK_ERROR_VALIDATION_FAILED_EXT equ -1000011001
    VK_ERROR_INVALID_SHADER_NV equ -1000012000
    VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR equ -1000023000
    VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR equ -1000023001
    VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR equ -1000023002
    VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR equ -1000023003
    VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR equ -1000023004
    VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR equ -1000023005
    VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT equ -1000158000
    VK_ERROR_NOT_PERMITTED_KHR equ -1000174001
    VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT equ -1000255000
    VK_THREAD_IDLE_KHR equ 1000268000
    VK_THREAD_DONE_KHR equ 1000268001
    VK_OPERATION_DEFERRED_KHR equ 1000268002
    VK_OPERATION_NOT_DEFERRED_KHR equ 1000268003
    VK_ERROR_INVALID_VIDEO_STD_PARAMETERS_KHR equ -1000299000
    VK_ERROR_COMPRESSION_EXHAUSTED_EXT equ -1000338000
    VK_INCOMPATIBLE_SHADER_BINARY_EXT equ 1000482000
    VK_ERROR_OUT_OF_POOL_MEMORY_KHR equ -1000069000
    VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR equ -1000072003
    VK_ERROR_FRAGMENTATION_EXT equ -1000161000
    VK_ERROR_NOT_PERMITTED_EXT equ -1000174001
    VK_ERROR_INVALID_DEVICE_ADDRESS_EXT equ -1000257000
    VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR equ -1000257000
    VK_PIPELINE_COMPILE_REQUIRED_EXT equ 1000297000
    VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT equ 1000297000
    VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT equ 1000482000
    VK_RESULT_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkResult = enum VkResult, TypeKind.ELABORATED
VkResult typedef dword

; enum VkResult {
    VK_SUCCESS equ 0
    VK_NOT_READY equ 1
    VK_TIMEOUT equ 2
    VK_EVENT_SET equ 3
    VK_EVENT_RESET equ 4
    VK_INCOMPLETE equ 5
    VK_ERROR_OUT_OF_HOST_MEMORY equ -1
    VK_ERROR_OUT_OF_DEVICE_MEMORY equ -2
    VK_ERROR_INITIALIZATION_FAILED equ -3
    VK_ERROR_DEVICE_LOST equ -4
    VK_ERROR_MEMORY_MAP_FAILED equ -5
    VK_ERROR_LAYER_NOT_PRESENT equ -6
    VK_ERROR_EXTENSION_NOT_PRESENT equ -7
    VK_ERROR_FEATURE_NOT_PRESENT equ -8
    VK_ERROR_INCOMPATIBLE_DRIVER equ -9
    VK_ERROR_TOO_MANY_OBJECTS equ -10
    VK_ERROR_FORMAT_NOT_SUPPORTED equ -11
    VK_ERROR_FRAGMENTED_POOL equ -12
    VK_ERROR_UNKNOWN equ -13
    VK_ERROR_OUT_OF_POOL_MEMORY equ -1000069000
    VK_ERROR_INVALID_EXTERNAL_HANDLE equ -1000072003
    VK_ERROR_FRAGMENTATION equ -1000161000
    VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS equ -1000257000
    VK_PIPELINE_COMPILE_REQUIRED equ 1000297000
    VK_ERROR_SURFACE_LOST_KHR equ -1000000000
    VK_ERROR_NATIVE_WINDOW_IN_USE_KHR equ -1000000001
    VK_SUBOPTIMAL_KHR equ 1000001003
    VK_ERROR_OUT_OF_DATE_KHR equ -1000001004
    VK_ERROR_INCOMPATIBLE_DISPLAY_KHR equ -1000003001
    VK_ERROR_VALIDATION_FAILED_EXT equ -1000011001
    VK_ERROR_INVALID_SHADER_NV equ -1000012000
    VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR equ -1000023000
    VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR equ -1000023001
    VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR equ -1000023002
    VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR equ -1000023003
    VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR equ -1000023004
    VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR equ -1000023005
    VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT equ -1000158000
    VK_ERROR_NOT_PERMITTED_KHR equ -1000174001
    VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT equ -1000255000
    VK_THREAD_IDLE_KHR equ 1000268000
    VK_THREAD_DONE_KHR equ 1000268001
    VK_OPERATION_DEFERRED_KHR equ 1000268002
    VK_OPERATION_NOT_DEFERRED_KHR equ 1000268003
    VK_ERROR_INVALID_VIDEO_STD_PARAMETERS_KHR equ -1000299000
    VK_ERROR_COMPRESSION_EXHAUSTED_EXT equ -1000338000
    VK_INCOMPATIBLE_SHADER_BINARY_EXT equ 1000482000
    VK_ERROR_OUT_OF_POOL_MEMORY_KHR equ -1000069000
    VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR equ -1000072003
    VK_ERROR_FRAGMENTATION_EXT equ -1000161000
    VK_ERROR_NOT_PERMITTED_EXT equ -1000174001
    VK_ERROR_INVALID_DEVICE_ADDRESS_EXT equ -1000257000
    VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR equ -1000257000
    VK_PIPELINE_COMPILE_REQUIRED_EXT equ 1000297000
    VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT equ 1000297000
    VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT equ 1000482000
    VK_RESULT_MAX_ENUM equ 2147483647
; }

; enum VkStructureType {
    VK_STRUCTURE_TYPE_APPLICATION_INFO equ 0
    VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO equ 1
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO equ 2
    VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO equ 3
    VK_STRUCTURE_TYPE_SUBMIT_INFO equ 4
    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO equ 5
    VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE equ 6
    VK_STRUCTURE_TYPE_BIND_SPARSE_INFO equ 7
    VK_STRUCTURE_TYPE_FENCE_CREATE_INFO equ 8
    VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO equ 9
    VK_STRUCTURE_TYPE_EVENT_CREATE_INFO equ 10
    VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO equ 11
    VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO equ 12
    VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO equ 13
    VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO equ 14
    VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO equ 15
    VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO equ 16
    VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO equ 17
    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO equ 18
    VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO equ 19
    VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO equ 20
    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO equ 21
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO equ 22
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO equ 23
    VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO equ 24
    VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO equ 25
    VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO equ 26
    VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO equ 27
    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO equ 28
    VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO equ 29
    VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO equ 30
    VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO equ 31
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO equ 32
    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO equ 33
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO equ 34
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET equ 35
    VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET equ 36
    VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO equ 37
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO equ 38
    VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO equ 39
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO equ 40
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO equ 41
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO equ 42
    VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO equ 43
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER equ 44
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER equ 45
    VK_STRUCTURE_TYPE_MEMORY_BARRIER equ 46
    VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO equ 47
    VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO equ 48
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES equ 1000094000
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO equ 1000157000
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO equ 1000157001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES equ 1000083000
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS equ 1000127000
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO equ 1000127001
    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO equ 1000060000
    VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO equ 1000060003
    VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO equ 1000060004
    VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO equ 1000060005
    VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO equ 1000060006
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO equ 1000060013
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO equ 1000060014
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES equ 1000070000
    VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO equ 1000070001
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 equ 1000146000
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 equ 1000146001
    VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 equ 1000146002
    VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 equ 1000146003
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 equ 1000146004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 equ 1000059000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 equ 1000059001
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 equ 1000059002
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 equ 1000059003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 equ 1000059004
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 equ 1000059005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 equ 1000059006
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2 equ 1000059007
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 equ 1000059008
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES equ 1000117000
    VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO equ 1000117001
    VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO equ 1000117002
    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO equ 1000117003
    VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO equ 1000053000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES equ 1000053001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES equ 1000053002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES equ 1000120000
    VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO equ 1000145000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES equ 1000145001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES equ 1000145002
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2 equ 1000145003
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO equ 1000156000
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO equ 1000156001
    VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO equ 1000156002
    VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO equ 1000156003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES equ 1000156004
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES equ 1000156005
    VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO equ 1000085000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO equ 1000071000
    VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES equ 1000071001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO equ 1000071002
    VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES equ 1000071003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES equ 1000071004
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO equ 1000072000
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO equ 1000072001
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO equ 1000072002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO equ 1000112000
    VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES equ 1000112001
    VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO equ 1000113000
    VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO equ 1000077000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO equ 1000076000
    VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES equ 1000076001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES equ 1000168000
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT equ 1000168001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES equ 1000063000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES equ 49
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES equ 50
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES equ 51
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES equ 52
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO equ 1000147000
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2 equ 1000109000
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2 equ 1000109001
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2 equ 1000109002
    VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2 equ 1000109003
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2 equ 1000109004
    VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO equ 1000109005
    VK_STRUCTURE_TYPE_SUBPASS_END_INFO equ 1000109006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES equ 1000177000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES equ 1000196000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES equ 1000180000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES equ 1000082000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES equ 1000197000
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO equ 1000161000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES equ 1000161001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES equ 1000161002
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO equ 1000161003
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT equ 1000161004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES equ 1000199000
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE equ 1000199001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES equ 1000221000
    VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO equ 1000246000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES equ 1000130000
    VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO equ 1000130001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES equ 1000211000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES equ 1000108000
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO equ 1000108001
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO equ 1000108002
    VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO equ 1000108003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES equ 1000253000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES equ 1000175000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES equ 1000241000
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT equ 1000241001
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT equ 1000241002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES equ 1000261000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES equ 1000207000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES equ 1000207001
    VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO equ 1000207002
    VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO equ 1000207003
    VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO equ 1000207004
    VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO equ 1000207005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES equ 1000257000
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO equ 1000244001
    VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO equ 1000257002
    VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO equ 1000257003
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO equ 1000257004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES equ 53
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES equ 54
    VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO equ 1000192000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES equ 1000215000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES equ 1000245000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES equ 1000276000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES equ 1000295000
    VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO equ 1000295001
    VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO equ 1000295002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES equ 1000297000
    VK_STRUCTURE_TYPE_MEMORY_BARRIER_2 equ 1000314000
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 equ 1000314001
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 equ 1000314002
    VK_STRUCTURE_TYPE_DEPENDENCY_INFO equ 1000314003
    VK_STRUCTURE_TYPE_SUBMIT_INFO_2 equ 1000314004
    VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO equ 1000314005
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO equ 1000314006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES equ 1000314007
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES equ 1000325000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES equ 1000335000
    VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2 equ 1000337000
    VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2 equ 1000337001
    VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 equ 1000337002
    VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2 equ 1000337003
    VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 equ 1000337004
    VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2 equ 1000337005
    VK_STRUCTURE_TYPE_BUFFER_COPY_2 equ 1000337006
    VK_STRUCTURE_TYPE_IMAGE_COPY_2 equ 1000337007
    VK_STRUCTURE_TYPE_IMAGE_BLIT_2 equ 1000337008
    VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 equ 1000337009
    VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2 equ 1000337010
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES equ 1000225000
    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO equ 1000225001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES equ 1000225002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES equ 1000138000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES equ 1000138001
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK equ 1000138002
    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO equ 1000138003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES equ 1000066000
    VK_STRUCTURE_TYPE_RENDERING_INFO equ 1000044000
    VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO equ 1000044001
    VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO equ 1000044002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES equ 1000044003
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO equ 1000044004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES equ 1000280000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES equ 1000280001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES equ 1000281001
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 equ 1000360000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES equ 1000413000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES equ 1000413001
    VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS equ 1000413002
    VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS equ 1000413003
    VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR equ 1000001000
    VK_STRUCTURE_TYPE_PRESENT_INFO_KHR equ 1000001001
    VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR equ 1000060007
    VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR equ 1000060008
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR equ 1000060009
    VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR equ 1000060010
    VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR equ 1000060011
    VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR equ 1000060012
    VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR equ 1000002000
    VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR equ 1000002001
    VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR equ 1000003000
    VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR equ 1000004000
    VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR equ 1000005000
    VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR equ 1000006000
    VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR equ 1000008000
    VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR equ 1000009000
    VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT equ 1000011000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD equ 1000018000
    VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT equ 1000022000
    VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT equ 1000022001
    VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT equ 1000022002
    VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR equ 1000023000
    VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR equ 1000023001
    VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR equ 1000023002
    VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR equ 1000023003
    VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR equ 1000023004
    VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR equ 1000023005
    VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000023006
    VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR equ 1000023007
    VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR equ 1000023008
    VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR equ 1000023009
    VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR equ 1000023010
    VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR equ 1000023011
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR equ 1000023012
    VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR equ 1000023013
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR equ 1000023014
    VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR equ 1000023015
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR equ 1000023016
    VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR equ 1000024000
    VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR equ 1000024001
    VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR equ 1000024002
    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV equ 1000026000
    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV equ 1000026001
    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV equ 1000026002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT equ 1000028000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT equ 1000028001
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT equ 1000028002
    VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX equ 1000029000
    VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX equ 1000029001
    VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX equ 1000029002
    VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX equ 1000030000
    VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX equ 1000030001
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_KHR equ 1000038000
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000038001
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR equ 1000038002
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PICTURE_INFO_KHR equ 1000038003
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_KHR equ 1000038004
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_INFO_KHR equ 1000038005
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_GOP_REMAINING_FRAME_INFO_KHR equ 1000038006
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_INFO_KHR equ 1000038007
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_KHR equ 1000038008
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_KHR equ 1000038009
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_CREATE_INFO_KHR equ 1000038010
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_QUALITY_LEVEL_PROPERTIES_KHR equ 1000038011
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_GET_INFO_KHR equ 1000038012
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_FEEDBACK_INFO_KHR equ 1000038013
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_KHR equ 1000039000
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000039001
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR equ 1000039002
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PICTURE_INFO_KHR equ 1000039003
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_KHR equ 1000039004
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO_KHR equ 1000039005
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR equ 1000039006
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_INFO_KHR equ 1000039007
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_KHR equ 1000039009
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_KHR equ 1000039010
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_CREATE_INFO_KHR equ 1000039011
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_QUALITY_LEVEL_PROPERTIES_KHR equ 1000039012
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_GET_INFO_KHR equ 1000039013
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_FEEDBACK_INFO_KHR equ 1000039014
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR equ 1000040000
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR equ 1000040001
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR equ 1000040003
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000040004
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR equ 1000040005
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR equ 1000040006
    VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD equ 1000041000
    VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR equ 1000044006
    VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT equ 1000044007
    VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD equ 1000044008
    VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX equ 1000044009
    VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP equ 1000049000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV equ 1000050000
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV equ 1000056000
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV equ 1000056001
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV equ 1000057000
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV equ 1000057001
    VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV equ 1000058000
    VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT equ 1000061000
    VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN equ 1000062000
    VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT equ 1000067000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT equ 1000067001
    VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT equ 1000068000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT equ 1000068001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT equ 1000068002
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR equ 1000073000
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR equ 1000073001
    VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR equ 1000073002
    VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR equ 1000073003
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR equ 1000074000
    VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR equ 1000074001
    VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR equ 1000074002
    VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR equ 1000075000
    VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR equ 1000078000
    VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR equ 1000078001
    VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR equ 1000078002
    VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR equ 1000078003
    VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR equ 1000079000
    VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR equ 1000079001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR equ 1000080000
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT equ 1000081000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT equ 1000081001
    VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT equ 1000081002
    VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR equ 1000084000
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV equ 1000087000
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT equ 1000090000
    VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT equ 1000091000
    VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT equ 1000091001
    VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT equ 1000091002
    VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT equ 1000091003
    VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE equ 1000092000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX equ 1000097000
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV equ 1000098000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT equ 1000099000
    VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT equ 1000099001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT equ 1000101000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT equ 1000101001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT equ 1000102000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT equ 1000102001
    VK_STRUCTURE_TYPE_HDR_METADATA_EXT equ 1000105000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RELAXED_LINE_RASTERIZATION_FEATURES_IMG equ 1000110000
    VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR equ 1000111000
    VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR equ 1000114000
    VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR equ 1000114001
    VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR equ 1000114002
    VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR equ 1000115000
    VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR equ 1000115001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR equ 1000116000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR equ 1000116001
    VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR equ 1000116002
    VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR equ 1000116003
    VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR equ 1000116004
    VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR equ 1000116005
    VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR equ 1000116006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR equ 1000119000
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR equ 1000119001
    VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR equ 1000119002
    VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR equ 1000121000
    VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR equ 1000121001
    VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR equ 1000121002
    VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR equ 1000121003
    VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR equ 1000121004
    VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK equ 1000122000
    VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK equ 1000123000
    VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT equ 1000128000
    VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT equ 1000128001
    VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT equ 1000128002
    VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT equ 1000128003
    VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT equ 1000128004
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID equ 1000129000
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID equ 1000129001
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID equ 1000129002
    VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID equ 1000129003
    VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID equ 1000129004
    VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID equ 1000129005
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID equ 1000129006
    VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT equ 1000143000
    VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT equ 1000143001
    VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT equ 1000143002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT equ 1000143003
    VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT equ 1000143004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT equ 1000148000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT equ 1000148001
    VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT equ 1000148002
    VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV equ 1000149000
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR equ 1000150007
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR equ 1000150000
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR equ 1000150002
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR equ 1000150003
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR equ 1000150004
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR equ 1000150005
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR equ 1000150006
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR equ 1000150009
    VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR equ 1000150010
    VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR equ 1000150011
    VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR equ 1000150012
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR equ 1000150013
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR equ 1000150014
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR equ 1000150017
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR equ 1000150020
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR equ 1000347000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR equ 1000347001
    VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR equ 1000150015
    VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR equ 1000150016
    VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR equ 1000150018
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR equ 1000348013
    VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV equ 1000152000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV equ 1000154000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV equ 1000154001
    VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT equ 1000158000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT equ 1000158002
    VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT equ 1000158003
    VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT equ 1000158004
    VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT equ 1000158005
    VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT equ 1000158006
    VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT equ 1000160000
    VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT equ 1000160001
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV equ 1000164000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV equ 1000164001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV equ 1000164002
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV equ 1000164005
    VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV equ 1000165000
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV equ 1000165001
    VK_STRUCTURE_TYPE_GEOMETRY_NV equ 1000165003
    VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV equ 1000165004
    VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV equ 1000165005
    VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV equ 1000165006
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV equ 1000165007
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV equ 1000165008
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV equ 1000165009
    VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV equ 1000165011
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV equ 1000165012
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV equ 1000166000
    VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV equ 1000166001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT equ 1000170000
    VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT equ 1000170001
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT equ 1000178000
    VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT equ 1000178001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT equ 1000178002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR equ 1000181000
    VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD equ 1000183000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD equ 1000185000
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_KHR equ 1000187000
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000187001
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR equ 1000187002
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_INFO_KHR equ 1000187003
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_KHR equ 1000187004
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR equ 1000187005
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR equ 1000174000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR equ 1000388000
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR equ 1000388001
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD equ 1000189000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT equ 1000190000
    VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP equ 1000191000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV equ 1000201000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV equ 1000202000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV equ 1000202001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV equ 1000204000
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV equ 1000205000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV equ 1000205002
    VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV equ 1000206000
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV equ 1000206001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL equ 1000209000
    VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL equ 1000210000
    VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL equ 1000210001
    VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL equ 1000210002
    VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL equ 1000210003
    VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL equ 1000210004
    VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL equ 1000210005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT equ 1000212000
    VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD equ 1000213000
    VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD equ 1000213001
    VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA equ 1000214000
    VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT equ 1000217000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT equ 1000218000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT equ 1000218001
    VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT equ 1000218002
    VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR equ 1000226000
    VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR equ 1000226001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR equ 1000226002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR equ 1000226003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR equ 1000226004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD equ 1000227000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD equ 1000229000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES_KHR equ 1000232000
    VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_LOCATION_INFO_KHR equ 1000232001
    VK_STRUCTURE_TYPE_RENDERING_INPUT_ATTACHMENT_INDEX_INFO_KHR equ 1000232002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT equ 1000234000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_QUAD_CONTROL_FEATURES_KHR equ 1000235000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT equ 1000237000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT equ 1000238000
    VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT equ 1000238001
    VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR equ 1000239000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV equ 1000240000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT equ 1000244000
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT equ 1000244002
    VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT equ 1000247000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR equ 1000248000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV equ 1000249000
    VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV equ 1000249001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV equ 1000249002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV equ 1000250000
    VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV equ 1000250001
    VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV equ 1000250002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT equ 1000251000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT equ 1000252000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT equ 1000254000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT equ 1000254001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT equ 1000254002
    VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT equ 1000255000
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT equ 1000255002
    VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT equ 1000255001
    VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT equ 1000256000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT equ 1000260000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT equ 1000267000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR equ 1000269000
    VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR equ 1000269001
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR equ 1000269002
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR equ 1000269003
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR equ 1000269004
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR equ 1000269005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT equ 1000270000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT equ 1000270001
    VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY_EXT equ 1000270002
    VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY_EXT equ 1000270003
    VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO_EXT equ 1000270004
    VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO_EXT equ 1000270005
    VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT equ 1000270006
    VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO_EXT equ 1000270007
    VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE_EXT equ 1000270008
    VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT equ 1000270009
    VK_STRUCTURE_TYPE_MEMORY_MAP_INFO_KHR equ 1000271000
    VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO_KHR equ 1000271001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_FEATURES_EXT equ 1000272000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_PROPERTIES_EXT equ 1000272001
    VK_STRUCTURE_TYPE_MEMORY_MAP_PLACED_INFO_EXT equ 1000272002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT equ 1000273000
    VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_EXT equ 1000274000
    VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT equ 1000274001
    VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT equ 1000274002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT equ 1000275000
    VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_EXT equ 1000275001
    VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT equ 1000275002
    VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_EXT equ 1000275003
    VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT equ 1000275004
    VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT equ 1000275005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV equ 1000277000
    VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV equ 1000277001
    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV equ 1000277002
    VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV equ 1000277003
    VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV equ 1000277004
    VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV equ 1000277005
    VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV equ 1000277006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV equ 1000277007
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV equ 1000278000
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV equ 1000278001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT equ 1000281000
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM equ 1000282000
    VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM equ 1000282001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT equ 1000283000
    VK_STRUCTURE_TYPE_DEPTH_BIAS_INFO_EXT equ 1000283001
    VK_STRUCTURE_TYPE_DEPTH_BIAS_REPRESENTATION_INFO_EXT equ 1000283002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT equ 1000284000
    VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT equ 1000284001
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT equ 1000284002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT equ 1000286000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT equ 1000286001
    VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT equ 1000287000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT equ 1000287001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT equ 1000287002
    VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR equ 1000290000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV equ 1000292000
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV equ 1000292001
    VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV equ 1000292002
    VK_STRUCTURE_TYPE_PRESENT_ID_KHR equ 1000294000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR equ 1000294001
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR equ 1000299000
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR equ 1000299001
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR equ 1000299002
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_CAPABILITIES_KHR equ 1000299003
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_USAGE_INFO_KHR equ 1000299004
    VK_STRUCTURE_TYPE_QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO_KHR equ 1000299005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR equ 1000299006
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_PROPERTIES_KHR equ 1000299007
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR equ 1000299008
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_GET_INFO_KHR equ 1000299009
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_FEEDBACK_INFO_KHR equ 1000299010
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV equ 1000300000
    VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV equ 1000300001
    VK_STRUCTURE_TYPE_CUDA_MODULE_CREATE_INFO_NV equ 1000307000
    VK_STRUCTURE_TYPE_CUDA_FUNCTION_CREATE_INFO_NV equ 1000307001
    VK_STRUCTURE_TYPE_CUDA_LAUNCH_INFO_NV equ 1000307002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_FEATURES_NV equ 1000307003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_PROPERTIES_NV equ 1000307004
    VK_STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV equ 1000310000
    VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECT_CREATE_INFO_EXT equ 1000311000
    VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECTS_INFO_EXT equ 1000311001
    VK_STRUCTURE_TYPE_EXPORT_METAL_DEVICE_INFO_EXT equ 1000311002
    VK_STRUCTURE_TYPE_EXPORT_METAL_COMMAND_QUEUE_INFO_EXT equ 1000311003
    VK_STRUCTURE_TYPE_EXPORT_METAL_BUFFER_INFO_EXT equ 1000311004
    VK_STRUCTURE_TYPE_IMPORT_METAL_BUFFER_INFO_EXT equ 1000311005
    VK_STRUCTURE_TYPE_EXPORT_METAL_TEXTURE_INFO_EXT equ 1000311006
    VK_STRUCTURE_TYPE_IMPORT_METAL_TEXTURE_INFO_EXT equ 1000311007
    VK_STRUCTURE_TYPE_EXPORT_METAL_IO_SURFACE_INFO_EXT equ 1000311008
    VK_STRUCTURE_TYPE_IMPORT_METAL_IO_SURFACE_INFO_EXT equ 1000311009
    VK_STRUCTURE_TYPE_EXPORT_METAL_SHARED_EVENT_INFO_EXT equ 1000311010
    VK_STRUCTURE_TYPE_IMPORT_METAL_SHARED_EVENT_INFO_EXT equ 1000311011
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV equ 1000314008
    VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV equ 1000314009
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT equ 1000316000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT equ 1000316001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT equ 1000316002
    VK_STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT equ 1000316003
    VK_STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT equ 1000316004
    VK_STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT equ 1000316005
    VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT equ 1000316006
    VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT equ 1000316007
    VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT equ 1000316008
    VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT equ 1000316010
    VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT equ 1000316011
    VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT equ 1000316012
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT equ 1000316009
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT equ 1000320000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT equ 1000320001
    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT equ 1000320002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD equ 1000321000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR equ 1000203000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR equ 1000322000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR equ 1000323000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV equ 1000326000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV equ 1000326001
    VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV equ 1000326002
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV equ 1000327000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV equ 1000327001
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV equ 1000327002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT equ 1000328000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT equ 1000328001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT equ 1000330000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT equ 1000332000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT equ 1000332001
    VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM equ 1000333000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR equ 1000336000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT equ 1000338000
    VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT equ 1000338001
    VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT equ 1000338004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT equ 1000339000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT equ 1000340000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FAULT_FEATURES_EXT equ 1000341000
    VK_STRUCTURE_TYPE_DEVICE_FAULT_COUNTS_EXT equ 1000341001
    VK_STRUCTURE_TYPE_DEVICE_FAULT_INFO_EXT equ 1000341002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT equ 1000344000
    VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT equ 1000346000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT equ 1000352000
    VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT equ 1000352001
    VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT equ 1000352002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT equ 1000353000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT equ 1000354000
    VK_STRUCTURE_TYPE_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT equ 1000354001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT equ 1000355000
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT equ 1000355001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT equ 1000356000
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA equ 1000364000
    VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA equ 1000364001
    VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA equ 1000364002
    VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA equ 1000365000
    VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA equ 1000365001
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA equ 1000366000
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA equ 1000366001
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA equ 1000366002
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA equ 1000366003
    VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA equ 1000366004
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA equ 1000366005
    VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA equ 1000366006
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA equ 1000366007
    VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA equ 1000366008
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA equ 1000366009
    VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI equ 1000369000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI equ 1000369001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI equ 1000369002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI equ 1000370000
    VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV equ 1000371000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV equ 1000371001
    VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT equ 1000372000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT equ 1000372001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT equ 1000375000
    VK_STRUCTURE_TYPE_FRAME_BOUNDARY_EXT equ 1000375001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT equ 1000376000
    VK_STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT equ 1000376001
    VK_STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT equ 1000376002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT equ 1000377000
    VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX equ 1000378000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT equ 1000381000
    VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT equ 1000381001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT equ 1000382000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR equ 1000386000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT equ 1000391000
    VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT equ 1000391001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT equ 1000392000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT equ 1000392001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT equ 1000393000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT equ 1000395000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT equ 1000395001
    VK_STRUCTURE_TYPE_MICROMAP_BUILD_INFO_EXT equ 1000396000
    VK_STRUCTURE_TYPE_MICROMAP_VERSION_INFO_EXT equ 1000396001
    VK_STRUCTURE_TYPE_COPY_MICROMAP_INFO_EXT equ 1000396002
    VK_STRUCTURE_TYPE_COPY_MICROMAP_TO_MEMORY_INFO_EXT equ 1000396003
    VK_STRUCTURE_TYPE_COPY_MEMORY_TO_MICROMAP_INFO_EXT equ 1000396004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT equ 1000396005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT equ 1000396006
    VK_STRUCTURE_TYPE_MICROMAP_CREATE_INFO_EXT equ 1000396007
    VK_STRUCTURE_TYPE_MICROMAP_BUILD_SIZES_INFO_EXT equ 1000396008
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT equ 1000396009
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI equ 1000404000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI equ 1000404001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_VRS_FEATURES_HUAWEI equ 1000404002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT equ 1000411000
    VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT equ 1000411001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT equ 1000412000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM equ 1000415000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES_KHR equ 1000416000
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_SHADER_CORE_CONTROL_CREATE_INFO_ARM equ 1000417000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_FEATURES_ARM equ 1000417001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_PROPERTIES_ARM equ 1000417002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT equ 1000418000
    VK_STRUCTURE_TYPE_IMAGE_VIEW_SLICED_CREATE_INFO_EXT equ 1000418001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE equ 1000420000
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE equ 1000420001
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE equ 1000420002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT equ 1000421000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT equ 1000422000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_FEATURES_ARM equ 1000424000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_PROPERTIES_ARM equ 1000424001
    VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_BEGIN_INFO_ARM equ 1000424002
    VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_INFO_ARM equ 1000424003
    VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_SUBMIT_INFO_ARM equ 1000424004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM equ 1000425000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM equ 1000425001
    VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM equ 1000425002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV equ 1000426000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV equ 1000426001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV equ 1000427000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV equ 1000427001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV equ 1000428000
    VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV equ 1000428001
    VK_STRUCTURE_TYPE_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV equ 1000428002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV equ 1000430000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MAXIMAL_RECONVERGENCE_FEATURES_KHR equ 1000434000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT equ 1000437000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM equ 1000440000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM equ 1000440001
    VK_STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM equ 1000440002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_FEATURES_EXT equ 1000451000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_PROPERTIES_EXT equ 1000451001
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT equ 1000453000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT equ 1000455000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT equ 1000455001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT equ 1000458000
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT equ 1000458001
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT equ 1000458002
    VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT equ 1000458003
    VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_INFO_LUNARG equ 1000459000
    VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_LIST_LUNARG equ 1000459001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT equ 1000462000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT equ 1000462001
    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT equ 1000462002
    VK_STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT equ 1000462003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT equ 1000342000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV equ 1000464000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV equ 1000464001
    VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV equ 1000464002
    VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV equ 1000464003
    VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_INFO_NV equ 1000464004
    VK_STRUCTURE_TYPE_OPTICAL_FLOW_EXECUTE_INFO_NV equ 1000464005
    VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV equ 1000464010
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT equ 1000465000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT equ 1000466000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_FEATURES_ANDROID equ 1000468000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_PROPERTIES_ANDROID equ 1000468001
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_RESOLVE_PROPERTIES_ANDROID equ 1000468002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR equ 1000470000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR equ 1000470001
    VK_STRUCTURE_TYPE_RENDERING_AREA_INFO_KHR equ 1000470003
    VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO_KHR equ 1000470004
    VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR equ 1000338002
    VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR equ 1000338003
    VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR equ 1000470005
    VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR equ 1000470006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR equ 1000481000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT equ 1000482000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT equ 1000482001
    VK_STRUCTURE_TYPE_SHADER_CREATE_INFO_EXT equ 1000482002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM equ 1000484000
    VK_STRUCTURE_TYPE_TILE_PROPERTIES_QCOM equ 1000484001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC equ 1000485000
    VK_STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC equ 1000485001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM equ 1000488000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV equ 1000490000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV equ 1000490001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_FEATURES_NV equ 1000492000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_PROPERTIES_NV equ 1000492001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT equ 1000351000
    VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT equ 1000351002
    VK_STRUCTURE_TYPE_LAYER_SETTINGS_CREATE_INFO_EXT equ 1000496000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM equ 1000497000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM equ 1000497001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT equ 1000498000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT equ 1000499000
    VK_STRUCTURE_TYPE_LATENCY_SLEEP_MODE_INFO_NV equ 1000505000
    VK_STRUCTURE_TYPE_LATENCY_SLEEP_INFO_NV equ 1000505001
    VK_STRUCTURE_TYPE_SET_LATENCY_MARKER_INFO_NV equ 1000505002
    VK_STRUCTURE_TYPE_GET_LATENCY_MARKER_INFO_NV equ 1000505003
    VK_STRUCTURE_TYPE_LATENCY_TIMINGS_FRAME_REPORT_NV equ 1000505004
    VK_STRUCTURE_TYPE_LATENCY_SUBMISSION_PRESENT_ID_NV equ 1000505005
    VK_STRUCTURE_TYPE_OUT_OF_BAND_QUEUE_TYPE_INFO_NV equ 1000505006
    VK_STRUCTURE_TYPE_SWAPCHAIN_LATENCY_CREATE_INFO_NV equ 1000505007
    VK_STRUCTURE_TYPE_LATENCY_SURFACE_CAPABILITIES_NV equ 1000505008
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR equ 1000506000
    VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_KHR equ 1000506001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR equ 1000506002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM equ 1000510000
    VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM equ 1000510001
    VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_CAPABILITIES_KHR equ 1000512000
    VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_PICTURE_INFO_KHR equ 1000512001
    VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_PROFILE_INFO_KHR equ 1000512003
    VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000512004
    VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_DPB_SLOT_INFO_KHR equ 1000512005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_MAINTENANCE_1_FEATURES_KHR equ 1000515000
    VK_STRUCTURE_TYPE_VIDEO_INLINE_QUERY_INFO_KHR equ 1000515001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PER_STAGE_DESCRIPTOR_SET_FEATURES_NV equ 1000516000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM equ 1000518000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM equ 1000518001
    VK_STRUCTURE_TYPE_SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM equ 1000518002
    VK_STRUCTURE_TYPE_SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM equ 1000519000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM equ 1000519001
    VK_STRUCTURE_TYPE_BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM equ 1000519002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM equ 1000520000
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM equ 1000520001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM equ 1000521000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT equ 1000524000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_KHR equ 1000525000
    VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR equ 1000190001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR equ 1000190002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES_KHR equ 1000528000
    VK_STRUCTURE_TYPE_SCREEN_BUFFER_PROPERTIES_QNX equ 1000529000
    VK_STRUCTURE_TYPE_SCREEN_BUFFER_FORMAT_PROPERTIES_QNX equ 1000529001
    VK_STRUCTURE_TYPE_IMPORT_SCREEN_BUFFER_INFO_QNX equ 1000529002
    VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_QNX equ 1000529003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCREEN_BUFFER_FEATURES_QNX equ 1000529004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT equ 1000530000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_KHR equ 1000265000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_KHR equ 1000259000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_KHR equ 1000259001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_KHR equ 1000259002
    VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_KHR equ 1000184000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES_KHR equ 1000544000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES_KHR equ 1000545000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES_KHR equ 1000545001
    VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS_KHR equ 1000545002
    VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO_KHR equ 1000545003
    VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO_KHR equ 1000545004
    VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO_KHR equ 1000545005
    VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO_KHR equ 1000545006
    VK_STRUCTURE_TYPE_SET_DESCRIPTOR_BUFFER_OFFSETS_INFO_EXT equ 1000545007
    VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_BUFFER_EMBEDDED_SAMPLERS_INFO_EXT equ 1000545008
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV equ 1000546000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAW_ACCESS_CHAINS_FEATURES_NV equ 1000555000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT16_VECTOR_FEATURES_NV equ 1000563000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_VALIDATION_FEATURES_NV equ 1000568000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES equ 1000120000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES equ 1000063000
    VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT equ 1000011000
    VK_STRUCTURE_TYPE_RENDERING_INFO_KHR equ 1000044000
    VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR equ 1000044001
    VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR equ 1000044002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR equ 1000044003
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR equ 1000044004
    VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV equ 1000044008
    VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR equ 1000053000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR equ 1000053001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR equ 1000053002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR equ 1000059000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR equ 1000059001
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR equ 1000059002
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR equ 1000059003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR equ 1000059004
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR equ 1000059005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR equ 1000059006
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR equ 1000059007
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR equ 1000059008
    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR equ 1000060000
    VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR equ 1000060003
    VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR equ 1000060004
    VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR equ 1000060005
    VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR equ 1000060006
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR equ 1000060013
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR equ 1000060014
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT equ 1000066000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR equ 1000070000
    VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR equ 1000070001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR equ 1000071000
    VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR equ 1000071001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR equ 1000071002
    VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR equ 1000071003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR equ 1000071004
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR equ 1000072000
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR equ 1000072001
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR equ 1000072002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR equ 1000076000
    VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR equ 1000076001
    VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR equ 1000077000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR equ 1000082000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR equ 1000082000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR equ 1000083000
    VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR equ 1000085000
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT equ 1000090000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR equ 1000108000
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR equ 1000108001
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR equ 1000108002
    VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR equ 1000108003
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR equ 1000109000
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR equ 1000109001
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR equ 1000109002
    VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR equ 1000109003
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR equ 1000109004
    VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR equ 1000109005
    VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR equ 1000109006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR equ 1000112000
    VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR equ 1000112001
    VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR equ 1000113000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR equ 1000117000
    VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR equ 1000117001
    VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR equ 1000117002
    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR equ 1000117003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR equ 1000120000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR equ 1000120000
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR equ 1000127000
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR equ 1000127001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT equ 1000130000
    VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT equ 1000130001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT equ 1000138000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT equ 1000138001
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT equ 1000138002
    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT equ 1000138003
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR equ 1000146000
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR equ 1000146001
    VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR equ 1000146002
    VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR equ 1000146003
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR equ 1000146004
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR equ 1000147000
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR equ 1000156000
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR equ 1000156001
    VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR equ 1000156002
    VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR equ 1000156003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR equ 1000156004
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR equ 1000156005
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR equ 1000157000
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR equ 1000157001
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT equ 1000161000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT equ 1000161001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT equ 1000161002
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT equ 1000161003
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT equ 1000161004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR equ 1000168000
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR equ 1000168001
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT equ 1000174000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR equ 1000175000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR equ 1000177000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR equ 1000180000
    VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT equ 1000184000
    VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT equ 1000190001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT equ 1000190002
    VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT equ 1000192000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR equ 1000196000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR equ 1000197000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR equ 1000199000
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR equ 1000199001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV equ 1000203000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR equ 1000207000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR equ 1000207001
    VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR equ 1000207002
    VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR equ 1000207003
    VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR equ 1000207004
    VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR equ 1000207005
    VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL equ 1000210000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR equ 1000211000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR equ 1000215000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT equ 1000221000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT equ 1000225000
    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT equ 1000225001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT equ 1000225002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR equ 1000241000
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR equ 1000241001
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR equ 1000241002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT equ 1000244000
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT equ 1000244001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT equ 1000245000
    VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT equ 1000246000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR equ 1000253000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR equ 1000257000
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR equ 1000244001
    VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR equ 1000257002
    VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR equ 1000257003
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR equ 1000257004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT equ 1000259000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT equ 1000259001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT equ 1000259002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT equ 1000261000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT equ 1000265000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT equ 1000276000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR equ 1000280000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR equ 1000280001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT equ 1000281001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT equ 1000295000
    VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT equ 1000295001
    VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT equ 1000295002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT equ 1000297000
    VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR equ 1000314000
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR equ 1000314001
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR equ 1000314002
    VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR equ 1000314003
    VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR equ 1000314004
    VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR equ 1000314005
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR equ 1000314006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR equ 1000314007
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR equ 1000325000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT equ 1000335000
    VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR equ 1000337000
    VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR equ 1000337001
    VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR equ 1000337002
    VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR equ 1000337003
    VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR equ 1000337004
    VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR equ 1000337005
    VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR equ 1000337006
    VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR equ 1000337007
    VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR equ 1000337008
    VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR equ 1000337009
    VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR equ 1000337010
    VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_EXT equ 1000338002
    VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_EXT equ 1000338003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM equ 1000342000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE equ 1000351000
    VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE equ 1000351002
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR equ 1000360000
    VK_STRUCTURE_TYPE_PIPELINE_INFO_EXT equ 1000269001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT equ 1000388000
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT equ 1000388001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR equ 1000413000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR equ 1000413001
    VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR equ 1000413002
    VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR equ 1000413003
    VK_STRUCTURE_TYPE_SHADER_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT equ 1000225001
    VK_STRUCTURE_TYPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkStructureType = enum VkStructureType, TypeKind.ELABORATED
VkStructureType typedef dword

; enum VkStructureType {
    VK_STRUCTURE_TYPE_APPLICATION_INFO equ 0
    VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO equ 1
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO equ 2
    VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO equ 3
    VK_STRUCTURE_TYPE_SUBMIT_INFO equ 4
    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO equ 5
    VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE equ 6
    VK_STRUCTURE_TYPE_BIND_SPARSE_INFO equ 7
    VK_STRUCTURE_TYPE_FENCE_CREATE_INFO equ 8
    VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO equ 9
    VK_STRUCTURE_TYPE_EVENT_CREATE_INFO equ 10
    VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO equ 11
    VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO equ 12
    VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO equ 13
    VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO equ 14
    VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO equ 15
    VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO equ 16
    VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO equ 17
    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO equ 18
    VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO equ 19
    VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO equ 20
    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO equ 21
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO equ 22
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO equ 23
    VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO equ 24
    VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO equ 25
    VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO equ 26
    VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO equ 27
    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO equ 28
    VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO equ 29
    VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO equ 30
    VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO equ 31
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO equ 32
    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO equ 33
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO equ 34
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET equ 35
    VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET equ 36
    VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO equ 37
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO equ 38
    VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO equ 39
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO equ 40
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO equ 41
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO equ 42
    VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO equ 43
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER equ 44
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER equ 45
    VK_STRUCTURE_TYPE_MEMORY_BARRIER equ 46
    VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO equ 47
    VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO equ 48
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES equ 1000094000
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO equ 1000157000
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO equ 1000157001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES equ 1000083000
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS equ 1000127000
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO equ 1000127001
    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO equ 1000060000
    VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO equ 1000060003
    VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO equ 1000060004
    VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO equ 1000060005
    VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO equ 1000060006
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO equ 1000060013
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO equ 1000060014
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES equ 1000070000
    VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO equ 1000070001
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 equ 1000146000
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 equ 1000146001
    VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 equ 1000146002
    VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 equ 1000146003
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 equ 1000146004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 equ 1000059000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 equ 1000059001
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 equ 1000059002
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 equ 1000059003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 equ 1000059004
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 equ 1000059005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 equ 1000059006
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2 equ 1000059007
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 equ 1000059008
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES equ 1000117000
    VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO equ 1000117001
    VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO equ 1000117002
    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO equ 1000117003
    VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO equ 1000053000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES equ 1000053001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES equ 1000053002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES equ 1000120000
    VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO equ 1000145000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES equ 1000145001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES equ 1000145002
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2 equ 1000145003
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO equ 1000156000
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO equ 1000156001
    VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO equ 1000156002
    VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO equ 1000156003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES equ 1000156004
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES equ 1000156005
    VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO equ 1000085000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO equ 1000071000
    VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES equ 1000071001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO equ 1000071002
    VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES equ 1000071003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES equ 1000071004
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO equ 1000072000
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO equ 1000072001
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO equ 1000072002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO equ 1000112000
    VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES equ 1000112001
    VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO equ 1000113000
    VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO equ 1000077000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO equ 1000076000
    VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES equ 1000076001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES equ 1000168000
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT equ 1000168001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES equ 1000063000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES equ 49
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES equ 50
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES equ 51
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES equ 52
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO equ 1000147000
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2 equ 1000109000
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2 equ 1000109001
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2 equ 1000109002
    VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2 equ 1000109003
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2 equ 1000109004
    VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO equ 1000109005
    VK_STRUCTURE_TYPE_SUBPASS_END_INFO equ 1000109006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES equ 1000177000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES equ 1000196000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES equ 1000180000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES equ 1000082000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES equ 1000197000
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO equ 1000161000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES equ 1000161001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES equ 1000161002
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO equ 1000161003
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT equ 1000161004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES equ 1000199000
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE equ 1000199001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES equ 1000221000
    VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO equ 1000246000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES equ 1000130000
    VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO equ 1000130001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES equ 1000211000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES equ 1000108000
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO equ 1000108001
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO equ 1000108002
    VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO equ 1000108003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES equ 1000253000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES equ 1000175000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES equ 1000241000
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT equ 1000241001
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT equ 1000241002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES equ 1000261000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES equ 1000207000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES equ 1000207001
    VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO equ 1000207002
    VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO equ 1000207003
    VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO equ 1000207004
    VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO equ 1000207005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES equ 1000257000
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO equ 1000244001
    VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO equ 1000257002
    VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO equ 1000257003
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO equ 1000257004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES equ 53
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES equ 54
    VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO equ 1000192000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES equ 1000215000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES equ 1000245000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES equ 1000276000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES equ 1000295000
    VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO equ 1000295001
    VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO equ 1000295002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES equ 1000297000
    VK_STRUCTURE_TYPE_MEMORY_BARRIER_2 equ 1000314000
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 equ 1000314001
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 equ 1000314002
    VK_STRUCTURE_TYPE_DEPENDENCY_INFO equ 1000314003
    VK_STRUCTURE_TYPE_SUBMIT_INFO_2 equ 1000314004
    VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO equ 1000314005
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO equ 1000314006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES equ 1000314007
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES equ 1000325000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES equ 1000335000
    VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2 equ 1000337000
    VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2 equ 1000337001
    VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 equ 1000337002
    VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2 equ 1000337003
    VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 equ 1000337004
    VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2 equ 1000337005
    VK_STRUCTURE_TYPE_BUFFER_COPY_2 equ 1000337006
    VK_STRUCTURE_TYPE_IMAGE_COPY_2 equ 1000337007
    VK_STRUCTURE_TYPE_IMAGE_BLIT_2 equ 1000337008
    VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 equ 1000337009
    VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2 equ 1000337010
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES equ 1000225000
    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO equ 1000225001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES equ 1000225002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES equ 1000138000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES equ 1000138001
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK equ 1000138002
    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO equ 1000138003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES equ 1000066000
    VK_STRUCTURE_TYPE_RENDERING_INFO equ 1000044000
    VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO equ 1000044001
    VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO equ 1000044002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES equ 1000044003
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO equ 1000044004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES equ 1000280000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES equ 1000280001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES equ 1000281001
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 equ 1000360000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES equ 1000413000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES equ 1000413001
    VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS equ 1000413002
    VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS equ 1000413003
    VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR equ 1000001000
    VK_STRUCTURE_TYPE_PRESENT_INFO_KHR equ 1000001001
    VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR equ 1000060007
    VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR equ 1000060008
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR equ 1000060009
    VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR equ 1000060010
    VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR equ 1000060011
    VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR equ 1000060012
    VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR equ 1000002000
    VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR equ 1000002001
    VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR equ 1000003000
    VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR equ 1000004000
    VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR equ 1000005000
    VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR equ 1000006000
    VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR equ 1000008000
    VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR equ 1000009000
    VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT equ 1000011000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD equ 1000018000
    VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT equ 1000022000
    VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT equ 1000022001
    VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT equ 1000022002
    VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR equ 1000023000
    VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR equ 1000023001
    VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR equ 1000023002
    VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR equ 1000023003
    VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR equ 1000023004
    VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR equ 1000023005
    VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000023006
    VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR equ 1000023007
    VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR equ 1000023008
    VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR equ 1000023009
    VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR equ 1000023010
    VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR equ 1000023011
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR equ 1000023012
    VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR equ 1000023013
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR equ 1000023014
    VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR equ 1000023015
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR equ 1000023016
    VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR equ 1000024000
    VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR equ 1000024001
    VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR equ 1000024002
    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV equ 1000026000
    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV equ 1000026001
    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV equ 1000026002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT equ 1000028000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT equ 1000028001
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT equ 1000028002
    VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX equ 1000029000
    VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX equ 1000029001
    VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX equ 1000029002
    VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX equ 1000030000
    VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX equ 1000030001
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_KHR equ 1000038000
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000038001
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR equ 1000038002
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PICTURE_INFO_KHR equ 1000038003
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_KHR equ 1000038004
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_INFO_KHR equ 1000038005
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_GOP_REMAINING_FRAME_INFO_KHR equ 1000038006
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_INFO_KHR equ 1000038007
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_KHR equ 1000038008
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_KHR equ 1000038009
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_CREATE_INFO_KHR equ 1000038010
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_QUALITY_LEVEL_PROPERTIES_KHR equ 1000038011
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_GET_INFO_KHR equ 1000038012
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_FEEDBACK_INFO_KHR equ 1000038013
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_KHR equ 1000039000
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000039001
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR equ 1000039002
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PICTURE_INFO_KHR equ 1000039003
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_KHR equ 1000039004
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO_KHR equ 1000039005
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR equ 1000039006
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_INFO_KHR equ 1000039007
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_KHR equ 1000039009
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_KHR equ 1000039010
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_CREATE_INFO_KHR equ 1000039011
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_QUALITY_LEVEL_PROPERTIES_KHR equ 1000039012
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_GET_INFO_KHR equ 1000039013
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_FEEDBACK_INFO_KHR equ 1000039014
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR equ 1000040000
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR equ 1000040001
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR equ 1000040003
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000040004
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR equ 1000040005
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR equ 1000040006
    VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD equ 1000041000
    VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR equ 1000044006
    VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT equ 1000044007
    VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD equ 1000044008
    VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX equ 1000044009
    VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP equ 1000049000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV equ 1000050000
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV equ 1000056000
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV equ 1000056001
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV equ 1000057000
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV equ 1000057001
    VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV equ 1000058000
    VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT equ 1000061000
    VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN equ 1000062000
    VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT equ 1000067000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT equ 1000067001
    VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT equ 1000068000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT equ 1000068001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT equ 1000068002
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR equ 1000073000
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR equ 1000073001
    VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR equ 1000073002
    VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR equ 1000073003
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR equ 1000074000
    VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR equ 1000074001
    VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR equ 1000074002
    VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR equ 1000075000
    VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR equ 1000078000
    VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR equ 1000078001
    VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR equ 1000078002
    VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR equ 1000078003
    VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR equ 1000079000
    VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR equ 1000079001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR equ 1000080000
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT equ 1000081000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT equ 1000081001
    VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT equ 1000081002
    VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR equ 1000084000
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV equ 1000087000
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT equ 1000090000
    VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT equ 1000091000
    VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT equ 1000091001
    VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT equ 1000091002
    VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT equ 1000091003
    VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE equ 1000092000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX equ 1000097000
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV equ 1000098000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT equ 1000099000
    VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT equ 1000099001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT equ 1000101000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT equ 1000101001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT equ 1000102000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT equ 1000102001
    VK_STRUCTURE_TYPE_HDR_METADATA_EXT equ 1000105000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RELAXED_LINE_RASTERIZATION_FEATURES_IMG equ 1000110000
    VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR equ 1000111000
    VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR equ 1000114000
    VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR equ 1000114001
    VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR equ 1000114002
    VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR equ 1000115000
    VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR equ 1000115001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR equ 1000116000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR equ 1000116001
    VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR equ 1000116002
    VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR equ 1000116003
    VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR equ 1000116004
    VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR equ 1000116005
    VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR equ 1000116006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR equ 1000119000
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR equ 1000119001
    VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR equ 1000119002
    VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR equ 1000121000
    VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR equ 1000121001
    VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR equ 1000121002
    VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR equ 1000121003
    VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR equ 1000121004
    VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK equ 1000122000
    VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK equ 1000123000
    VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT equ 1000128000
    VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT equ 1000128001
    VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT equ 1000128002
    VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT equ 1000128003
    VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT equ 1000128004
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID equ 1000129000
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID equ 1000129001
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID equ 1000129002
    VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID equ 1000129003
    VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID equ 1000129004
    VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID equ 1000129005
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID equ 1000129006
    VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT equ 1000143000
    VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT equ 1000143001
    VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT equ 1000143002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT equ 1000143003
    VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT equ 1000143004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT equ 1000148000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT equ 1000148001
    VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT equ 1000148002
    VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV equ 1000149000
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR equ 1000150007
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR equ 1000150000
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR equ 1000150002
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR equ 1000150003
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR equ 1000150004
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR equ 1000150005
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR equ 1000150006
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR equ 1000150009
    VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR equ 1000150010
    VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR equ 1000150011
    VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR equ 1000150012
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR equ 1000150013
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR equ 1000150014
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR equ 1000150017
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR equ 1000150020
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR equ 1000347000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR equ 1000347001
    VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR equ 1000150015
    VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR equ 1000150016
    VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR equ 1000150018
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR equ 1000348013
    VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV equ 1000152000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV equ 1000154000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV equ 1000154001
    VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT equ 1000158000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT equ 1000158002
    VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT equ 1000158003
    VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT equ 1000158004
    VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT equ 1000158005
    VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT equ 1000158006
    VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT equ 1000160000
    VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT equ 1000160001
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV equ 1000164000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV equ 1000164001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV equ 1000164002
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV equ 1000164005
    VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV equ 1000165000
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV equ 1000165001
    VK_STRUCTURE_TYPE_GEOMETRY_NV equ 1000165003
    VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV equ 1000165004
    VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV equ 1000165005
    VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV equ 1000165006
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV equ 1000165007
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV equ 1000165008
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV equ 1000165009
    VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV equ 1000165011
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV equ 1000165012
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV equ 1000166000
    VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV equ 1000166001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT equ 1000170000
    VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT equ 1000170001
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT equ 1000178000
    VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT equ 1000178001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT equ 1000178002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR equ 1000181000
    VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD equ 1000183000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD equ 1000185000
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_KHR equ 1000187000
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000187001
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR equ 1000187002
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_INFO_KHR equ 1000187003
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_KHR equ 1000187004
    VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR equ 1000187005
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR equ 1000174000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR equ 1000388000
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR equ 1000388001
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD equ 1000189000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT equ 1000190000
    VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP equ 1000191000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV equ 1000201000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV equ 1000202000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV equ 1000202001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV equ 1000204000
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV equ 1000205000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV equ 1000205002
    VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV equ 1000206000
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV equ 1000206001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL equ 1000209000
    VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL equ 1000210000
    VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL equ 1000210001
    VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL equ 1000210002
    VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL equ 1000210003
    VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL equ 1000210004
    VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL equ 1000210005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT equ 1000212000
    VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD equ 1000213000
    VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD equ 1000213001
    VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA equ 1000214000
    VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT equ 1000217000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT equ 1000218000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT equ 1000218001
    VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT equ 1000218002
    VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR equ 1000226000
    VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR equ 1000226001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR equ 1000226002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR equ 1000226003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR equ 1000226004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD equ 1000227000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD equ 1000229000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES_KHR equ 1000232000
    VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_LOCATION_INFO_KHR equ 1000232001
    VK_STRUCTURE_TYPE_RENDERING_INPUT_ATTACHMENT_INDEX_INFO_KHR equ 1000232002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT equ 1000234000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_QUAD_CONTROL_FEATURES_KHR equ 1000235000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT equ 1000237000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT equ 1000238000
    VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT equ 1000238001
    VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR equ 1000239000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV equ 1000240000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT equ 1000244000
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT equ 1000244002
    VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT equ 1000247000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR equ 1000248000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV equ 1000249000
    VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV equ 1000249001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV equ 1000249002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV equ 1000250000
    VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV equ 1000250001
    VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV equ 1000250002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT equ 1000251000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT equ 1000252000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT equ 1000254000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT equ 1000254001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT equ 1000254002
    VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT equ 1000255000
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT equ 1000255002
    VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT equ 1000255001
    VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT equ 1000256000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT equ 1000260000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT equ 1000267000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR equ 1000269000
    VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR equ 1000269001
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR equ 1000269002
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR equ 1000269003
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR equ 1000269004
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR equ 1000269005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT equ 1000270000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT equ 1000270001
    VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY_EXT equ 1000270002
    VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY_EXT equ 1000270003
    VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO_EXT equ 1000270004
    VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO_EXT equ 1000270005
    VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT equ 1000270006
    VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO_EXT equ 1000270007
    VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE_EXT equ 1000270008
    VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT equ 1000270009
    VK_STRUCTURE_TYPE_MEMORY_MAP_INFO_KHR equ 1000271000
    VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO_KHR equ 1000271001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_FEATURES_EXT equ 1000272000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_PROPERTIES_EXT equ 1000272001
    VK_STRUCTURE_TYPE_MEMORY_MAP_PLACED_INFO_EXT equ 1000272002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT equ 1000273000
    VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_EXT equ 1000274000
    VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT equ 1000274001
    VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT equ 1000274002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT equ 1000275000
    VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_EXT equ 1000275001
    VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT equ 1000275002
    VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_EXT equ 1000275003
    VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT equ 1000275004
    VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT equ 1000275005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV equ 1000277000
    VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV equ 1000277001
    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV equ 1000277002
    VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV equ 1000277003
    VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV equ 1000277004
    VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV equ 1000277005
    VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV equ 1000277006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV equ 1000277007
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV equ 1000278000
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV equ 1000278001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT equ 1000281000
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM equ 1000282000
    VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM equ 1000282001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT equ 1000283000
    VK_STRUCTURE_TYPE_DEPTH_BIAS_INFO_EXT equ 1000283001
    VK_STRUCTURE_TYPE_DEPTH_BIAS_REPRESENTATION_INFO_EXT equ 1000283002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT equ 1000284000
    VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT equ 1000284001
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT equ 1000284002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT equ 1000286000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT equ 1000286001
    VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT equ 1000287000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT equ 1000287001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT equ 1000287002
    VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR equ 1000290000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV equ 1000292000
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV equ 1000292001
    VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV equ 1000292002
    VK_STRUCTURE_TYPE_PRESENT_ID_KHR equ 1000294000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR equ 1000294001
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR equ 1000299000
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR equ 1000299001
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR equ 1000299002
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_CAPABILITIES_KHR equ 1000299003
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_USAGE_INFO_KHR equ 1000299004
    VK_STRUCTURE_TYPE_QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO_KHR equ 1000299005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR equ 1000299006
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_PROPERTIES_KHR equ 1000299007
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR equ 1000299008
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_GET_INFO_KHR equ 1000299009
    VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_FEEDBACK_INFO_KHR equ 1000299010
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV equ 1000300000
    VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV equ 1000300001
    VK_STRUCTURE_TYPE_CUDA_MODULE_CREATE_INFO_NV equ 1000307000
    VK_STRUCTURE_TYPE_CUDA_FUNCTION_CREATE_INFO_NV equ 1000307001
    VK_STRUCTURE_TYPE_CUDA_LAUNCH_INFO_NV equ 1000307002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_FEATURES_NV equ 1000307003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_PROPERTIES_NV equ 1000307004
    VK_STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV equ 1000310000
    VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECT_CREATE_INFO_EXT equ 1000311000
    VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECTS_INFO_EXT equ 1000311001
    VK_STRUCTURE_TYPE_EXPORT_METAL_DEVICE_INFO_EXT equ 1000311002
    VK_STRUCTURE_TYPE_EXPORT_METAL_COMMAND_QUEUE_INFO_EXT equ 1000311003
    VK_STRUCTURE_TYPE_EXPORT_METAL_BUFFER_INFO_EXT equ 1000311004
    VK_STRUCTURE_TYPE_IMPORT_METAL_BUFFER_INFO_EXT equ 1000311005
    VK_STRUCTURE_TYPE_EXPORT_METAL_TEXTURE_INFO_EXT equ 1000311006
    VK_STRUCTURE_TYPE_IMPORT_METAL_TEXTURE_INFO_EXT equ 1000311007
    VK_STRUCTURE_TYPE_EXPORT_METAL_IO_SURFACE_INFO_EXT equ 1000311008
    VK_STRUCTURE_TYPE_IMPORT_METAL_IO_SURFACE_INFO_EXT equ 1000311009
    VK_STRUCTURE_TYPE_EXPORT_METAL_SHARED_EVENT_INFO_EXT equ 1000311010
    VK_STRUCTURE_TYPE_IMPORT_METAL_SHARED_EVENT_INFO_EXT equ 1000311011
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV equ 1000314008
    VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV equ 1000314009
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT equ 1000316000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT equ 1000316001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT equ 1000316002
    VK_STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT equ 1000316003
    VK_STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT equ 1000316004
    VK_STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT equ 1000316005
    VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT equ 1000316006
    VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT equ 1000316007
    VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT equ 1000316008
    VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT equ 1000316010
    VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT equ 1000316011
    VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT equ 1000316012
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT equ 1000316009
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT equ 1000320000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT equ 1000320001
    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT equ 1000320002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD equ 1000321000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR equ 1000203000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR equ 1000322000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR equ 1000323000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV equ 1000326000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV equ 1000326001
    VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV equ 1000326002
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV equ 1000327000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV equ 1000327001
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV equ 1000327002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT equ 1000328000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT equ 1000328001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT equ 1000330000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT equ 1000332000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT equ 1000332001
    VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM equ 1000333000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR equ 1000336000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT equ 1000338000
    VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT equ 1000338001
    VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT equ 1000338004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT equ 1000339000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT equ 1000340000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FAULT_FEATURES_EXT equ 1000341000
    VK_STRUCTURE_TYPE_DEVICE_FAULT_COUNTS_EXT equ 1000341001
    VK_STRUCTURE_TYPE_DEVICE_FAULT_INFO_EXT equ 1000341002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT equ 1000344000
    VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT equ 1000346000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT equ 1000352000
    VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT equ 1000352001
    VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT equ 1000352002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT equ 1000353000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT equ 1000354000
    VK_STRUCTURE_TYPE_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT equ 1000354001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT equ 1000355000
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT equ 1000355001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT equ 1000356000
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA equ 1000364000
    VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA equ 1000364001
    VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA equ 1000364002
    VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA equ 1000365000
    VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA equ 1000365001
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA equ 1000366000
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA equ 1000366001
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA equ 1000366002
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA equ 1000366003
    VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA equ 1000366004
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA equ 1000366005
    VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA equ 1000366006
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA equ 1000366007
    VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA equ 1000366008
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA equ 1000366009
    VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI equ 1000369000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI equ 1000369001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI equ 1000369002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI equ 1000370000
    VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV equ 1000371000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV equ 1000371001
    VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT equ 1000372000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT equ 1000372001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT equ 1000375000
    VK_STRUCTURE_TYPE_FRAME_BOUNDARY_EXT equ 1000375001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT equ 1000376000
    VK_STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT equ 1000376001
    VK_STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT equ 1000376002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT equ 1000377000
    VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX equ 1000378000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT equ 1000381000
    VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT equ 1000381001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT equ 1000382000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR equ 1000386000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT equ 1000391000
    VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT equ 1000391001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT equ 1000392000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT equ 1000392001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT equ 1000393000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT equ 1000395000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT equ 1000395001
    VK_STRUCTURE_TYPE_MICROMAP_BUILD_INFO_EXT equ 1000396000
    VK_STRUCTURE_TYPE_MICROMAP_VERSION_INFO_EXT equ 1000396001
    VK_STRUCTURE_TYPE_COPY_MICROMAP_INFO_EXT equ 1000396002
    VK_STRUCTURE_TYPE_COPY_MICROMAP_TO_MEMORY_INFO_EXT equ 1000396003
    VK_STRUCTURE_TYPE_COPY_MEMORY_TO_MICROMAP_INFO_EXT equ 1000396004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT equ 1000396005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT equ 1000396006
    VK_STRUCTURE_TYPE_MICROMAP_CREATE_INFO_EXT equ 1000396007
    VK_STRUCTURE_TYPE_MICROMAP_BUILD_SIZES_INFO_EXT equ 1000396008
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT equ 1000396009
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI equ 1000404000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI equ 1000404001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_VRS_FEATURES_HUAWEI equ 1000404002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT equ 1000411000
    VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT equ 1000411001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT equ 1000412000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM equ 1000415000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES_KHR equ 1000416000
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_SHADER_CORE_CONTROL_CREATE_INFO_ARM equ 1000417000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_FEATURES_ARM equ 1000417001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_PROPERTIES_ARM equ 1000417002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT equ 1000418000
    VK_STRUCTURE_TYPE_IMAGE_VIEW_SLICED_CREATE_INFO_EXT equ 1000418001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE equ 1000420000
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE equ 1000420001
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE equ 1000420002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT equ 1000421000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT equ 1000422000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_FEATURES_ARM equ 1000424000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_PROPERTIES_ARM equ 1000424001
    VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_BEGIN_INFO_ARM equ 1000424002
    VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_INFO_ARM equ 1000424003
    VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_SUBMIT_INFO_ARM equ 1000424004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM equ 1000425000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM equ 1000425001
    VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM equ 1000425002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV equ 1000426000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV equ 1000426001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV equ 1000427000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV equ 1000427001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV equ 1000428000
    VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV equ 1000428001
    VK_STRUCTURE_TYPE_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV equ 1000428002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV equ 1000430000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MAXIMAL_RECONVERGENCE_FEATURES_KHR equ 1000434000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT equ 1000437000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM equ 1000440000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM equ 1000440001
    VK_STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM equ 1000440002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_FEATURES_EXT equ 1000451000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_PROPERTIES_EXT equ 1000451001
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT equ 1000453000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT equ 1000455000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT equ 1000455001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT equ 1000458000
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT equ 1000458001
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT equ 1000458002
    VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT equ 1000458003
    VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_INFO_LUNARG equ 1000459000
    VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_LIST_LUNARG equ 1000459001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT equ 1000462000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT equ 1000462001
    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT equ 1000462002
    VK_STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT equ 1000462003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT equ 1000342000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV equ 1000464000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV equ 1000464001
    VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV equ 1000464002
    VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV equ 1000464003
    VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_INFO_NV equ 1000464004
    VK_STRUCTURE_TYPE_OPTICAL_FLOW_EXECUTE_INFO_NV equ 1000464005
    VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV equ 1000464010
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT equ 1000465000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT equ 1000466000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_FEATURES_ANDROID equ 1000468000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_PROPERTIES_ANDROID equ 1000468001
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_RESOLVE_PROPERTIES_ANDROID equ 1000468002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR equ 1000470000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR equ 1000470001
    VK_STRUCTURE_TYPE_RENDERING_AREA_INFO_KHR equ 1000470003
    VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO_KHR equ 1000470004
    VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR equ 1000338002
    VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR equ 1000338003
    VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR equ 1000470005
    VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR equ 1000470006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR equ 1000481000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT equ 1000482000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT equ 1000482001
    VK_STRUCTURE_TYPE_SHADER_CREATE_INFO_EXT equ 1000482002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM equ 1000484000
    VK_STRUCTURE_TYPE_TILE_PROPERTIES_QCOM equ 1000484001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC equ 1000485000
    VK_STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC equ 1000485001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM equ 1000488000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV equ 1000490000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV equ 1000490001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_FEATURES_NV equ 1000492000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_PROPERTIES_NV equ 1000492001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT equ 1000351000
    VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT equ 1000351002
    VK_STRUCTURE_TYPE_LAYER_SETTINGS_CREATE_INFO_EXT equ 1000496000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM equ 1000497000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM equ 1000497001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT equ 1000498000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT equ 1000499000
    VK_STRUCTURE_TYPE_LATENCY_SLEEP_MODE_INFO_NV equ 1000505000
    VK_STRUCTURE_TYPE_LATENCY_SLEEP_INFO_NV equ 1000505001
    VK_STRUCTURE_TYPE_SET_LATENCY_MARKER_INFO_NV equ 1000505002
    VK_STRUCTURE_TYPE_GET_LATENCY_MARKER_INFO_NV equ 1000505003
    VK_STRUCTURE_TYPE_LATENCY_TIMINGS_FRAME_REPORT_NV equ 1000505004
    VK_STRUCTURE_TYPE_LATENCY_SUBMISSION_PRESENT_ID_NV equ 1000505005
    VK_STRUCTURE_TYPE_OUT_OF_BAND_QUEUE_TYPE_INFO_NV equ 1000505006
    VK_STRUCTURE_TYPE_SWAPCHAIN_LATENCY_CREATE_INFO_NV equ 1000505007
    VK_STRUCTURE_TYPE_LATENCY_SURFACE_CAPABILITIES_NV equ 1000505008
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR equ 1000506000
    VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_KHR equ 1000506001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR equ 1000506002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM equ 1000510000
    VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM equ 1000510001
    VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_CAPABILITIES_KHR equ 1000512000
    VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_PICTURE_INFO_KHR equ 1000512001
    VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_PROFILE_INFO_KHR equ 1000512003
    VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_SESSION_PARAMETERS_CREATE_INFO_KHR equ 1000512004
    VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_DPB_SLOT_INFO_KHR equ 1000512005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_MAINTENANCE_1_FEATURES_KHR equ 1000515000
    VK_STRUCTURE_TYPE_VIDEO_INLINE_QUERY_INFO_KHR equ 1000515001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PER_STAGE_DESCRIPTOR_SET_FEATURES_NV equ 1000516000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM equ 1000518000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM equ 1000518001
    VK_STRUCTURE_TYPE_SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM equ 1000518002
    VK_STRUCTURE_TYPE_SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM equ 1000519000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM equ 1000519001
    VK_STRUCTURE_TYPE_BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM equ 1000519002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM equ 1000520000
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM equ 1000520001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM equ 1000521000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT equ 1000524000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_KHR equ 1000525000
    VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR equ 1000190001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR equ 1000190002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES_KHR equ 1000528000
    VK_STRUCTURE_TYPE_SCREEN_BUFFER_PROPERTIES_QNX equ 1000529000
    VK_STRUCTURE_TYPE_SCREEN_BUFFER_FORMAT_PROPERTIES_QNX equ 1000529001
    VK_STRUCTURE_TYPE_IMPORT_SCREEN_BUFFER_INFO_QNX equ 1000529002
    VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_QNX equ 1000529003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCREEN_BUFFER_FEATURES_QNX equ 1000529004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT equ 1000530000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_KHR equ 1000265000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_KHR equ 1000259000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_KHR equ 1000259001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_KHR equ 1000259002
    VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_KHR equ 1000184000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES_KHR equ 1000544000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES_KHR equ 1000545000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES_KHR equ 1000545001
    VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS_KHR equ 1000545002
    VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO_KHR equ 1000545003
    VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO_KHR equ 1000545004
    VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO_KHR equ 1000545005
    VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO_KHR equ 1000545006
    VK_STRUCTURE_TYPE_SET_DESCRIPTOR_BUFFER_OFFSETS_INFO_EXT equ 1000545007
    VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_BUFFER_EMBEDDED_SAMPLERS_INFO_EXT equ 1000545008
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV equ 1000546000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAW_ACCESS_CHAINS_FEATURES_NV equ 1000555000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT16_VECTOR_FEATURES_NV equ 1000563000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_VALIDATION_FEATURES_NV equ 1000568000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES equ 1000120000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES equ 1000063000
    VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT equ 1000011000
    VK_STRUCTURE_TYPE_RENDERING_INFO_KHR equ 1000044000
    VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR equ 1000044001
    VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR equ 1000044002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR equ 1000044003
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR equ 1000044004
    VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV equ 1000044008
    VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR equ 1000053000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR equ 1000053001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR equ 1000053002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR equ 1000059000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR equ 1000059001
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR equ 1000059002
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR equ 1000059003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR equ 1000059004
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR equ 1000059005
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR equ 1000059006
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR equ 1000059007
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR equ 1000059008
    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR equ 1000060000
    VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR equ 1000060003
    VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR equ 1000060004
    VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR equ 1000060005
    VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR equ 1000060006
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR equ 1000060013
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR equ 1000060014
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT equ 1000066000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR equ 1000070000
    VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR equ 1000070001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR equ 1000071000
    VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR equ 1000071001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR equ 1000071002
    VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR equ 1000071003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR equ 1000071004
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR equ 1000072000
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR equ 1000072001
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR equ 1000072002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR equ 1000076000
    VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR equ 1000076001
    VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR equ 1000077000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR equ 1000082000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR equ 1000082000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR equ 1000083000
    VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR equ 1000085000
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT equ 1000090000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR equ 1000108000
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR equ 1000108001
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR equ 1000108002
    VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR equ 1000108003
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR equ 1000109000
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR equ 1000109001
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR equ 1000109002
    VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR equ 1000109003
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR equ 1000109004
    VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR equ 1000109005
    VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR equ 1000109006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR equ 1000112000
    VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR equ 1000112001
    VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR equ 1000113000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR equ 1000117000
    VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR equ 1000117001
    VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR equ 1000117002
    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR equ 1000117003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR equ 1000120000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR equ 1000120000
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR equ 1000127000
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR equ 1000127001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT equ 1000130000
    VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT equ 1000130001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT equ 1000138000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT equ 1000138001
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT equ 1000138002
    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT equ 1000138003
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR equ 1000146000
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR equ 1000146001
    VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR equ 1000146002
    VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR equ 1000146003
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR equ 1000146004
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR equ 1000147000
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR equ 1000156000
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR equ 1000156001
    VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR equ 1000156002
    VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR equ 1000156003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR equ 1000156004
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR equ 1000156005
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR equ 1000157000
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR equ 1000157001
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT equ 1000161000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT equ 1000161001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT equ 1000161002
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT equ 1000161003
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT equ 1000161004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR equ 1000168000
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR equ 1000168001
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT equ 1000174000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR equ 1000175000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR equ 1000177000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR equ 1000180000
    VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT equ 1000184000
    VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT equ 1000190001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT equ 1000190002
    VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT equ 1000192000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR equ 1000196000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR equ 1000197000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR equ 1000199000
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR equ 1000199001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV equ 1000203000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR equ 1000207000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR equ 1000207001
    VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR equ 1000207002
    VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR equ 1000207003
    VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR equ 1000207004
    VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR equ 1000207005
    VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL equ 1000210000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR equ 1000211000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR equ 1000215000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT equ 1000221000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT equ 1000225000
    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT equ 1000225001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT equ 1000225002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR equ 1000241000
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR equ 1000241001
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR equ 1000241002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT equ 1000244000
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT equ 1000244001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT equ 1000245000
    VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT equ 1000246000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR equ 1000253000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR equ 1000257000
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR equ 1000244001
    VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR equ 1000257002
    VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR equ 1000257003
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR equ 1000257004
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT equ 1000259000
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT equ 1000259001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT equ 1000259002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT equ 1000261000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT equ 1000265000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT equ 1000276000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR equ 1000280000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR equ 1000280001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT equ 1000281001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT equ 1000295000
    VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT equ 1000295001
    VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT equ 1000295002
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT equ 1000297000
    VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR equ 1000314000
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR equ 1000314001
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR equ 1000314002
    VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR equ 1000314003
    VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR equ 1000314004
    VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR equ 1000314005
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR equ 1000314006
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR equ 1000314007
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR equ 1000325000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT equ 1000335000
    VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR equ 1000337000
    VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR equ 1000337001
    VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR equ 1000337002
    VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR equ 1000337003
    VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR equ 1000337004
    VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR equ 1000337005
    VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR equ 1000337006
    VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR equ 1000337007
    VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR equ 1000337008
    VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR equ 1000337009
    VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR equ 1000337010
    VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_EXT equ 1000338002
    VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_EXT equ 1000338003
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM equ 1000342000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE equ 1000351000
    VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE equ 1000351002
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR equ 1000360000
    VK_STRUCTURE_TYPE_PIPELINE_INFO_EXT equ 1000269001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT equ 1000388000
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT equ 1000388001
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR equ 1000413000
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR equ 1000413001
    VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR equ 1000413002
    VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR equ 1000413003
    VK_STRUCTURE_TYPE_SHADER_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT equ 1000225001
    VK_STRUCTURE_TYPE_MAX_ENUM equ 2147483647
; }

; enum VkPipelineCacheHeaderVersion {
    VK_PIPELINE_CACHE_HEADER_VERSION_ONE equ 1
    VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineCacheHeaderVersion = enum VkPipelineCacheHeaderVersion, TypeKind.ELABORATED
VkPipelineCacheHeaderVersion typedef dword

; enum VkPipelineCacheHeaderVersion {
    VK_PIPELINE_CACHE_HEADER_VERSION_ONE equ 1
    VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM equ 2147483647
; }

; enum VkImageLayout {
    VK_IMAGE_LAYOUT_UNDEFINED equ 0
    VK_IMAGE_LAYOUT_GENERAL equ 1
    VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL equ 2
    VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL equ 3
    VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL equ 4
    VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL equ 5
    VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL equ 6
    VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL equ 7
    VK_IMAGE_LAYOUT_PREINITIALIZED equ 8
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL equ 1000117000
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL equ 1000117001
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL equ 1000241000
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL equ 1000241001
    VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL equ 1000241002
    VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL equ 1000241003
    VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL equ 1000314000
    VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL equ 1000314001
    VK_IMAGE_LAYOUT_PRESENT_SRC_KHR equ 1000001002
    VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR equ 1000024000
    VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR equ 1000024001
    VK_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR equ 1000024002
    VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR equ 1000111000
    VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT equ 1000218000
    VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR equ 1000164003
    VK_IMAGE_LAYOUT_RENDERING_LOCAL_READ_KHR equ 1000232000
    VK_IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR equ 1000299000
    VK_IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR equ 1000299001
    VK_IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR equ 1000299002
    VK_IMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT equ 1000339000
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR equ 1000117000
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR equ 1000117001
    VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV equ 1000164003
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR equ 1000241000
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR equ 1000241001
    VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR equ 1000241002
    VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR equ 1000241003
    VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR equ 1000314000
    VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR equ 1000314001
    VK_IMAGE_LAYOUT_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageLayout = enum VkImageLayout, TypeKind.ELABORATED
VkImageLayout typedef dword

; enum VkImageLayout {
    VK_IMAGE_LAYOUT_UNDEFINED equ 0
    VK_IMAGE_LAYOUT_GENERAL equ 1
    VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL equ 2
    VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL equ 3
    VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL equ 4
    VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL equ 5
    VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL equ 6
    VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL equ 7
    VK_IMAGE_LAYOUT_PREINITIALIZED equ 8
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL equ 1000117000
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL equ 1000117001
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL equ 1000241000
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL equ 1000241001
    VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL equ 1000241002
    VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL equ 1000241003
    VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL equ 1000314000
    VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL equ 1000314001
    VK_IMAGE_LAYOUT_PRESENT_SRC_KHR equ 1000001002
    VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR equ 1000024000
    VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR equ 1000024001
    VK_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR equ 1000024002
    VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR equ 1000111000
    VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT equ 1000218000
    VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR equ 1000164003
    VK_IMAGE_LAYOUT_RENDERING_LOCAL_READ_KHR equ 1000232000
    VK_IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR equ 1000299000
    VK_IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR equ 1000299001
    VK_IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR equ 1000299002
    VK_IMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT equ 1000339000
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR equ 1000117000
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR equ 1000117001
    VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV equ 1000164003
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR equ 1000241000
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR equ 1000241001
    VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR equ 1000241002
    VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR equ 1000241003
    VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR equ 1000314000
    VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR equ 1000314001
    VK_IMAGE_LAYOUT_MAX_ENUM equ 2147483647
; }

; enum VkObjectType {
    VK_OBJECT_TYPE_UNKNOWN equ 0
    VK_OBJECT_TYPE_INSTANCE equ 1
    VK_OBJECT_TYPE_PHYSICAL_DEVICE equ 2
    VK_OBJECT_TYPE_DEVICE equ 3
    VK_OBJECT_TYPE_QUEUE equ 4
    VK_OBJECT_TYPE_SEMAPHORE equ 5
    VK_OBJECT_TYPE_COMMAND_BUFFER equ 6
    VK_OBJECT_TYPE_FENCE equ 7
    VK_OBJECT_TYPE_DEVICE_MEMORY equ 8
    VK_OBJECT_TYPE_BUFFER equ 9
    VK_OBJECT_TYPE_IMAGE equ 10
    VK_OBJECT_TYPE_EVENT equ 11
    VK_OBJECT_TYPE_QUERY_POOL equ 12
    VK_OBJECT_TYPE_BUFFER_VIEW equ 13
    VK_OBJECT_TYPE_IMAGE_VIEW equ 14
    VK_OBJECT_TYPE_SHADER_MODULE equ 15
    VK_OBJECT_TYPE_PIPELINE_CACHE equ 16
    VK_OBJECT_TYPE_PIPELINE_LAYOUT equ 17
    VK_OBJECT_TYPE_RENDER_PASS equ 18
    VK_OBJECT_TYPE_PIPELINE equ 19
    VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT equ 20
    VK_OBJECT_TYPE_SAMPLER equ 21
    VK_OBJECT_TYPE_DESCRIPTOR_POOL equ 22
    VK_OBJECT_TYPE_DESCRIPTOR_SET equ 23
    VK_OBJECT_TYPE_FRAMEBUFFER equ 24
    VK_OBJECT_TYPE_COMMAND_POOL equ 25
    VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION equ 1000156000
    VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE equ 1000085000
    VK_OBJECT_TYPE_PRIVATE_DATA_SLOT equ 1000295000
    VK_OBJECT_TYPE_SURFACE_KHR equ 1000000000
    VK_OBJECT_TYPE_SWAPCHAIN_KHR equ 1000001000
    VK_OBJECT_TYPE_DISPLAY_KHR equ 1000002000
    VK_OBJECT_TYPE_DISPLAY_MODE_KHR equ 1000002001
    VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT equ 1000011000
    VK_OBJECT_TYPE_VIDEO_SESSION_KHR equ 1000023000
    VK_OBJECT_TYPE_VIDEO_SESSION_PARAMETERS_KHR equ 1000023001
    VK_OBJECT_TYPE_CU_MODULE_NVX equ 1000029000
    VK_OBJECT_TYPE_CU_FUNCTION_NVX equ 1000029001
    VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT equ 1000128000
    VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR equ 1000150000
    VK_OBJECT_TYPE_VALIDATION_CACHE_EXT equ 1000160000
    VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV equ 1000165000
    VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL equ 1000210000
    VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR equ 1000268000
    VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV equ 1000277000
    VK_OBJECT_TYPE_CUDA_MODULE_NV equ 1000307000
    VK_OBJECT_TYPE_CUDA_FUNCTION_NV equ 1000307001
    VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA equ 1000366000
    VK_OBJECT_TYPE_MICROMAP_EXT equ 1000396000
    VK_OBJECT_TYPE_OPTICAL_FLOW_SESSION_NV equ 1000464000
    VK_OBJECT_TYPE_SHADER_EXT equ 1000482000
    VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR equ 1000085000
    VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR equ 1000156000
    VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT equ 1000295000
    VK_OBJECT_TYPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkObjectType = enum VkObjectType, TypeKind.ELABORATED
VkObjectType typedef dword

; enum VkObjectType {
    VK_OBJECT_TYPE_UNKNOWN equ 0
    VK_OBJECT_TYPE_INSTANCE equ 1
    VK_OBJECT_TYPE_PHYSICAL_DEVICE equ 2
    VK_OBJECT_TYPE_DEVICE equ 3
    VK_OBJECT_TYPE_QUEUE equ 4
    VK_OBJECT_TYPE_SEMAPHORE equ 5
    VK_OBJECT_TYPE_COMMAND_BUFFER equ 6
    VK_OBJECT_TYPE_FENCE equ 7
    VK_OBJECT_TYPE_DEVICE_MEMORY equ 8
    VK_OBJECT_TYPE_BUFFER equ 9
    VK_OBJECT_TYPE_IMAGE equ 10
    VK_OBJECT_TYPE_EVENT equ 11
    VK_OBJECT_TYPE_QUERY_POOL equ 12
    VK_OBJECT_TYPE_BUFFER_VIEW equ 13
    VK_OBJECT_TYPE_IMAGE_VIEW equ 14
    VK_OBJECT_TYPE_SHADER_MODULE equ 15
    VK_OBJECT_TYPE_PIPELINE_CACHE equ 16
    VK_OBJECT_TYPE_PIPELINE_LAYOUT equ 17
    VK_OBJECT_TYPE_RENDER_PASS equ 18
    VK_OBJECT_TYPE_PIPELINE equ 19
    VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT equ 20
    VK_OBJECT_TYPE_SAMPLER equ 21
    VK_OBJECT_TYPE_DESCRIPTOR_POOL equ 22
    VK_OBJECT_TYPE_DESCRIPTOR_SET equ 23
    VK_OBJECT_TYPE_FRAMEBUFFER equ 24
    VK_OBJECT_TYPE_COMMAND_POOL equ 25
    VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION equ 1000156000
    VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE equ 1000085000
    VK_OBJECT_TYPE_PRIVATE_DATA_SLOT equ 1000295000
    VK_OBJECT_TYPE_SURFACE_KHR equ 1000000000
    VK_OBJECT_TYPE_SWAPCHAIN_KHR equ 1000001000
    VK_OBJECT_TYPE_DISPLAY_KHR equ 1000002000
    VK_OBJECT_TYPE_DISPLAY_MODE_KHR equ 1000002001
    VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT equ 1000011000
    VK_OBJECT_TYPE_VIDEO_SESSION_KHR equ 1000023000
    VK_OBJECT_TYPE_VIDEO_SESSION_PARAMETERS_KHR equ 1000023001
    VK_OBJECT_TYPE_CU_MODULE_NVX equ 1000029000
    VK_OBJECT_TYPE_CU_FUNCTION_NVX equ 1000029001
    VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT equ 1000128000
    VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR equ 1000150000
    VK_OBJECT_TYPE_VALIDATION_CACHE_EXT equ 1000160000
    VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV equ 1000165000
    VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL equ 1000210000
    VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR equ 1000268000
    VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV equ 1000277000
    VK_OBJECT_TYPE_CUDA_MODULE_NV equ 1000307000
    VK_OBJECT_TYPE_CUDA_FUNCTION_NV equ 1000307001
    VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA equ 1000366000
    VK_OBJECT_TYPE_MICROMAP_EXT equ 1000396000
    VK_OBJECT_TYPE_OPTICAL_FLOW_SESSION_NV equ 1000464000
    VK_OBJECT_TYPE_SHADER_EXT equ 1000482000
    VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR equ 1000085000
    VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR equ 1000156000
    VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT equ 1000295000
    VK_OBJECT_TYPE_MAX_ENUM equ 2147483647
; }

; enum VkVendorId {
    VK_VENDOR_ID_VIV equ 65537
    VK_VENDOR_ID_VSI equ 65538
    VK_VENDOR_ID_KAZAN equ 65539
    VK_VENDOR_ID_CODEPLAY equ 65540
    VK_VENDOR_ID_MESA equ 65541
    VK_VENDOR_ID_POCL equ 65542
    VK_VENDOR_ID_MOBILEYE equ 65543
    VK_VENDOR_ID_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkVendorId = enum VkVendorId, TypeKind.ELABORATED
VkVendorId typedef dword

; enum VkVendorId {
    VK_VENDOR_ID_VIV equ 65537
    VK_VENDOR_ID_VSI equ 65538
    VK_VENDOR_ID_KAZAN equ 65539
    VK_VENDOR_ID_CODEPLAY equ 65540
    VK_VENDOR_ID_MESA equ 65541
    VK_VENDOR_ID_POCL equ 65542
    VK_VENDOR_ID_MOBILEYE equ 65543
    VK_VENDOR_ID_MAX_ENUM equ 2147483647
; }

; enum VkSystemAllocationScope {
    VK_SYSTEM_ALLOCATION_SCOPE_COMMAND equ 0
    VK_SYSTEM_ALLOCATION_SCOPE_OBJECT equ 1
    VK_SYSTEM_ALLOCATION_SCOPE_CACHE equ 2
    VK_SYSTEM_ALLOCATION_SCOPE_DEVICE equ 3
    VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE equ 4
    VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSystemAllocationScope = enum VkSystemAllocationScope, TypeKind.ELABORATED
VkSystemAllocationScope typedef dword

; enum VkSystemAllocationScope {
    VK_SYSTEM_ALLOCATION_SCOPE_COMMAND equ 0
    VK_SYSTEM_ALLOCATION_SCOPE_OBJECT equ 1
    VK_SYSTEM_ALLOCATION_SCOPE_CACHE equ 2
    VK_SYSTEM_ALLOCATION_SCOPE_DEVICE equ 3
    VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE equ 4
    VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM equ 2147483647
; }

; enum VkInternalAllocationType {
    VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE equ 0
    VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkInternalAllocationType = enum VkInternalAllocationType, TypeKind.ELABORATED
VkInternalAllocationType typedef dword

; enum VkInternalAllocationType {
    VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE equ 0
    VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM equ 2147483647
; }

; enum VkFormat {
    VK_FORMAT_UNDEFINED equ 0
    VK_FORMAT_R4G4_UNORM_PACK8 equ 1
    VK_FORMAT_R4G4B4A4_UNORM_PACK16 equ 2
    VK_FORMAT_B4G4R4A4_UNORM_PACK16 equ 3
    VK_FORMAT_R5G6B5_UNORM_PACK16 equ 4
    VK_FORMAT_B5G6R5_UNORM_PACK16 equ 5
    VK_FORMAT_R5G5B5A1_UNORM_PACK16 equ 6
    VK_FORMAT_B5G5R5A1_UNORM_PACK16 equ 7
    VK_FORMAT_A1R5G5B5_UNORM_PACK16 equ 8
    VK_FORMAT_R8_UNORM equ 9
    VK_FORMAT_R8_SNORM equ 10
    VK_FORMAT_R8_USCALED equ 11
    VK_FORMAT_R8_SSCALED equ 12
    VK_FORMAT_R8_UINT equ 13
    VK_FORMAT_R8_SINT equ 14
    VK_FORMAT_R8_SRGB equ 15
    VK_FORMAT_R8G8_UNORM equ 16
    VK_FORMAT_R8G8_SNORM equ 17
    VK_FORMAT_R8G8_USCALED equ 18
    VK_FORMAT_R8G8_SSCALED equ 19
    VK_FORMAT_R8G8_UINT equ 20
    VK_FORMAT_R8G8_SINT equ 21
    VK_FORMAT_R8G8_SRGB equ 22
    VK_FORMAT_R8G8B8_UNORM equ 23
    VK_FORMAT_R8G8B8_SNORM equ 24
    VK_FORMAT_R8G8B8_USCALED equ 25
    VK_FORMAT_R8G8B8_SSCALED equ 26
    VK_FORMAT_R8G8B8_UINT equ 27
    VK_FORMAT_R8G8B8_SINT equ 28
    VK_FORMAT_R8G8B8_SRGB equ 29
    VK_FORMAT_B8G8R8_UNORM equ 30
    VK_FORMAT_B8G8R8_SNORM equ 31
    VK_FORMAT_B8G8R8_USCALED equ 32
    VK_FORMAT_B8G8R8_SSCALED equ 33
    VK_FORMAT_B8G8R8_UINT equ 34
    VK_FORMAT_B8G8R8_SINT equ 35
    VK_FORMAT_B8G8R8_SRGB equ 36
    VK_FORMAT_R8G8B8A8_UNORM equ 37
    VK_FORMAT_R8G8B8A8_SNORM equ 38
    VK_FORMAT_R8G8B8A8_USCALED equ 39
    VK_FORMAT_R8G8B8A8_SSCALED equ 40
    VK_FORMAT_R8G8B8A8_UINT equ 41
    VK_FORMAT_R8G8B8A8_SINT equ 42
    VK_FORMAT_R8G8B8A8_SRGB equ 43
    VK_FORMAT_B8G8R8A8_UNORM equ 44
    VK_FORMAT_B8G8R8A8_SNORM equ 45
    VK_FORMAT_B8G8R8A8_USCALED equ 46
    VK_FORMAT_B8G8R8A8_SSCALED equ 47
    VK_FORMAT_B8G8R8A8_UINT equ 48
    VK_FORMAT_B8G8R8A8_SINT equ 49
    VK_FORMAT_B8G8R8A8_SRGB equ 50
    VK_FORMAT_A8B8G8R8_UNORM_PACK32 equ 51
    VK_FORMAT_A8B8G8R8_SNORM_PACK32 equ 52
    VK_FORMAT_A8B8G8R8_USCALED_PACK32 equ 53
    VK_FORMAT_A8B8G8R8_SSCALED_PACK32 equ 54
    VK_FORMAT_A8B8G8R8_UINT_PACK32 equ 55
    VK_FORMAT_A8B8G8R8_SINT_PACK32 equ 56
    VK_FORMAT_A8B8G8R8_SRGB_PACK32 equ 57
    VK_FORMAT_A2R10G10B10_UNORM_PACK32 equ 58
    VK_FORMAT_A2R10G10B10_SNORM_PACK32 equ 59
    VK_FORMAT_A2R10G10B10_USCALED_PACK32 equ 60
    VK_FORMAT_A2R10G10B10_SSCALED_PACK32 equ 61
    VK_FORMAT_A2R10G10B10_UINT_PACK32 equ 62
    VK_FORMAT_A2R10G10B10_SINT_PACK32 equ 63
    VK_FORMAT_A2B10G10R10_UNORM_PACK32 equ 64
    VK_FORMAT_A2B10G10R10_SNORM_PACK32 equ 65
    VK_FORMAT_A2B10G10R10_USCALED_PACK32 equ 66
    VK_FORMAT_A2B10G10R10_SSCALED_PACK32 equ 67
    VK_FORMAT_A2B10G10R10_UINT_PACK32 equ 68
    VK_FORMAT_A2B10G10R10_SINT_PACK32 equ 69
    VK_FORMAT_R16_UNORM equ 70
    VK_FORMAT_R16_SNORM equ 71
    VK_FORMAT_R16_USCALED equ 72
    VK_FORMAT_R16_SSCALED equ 73
    VK_FORMAT_R16_UINT equ 74
    VK_FORMAT_R16_SINT equ 75
    VK_FORMAT_R16_SFLOAT equ 76
    VK_FORMAT_R16G16_UNORM equ 77
    VK_FORMAT_R16G16_SNORM equ 78
    VK_FORMAT_R16G16_USCALED equ 79
    VK_FORMAT_R16G16_SSCALED equ 80
    VK_FORMAT_R16G16_UINT equ 81
    VK_FORMAT_R16G16_SINT equ 82
    VK_FORMAT_R16G16_SFLOAT equ 83
    VK_FORMAT_R16G16B16_UNORM equ 84
    VK_FORMAT_R16G16B16_SNORM equ 85
    VK_FORMAT_R16G16B16_USCALED equ 86
    VK_FORMAT_R16G16B16_SSCALED equ 87
    VK_FORMAT_R16G16B16_UINT equ 88
    VK_FORMAT_R16G16B16_SINT equ 89
    VK_FORMAT_R16G16B16_SFLOAT equ 90
    VK_FORMAT_R16G16B16A16_UNORM equ 91
    VK_FORMAT_R16G16B16A16_SNORM equ 92
    VK_FORMAT_R16G16B16A16_USCALED equ 93
    VK_FORMAT_R16G16B16A16_SSCALED equ 94
    VK_FORMAT_R16G16B16A16_UINT equ 95
    VK_FORMAT_R16G16B16A16_SINT equ 96
    VK_FORMAT_R16G16B16A16_SFLOAT equ 97
    VK_FORMAT_R32_UINT equ 98
    VK_FORMAT_R32_SINT equ 99
    VK_FORMAT_R32_SFLOAT equ 100
    VK_FORMAT_R32G32_UINT equ 101
    VK_FORMAT_R32G32_SINT equ 102
    VK_FORMAT_R32G32_SFLOAT equ 103
    VK_FORMAT_R32G32B32_UINT equ 104
    VK_FORMAT_R32G32B32_SINT equ 105
    VK_FORMAT_R32G32B32_SFLOAT equ 106
    VK_FORMAT_R32G32B32A32_UINT equ 107
    VK_FORMAT_R32G32B32A32_SINT equ 108
    VK_FORMAT_R32G32B32A32_SFLOAT equ 109
    VK_FORMAT_R64_UINT equ 110
    VK_FORMAT_R64_SINT equ 111
    VK_FORMAT_R64_SFLOAT equ 112
    VK_FORMAT_R64G64_UINT equ 113
    VK_FORMAT_R64G64_SINT equ 114
    VK_FORMAT_R64G64_SFLOAT equ 115
    VK_FORMAT_R64G64B64_UINT equ 116
    VK_FORMAT_R64G64B64_SINT equ 117
    VK_FORMAT_R64G64B64_SFLOAT equ 118
    VK_FORMAT_R64G64B64A64_UINT equ 119
    VK_FORMAT_R64G64B64A64_SINT equ 120
    VK_FORMAT_R64G64B64A64_SFLOAT equ 121
    VK_FORMAT_B10G11R11_UFLOAT_PACK32 equ 122
    VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 equ 123
    VK_FORMAT_D16_UNORM equ 124
    VK_FORMAT_X8_D24_UNORM_PACK32 equ 125
    VK_FORMAT_D32_SFLOAT equ 126
    VK_FORMAT_S8_UINT equ 127
    VK_FORMAT_D16_UNORM_S8_UINT equ 128
    VK_FORMAT_D24_UNORM_S8_UINT equ 129
    VK_FORMAT_D32_SFLOAT_S8_UINT equ 130
    VK_FORMAT_BC1_RGB_UNORM_BLOCK equ 131
    VK_FORMAT_BC1_RGB_SRGB_BLOCK equ 132
    VK_FORMAT_BC1_RGBA_UNORM_BLOCK equ 133
    VK_FORMAT_BC1_RGBA_SRGB_BLOCK equ 134
    VK_FORMAT_BC2_UNORM_BLOCK equ 135
    VK_FORMAT_BC2_SRGB_BLOCK equ 136
    VK_FORMAT_BC3_UNORM_BLOCK equ 137
    VK_FORMAT_BC3_SRGB_BLOCK equ 138
    VK_FORMAT_BC4_UNORM_BLOCK equ 139
    VK_FORMAT_BC4_SNORM_BLOCK equ 140
    VK_FORMAT_BC5_UNORM_BLOCK equ 141
    VK_FORMAT_BC5_SNORM_BLOCK equ 142
    VK_FORMAT_BC6H_UFLOAT_BLOCK equ 143
    VK_FORMAT_BC6H_SFLOAT_BLOCK equ 144
    VK_FORMAT_BC7_UNORM_BLOCK equ 145
    VK_FORMAT_BC7_SRGB_BLOCK equ 146
    VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK equ 147
    VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK equ 148
    VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK equ 149
    VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK equ 150
    VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK equ 151
    VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK equ 152
    VK_FORMAT_EAC_R11_UNORM_BLOCK equ 153
    VK_FORMAT_EAC_R11_SNORM_BLOCK equ 154
    VK_FORMAT_EAC_R11G11_UNORM_BLOCK equ 155
    VK_FORMAT_EAC_R11G11_SNORM_BLOCK equ 156
    VK_FORMAT_ASTC_4x4_UNORM_BLOCK equ 157
    VK_FORMAT_ASTC_4x4_SRGB_BLOCK equ 158
    VK_FORMAT_ASTC_5x4_UNORM_BLOCK equ 159
    VK_FORMAT_ASTC_5x4_SRGB_BLOCK equ 160
    VK_FORMAT_ASTC_5x5_UNORM_BLOCK equ 161
    VK_FORMAT_ASTC_5x5_SRGB_BLOCK equ 162
    VK_FORMAT_ASTC_6x5_UNORM_BLOCK equ 163
    VK_FORMAT_ASTC_6x5_SRGB_BLOCK equ 164
    VK_FORMAT_ASTC_6x6_UNORM_BLOCK equ 165
    VK_FORMAT_ASTC_6x6_SRGB_BLOCK equ 166
    VK_FORMAT_ASTC_8x5_UNORM_BLOCK equ 167
    VK_FORMAT_ASTC_8x5_SRGB_BLOCK equ 168
    VK_FORMAT_ASTC_8x6_UNORM_BLOCK equ 169
    VK_FORMAT_ASTC_8x6_SRGB_BLOCK equ 170
    VK_FORMAT_ASTC_8x8_UNORM_BLOCK equ 171
    VK_FORMAT_ASTC_8x8_SRGB_BLOCK equ 172
    VK_FORMAT_ASTC_10x5_UNORM_BLOCK equ 173
    VK_FORMAT_ASTC_10x5_SRGB_BLOCK equ 174
    VK_FORMAT_ASTC_10x6_UNORM_BLOCK equ 175
    VK_FORMAT_ASTC_10x6_SRGB_BLOCK equ 176
    VK_FORMAT_ASTC_10x8_UNORM_BLOCK equ 177
    VK_FORMAT_ASTC_10x8_SRGB_BLOCK equ 178
    VK_FORMAT_ASTC_10x10_UNORM_BLOCK equ 179
    VK_FORMAT_ASTC_10x10_SRGB_BLOCK equ 180
    VK_FORMAT_ASTC_12x10_UNORM_BLOCK equ 181
    VK_FORMAT_ASTC_12x10_SRGB_BLOCK equ 182
    VK_FORMAT_ASTC_12x12_UNORM_BLOCK equ 183
    VK_FORMAT_ASTC_12x12_SRGB_BLOCK equ 184
    VK_FORMAT_G8B8G8R8_422_UNORM equ 1000156000
    VK_FORMAT_B8G8R8G8_422_UNORM equ 1000156001
    VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM equ 1000156002
    VK_FORMAT_G8_B8R8_2PLANE_420_UNORM equ 1000156003
    VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM equ 1000156004
    VK_FORMAT_G8_B8R8_2PLANE_422_UNORM equ 1000156005
    VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM equ 1000156006
    VK_FORMAT_R10X6_UNORM_PACK16 equ 1000156007
    VK_FORMAT_R10X6G10X6_UNORM_2PACK16 equ 1000156008
    VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 equ 1000156009
    VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 equ 1000156010
    VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 equ 1000156011
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 equ 1000156012
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 equ 1000156013
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 equ 1000156014
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 equ 1000156015
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 equ 1000156016
    VK_FORMAT_R12X4_UNORM_PACK16 equ 1000156017
    VK_FORMAT_R12X4G12X4_UNORM_2PACK16 equ 1000156018
    VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 equ 1000156019
    VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 equ 1000156020
    VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 equ 1000156021
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 equ 1000156022
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 equ 1000156023
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 equ 1000156024
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 equ 1000156025
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 equ 1000156026
    VK_FORMAT_G16B16G16R16_422_UNORM equ 1000156027
    VK_FORMAT_B16G16R16G16_422_UNORM equ 1000156028
    VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM equ 1000156029
    VK_FORMAT_G16_B16R16_2PLANE_420_UNORM equ 1000156030
    VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM equ 1000156031
    VK_FORMAT_G16_B16R16_2PLANE_422_UNORM equ 1000156032
    VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM equ 1000156033
    VK_FORMAT_G8_B8R8_2PLANE_444_UNORM equ 1000330000
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16 equ 1000330001
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16 equ 1000330002
    VK_FORMAT_G16_B16R16_2PLANE_444_UNORM equ 1000330003
    VK_FORMAT_A4R4G4B4_UNORM_PACK16 equ 1000340000
    VK_FORMAT_A4B4G4R4_UNORM_PACK16 equ 1000340001
    VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK equ 1000066000
    VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK equ 1000066001
    VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK equ 1000066002
    VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK equ 1000066003
    VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK equ 1000066004
    VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK equ 1000066005
    VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK equ 1000066006
    VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK equ 1000066007
    VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK equ 1000066008
    VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK equ 1000066009
    VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK equ 1000066010
    VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK equ 1000066011
    VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK equ 1000066012
    VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK equ 1000066013
    VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG equ 1000054000
    VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG equ 1000054001
    VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG equ 1000054002
    VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG equ 1000054003
    VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG equ 1000054004
    VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG equ 1000054005
    VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG equ 1000054006
    VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG equ 1000054007
    VK_FORMAT_R16G16_SFIXED5_NV equ 1000464000
    VK_FORMAT_A1B5G5R5_UNORM_PACK16_KHR equ 1000470000
    VK_FORMAT_A8_UNORM_KHR equ 1000470001
    VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT equ 1000066000
    VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT equ 1000066001
    VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT equ 1000066002
    VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT equ 1000066003
    VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT equ 1000066004
    VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT equ 1000066005
    VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT equ 1000066006
    VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT equ 1000066007
    VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT equ 1000066008
    VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT equ 1000066009
    VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT equ 1000066010
    VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT equ 1000066011
    VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT equ 1000066012
    VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT equ 1000066013
    VK_FORMAT_G8B8G8R8_422_UNORM_KHR equ 1000156000
    VK_FORMAT_B8G8R8G8_422_UNORM_KHR equ 1000156001
    VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR equ 1000156002
    VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR equ 1000156003
    VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR equ 1000156004
    VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR equ 1000156005
    VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR equ 1000156006
    VK_FORMAT_R10X6_UNORM_PACK16_KHR equ 1000156007
    VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR equ 1000156008
    VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR equ 1000156009
    VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR equ 1000156010
    VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR equ 1000156011
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR equ 1000156012
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR equ 1000156013
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR equ 1000156014
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR equ 1000156015
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR equ 1000156016
    VK_FORMAT_R12X4_UNORM_PACK16_KHR equ 1000156017
    VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR equ 1000156018
    VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR equ 1000156019
    VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR equ 1000156020
    VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR equ 1000156021
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR equ 1000156022
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR equ 1000156023
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR equ 1000156024
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR equ 1000156025
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR equ 1000156026
    VK_FORMAT_G16B16G16R16_422_UNORM_KHR equ 1000156027
    VK_FORMAT_B16G16R16G16_422_UNORM_KHR equ 1000156028
    VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR equ 1000156029
    VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR equ 1000156030
    VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR equ 1000156031
    VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR equ 1000156032
    VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR equ 1000156033
    VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT equ 1000330000
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT equ 1000330001
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT equ 1000330002
    VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT equ 1000330003
    VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT equ 1000340000
    VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT equ 1000340001
    VK_FORMAT_R16G16_S10_5_NV equ 1000464000
    VK_FORMAT_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkFormat = enum VkFormat, TypeKind.ELABORATED
VkFormat typedef dword

; enum VkFormat {
    VK_FORMAT_UNDEFINED equ 0
    VK_FORMAT_R4G4_UNORM_PACK8 equ 1
    VK_FORMAT_R4G4B4A4_UNORM_PACK16 equ 2
    VK_FORMAT_B4G4R4A4_UNORM_PACK16 equ 3
    VK_FORMAT_R5G6B5_UNORM_PACK16 equ 4
    VK_FORMAT_B5G6R5_UNORM_PACK16 equ 5
    VK_FORMAT_R5G5B5A1_UNORM_PACK16 equ 6
    VK_FORMAT_B5G5R5A1_UNORM_PACK16 equ 7
    VK_FORMAT_A1R5G5B5_UNORM_PACK16 equ 8
    VK_FORMAT_R8_UNORM equ 9
    VK_FORMAT_R8_SNORM equ 10
    VK_FORMAT_R8_USCALED equ 11
    VK_FORMAT_R8_SSCALED equ 12
    VK_FORMAT_R8_UINT equ 13
    VK_FORMAT_R8_SINT equ 14
    VK_FORMAT_R8_SRGB equ 15
    VK_FORMAT_R8G8_UNORM equ 16
    VK_FORMAT_R8G8_SNORM equ 17
    VK_FORMAT_R8G8_USCALED equ 18
    VK_FORMAT_R8G8_SSCALED equ 19
    VK_FORMAT_R8G8_UINT equ 20
    VK_FORMAT_R8G8_SINT equ 21
    VK_FORMAT_R8G8_SRGB equ 22
    VK_FORMAT_R8G8B8_UNORM equ 23
    VK_FORMAT_R8G8B8_SNORM equ 24
    VK_FORMAT_R8G8B8_USCALED equ 25
    VK_FORMAT_R8G8B8_SSCALED equ 26
    VK_FORMAT_R8G8B8_UINT equ 27
    VK_FORMAT_R8G8B8_SINT equ 28
    VK_FORMAT_R8G8B8_SRGB equ 29
    VK_FORMAT_B8G8R8_UNORM equ 30
    VK_FORMAT_B8G8R8_SNORM equ 31
    VK_FORMAT_B8G8R8_USCALED equ 32
    VK_FORMAT_B8G8R8_SSCALED equ 33
    VK_FORMAT_B8G8R8_UINT equ 34
    VK_FORMAT_B8G8R8_SINT equ 35
    VK_FORMAT_B8G8R8_SRGB equ 36
    VK_FORMAT_R8G8B8A8_UNORM equ 37
    VK_FORMAT_R8G8B8A8_SNORM equ 38
    VK_FORMAT_R8G8B8A8_USCALED equ 39
    VK_FORMAT_R8G8B8A8_SSCALED equ 40
    VK_FORMAT_R8G8B8A8_UINT equ 41
    VK_FORMAT_R8G8B8A8_SINT equ 42
    VK_FORMAT_R8G8B8A8_SRGB equ 43
    VK_FORMAT_B8G8R8A8_UNORM equ 44
    VK_FORMAT_B8G8R8A8_SNORM equ 45
    VK_FORMAT_B8G8R8A8_USCALED equ 46
    VK_FORMAT_B8G8R8A8_SSCALED equ 47
    VK_FORMAT_B8G8R8A8_UINT equ 48
    VK_FORMAT_B8G8R8A8_SINT equ 49
    VK_FORMAT_B8G8R8A8_SRGB equ 50
    VK_FORMAT_A8B8G8R8_UNORM_PACK32 equ 51
    VK_FORMAT_A8B8G8R8_SNORM_PACK32 equ 52
    VK_FORMAT_A8B8G8R8_USCALED_PACK32 equ 53
    VK_FORMAT_A8B8G8R8_SSCALED_PACK32 equ 54
    VK_FORMAT_A8B8G8R8_UINT_PACK32 equ 55
    VK_FORMAT_A8B8G8R8_SINT_PACK32 equ 56
    VK_FORMAT_A8B8G8R8_SRGB_PACK32 equ 57
    VK_FORMAT_A2R10G10B10_UNORM_PACK32 equ 58
    VK_FORMAT_A2R10G10B10_SNORM_PACK32 equ 59
    VK_FORMAT_A2R10G10B10_USCALED_PACK32 equ 60
    VK_FORMAT_A2R10G10B10_SSCALED_PACK32 equ 61
    VK_FORMAT_A2R10G10B10_UINT_PACK32 equ 62
    VK_FORMAT_A2R10G10B10_SINT_PACK32 equ 63
    VK_FORMAT_A2B10G10R10_UNORM_PACK32 equ 64
    VK_FORMAT_A2B10G10R10_SNORM_PACK32 equ 65
    VK_FORMAT_A2B10G10R10_USCALED_PACK32 equ 66
    VK_FORMAT_A2B10G10R10_SSCALED_PACK32 equ 67
    VK_FORMAT_A2B10G10R10_UINT_PACK32 equ 68
    VK_FORMAT_A2B10G10R10_SINT_PACK32 equ 69
    VK_FORMAT_R16_UNORM equ 70
    VK_FORMAT_R16_SNORM equ 71
    VK_FORMAT_R16_USCALED equ 72
    VK_FORMAT_R16_SSCALED equ 73
    VK_FORMAT_R16_UINT equ 74
    VK_FORMAT_R16_SINT equ 75
    VK_FORMAT_R16_SFLOAT equ 76
    VK_FORMAT_R16G16_UNORM equ 77
    VK_FORMAT_R16G16_SNORM equ 78
    VK_FORMAT_R16G16_USCALED equ 79
    VK_FORMAT_R16G16_SSCALED equ 80
    VK_FORMAT_R16G16_UINT equ 81
    VK_FORMAT_R16G16_SINT equ 82
    VK_FORMAT_R16G16_SFLOAT equ 83
    VK_FORMAT_R16G16B16_UNORM equ 84
    VK_FORMAT_R16G16B16_SNORM equ 85
    VK_FORMAT_R16G16B16_USCALED equ 86
    VK_FORMAT_R16G16B16_SSCALED equ 87
    VK_FORMAT_R16G16B16_UINT equ 88
    VK_FORMAT_R16G16B16_SINT equ 89
    VK_FORMAT_R16G16B16_SFLOAT equ 90
    VK_FORMAT_R16G16B16A16_UNORM equ 91
    VK_FORMAT_R16G16B16A16_SNORM equ 92
    VK_FORMAT_R16G16B16A16_USCALED equ 93
    VK_FORMAT_R16G16B16A16_SSCALED equ 94
    VK_FORMAT_R16G16B16A16_UINT equ 95
    VK_FORMAT_R16G16B16A16_SINT equ 96
    VK_FORMAT_R16G16B16A16_SFLOAT equ 97
    VK_FORMAT_R32_UINT equ 98
    VK_FORMAT_R32_SINT equ 99
    VK_FORMAT_R32_SFLOAT equ 100
    VK_FORMAT_R32G32_UINT equ 101
    VK_FORMAT_R32G32_SINT equ 102
    VK_FORMAT_R32G32_SFLOAT equ 103
    VK_FORMAT_R32G32B32_UINT equ 104
    VK_FORMAT_R32G32B32_SINT equ 105
    VK_FORMAT_R32G32B32_SFLOAT equ 106
    VK_FORMAT_R32G32B32A32_UINT equ 107
    VK_FORMAT_R32G32B32A32_SINT equ 108
    VK_FORMAT_R32G32B32A32_SFLOAT equ 109
    VK_FORMAT_R64_UINT equ 110
    VK_FORMAT_R64_SINT equ 111
    VK_FORMAT_R64_SFLOAT equ 112
    VK_FORMAT_R64G64_UINT equ 113
    VK_FORMAT_R64G64_SINT equ 114
    VK_FORMAT_R64G64_SFLOAT equ 115
    VK_FORMAT_R64G64B64_UINT equ 116
    VK_FORMAT_R64G64B64_SINT equ 117
    VK_FORMAT_R64G64B64_SFLOAT equ 118
    VK_FORMAT_R64G64B64A64_UINT equ 119
    VK_FORMAT_R64G64B64A64_SINT equ 120
    VK_FORMAT_R64G64B64A64_SFLOAT equ 121
    VK_FORMAT_B10G11R11_UFLOAT_PACK32 equ 122
    VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 equ 123
    VK_FORMAT_D16_UNORM equ 124
    VK_FORMAT_X8_D24_UNORM_PACK32 equ 125
    VK_FORMAT_D32_SFLOAT equ 126
    VK_FORMAT_S8_UINT equ 127
    VK_FORMAT_D16_UNORM_S8_UINT equ 128
    VK_FORMAT_D24_UNORM_S8_UINT equ 129
    VK_FORMAT_D32_SFLOAT_S8_UINT equ 130
    VK_FORMAT_BC1_RGB_UNORM_BLOCK equ 131
    VK_FORMAT_BC1_RGB_SRGB_BLOCK equ 132
    VK_FORMAT_BC1_RGBA_UNORM_BLOCK equ 133
    VK_FORMAT_BC1_RGBA_SRGB_BLOCK equ 134
    VK_FORMAT_BC2_UNORM_BLOCK equ 135
    VK_FORMAT_BC2_SRGB_BLOCK equ 136
    VK_FORMAT_BC3_UNORM_BLOCK equ 137
    VK_FORMAT_BC3_SRGB_BLOCK equ 138
    VK_FORMAT_BC4_UNORM_BLOCK equ 139
    VK_FORMAT_BC4_SNORM_BLOCK equ 140
    VK_FORMAT_BC5_UNORM_BLOCK equ 141
    VK_FORMAT_BC5_SNORM_BLOCK equ 142
    VK_FORMAT_BC6H_UFLOAT_BLOCK equ 143
    VK_FORMAT_BC6H_SFLOAT_BLOCK equ 144
    VK_FORMAT_BC7_UNORM_BLOCK equ 145
    VK_FORMAT_BC7_SRGB_BLOCK equ 146
    VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK equ 147
    VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK equ 148
    VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK equ 149
    VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK equ 150
    VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK equ 151
    VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK equ 152
    VK_FORMAT_EAC_R11_UNORM_BLOCK equ 153
    VK_FORMAT_EAC_R11_SNORM_BLOCK equ 154
    VK_FORMAT_EAC_R11G11_UNORM_BLOCK equ 155
    VK_FORMAT_EAC_R11G11_SNORM_BLOCK equ 156
    VK_FORMAT_ASTC_4x4_UNORM_BLOCK equ 157
    VK_FORMAT_ASTC_4x4_SRGB_BLOCK equ 158
    VK_FORMAT_ASTC_5x4_UNORM_BLOCK equ 159
    VK_FORMAT_ASTC_5x4_SRGB_BLOCK equ 160
    VK_FORMAT_ASTC_5x5_UNORM_BLOCK equ 161
    VK_FORMAT_ASTC_5x5_SRGB_BLOCK equ 162
    VK_FORMAT_ASTC_6x5_UNORM_BLOCK equ 163
    VK_FORMAT_ASTC_6x5_SRGB_BLOCK equ 164
    VK_FORMAT_ASTC_6x6_UNORM_BLOCK equ 165
    VK_FORMAT_ASTC_6x6_SRGB_BLOCK equ 166
    VK_FORMAT_ASTC_8x5_UNORM_BLOCK equ 167
    VK_FORMAT_ASTC_8x5_SRGB_BLOCK equ 168
    VK_FORMAT_ASTC_8x6_UNORM_BLOCK equ 169
    VK_FORMAT_ASTC_8x6_SRGB_BLOCK equ 170
    VK_FORMAT_ASTC_8x8_UNORM_BLOCK equ 171
    VK_FORMAT_ASTC_8x8_SRGB_BLOCK equ 172
    VK_FORMAT_ASTC_10x5_UNORM_BLOCK equ 173
    VK_FORMAT_ASTC_10x5_SRGB_BLOCK equ 174
    VK_FORMAT_ASTC_10x6_UNORM_BLOCK equ 175
    VK_FORMAT_ASTC_10x6_SRGB_BLOCK equ 176
    VK_FORMAT_ASTC_10x8_UNORM_BLOCK equ 177
    VK_FORMAT_ASTC_10x8_SRGB_BLOCK equ 178
    VK_FORMAT_ASTC_10x10_UNORM_BLOCK equ 179
    VK_FORMAT_ASTC_10x10_SRGB_BLOCK equ 180
    VK_FORMAT_ASTC_12x10_UNORM_BLOCK equ 181
    VK_FORMAT_ASTC_12x10_SRGB_BLOCK equ 182
    VK_FORMAT_ASTC_12x12_UNORM_BLOCK equ 183
    VK_FORMAT_ASTC_12x12_SRGB_BLOCK equ 184
    VK_FORMAT_G8B8G8R8_422_UNORM equ 1000156000
    VK_FORMAT_B8G8R8G8_422_UNORM equ 1000156001
    VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM equ 1000156002
    VK_FORMAT_G8_B8R8_2PLANE_420_UNORM equ 1000156003
    VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM equ 1000156004
    VK_FORMAT_G8_B8R8_2PLANE_422_UNORM equ 1000156005
    VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM equ 1000156006
    VK_FORMAT_R10X6_UNORM_PACK16 equ 1000156007
    VK_FORMAT_R10X6G10X6_UNORM_2PACK16 equ 1000156008
    VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 equ 1000156009
    VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 equ 1000156010
    VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 equ 1000156011
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 equ 1000156012
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 equ 1000156013
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 equ 1000156014
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 equ 1000156015
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 equ 1000156016
    VK_FORMAT_R12X4_UNORM_PACK16 equ 1000156017
    VK_FORMAT_R12X4G12X4_UNORM_2PACK16 equ 1000156018
    VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 equ 1000156019
    VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 equ 1000156020
    VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 equ 1000156021
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 equ 1000156022
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 equ 1000156023
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 equ 1000156024
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 equ 1000156025
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 equ 1000156026
    VK_FORMAT_G16B16G16R16_422_UNORM equ 1000156027
    VK_FORMAT_B16G16R16G16_422_UNORM equ 1000156028
    VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM equ 1000156029
    VK_FORMAT_G16_B16R16_2PLANE_420_UNORM equ 1000156030
    VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM equ 1000156031
    VK_FORMAT_G16_B16R16_2PLANE_422_UNORM equ 1000156032
    VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM equ 1000156033
    VK_FORMAT_G8_B8R8_2PLANE_444_UNORM equ 1000330000
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16 equ 1000330001
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16 equ 1000330002
    VK_FORMAT_G16_B16R16_2PLANE_444_UNORM equ 1000330003
    VK_FORMAT_A4R4G4B4_UNORM_PACK16 equ 1000340000
    VK_FORMAT_A4B4G4R4_UNORM_PACK16 equ 1000340001
    VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK equ 1000066000
    VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK equ 1000066001
    VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK equ 1000066002
    VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK equ 1000066003
    VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK equ 1000066004
    VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK equ 1000066005
    VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK equ 1000066006
    VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK equ 1000066007
    VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK equ 1000066008
    VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK equ 1000066009
    VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK equ 1000066010
    VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK equ 1000066011
    VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK equ 1000066012
    VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK equ 1000066013
    VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG equ 1000054000
    VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG equ 1000054001
    VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG equ 1000054002
    VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG equ 1000054003
    VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG equ 1000054004
    VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG equ 1000054005
    VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG equ 1000054006
    VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG equ 1000054007
    VK_FORMAT_R16G16_SFIXED5_NV equ 1000464000
    VK_FORMAT_A1B5G5R5_UNORM_PACK16_KHR equ 1000470000
    VK_FORMAT_A8_UNORM_KHR equ 1000470001
    VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT equ 1000066000
    VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT equ 1000066001
    VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT equ 1000066002
    VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT equ 1000066003
    VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT equ 1000066004
    VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT equ 1000066005
    VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT equ 1000066006
    VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT equ 1000066007
    VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT equ 1000066008
    VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT equ 1000066009
    VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT equ 1000066010
    VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT equ 1000066011
    VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT equ 1000066012
    VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT equ 1000066013
    VK_FORMAT_G8B8G8R8_422_UNORM_KHR equ 1000156000
    VK_FORMAT_B8G8R8G8_422_UNORM_KHR equ 1000156001
    VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR equ 1000156002
    VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR equ 1000156003
    VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR equ 1000156004
    VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR equ 1000156005
    VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR equ 1000156006
    VK_FORMAT_R10X6_UNORM_PACK16_KHR equ 1000156007
    VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR equ 1000156008
    VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR equ 1000156009
    VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR equ 1000156010
    VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR equ 1000156011
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR equ 1000156012
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR equ 1000156013
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR equ 1000156014
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR equ 1000156015
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR equ 1000156016
    VK_FORMAT_R12X4_UNORM_PACK16_KHR equ 1000156017
    VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR equ 1000156018
    VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR equ 1000156019
    VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR equ 1000156020
    VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR equ 1000156021
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR equ 1000156022
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR equ 1000156023
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR equ 1000156024
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR equ 1000156025
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR equ 1000156026
    VK_FORMAT_G16B16G16R16_422_UNORM_KHR equ 1000156027
    VK_FORMAT_B16G16R16G16_422_UNORM_KHR equ 1000156028
    VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR equ 1000156029
    VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR equ 1000156030
    VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR equ 1000156031
    VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR equ 1000156032
    VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR equ 1000156033
    VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT equ 1000330000
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT equ 1000330001
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT equ 1000330002
    VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT equ 1000330003
    VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT equ 1000340000
    VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT equ 1000340001
    VK_FORMAT_R16G16_S10_5_NV equ 1000464000
    VK_FORMAT_MAX_ENUM equ 2147483647
; }

; enum VkImageTiling {
    VK_IMAGE_TILING_OPTIMAL equ 0
    VK_IMAGE_TILING_LINEAR equ 1
    VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT equ 1000158000
    VK_IMAGE_TILING_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageTiling = enum VkImageTiling, TypeKind.ELABORATED
VkImageTiling typedef dword

; enum VkImageTiling {
    VK_IMAGE_TILING_OPTIMAL equ 0
    VK_IMAGE_TILING_LINEAR equ 1
    VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT equ 1000158000
    VK_IMAGE_TILING_MAX_ENUM equ 2147483647
; }

; enum VkImageType {
    VK_IMAGE_TYPE_1D equ 0
    VK_IMAGE_TYPE_2D equ 1
    VK_IMAGE_TYPE_3D equ 2
    VK_IMAGE_TYPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageType = enum VkImageType, TypeKind.ELABORATED
VkImageType typedef dword

; enum VkImageType {
    VK_IMAGE_TYPE_1D equ 0
    VK_IMAGE_TYPE_2D equ 1
    VK_IMAGE_TYPE_3D equ 2
    VK_IMAGE_TYPE_MAX_ENUM equ 2147483647
; }

; enum VkPhysicalDeviceType {
    VK_PHYSICAL_DEVICE_TYPE_OTHER equ 0
    VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU equ 1
    VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU equ 2
    VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU equ 3
    VK_PHYSICAL_DEVICE_TYPE_CPU equ 4
    VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPhysicalDeviceType = enum VkPhysicalDeviceType, TypeKind.ELABORATED
VkPhysicalDeviceType typedef dword

; enum VkPhysicalDeviceType {
    VK_PHYSICAL_DEVICE_TYPE_OTHER equ 0
    VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU equ 1
    VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU equ 2
    VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU equ 3
    VK_PHYSICAL_DEVICE_TYPE_CPU equ 4
    VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM equ 2147483647
; }

; enum VkQueryType {
    VK_QUERY_TYPE_OCCLUSION equ 0
    VK_QUERY_TYPE_PIPELINE_STATISTICS equ 1
    VK_QUERY_TYPE_TIMESTAMP equ 2
    VK_QUERY_TYPE_RESULT_STATUS_ONLY_KHR equ 1000023000
    VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT equ 1000028004
    VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR equ 1000116000
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR equ 1000150000
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR equ 1000150001
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV equ 1000165000
    VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL equ 1000210000
    VK_QUERY_TYPE_VIDEO_ENCODE_FEEDBACK_KHR equ 1000299000
    VK_QUERY_TYPE_MESH_PRIMITIVES_GENERATED_EXT equ 1000328000
    VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT equ 1000382000
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHR equ 1000386000
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SIZE_KHR equ 1000386001
    VK_QUERY_TYPE_MICROMAP_SERIALIZATION_SIZE_EXT equ 1000396000
    VK_QUERY_TYPE_MICROMAP_COMPACTED_SIZE_EXT equ 1000396001
    VK_QUERY_TYPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkQueryType = enum VkQueryType, TypeKind.ELABORATED
VkQueryType typedef dword

; enum VkQueryType {
    VK_QUERY_TYPE_OCCLUSION equ 0
    VK_QUERY_TYPE_PIPELINE_STATISTICS equ 1
    VK_QUERY_TYPE_TIMESTAMP equ 2
    VK_QUERY_TYPE_RESULT_STATUS_ONLY_KHR equ 1000023000
    VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT equ 1000028004
    VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR equ 1000116000
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR equ 1000150000
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR equ 1000150001
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV equ 1000165000
    VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL equ 1000210000
    VK_QUERY_TYPE_VIDEO_ENCODE_FEEDBACK_KHR equ 1000299000
    VK_QUERY_TYPE_MESH_PRIMITIVES_GENERATED_EXT equ 1000328000
    VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT equ 1000382000
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHR equ 1000386000
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SIZE_KHR equ 1000386001
    VK_QUERY_TYPE_MICROMAP_SERIALIZATION_SIZE_EXT equ 1000396000
    VK_QUERY_TYPE_MICROMAP_COMPACTED_SIZE_EXT equ 1000396001
    VK_QUERY_TYPE_MAX_ENUM equ 2147483647
; }

; enum VkSharingMode {
    VK_SHARING_MODE_EXCLUSIVE equ 0
    VK_SHARING_MODE_CONCURRENT equ 1
    VK_SHARING_MODE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSharingMode = enum VkSharingMode, TypeKind.ELABORATED
VkSharingMode typedef dword

; enum VkSharingMode {
    VK_SHARING_MODE_EXCLUSIVE equ 0
    VK_SHARING_MODE_CONCURRENT equ 1
    VK_SHARING_MODE_MAX_ENUM equ 2147483647
; }

; enum VkComponentSwizzle {
    VK_COMPONENT_SWIZZLE_IDENTITY equ 0
    VK_COMPONENT_SWIZZLE_ZERO equ 1
    VK_COMPONENT_SWIZZLE_ONE equ 2
    VK_COMPONENT_SWIZZLE_R equ 3
    VK_COMPONENT_SWIZZLE_G equ 4
    VK_COMPONENT_SWIZZLE_B equ 5
    VK_COMPONENT_SWIZZLE_A equ 6
    VK_COMPONENT_SWIZZLE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkComponentSwizzle = enum VkComponentSwizzle, TypeKind.ELABORATED
VkComponentSwizzle typedef dword

; enum VkComponentSwizzle {
    VK_COMPONENT_SWIZZLE_IDENTITY equ 0
    VK_COMPONENT_SWIZZLE_ZERO equ 1
    VK_COMPONENT_SWIZZLE_ONE equ 2
    VK_COMPONENT_SWIZZLE_R equ 3
    VK_COMPONENT_SWIZZLE_G equ 4
    VK_COMPONENT_SWIZZLE_B equ 5
    VK_COMPONENT_SWIZZLE_A equ 6
    VK_COMPONENT_SWIZZLE_MAX_ENUM equ 2147483647
; }

; enum VkImageViewType {
    VK_IMAGE_VIEW_TYPE_1D equ 0
    VK_IMAGE_VIEW_TYPE_2D equ 1
    VK_IMAGE_VIEW_TYPE_3D equ 2
    VK_IMAGE_VIEW_TYPE_CUBE equ 3
    VK_IMAGE_VIEW_TYPE_1D_ARRAY equ 4
    VK_IMAGE_VIEW_TYPE_2D_ARRAY equ 5
    VK_IMAGE_VIEW_TYPE_CUBE_ARRAY equ 6
    VK_IMAGE_VIEW_TYPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageViewType = enum VkImageViewType, TypeKind.ELABORATED
VkImageViewType typedef dword

; enum VkImageViewType {
    VK_IMAGE_VIEW_TYPE_1D equ 0
    VK_IMAGE_VIEW_TYPE_2D equ 1
    VK_IMAGE_VIEW_TYPE_3D equ 2
    VK_IMAGE_VIEW_TYPE_CUBE equ 3
    VK_IMAGE_VIEW_TYPE_1D_ARRAY equ 4
    VK_IMAGE_VIEW_TYPE_2D_ARRAY equ 5
    VK_IMAGE_VIEW_TYPE_CUBE_ARRAY equ 6
    VK_IMAGE_VIEW_TYPE_MAX_ENUM equ 2147483647
; }

; enum VkBlendFactor {
    VK_BLEND_FACTOR_ZERO equ 0
    VK_BLEND_FACTOR_ONE equ 1
    VK_BLEND_FACTOR_SRC_COLOR equ 2
    VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR equ 3
    VK_BLEND_FACTOR_DST_COLOR equ 4
    VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR equ 5
    VK_BLEND_FACTOR_SRC_ALPHA equ 6
    VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA equ 7
    VK_BLEND_FACTOR_DST_ALPHA equ 8
    VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA equ 9
    VK_BLEND_FACTOR_CONSTANT_COLOR equ 10
    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR equ 11
    VK_BLEND_FACTOR_CONSTANT_ALPHA equ 12
    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA equ 13
    VK_BLEND_FACTOR_SRC_ALPHA_SATURATE equ 14
    VK_BLEND_FACTOR_SRC1_COLOR equ 15
    VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR equ 16
    VK_BLEND_FACTOR_SRC1_ALPHA equ 17
    VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA equ 18
    VK_BLEND_FACTOR_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkBlendFactor = enum VkBlendFactor, TypeKind.ELABORATED
VkBlendFactor typedef dword

; enum VkBlendFactor {
    VK_BLEND_FACTOR_ZERO equ 0
    VK_BLEND_FACTOR_ONE equ 1
    VK_BLEND_FACTOR_SRC_COLOR equ 2
    VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR equ 3
    VK_BLEND_FACTOR_DST_COLOR equ 4
    VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR equ 5
    VK_BLEND_FACTOR_SRC_ALPHA equ 6
    VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA equ 7
    VK_BLEND_FACTOR_DST_ALPHA equ 8
    VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA equ 9
    VK_BLEND_FACTOR_CONSTANT_COLOR equ 10
    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR equ 11
    VK_BLEND_FACTOR_CONSTANT_ALPHA equ 12
    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA equ 13
    VK_BLEND_FACTOR_SRC_ALPHA_SATURATE equ 14
    VK_BLEND_FACTOR_SRC1_COLOR equ 15
    VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR equ 16
    VK_BLEND_FACTOR_SRC1_ALPHA equ 17
    VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA equ 18
    VK_BLEND_FACTOR_MAX_ENUM equ 2147483647
; }

; enum VkBlendOp {
    VK_BLEND_OP_ADD equ 0
    VK_BLEND_OP_SUBTRACT equ 1
    VK_BLEND_OP_REVERSE_SUBTRACT equ 2
    VK_BLEND_OP_MIN equ 3
    VK_BLEND_OP_MAX equ 4
    VK_BLEND_OP_ZERO_EXT equ 1000148000
    VK_BLEND_OP_SRC_EXT equ 1000148001
    VK_BLEND_OP_DST_EXT equ 1000148002
    VK_BLEND_OP_SRC_OVER_EXT equ 1000148003
    VK_BLEND_OP_DST_OVER_EXT equ 1000148004
    VK_BLEND_OP_SRC_IN_EXT equ 1000148005
    VK_BLEND_OP_DST_IN_EXT equ 1000148006
    VK_BLEND_OP_SRC_OUT_EXT equ 1000148007
    VK_BLEND_OP_DST_OUT_EXT equ 1000148008
    VK_BLEND_OP_SRC_ATOP_EXT equ 1000148009
    VK_BLEND_OP_DST_ATOP_EXT equ 1000148010
    VK_BLEND_OP_XOR_EXT equ 1000148011
    VK_BLEND_OP_MULTIPLY_EXT equ 1000148012
    VK_BLEND_OP_SCREEN_EXT equ 1000148013
    VK_BLEND_OP_OVERLAY_EXT equ 1000148014
    VK_BLEND_OP_DARKEN_EXT equ 1000148015
    VK_BLEND_OP_LIGHTEN_EXT equ 1000148016
    VK_BLEND_OP_COLORDODGE_EXT equ 1000148017
    VK_BLEND_OP_COLORBURN_EXT equ 1000148018
    VK_BLEND_OP_HARDLIGHT_EXT equ 1000148019
    VK_BLEND_OP_SOFTLIGHT_EXT equ 1000148020
    VK_BLEND_OP_DIFFERENCE_EXT equ 1000148021
    VK_BLEND_OP_EXCLUSION_EXT equ 1000148022
    VK_BLEND_OP_INVERT_EXT equ 1000148023
    VK_BLEND_OP_INVERT_RGB_EXT equ 1000148024
    VK_BLEND_OP_LINEARDODGE_EXT equ 1000148025
    VK_BLEND_OP_LINEARBURN_EXT equ 1000148026
    VK_BLEND_OP_VIVIDLIGHT_EXT equ 1000148027
    VK_BLEND_OP_LINEARLIGHT_EXT equ 1000148028
    VK_BLEND_OP_PINLIGHT_EXT equ 1000148029
    VK_BLEND_OP_HARDMIX_EXT equ 1000148030
    VK_BLEND_OP_HSL_HUE_EXT equ 1000148031
    VK_BLEND_OP_HSL_SATURATION_EXT equ 1000148032
    VK_BLEND_OP_HSL_COLOR_EXT equ 1000148033
    VK_BLEND_OP_HSL_LUMINOSITY_EXT equ 1000148034
    VK_BLEND_OP_PLUS_EXT equ 1000148035
    VK_BLEND_OP_PLUS_CLAMPED_EXT equ 1000148036
    VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT equ 1000148037
    VK_BLEND_OP_PLUS_DARKER_EXT equ 1000148038
    VK_BLEND_OP_MINUS_EXT equ 1000148039
    VK_BLEND_OP_MINUS_CLAMPED_EXT equ 1000148040
    VK_BLEND_OP_CONTRAST_EXT equ 1000148041
    VK_BLEND_OP_INVERT_OVG_EXT equ 1000148042
    VK_BLEND_OP_RED_EXT equ 1000148043
    VK_BLEND_OP_GREEN_EXT equ 1000148044
    VK_BLEND_OP_BLUE_EXT equ 1000148045
    VK_BLEND_OP_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkBlendOp = enum VkBlendOp, TypeKind.ELABORATED
VkBlendOp typedef dword

; enum VkBlendOp {
    VK_BLEND_OP_ADD equ 0
    VK_BLEND_OP_SUBTRACT equ 1
    VK_BLEND_OP_REVERSE_SUBTRACT equ 2
    VK_BLEND_OP_MIN equ 3
    VK_BLEND_OP_MAX equ 4
    VK_BLEND_OP_ZERO_EXT equ 1000148000
    VK_BLEND_OP_SRC_EXT equ 1000148001
    VK_BLEND_OP_DST_EXT equ 1000148002
    VK_BLEND_OP_SRC_OVER_EXT equ 1000148003
    VK_BLEND_OP_DST_OVER_EXT equ 1000148004
    VK_BLEND_OP_SRC_IN_EXT equ 1000148005
    VK_BLEND_OP_DST_IN_EXT equ 1000148006
    VK_BLEND_OP_SRC_OUT_EXT equ 1000148007
    VK_BLEND_OP_DST_OUT_EXT equ 1000148008
    VK_BLEND_OP_SRC_ATOP_EXT equ 1000148009
    VK_BLEND_OP_DST_ATOP_EXT equ 1000148010
    VK_BLEND_OP_XOR_EXT equ 1000148011
    VK_BLEND_OP_MULTIPLY_EXT equ 1000148012
    VK_BLEND_OP_SCREEN_EXT equ 1000148013
    VK_BLEND_OP_OVERLAY_EXT equ 1000148014
    VK_BLEND_OP_DARKEN_EXT equ 1000148015
    VK_BLEND_OP_LIGHTEN_EXT equ 1000148016
    VK_BLEND_OP_COLORDODGE_EXT equ 1000148017
    VK_BLEND_OP_COLORBURN_EXT equ 1000148018
    VK_BLEND_OP_HARDLIGHT_EXT equ 1000148019
    VK_BLEND_OP_SOFTLIGHT_EXT equ 1000148020
    VK_BLEND_OP_DIFFERENCE_EXT equ 1000148021
    VK_BLEND_OP_EXCLUSION_EXT equ 1000148022
    VK_BLEND_OP_INVERT_EXT equ 1000148023
    VK_BLEND_OP_INVERT_RGB_EXT equ 1000148024
    VK_BLEND_OP_LINEARDODGE_EXT equ 1000148025
    VK_BLEND_OP_LINEARBURN_EXT equ 1000148026
    VK_BLEND_OP_VIVIDLIGHT_EXT equ 1000148027
    VK_BLEND_OP_LINEARLIGHT_EXT equ 1000148028
    VK_BLEND_OP_PINLIGHT_EXT equ 1000148029
    VK_BLEND_OP_HARDMIX_EXT equ 1000148030
    VK_BLEND_OP_HSL_HUE_EXT equ 1000148031
    VK_BLEND_OP_HSL_SATURATION_EXT equ 1000148032
    VK_BLEND_OP_HSL_COLOR_EXT equ 1000148033
    VK_BLEND_OP_HSL_LUMINOSITY_EXT equ 1000148034
    VK_BLEND_OP_PLUS_EXT equ 1000148035
    VK_BLEND_OP_PLUS_CLAMPED_EXT equ 1000148036
    VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT equ 1000148037
    VK_BLEND_OP_PLUS_DARKER_EXT equ 1000148038
    VK_BLEND_OP_MINUS_EXT equ 1000148039
    VK_BLEND_OP_MINUS_CLAMPED_EXT equ 1000148040
    VK_BLEND_OP_CONTRAST_EXT equ 1000148041
    VK_BLEND_OP_INVERT_OVG_EXT equ 1000148042
    VK_BLEND_OP_RED_EXT equ 1000148043
    VK_BLEND_OP_GREEN_EXT equ 1000148044
    VK_BLEND_OP_BLUE_EXT equ 1000148045
    VK_BLEND_OP_MAX_ENUM equ 2147483647
; }

; enum VkCompareOp {
    VK_COMPARE_OP_NEVER equ 0
    VK_COMPARE_OP_LESS equ 1
    VK_COMPARE_OP_EQUAL equ 2
    VK_COMPARE_OP_LESS_OR_EQUAL equ 3
    VK_COMPARE_OP_GREATER equ 4
    VK_COMPARE_OP_NOT_EQUAL equ 5
    VK_COMPARE_OP_GREATER_OR_EQUAL equ 6
    VK_COMPARE_OP_ALWAYS equ 7
    VK_COMPARE_OP_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCompareOp = enum VkCompareOp, TypeKind.ELABORATED
VkCompareOp typedef dword

; enum VkCompareOp {
    VK_COMPARE_OP_NEVER equ 0
    VK_COMPARE_OP_LESS equ 1
    VK_COMPARE_OP_EQUAL equ 2
    VK_COMPARE_OP_LESS_OR_EQUAL equ 3
    VK_COMPARE_OP_GREATER equ 4
    VK_COMPARE_OP_NOT_EQUAL equ 5
    VK_COMPARE_OP_GREATER_OR_EQUAL equ 6
    VK_COMPARE_OP_ALWAYS equ 7
    VK_COMPARE_OP_MAX_ENUM equ 2147483647
; }

; enum VkDynamicState {
    VK_DYNAMIC_STATE_VIEWPORT equ 0
    VK_DYNAMIC_STATE_SCISSOR equ 1
    VK_DYNAMIC_STATE_LINE_WIDTH equ 2
    VK_DYNAMIC_STATE_DEPTH_BIAS equ 3
    VK_DYNAMIC_STATE_BLEND_CONSTANTS equ 4
    VK_DYNAMIC_STATE_DEPTH_BOUNDS equ 5
    VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK equ 6
    VK_DYNAMIC_STATE_STENCIL_WRITE_MASK equ 7
    VK_DYNAMIC_STATE_STENCIL_REFERENCE equ 8
    VK_DYNAMIC_STATE_CULL_MODE equ 1000267000
    VK_DYNAMIC_STATE_FRONT_FACE equ 1000267001
    VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY equ 1000267002
    VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT equ 1000267003
    VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT equ 1000267004
    VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE equ 1000267005
    VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE equ 1000267006
    VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE equ 1000267007
    VK_DYNAMIC_STATE_DEPTH_COMPARE_OP equ 1000267008
    VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE equ 1000267009
    VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE equ 1000267010
    VK_DYNAMIC_STATE_STENCIL_OP equ 1000267011
    VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE equ 1000377001
    VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE equ 1000377002
    VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE equ 1000377004
    VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV equ 1000087000
    VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT equ 1000099000
    VK_DYNAMIC_STATE_DISCARD_RECTANGLE_ENABLE_EXT equ 1000099001
    VK_DYNAMIC_STATE_DISCARD_RECTANGLE_MODE_EXT equ 1000099002
    VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT equ 1000143000
    VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR equ 1000347000
    VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV equ 1000164004
    VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV equ 1000164006
    VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_ENABLE_NV equ 1000205000
    VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV equ 1000205001
    VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR equ 1000226000
    VK_DYNAMIC_STATE_VERTEX_INPUT_EXT equ 1000352000
    VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT equ 1000377000
    VK_DYNAMIC_STATE_LOGIC_OP_EXT equ 1000377003
    VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT equ 1000381000
    VK_DYNAMIC_STATE_DEPTH_CLAMP_ENABLE_EXT equ 1000455003
    VK_DYNAMIC_STATE_POLYGON_MODE_EXT equ 1000455004
    VK_DYNAMIC_STATE_RASTERIZATION_SAMPLES_EXT equ 1000455005
    VK_DYNAMIC_STATE_SAMPLE_MASK_EXT equ 1000455006
    VK_DYNAMIC_STATE_ALPHA_TO_COVERAGE_ENABLE_EXT equ 1000455007
    VK_DYNAMIC_STATE_ALPHA_TO_ONE_ENABLE_EXT equ 1000455008
    VK_DYNAMIC_STATE_LOGIC_OP_ENABLE_EXT equ 1000455009
    VK_DYNAMIC_STATE_COLOR_BLEND_ENABLE_EXT equ 1000455010
    VK_DYNAMIC_STATE_COLOR_BLEND_EQUATION_EXT equ 1000455011
    VK_DYNAMIC_STATE_COLOR_WRITE_MASK_EXT equ 1000455012
    VK_DYNAMIC_STATE_TESSELLATION_DOMAIN_ORIGIN_EXT equ 1000455002
    VK_DYNAMIC_STATE_RASTERIZATION_STREAM_EXT equ 1000455013
    VK_DYNAMIC_STATE_CONSERVATIVE_RASTERIZATION_MODE_EXT equ 1000455014
    VK_DYNAMIC_STATE_EXTRA_PRIMITIVE_OVERESTIMATION_SIZE_EXT equ 1000455015
    VK_DYNAMIC_STATE_DEPTH_CLIP_ENABLE_EXT equ 1000455016
    VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_ENABLE_EXT equ 1000455017
    VK_DYNAMIC_STATE_COLOR_BLEND_ADVANCED_EXT equ 1000455018
    VK_DYNAMIC_STATE_PROVOKING_VERTEX_MODE_EXT equ 1000455019
    VK_DYNAMIC_STATE_LINE_RASTERIZATION_MODE_EXT equ 1000455020
    VK_DYNAMIC_STATE_LINE_STIPPLE_ENABLE_EXT equ 1000455021
    VK_DYNAMIC_STATE_DEPTH_CLIP_NEGATIVE_ONE_TO_ONE_EXT equ 1000455022
    VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_ENABLE_NV equ 1000455023
    VK_DYNAMIC_STATE_VIEWPORT_SWIZZLE_NV equ 1000455024
    VK_DYNAMIC_STATE_COVERAGE_TO_COLOR_ENABLE_NV equ 1000455025
    VK_DYNAMIC_STATE_COVERAGE_TO_COLOR_LOCATION_NV equ 1000455026
    VK_DYNAMIC_STATE_COVERAGE_MODULATION_MODE_NV equ 1000455027
    VK_DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_ENABLE_NV equ 1000455028
    VK_DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_NV equ 1000455029
    VK_DYNAMIC_STATE_SHADING_RATE_IMAGE_ENABLE_NV equ 1000455030
    VK_DYNAMIC_STATE_REPRESENTATIVE_FRAGMENT_TEST_ENABLE_NV equ 1000455031
    VK_DYNAMIC_STATE_COVERAGE_REDUCTION_MODE_NV equ 1000455032
    VK_DYNAMIC_STATE_ATTACHMENT_FEEDBACK_LOOP_ENABLE_EXT equ 1000524000
    VK_DYNAMIC_STATE_LINE_STIPPLE_KHR equ 1000259000
    VK_DYNAMIC_STATE_LINE_STIPPLE_EXT equ 1000259000
    VK_DYNAMIC_STATE_CULL_MODE_EXT equ 1000267000
    VK_DYNAMIC_STATE_FRONT_FACE_EXT equ 1000267001
    VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT equ 1000267002
    VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT equ 1000267003
    VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT equ 1000267004
    VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT equ 1000267005
    VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT equ 1000267006
    VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT equ 1000267007
    VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT equ 1000267008
    VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT equ 1000267009
    VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT equ 1000267010
    VK_DYNAMIC_STATE_STENCIL_OP_EXT equ 1000267011
    VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT equ 1000377001
    VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT equ 1000377002
    VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT equ 1000377004
    VK_DYNAMIC_STATE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDynamicState = enum VkDynamicState, TypeKind.ELABORATED
VkDynamicState typedef dword

; enum VkDynamicState {
    VK_DYNAMIC_STATE_VIEWPORT equ 0
    VK_DYNAMIC_STATE_SCISSOR equ 1
    VK_DYNAMIC_STATE_LINE_WIDTH equ 2
    VK_DYNAMIC_STATE_DEPTH_BIAS equ 3
    VK_DYNAMIC_STATE_BLEND_CONSTANTS equ 4
    VK_DYNAMIC_STATE_DEPTH_BOUNDS equ 5
    VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK equ 6
    VK_DYNAMIC_STATE_STENCIL_WRITE_MASK equ 7
    VK_DYNAMIC_STATE_STENCIL_REFERENCE equ 8
    VK_DYNAMIC_STATE_CULL_MODE equ 1000267000
    VK_DYNAMIC_STATE_FRONT_FACE equ 1000267001
    VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY equ 1000267002
    VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT equ 1000267003
    VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT equ 1000267004
    VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE equ 1000267005
    VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE equ 1000267006
    VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE equ 1000267007
    VK_DYNAMIC_STATE_DEPTH_COMPARE_OP equ 1000267008
    VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE equ 1000267009
    VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE equ 1000267010
    VK_DYNAMIC_STATE_STENCIL_OP equ 1000267011
    VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE equ 1000377001
    VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE equ 1000377002
    VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE equ 1000377004
    VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV equ 1000087000
    VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT equ 1000099000
    VK_DYNAMIC_STATE_DISCARD_RECTANGLE_ENABLE_EXT equ 1000099001
    VK_DYNAMIC_STATE_DISCARD_RECTANGLE_MODE_EXT equ 1000099002
    VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT equ 1000143000
    VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR equ 1000347000
    VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV equ 1000164004
    VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV equ 1000164006
    VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_ENABLE_NV equ 1000205000
    VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV equ 1000205001
    VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR equ 1000226000
    VK_DYNAMIC_STATE_VERTEX_INPUT_EXT equ 1000352000
    VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT equ 1000377000
    VK_DYNAMIC_STATE_LOGIC_OP_EXT equ 1000377003
    VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT equ 1000381000
    VK_DYNAMIC_STATE_DEPTH_CLAMP_ENABLE_EXT equ 1000455003
    VK_DYNAMIC_STATE_POLYGON_MODE_EXT equ 1000455004
    VK_DYNAMIC_STATE_RASTERIZATION_SAMPLES_EXT equ 1000455005
    VK_DYNAMIC_STATE_SAMPLE_MASK_EXT equ 1000455006
    VK_DYNAMIC_STATE_ALPHA_TO_COVERAGE_ENABLE_EXT equ 1000455007
    VK_DYNAMIC_STATE_ALPHA_TO_ONE_ENABLE_EXT equ 1000455008
    VK_DYNAMIC_STATE_LOGIC_OP_ENABLE_EXT equ 1000455009
    VK_DYNAMIC_STATE_COLOR_BLEND_ENABLE_EXT equ 1000455010
    VK_DYNAMIC_STATE_COLOR_BLEND_EQUATION_EXT equ 1000455011
    VK_DYNAMIC_STATE_COLOR_WRITE_MASK_EXT equ 1000455012
    VK_DYNAMIC_STATE_TESSELLATION_DOMAIN_ORIGIN_EXT equ 1000455002
    VK_DYNAMIC_STATE_RASTERIZATION_STREAM_EXT equ 1000455013
    VK_DYNAMIC_STATE_CONSERVATIVE_RASTERIZATION_MODE_EXT equ 1000455014
    VK_DYNAMIC_STATE_EXTRA_PRIMITIVE_OVERESTIMATION_SIZE_EXT equ 1000455015
    VK_DYNAMIC_STATE_DEPTH_CLIP_ENABLE_EXT equ 1000455016
    VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_ENABLE_EXT equ 1000455017
    VK_DYNAMIC_STATE_COLOR_BLEND_ADVANCED_EXT equ 1000455018
    VK_DYNAMIC_STATE_PROVOKING_VERTEX_MODE_EXT equ 1000455019
    VK_DYNAMIC_STATE_LINE_RASTERIZATION_MODE_EXT equ 1000455020
    VK_DYNAMIC_STATE_LINE_STIPPLE_ENABLE_EXT equ 1000455021
    VK_DYNAMIC_STATE_DEPTH_CLIP_NEGATIVE_ONE_TO_ONE_EXT equ 1000455022
    VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_ENABLE_NV equ 1000455023
    VK_DYNAMIC_STATE_VIEWPORT_SWIZZLE_NV equ 1000455024
    VK_DYNAMIC_STATE_COVERAGE_TO_COLOR_ENABLE_NV equ 1000455025
    VK_DYNAMIC_STATE_COVERAGE_TO_COLOR_LOCATION_NV equ 1000455026
    VK_DYNAMIC_STATE_COVERAGE_MODULATION_MODE_NV equ 1000455027
    VK_DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_ENABLE_NV equ 1000455028
    VK_DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_NV equ 1000455029
    VK_DYNAMIC_STATE_SHADING_RATE_IMAGE_ENABLE_NV equ 1000455030
    VK_DYNAMIC_STATE_REPRESENTATIVE_FRAGMENT_TEST_ENABLE_NV equ 1000455031
    VK_DYNAMIC_STATE_COVERAGE_REDUCTION_MODE_NV equ 1000455032
    VK_DYNAMIC_STATE_ATTACHMENT_FEEDBACK_LOOP_ENABLE_EXT equ 1000524000
    VK_DYNAMIC_STATE_LINE_STIPPLE_KHR equ 1000259000
    VK_DYNAMIC_STATE_LINE_STIPPLE_EXT equ 1000259000
    VK_DYNAMIC_STATE_CULL_MODE_EXT equ 1000267000
    VK_DYNAMIC_STATE_FRONT_FACE_EXT equ 1000267001
    VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT equ 1000267002
    VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT equ 1000267003
    VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT equ 1000267004
    VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT equ 1000267005
    VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT equ 1000267006
    VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT equ 1000267007
    VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT equ 1000267008
    VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT equ 1000267009
    VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT equ 1000267010
    VK_DYNAMIC_STATE_STENCIL_OP_EXT equ 1000267011
    VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT equ 1000377001
    VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT equ 1000377002
    VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT equ 1000377004
    VK_DYNAMIC_STATE_MAX_ENUM equ 2147483647
; }

; enum VkFrontFace {
    VK_FRONT_FACE_COUNTER_CLOCKWISE equ 0
    VK_FRONT_FACE_CLOCKWISE equ 1
    VK_FRONT_FACE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkFrontFace = enum VkFrontFace, TypeKind.ELABORATED
VkFrontFace typedef dword

; enum VkFrontFace {
    VK_FRONT_FACE_COUNTER_CLOCKWISE equ 0
    VK_FRONT_FACE_CLOCKWISE equ 1
    VK_FRONT_FACE_MAX_ENUM equ 2147483647
; }

; enum VkVertexInputRate {
    VK_VERTEX_INPUT_RATE_VERTEX equ 0
    VK_VERTEX_INPUT_RATE_INSTANCE equ 1
    VK_VERTEX_INPUT_RATE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkVertexInputRate = enum VkVertexInputRate, TypeKind.ELABORATED
VkVertexInputRate typedef dword

; enum VkVertexInputRate {
    VK_VERTEX_INPUT_RATE_VERTEX equ 0
    VK_VERTEX_INPUT_RATE_INSTANCE equ 1
    VK_VERTEX_INPUT_RATE_MAX_ENUM equ 2147483647
; }

; enum VkPrimitiveTopology {
    VK_PRIMITIVE_TOPOLOGY_POINT_LIST equ 0
    VK_PRIMITIVE_TOPOLOGY_LINE_LIST equ 1
    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP equ 2
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST equ 3
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP equ 4
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN equ 5
    VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY equ 6
    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY equ 7
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY equ 8
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY equ 9
    VK_PRIMITIVE_TOPOLOGY_PATCH_LIST equ 10
    VK_PRIMITIVE_TOPOLOGY_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPrimitiveTopology = enum VkPrimitiveTopology, TypeKind.ELABORATED
VkPrimitiveTopology typedef dword

; enum VkPrimitiveTopology {
    VK_PRIMITIVE_TOPOLOGY_POINT_LIST equ 0
    VK_PRIMITIVE_TOPOLOGY_LINE_LIST equ 1
    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP equ 2
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST equ 3
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP equ 4
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN equ 5
    VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY equ 6
    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY equ 7
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY equ 8
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY equ 9
    VK_PRIMITIVE_TOPOLOGY_PATCH_LIST equ 10
    VK_PRIMITIVE_TOPOLOGY_MAX_ENUM equ 2147483647
; }

; enum VkPolygonMode {
    VK_POLYGON_MODE_FILL equ 0
    VK_POLYGON_MODE_LINE equ 1
    VK_POLYGON_MODE_POINT equ 2
    VK_POLYGON_MODE_FILL_RECTANGLE_NV equ 1000153000
    VK_POLYGON_MODE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPolygonMode = enum VkPolygonMode, TypeKind.ELABORATED
VkPolygonMode typedef dword

; enum VkPolygonMode {
    VK_POLYGON_MODE_FILL equ 0
    VK_POLYGON_MODE_LINE equ 1
    VK_POLYGON_MODE_POINT equ 2
    VK_POLYGON_MODE_FILL_RECTANGLE_NV equ 1000153000
    VK_POLYGON_MODE_MAX_ENUM equ 2147483647
; }

; enum VkStencilOp {
    VK_STENCIL_OP_KEEP equ 0
    VK_STENCIL_OP_ZERO equ 1
    VK_STENCIL_OP_REPLACE equ 2
    VK_STENCIL_OP_INCREMENT_AND_CLAMP equ 3
    VK_STENCIL_OP_DECREMENT_AND_CLAMP equ 4
    VK_STENCIL_OP_INVERT equ 5
    VK_STENCIL_OP_INCREMENT_AND_WRAP equ 6
    VK_STENCIL_OP_DECREMENT_AND_WRAP equ 7
    VK_STENCIL_OP_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkStencilOp = enum VkStencilOp, TypeKind.ELABORATED
VkStencilOp typedef dword

; enum VkStencilOp {
    VK_STENCIL_OP_KEEP equ 0
    VK_STENCIL_OP_ZERO equ 1
    VK_STENCIL_OP_REPLACE equ 2
    VK_STENCIL_OP_INCREMENT_AND_CLAMP equ 3
    VK_STENCIL_OP_DECREMENT_AND_CLAMP equ 4
    VK_STENCIL_OP_INVERT equ 5
    VK_STENCIL_OP_INCREMENT_AND_WRAP equ 6
    VK_STENCIL_OP_DECREMENT_AND_WRAP equ 7
    VK_STENCIL_OP_MAX_ENUM equ 2147483647
; }

; enum VkLogicOp {
    VK_LOGIC_OP_CLEAR equ 0
    VK_LOGIC_OP_AND equ 1
    VK_LOGIC_OP_AND_REVERSE equ 2
    VK_LOGIC_OP_COPY equ 3
    VK_LOGIC_OP_AND_INVERTED equ 4
    VK_LOGIC_OP_NO_OP equ 5
    VK_LOGIC_OP_XOR equ 6
    VK_LOGIC_OP_OR equ 7
    VK_LOGIC_OP_NOR equ 8
    VK_LOGIC_OP_EQUIVALENT equ 9
    VK_LOGIC_OP_INVERT equ 10
    VK_LOGIC_OP_OR_REVERSE equ 11
    VK_LOGIC_OP_COPY_INVERTED equ 12
    VK_LOGIC_OP_OR_INVERTED equ 13
    VK_LOGIC_OP_NAND equ 14
    VK_LOGIC_OP_SET equ 15
    VK_LOGIC_OP_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkLogicOp = enum VkLogicOp, TypeKind.ELABORATED
VkLogicOp typedef dword

; enum VkLogicOp {
    VK_LOGIC_OP_CLEAR equ 0
    VK_LOGIC_OP_AND equ 1
    VK_LOGIC_OP_AND_REVERSE equ 2
    VK_LOGIC_OP_COPY equ 3
    VK_LOGIC_OP_AND_INVERTED equ 4
    VK_LOGIC_OP_NO_OP equ 5
    VK_LOGIC_OP_XOR equ 6
    VK_LOGIC_OP_OR equ 7
    VK_LOGIC_OP_NOR equ 8
    VK_LOGIC_OP_EQUIVALENT equ 9
    VK_LOGIC_OP_INVERT equ 10
    VK_LOGIC_OP_OR_REVERSE equ 11
    VK_LOGIC_OP_COPY_INVERTED equ 12
    VK_LOGIC_OP_OR_INVERTED equ 13
    VK_LOGIC_OP_NAND equ 14
    VK_LOGIC_OP_SET equ 15
    VK_LOGIC_OP_MAX_ENUM equ 2147483647
; }

; enum VkBorderColor {
    VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK equ 0
    VK_BORDER_COLOR_INT_TRANSPARENT_BLACK equ 1
    VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK equ 2
    VK_BORDER_COLOR_INT_OPAQUE_BLACK equ 3
    VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE equ 4
    VK_BORDER_COLOR_INT_OPAQUE_WHITE equ 5
    VK_BORDER_COLOR_FLOAT_CUSTOM_EXT equ 1000287003
    VK_BORDER_COLOR_INT_CUSTOM_EXT equ 1000287004
    VK_BORDER_COLOR_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkBorderColor = enum VkBorderColor, TypeKind.ELABORATED
VkBorderColor typedef dword

; enum VkBorderColor {
    VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK equ 0
    VK_BORDER_COLOR_INT_TRANSPARENT_BLACK equ 1
    VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK equ 2
    VK_BORDER_COLOR_INT_OPAQUE_BLACK equ 3
    VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE equ 4
    VK_BORDER_COLOR_INT_OPAQUE_WHITE equ 5
    VK_BORDER_COLOR_FLOAT_CUSTOM_EXT equ 1000287003
    VK_BORDER_COLOR_INT_CUSTOM_EXT equ 1000287004
    VK_BORDER_COLOR_MAX_ENUM equ 2147483647
; }

; enum VkFilter {
    VK_FILTER_NEAREST equ 0
    VK_FILTER_LINEAR equ 1
    VK_FILTER_CUBIC_EXT equ 1000015000
    VK_FILTER_CUBIC_IMG equ 1000015000
    VK_FILTER_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkFilter = enum VkFilter, TypeKind.ELABORATED
VkFilter typedef dword

; enum VkFilter {
    VK_FILTER_NEAREST equ 0
    VK_FILTER_LINEAR equ 1
    VK_FILTER_CUBIC_EXT equ 1000015000
    VK_FILTER_CUBIC_IMG equ 1000015000
    VK_FILTER_MAX_ENUM equ 2147483647
; }

; enum VkSamplerAddressMode {
    VK_SAMPLER_ADDRESS_MODE_REPEAT equ 0
    VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT equ 1
    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE equ 2
    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER equ 3
    VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE equ 4
    VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR equ 4
    VK_SAMPLER_ADDRESS_MODE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSamplerAddressMode = enum VkSamplerAddressMode, TypeKind.ELABORATED
VkSamplerAddressMode typedef dword

; enum VkSamplerAddressMode {
    VK_SAMPLER_ADDRESS_MODE_REPEAT equ 0
    VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT equ 1
    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE equ 2
    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER equ 3
    VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE equ 4
    VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR equ 4
    VK_SAMPLER_ADDRESS_MODE_MAX_ENUM equ 2147483647
; }

; enum VkSamplerMipmapMode {
    VK_SAMPLER_MIPMAP_MODE_NEAREST equ 0
    VK_SAMPLER_MIPMAP_MODE_LINEAR equ 1
    VK_SAMPLER_MIPMAP_MODE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSamplerMipmapMode = enum VkSamplerMipmapMode, TypeKind.ELABORATED
VkSamplerMipmapMode typedef dword

; enum VkSamplerMipmapMode {
    VK_SAMPLER_MIPMAP_MODE_NEAREST equ 0
    VK_SAMPLER_MIPMAP_MODE_LINEAR equ 1
    VK_SAMPLER_MIPMAP_MODE_MAX_ENUM equ 2147483647
; }

; enum VkDescriptorType {
    VK_DESCRIPTOR_TYPE_SAMPLER equ 0
    VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER equ 1
    VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE equ 2
    VK_DESCRIPTOR_TYPE_STORAGE_IMAGE equ 3
    VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER equ 4
    VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER equ 5
    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER equ 6
    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER equ 7
    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC equ 8
    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC equ 9
    VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT equ 10
    VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK equ 1000138000
    VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR equ 1000150000
    VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV equ 1000165000
    VK_DESCRIPTOR_TYPE_SAMPLE_WEIGHT_IMAGE_QCOM equ 1000440000
    VK_DESCRIPTOR_TYPE_BLOCK_MATCH_IMAGE_QCOM equ 1000440001
    VK_DESCRIPTOR_TYPE_MUTABLE_EXT equ 1000351000
    VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT equ 1000138000
    VK_DESCRIPTOR_TYPE_MUTABLE_VALVE equ 1000351000
    VK_DESCRIPTOR_TYPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDescriptorType = enum VkDescriptorType, TypeKind.ELABORATED
VkDescriptorType typedef dword

; enum VkDescriptorType {
    VK_DESCRIPTOR_TYPE_SAMPLER equ 0
    VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER equ 1
    VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE equ 2
    VK_DESCRIPTOR_TYPE_STORAGE_IMAGE equ 3
    VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER equ 4
    VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER equ 5
    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER equ 6
    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER equ 7
    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC equ 8
    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC equ 9
    VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT equ 10
    VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK equ 1000138000
    VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR equ 1000150000
    VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV equ 1000165000
    VK_DESCRIPTOR_TYPE_SAMPLE_WEIGHT_IMAGE_QCOM equ 1000440000
    VK_DESCRIPTOR_TYPE_BLOCK_MATCH_IMAGE_QCOM equ 1000440001
    VK_DESCRIPTOR_TYPE_MUTABLE_EXT equ 1000351000
    VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT equ 1000138000
    VK_DESCRIPTOR_TYPE_MUTABLE_VALVE equ 1000351000
    VK_DESCRIPTOR_TYPE_MAX_ENUM equ 2147483647
; }

; enum VkAttachmentLoadOp {
    VK_ATTACHMENT_LOAD_OP_LOAD equ 0
    VK_ATTACHMENT_LOAD_OP_CLEAR equ 1
    VK_ATTACHMENT_LOAD_OP_DONT_CARE equ 2
    VK_ATTACHMENT_LOAD_OP_NONE_KHR equ 1000400000
    VK_ATTACHMENT_LOAD_OP_NONE_EXT equ 1000400000
    VK_ATTACHMENT_LOAD_OP_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkAttachmentLoadOp = enum VkAttachmentLoadOp, TypeKind.ELABORATED
VkAttachmentLoadOp typedef dword

; enum VkAttachmentLoadOp {
    VK_ATTACHMENT_LOAD_OP_LOAD equ 0
    VK_ATTACHMENT_LOAD_OP_CLEAR equ 1
    VK_ATTACHMENT_LOAD_OP_DONT_CARE equ 2
    VK_ATTACHMENT_LOAD_OP_NONE_KHR equ 1000400000
    VK_ATTACHMENT_LOAD_OP_NONE_EXT equ 1000400000
    VK_ATTACHMENT_LOAD_OP_MAX_ENUM equ 2147483647
; }

; enum VkAttachmentStoreOp {
    VK_ATTACHMENT_STORE_OP_STORE equ 0
    VK_ATTACHMENT_STORE_OP_DONT_CARE equ 1
    VK_ATTACHMENT_STORE_OP_NONE equ 1000301000
    VK_ATTACHMENT_STORE_OP_NONE_KHR equ 1000301000
    VK_ATTACHMENT_STORE_OP_NONE_QCOM equ 1000301000
    VK_ATTACHMENT_STORE_OP_NONE_EXT equ 1000301000
    VK_ATTACHMENT_STORE_OP_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkAttachmentStoreOp = enum VkAttachmentStoreOp, TypeKind.ELABORATED
VkAttachmentStoreOp typedef dword

; enum VkAttachmentStoreOp {
    VK_ATTACHMENT_STORE_OP_STORE equ 0
    VK_ATTACHMENT_STORE_OP_DONT_CARE equ 1
    VK_ATTACHMENT_STORE_OP_NONE equ 1000301000
    VK_ATTACHMENT_STORE_OP_NONE_KHR equ 1000301000
    VK_ATTACHMENT_STORE_OP_NONE_QCOM equ 1000301000
    VK_ATTACHMENT_STORE_OP_NONE_EXT equ 1000301000
    VK_ATTACHMENT_STORE_OP_MAX_ENUM equ 2147483647
; }

; enum VkPipelineBindPoint {
    VK_PIPELINE_BIND_POINT_GRAPHICS equ 0
    VK_PIPELINE_BIND_POINT_COMPUTE equ 1
    VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR equ 1000165000
    VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI equ 1000369003
    VK_PIPELINE_BIND_POINT_RAY_TRACING_NV equ 1000165000
    VK_PIPELINE_BIND_POINT_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineBindPoint = enum VkPipelineBindPoint, TypeKind.ELABORATED
VkPipelineBindPoint typedef dword

; enum VkPipelineBindPoint {
    VK_PIPELINE_BIND_POINT_GRAPHICS equ 0
    VK_PIPELINE_BIND_POINT_COMPUTE equ 1
    VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR equ 1000165000
    VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI equ 1000369003
    VK_PIPELINE_BIND_POINT_RAY_TRACING_NV equ 1000165000
    VK_PIPELINE_BIND_POINT_MAX_ENUM equ 2147483647
; }

; enum VkCommandBufferLevel {
    VK_COMMAND_BUFFER_LEVEL_PRIMARY equ 0
    VK_COMMAND_BUFFER_LEVEL_SECONDARY equ 1
    VK_COMMAND_BUFFER_LEVEL_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCommandBufferLevel = enum VkCommandBufferLevel, TypeKind.ELABORATED
VkCommandBufferLevel typedef dword

; enum VkCommandBufferLevel {
    VK_COMMAND_BUFFER_LEVEL_PRIMARY equ 0
    VK_COMMAND_BUFFER_LEVEL_SECONDARY equ 1
    VK_COMMAND_BUFFER_LEVEL_MAX_ENUM equ 2147483647
; }

; enum VkIndexType {
    VK_INDEX_TYPE_UINT16 equ 0
    VK_INDEX_TYPE_UINT32 equ 1
    VK_INDEX_TYPE_NONE_KHR equ 1000165000
    VK_INDEX_TYPE_UINT8_KHR equ 1000265000
    VK_INDEX_TYPE_NONE_NV equ 1000165000
    VK_INDEX_TYPE_UINT8_EXT equ 1000265000
    VK_INDEX_TYPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkIndexType = enum VkIndexType, TypeKind.ELABORATED
VkIndexType typedef dword

; enum VkIndexType {
    VK_INDEX_TYPE_UINT16 equ 0
    VK_INDEX_TYPE_UINT32 equ 1
    VK_INDEX_TYPE_NONE_KHR equ 1000165000
    VK_INDEX_TYPE_UINT8_KHR equ 1000265000
    VK_INDEX_TYPE_NONE_NV equ 1000165000
    VK_INDEX_TYPE_UINT8_EXT equ 1000265000
    VK_INDEX_TYPE_MAX_ENUM equ 2147483647
; }

; enum VkSubpassContents {
    VK_SUBPASS_CONTENTS_INLINE equ 0
    VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS equ 1
    VK_SUBPASS_CONTENTS_INLINE_AND_SECONDARY_COMMAND_BUFFERS_EXT equ 1000451000
    VK_SUBPASS_CONTENTS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSubpassContents = enum VkSubpassContents, TypeKind.ELABORATED
VkSubpassContents typedef dword

; enum VkSubpassContents {
    VK_SUBPASS_CONTENTS_INLINE equ 0
    VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS equ 1
    VK_SUBPASS_CONTENTS_INLINE_AND_SECONDARY_COMMAND_BUFFERS_EXT equ 1000451000
    VK_SUBPASS_CONTENTS_MAX_ENUM equ 2147483647
; }

; enum VkAccessFlagBits {
    VK_ACCESS_INDIRECT_COMMAND_READ_BIT equ 1
    VK_ACCESS_INDEX_READ_BIT equ 2
    VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT equ 4
    VK_ACCESS_UNIFORM_READ_BIT equ 8
    VK_ACCESS_INPUT_ATTACHMENT_READ_BIT equ 16
    VK_ACCESS_SHADER_READ_BIT equ 32
    VK_ACCESS_SHADER_WRITE_BIT equ 64
    VK_ACCESS_COLOR_ATTACHMENT_READ_BIT equ 128
    VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT equ 256
    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT equ 512
    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT equ 1024
    VK_ACCESS_TRANSFER_READ_BIT equ 2048
    VK_ACCESS_TRANSFER_WRITE_BIT equ 4096
    VK_ACCESS_HOST_READ_BIT equ 8192
    VK_ACCESS_HOST_WRITE_BIT equ 16384
    VK_ACCESS_MEMORY_READ_BIT equ 32768
    VK_ACCESS_MEMORY_WRITE_BIT equ 65536
    VK_ACCESS_NONE equ 0
    VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT equ 33554432
    VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT equ 67108864
    VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT equ 134217728
    VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT equ 1048576
    VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT equ 524288
    VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR equ 2097152
    VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR equ 4194304
    VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT equ 16777216
    VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR equ 8388608
    VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV equ 131072
    VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV equ 262144
    VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV equ 8388608
    VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV equ 2097152
    VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV equ 4194304
    VK_ACCESS_NONE_KHR equ 0
    VK_ACCESS_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkAccessFlagBits = enum VkAccessFlagBits, TypeKind.ELABORATED
VkAccessFlagBits typedef dword

; enum VkAccessFlagBits {
    VK_ACCESS_INDIRECT_COMMAND_READ_BIT equ 1
    VK_ACCESS_INDEX_READ_BIT equ 2
    VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT equ 4
    VK_ACCESS_UNIFORM_READ_BIT equ 8
    VK_ACCESS_INPUT_ATTACHMENT_READ_BIT equ 16
    VK_ACCESS_SHADER_READ_BIT equ 32
    VK_ACCESS_SHADER_WRITE_BIT equ 64
    VK_ACCESS_COLOR_ATTACHMENT_READ_BIT equ 128
    VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT equ 256
    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT equ 512
    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT equ 1024
    VK_ACCESS_TRANSFER_READ_BIT equ 2048
    VK_ACCESS_TRANSFER_WRITE_BIT equ 4096
    VK_ACCESS_HOST_READ_BIT equ 8192
    VK_ACCESS_HOST_WRITE_BIT equ 16384
    VK_ACCESS_MEMORY_READ_BIT equ 32768
    VK_ACCESS_MEMORY_WRITE_BIT equ 65536
    VK_ACCESS_NONE equ 0
    VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT equ 33554432
    VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT equ 67108864
    VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT equ 134217728
    VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT equ 1048576
    VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT equ 524288
    VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR equ 2097152
    VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR equ 4194304
    VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT equ 16777216
    VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR equ 8388608
    VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV equ 131072
    VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV equ 262144
    VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV equ 8388608
    VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV equ 2097152
    VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV equ 4194304
    VK_ACCESS_NONE_KHR equ 0
    VK_ACCESS_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkAccessFlags = VkFlags, TypeKind.ELABORATED
VkAccessFlags typedef dword

; enum VkImageAspectFlagBits {
    VK_IMAGE_ASPECT_COLOR_BIT equ 1
    VK_IMAGE_ASPECT_DEPTH_BIT equ 2
    VK_IMAGE_ASPECT_STENCIL_BIT equ 4
    VK_IMAGE_ASPECT_METADATA_BIT equ 8
    VK_IMAGE_ASPECT_PLANE_0_BIT equ 16
    VK_IMAGE_ASPECT_PLANE_1_BIT equ 32
    VK_IMAGE_ASPECT_PLANE_2_BIT equ 64
    VK_IMAGE_ASPECT_NONE equ 0
    VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT equ 128
    VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT equ 256
    VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT equ 512
    VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT equ 1024
    VK_IMAGE_ASPECT_PLANE_0_BIT_KHR equ 16
    VK_IMAGE_ASPECT_PLANE_1_BIT_KHR equ 32
    VK_IMAGE_ASPECT_PLANE_2_BIT_KHR equ 64
    VK_IMAGE_ASPECT_NONE_KHR equ 0
    VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageAspectFlagBits = enum VkImageAspectFlagBits, TypeKind.ELABORATED
VkImageAspectFlagBits typedef dword

; enum VkImageAspectFlagBits {
    VK_IMAGE_ASPECT_COLOR_BIT equ 1
    VK_IMAGE_ASPECT_DEPTH_BIT equ 2
    VK_IMAGE_ASPECT_STENCIL_BIT equ 4
    VK_IMAGE_ASPECT_METADATA_BIT equ 8
    VK_IMAGE_ASPECT_PLANE_0_BIT equ 16
    VK_IMAGE_ASPECT_PLANE_1_BIT equ 32
    VK_IMAGE_ASPECT_PLANE_2_BIT equ 64
    VK_IMAGE_ASPECT_NONE equ 0
    VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT equ 128
    VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT equ 256
    VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT equ 512
    VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT equ 1024
    VK_IMAGE_ASPECT_PLANE_0_BIT_KHR equ 16
    VK_IMAGE_ASPECT_PLANE_1_BIT_KHR equ 32
    VK_IMAGE_ASPECT_PLANE_2_BIT_KHR equ 64
    VK_IMAGE_ASPECT_NONE_KHR equ 0
    VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageAspectFlags = VkFlags, TypeKind.ELABORATED
VkImageAspectFlags typedef dword

; enum VkFormatFeatureFlagBits {
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT equ 1
    VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT equ 2
    VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT equ 4
    VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT equ 8
    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT equ 16
    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT equ 32
    VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT equ 64
    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT equ 128
    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT equ 256
    VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT equ 512
    VK_FORMAT_FEATURE_BLIT_SRC_BIT equ 1024
    VK_FORMAT_FEATURE_BLIT_DST_BIT equ 2048
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT equ 4096
    VK_FORMAT_FEATURE_TRANSFER_SRC_BIT equ 16384
    VK_FORMAT_FEATURE_TRANSFER_DST_BIT equ 32768
    VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT equ 131072
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT equ 262144
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT equ 524288
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT equ 1048576
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT equ 2097152
    VK_FORMAT_FEATURE_DISJOINT_BIT equ 4194304
    VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT equ 8388608
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT equ 65536
    VK_FORMAT_FEATURE_VIDEO_DECODE_OUTPUT_BIT_KHR equ 33554432
    VK_FORMAT_FEATURE_VIDEO_DECODE_DPB_BIT_KHR equ 67108864
    VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR equ 536870912
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT equ 8192
    VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT equ 16777216
    VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR equ 1073741824
    VK_FORMAT_FEATURE_VIDEO_ENCODE_INPUT_BIT_KHR equ 134217728
    VK_FORMAT_FEATURE_VIDEO_ENCODE_DPB_BIT_KHR equ 268435456
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG equ 8192
    VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR equ 16384
    VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR equ 32768
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT equ 65536
    VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR equ 131072
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR equ 262144
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR equ 524288
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR equ 1048576
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR equ 2097152
    VK_FORMAT_FEATURE_DISJOINT_BIT_KHR equ 4194304
    VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR equ 8388608
    VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkFormatFeatureFlagBits = enum VkFormatFeatureFlagBits, TypeKind.ELABORATED
VkFormatFeatureFlagBits typedef dword

; enum VkFormatFeatureFlagBits {
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT equ 1
    VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT equ 2
    VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT equ 4
    VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT equ 8
    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT equ 16
    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT equ 32
    VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT equ 64
    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT equ 128
    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT equ 256
    VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT equ 512
    VK_FORMAT_FEATURE_BLIT_SRC_BIT equ 1024
    VK_FORMAT_FEATURE_BLIT_DST_BIT equ 2048
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT equ 4096
    VK_FORMAT_FEATURE_TRANSFER_SRC_BIT equ 16384
    VK_FORMAT_FEATURE_TRANSFER_DST_BIT equ 32768
    VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT equ 131072
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT equ 262144
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT equ 524288
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT equ 1048576
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT equ 2097152
    VK_FORMAT_FEATURE_DISJOINT_BIT equ 4194304
    VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT equ 8388608
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT equ 65536
    VK_FORMAT_FEATURE_VIDEO_DECODE_OUTPUT_BIT_KHR equ 33554432
    VK_FORMAT_FEATURE_VIDEO_DECODE_DPB_BIT_KHR equ 67108864
    VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR equ 536870912
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT equ 8192
    VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT equ 16777216
    VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR equ 1073741824
    VK_FORMAT_FEATURE_VIDEO_ENCODE_INPUT_BIT_KHR equ 134217728
    VK_FORMAT_FEATURE_VIDEO_ENCODE_DPB_BIT_KHR equ 268435456
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG equ 8192
    VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR equ 16384
    VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR equ 32768
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT equ 65536
    VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR equ 131072
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR equ 262144
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR equ 524288
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR equ 1048576
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR equ 2097152
    VK_FORMAT_FEATURE_DISJOINT_BIT_KHR equ 4194304
    VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR equ 8388608
    VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkFormatFeatureFlags = VkFlags, TypeKind.ELABORATED
VkFormatFeatureFlags typedef dword

; enum VkImageCreateFlagBits {
    VK_IMAGE_CREATE_SPARSE_BINDING_BIT equ 1
    VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT equ 2
    VK_IMAGE_CREATE_SPARSE_ALIASED_BIT equ 4
    VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT equ 8
    VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT equ 16
    VK_IMAGE_CREATE_ALIAS_BIT equ 1024
    VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT equ 64
    VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT equ 32
    VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT equ 128
    VK_IMAGE_CREATE_EXTENDED_USAGE_BIT equ 256
    VK_IMAGE_CREATE_PROTECTED_BIT equ 2048
    VK_IMAGE_CREATE_DISJOINT_BIT equ 512
    VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV equ 8192
    VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT equ 4096
    VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT equ 16384
    VK_IMAGE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT equ 65536
    VK_IMAGE_CREATE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_BIT_EXT equ 262144
    VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT equ 131072
    VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM equ 32768
    VK_IMAGE_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR equ 1048576
    VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR equ 64
    VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR equ 32
    VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR equ 128
    VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR equ 256
    VK_IMAGE_CREATE_DISJOINT_BIT_KHR equ 512
    VK_IMAGE_CREATE_ALIAS_BIT_KHR equ 1024
    VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageCreateFlagBits = enum VkImageCreateFlagBits, TypeKind.ELABORATED
VkImageCreateFlagBits typedef dword

; enum VkImageCreateFlagBits {
    VK_IMAGE_CREATE_SPARSE_BINDING_BIT equ 1
    VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT equ 2
    VK_IMAGE_CREATE_SPARSE_ALIASED_BIT equ 4
    VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT equ 8
    VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT equ 16
    VK_IMAGE_CREATE_ALIAS_BIT equ 1024
    VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT equ 64
    VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT equ 32
    VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT equ 128
    VK_IMAGE_CREATE_EXTENDED_USAGE_BIT equ 256
    VK_IMAGE_CREATE_PROTECTED_BIT equ 2048
    VK_IMAGE_CREATE_DISJOINT_BIT equ 512
    VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV equ 8192
    VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT equ 4096
    VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT equ 16384
    VK_IMAGE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT equ 65536
    VK_IMAGE_CREATE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_BIT_EXT equ 262144
    VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT equ 131072
    VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM equ 32768
    VK_IMAGE_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR equ 1048576
    VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR equ 64
    VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR equ 32
    VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR equ 128
    VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR equ 256
    VK_IMAGE_CREATE_DISJOINT_BIT_KHR equ 512
    VK_IMAGE_CREATE_ALIAS_BIT_KHR equ 1024
    VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageCreateFlags = VkFlags, TypeKind.ELABORATED
VkImageCreateFlags typedef dword

; enum VkSampleCountFlagBits {
    VK_SAMPLE_COUNT_1_BIT equ 1
    VK_SAMPLE_COUNT_2_BIT equ 2
    VK_SAMPLE_COUNT_4_BIT equ 4
    VK_SAMPLE_COUNT_8_BIT equ 8
    VK_SAMPLE_COUNT_16_BIT equ 16
    VK_SAMPLE_COUNT_32_BIT equ 32
    VK_SAMPLE_COUNT_64_BIT equ 64
    VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSampleCountFlagBits = enum VkSampleCountFlagBits, TypeKind.ELABORATED
VkSampleCountFlagBits typedef dword

; enum VkSampleCountFlagBits {
    VK_SAMPLE_COUNT_1_BIT equ 1
    VK_SAMPLE_COUNT_2_BIT equ 2
    VK_SAMPLE_COUNT_4_BIT equ 4
    VK_SAMPLE_COUNT_8_BIT equ 8
    VK_SAMPLE_COUNT_16_BIT equ 16
    VK_SAMPLE_COUNT_32_BIT equ 32
    VK_SAMPLE_COUNT_64_BIT equ 64
    VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSampleCountFlags = VkFlags, TypeKind.ELABORATED
VkSampleCountFlags typedef dword

; enum VkImageUsageFlagBits {
    VK_IMAGE_USAGE_TRANSFER_SRC_BIT equ 1
    VK_IMAGE_USAGE_TRANSFER_DST_BIT equ 2
    VK_IMAGE_USAGE_SAMPLED_BIT equ 4
    VK_IMAGE_USAGE_STORAGE_BIT equ 8
    VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT equ 16
    VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT equ 32
    VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT equ 64
    VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT equ 128
    VK_IMAGE_USAGE_VIDEO_DECODE_DST_BIT_KHR equ 1024
    VK_IMAGE_USAGE_VIDEO_DECODE_SRC_BIT_KHR equ 2048
    VK_IMAGE_USAGE_VIDEO_DECODE_DPB_BIT_KHR equ 4096
    VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT equ 512
    VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR equ 256
    VK_IMAGE_USAGE_HOST_TRANSFER_BIT_EXT equ 4194304
    VK_IMAGE_USAGE_VIDEO_ENCODE_DST_BIT_KHR equ 8192
    VK_IMAGE_USAGE_VIDEO_ENCODE_SRC_BIT_KHR equ 16384
    VK_IMAGE_USAGE_VIDEO_ENCODE_DPB_BIT_KHR equ 32768
    VK_IMAGE_USAGE_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT equ 524288
    VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI equ 262144
    VK_IMAGE_USAGE_SAMPLE_WEIGHT_BIT_QCOM equ 1048576
    VK_IMAGE_USAGE_SAMPLE_BLOCK_MATCH_BIT_QCOM equ 2097152
    VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV equ 256
    VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageUsageFlagBits = enum VkImageUsageFlagBits, TypeKind.ELABORATED
VkImageUsageFlagBits typedef dword

; enum VkImageUsageFlagBits {
    VK_IMAGE_USAGE_TRANSFER_SRC_BIT equ 1
    VK_IMAGE_USAGE_TRANSFER_DST_BIT equ 2
    VK_IMAGE_USAGE_SAMPLED_BIT equ 4
    VK_IMAGE_USAGE_STORAGE_BIT equ 8
    VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT equ 16
    VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT equ 32
    VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT equ 64
    VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT equ 128
    VK_IMAGE_USAGE_VIDEO_DECODE_DST_BIT_KHR equ 1024
    VK_IMAGE_USAGE_VIDEO_DECODE_SRC_BIT_KHR equ 2048
    VK_IMAGE_USAGE_VIDEO_DECODE_DPB_BIT_KHR equ 4096
    VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT equ 512
    VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR equ 256
    VK_IMAGE_USAGE_HOST_TRANSFER_BIT_EXT equ 4194304
    VK_IMAGE_USAGE_VIDEO_ENCODE_DST_BIT_KHR equ 8192
    VK_IMAGE_USAGE_VIDEO_ENCODE_SRC_BIT_KHR equ 16384
    VK_IMAGE_USAGE_VIDEO_ENCODE_DPB_BIT_KHR equ 32768
    VK_IMAGE_USAGE_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT equ 524288
    VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI equ 262144
    VK_IMAGE_USAGE_SAMPLE_WEIGHT_BIT_QCOM equ 1048576
    VK_IMAGE_USAGE_SAMPLE_BLOCK_MATCH_BIT_QCOM equ 2097152
    VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV equ 256
    VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageUsageFlags = VkFlags, TypeKind.ELABORATED
VkImageUsageFlags typedef dword

; enum VkInstanceCreateFlagBits {
    VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR equ 1
    VK_INSTANCE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkInstanceCreateFlagBits = enum VkInstanceCreateFlagBits, TypeKind.ELABORATED
VkInstanceCreateFlagBits typedef dword

; enum VkInstanceCreateFlagBits {
    VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR equ 1
    VK_INSTANCE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkInstanceCreateFlags = VkFlags, TypeKind.ELABORATED
VkInstanceCreateFlags typedef dword

; enum VkMemoryHeapFlagBits {
    VK_MEMORY_HEAP_DEVICE_LOCAL_BIT equ 1
    VK_MEMORY_HEAP_MULTI_INSTANCE_BIT equ 2
    VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR equ 2
    VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkMemoryHeapFlagBits = enum VkMemoryHeapFlagBits, TypeKind.ELABORATED
VkMemoryHeapFlagBits typedef dword

; enum VkMemoryHeapFlagBits {
    VK_MEMORY_HEAP_DEVICE_LOCAL_BIT equ 1
    VK_MEMORY_HEAP_MULTI_INSTANCE_BIT equ 2
    VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR equ 2
    VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkMemoryHeapFlags = VkFlags, TypeKind.ELABORATED
VkMemoryHeapFlags typedef dword

; enum VkMemoryPropertyFlagBits {
    VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT equ 1
    VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT equ 2
    VK_MEMORY_PROPERTY_HOST_COHERENT_BIT equ 4
    VK_MEMORY_PROPERTY_HOST_CACHED_BIT equ 8
    VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT equ 16
    VK_MEMORY_PROPERTY_PROTECTED_BIT equ 32
    VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD equ 64
    VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD equ 128
    VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV equ 256
    VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkMemoryPropertyFlagBits = enum VkMemoryPropertyFlagBits, TypeKind.ELABORATED
VkMemoryPropertyFlagBits typedef dword

; enum VkMemoryPropertyFlagBits {
    VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT equ 1
    VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT equ 2
    VK_MEMORY_PROPERTY_HOST_COHERENT_BIT equ 4
    VK_MEMORY_PROPERTY_HOST_CACHED_BIT equ 8
    VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT equ 16
    VK_MEMORY_PROPERTY_PROTECTED_BIT equ 32
    VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD equ 64
    VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD equ 128
    VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV equ 256
    VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkMemoryPropertyFlags = VkFlags, TypeKind.ELABORATED
VkMemoryPropertyFlags typedef dword

; enum VkQueueFlagBits {
    VK_QUEUE_GRAPHICS_BIT equ 1
    VK_QUEUE_COMPUTE_BIT equ 2
    VK_QUEUE_TRANSFER_BIT equ 4
    VK_QUEUE_SPARSE_BINDING_BIT equ 8
    VK_QUEUE_PROTECTED_BIT equ 16
    VK_QUEUE_VIDEO_DECODE_BIT_KHR equ 32
    VK_QUEUE_VIDEO_ENCODE_BIT_KHR equ 64
    VK_QUEUE_OPTICAL_FLOW_BIT_NV equ 256
    VK_QUEUE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkQueueFlagBits = enum VkQueueFlagBits, TypeKind.ELABORATED
VkQueueFlagBits typedef dword

; enum VkQueueFlagBits {
    VK_QUEUE_GRAPHICS_BIT equ 1
    VK_QUEUE_COMPUTE_BIT equ 2
    VK_QUEUE_TRANSFER_BIT equ 4
    VK_QUEUE_SPARSE_BINDING_BIT equ 8
    VK_QUEUE_PROTECTED_BIT equ 16
    VK_QUEUE_VIDEO_DECODE_BIT_KHR equ 32
    VK_QUEUE_VIDEO_ENCODE_BIT_KHR equ 64
    VK_QUEUE_OPTICAL_FLOW_BIT_NV equ 256
    VK_QUEUE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkQueueFlags = VkFlags, TypeKind.ELABORATED
VkQueueFlags typedef dword

; TYPEDEF VkDeviceCreateFlags = VkFlags, TypeKind.ELABORATED
VkDeviceCreateFlags typedef dword

; enum VkDeviceQueueCreateFlagBits {
    VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT equ 1
    VK_DEVICE_QUEUE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDeviceQueueCreateFlagBits = enum VkDeviceQueueCreateFlagBits, TypeKind.ELABORATED
VkDeviceQueueCreateFlagBits typedef dword

; enum VkDeviceQueueCreateFlagBits {
    VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT equ 1
    VK_DEVICE_QUEUE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDeviceQueueCreateFlags = VkFlags, TypeKind.ELABORATED
VkDeviceQueueCreateFlags typedef dword

; enum VkPipelineStageFlagBits {
    VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT equ 1
    VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT equ 2
    VK_PIPELINE_STAGE_VERTEX_INPUT_BIT equ 4
    VK_PIPELINE_STAGE_VERTEX_SHADER_BIT equ 8
    VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT equ 16
    VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT equ 32
    VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT equ 64
    VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT equ 128
    VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT equ 256
    VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT equ 512
    VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT equ 1024
    VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT equ 2048
    VK_PIPELINE_STAGE_TRANSFER_BIT equ 4096
    VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT equ 8192
    VK_PIPELINE_STAGE_HOST_BIT equ 16384
    VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT equ 32768
    VK_PIPELINE_STAGE_ALL_COMMANDS_BIT equ 65536
    VK_PIPELINE_STAGE_NONE equ 0
    VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT equ 16777216
    VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT equ 262144
    VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR equ 33554432
    VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR equ 2097152
    VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT equ 8388608
    VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR equ 4194304
    VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV equ 131072
    VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT equ 524288
    VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT equ 1048576
    VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV equ 4194304
    VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV equ 2097152
    VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV equ 33554432
    VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV equ 524288
    VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV equ 1048576
    VK_PIPELINE_STAGE_NONE_KHR equ 0
    VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineStageFlagBits = enum VkPipelineStageFlagBits, TypeKind.ELABORATED
VkPipelineStageFlagBits typedef dword

; enum VkPipelineStageFlagBits {
    VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT equ 1
    VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT equ 2
    VK_PIPELINE_STAGE_VERTEX_INPUT_BIT equ 4
    VK_PIPELINE_STAGE_VERTEX_SHADER_BIT equ 8
    VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT equ 16
    VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT equ 32
    VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT equ 64
    VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT equ 128
    VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT equ 256
    VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT equ 512
    VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT equ 1024
    VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT equ 2048
    VK_PIPELINE_STAGE_TRANSFER_BIT equ 4096
    VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT equ 8192
    VK_PIPELINE_STAGE_HOST_BIT equ 16384
    VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT equ 32768
    VK_PIPELINE_STAGE_ALL_COMMANDS_BIT equ 65536
    VK_PIPELINE_STAGE_NONE equ 0
    VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT equ 16777216
    VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT equ 262144
    VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR equ 33554432
    VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR equ 2097152
    VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT equ 8388608
    VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR equ 4194304
    VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV equ 131072
    VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT equ 524288
    VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT equ 1048576
    VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV equ 4194304
    VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV equ 2097152
    VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV equ 33554432
    VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV equ 524288
    VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV equ 1048576
    VK_PIPELINE_STAGE_NONE_KHR equ 0
    VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineStageFlags = VkFlags, TypeKind.ELABORATED
VkPipelineStageFlags typedef dword

; enum VkMemoryMapFlagBits {
    VK_MEMORY_MAP_PLACED_BIT_EXT equ 1
    VK_MEMORY_MAP_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkMemoryMapFlagBits = enum VkMemoryMapFlagBits, TypeKind.ELABORATED
VkMemoryMapFlagBits typedef dword

; enum VkMemoryMapFlagBits {
    VK_MEMORY_MAP_PLACED_BIT_EXT equ 1
    VK_MEMORY_MAP_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkMemoryMapFlags = VkFlags, TypeKind.ELABORATED
VkMemoryMapFlags typedef dword

; enum VkSparseMemoryBindFlagBits {
    VK_SPARSE_MEMORY_BIND_METADATA_BIT equ 1
    VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSparseMemoryBindFlagBits = enum VkSparseMemoryBindFlagBits, TypeKind.ELABORATED
VkSparseMemoryBindFlagBits typedef dword

; enum VkSparseMemoryBindFlagBits {
    VK_SPARSE_MEMORY_BIND_METADATA_BIT equ 1
    VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSparseMemoryBindFlags = VkFlags, TypeKind.ELABORATED
VkSparseMemoryBindFlags typedef dword

; enum VkSparseImageFormatFlagBits {
    VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT equ 1
    VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT equ 2
    VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT equ 4
    VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSparseImageFormatFlagBits = enum VkSparseImageFormatFlagBits, TypeKind.ELABORATED
VkSparseImageFormatFlagBits typedef dword

; enum VkSparseImageFormatFlagBits {
    VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT equ 1
    VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT equ 2
    VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT equ 4
    VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSparseImageFormatFlags = VkFlags, TypeKind.ELABORATED
VkSparseImageFormatFlags typedef dword

; enum VkFenceCreateFlagBits {
    VK_FENCE_CREATE_SIGNALED_BIT equ 1
    VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkFenceCreateFlagBits = enum VkFenceCreateFlagBits, TypeKind.ELABORATED
VkFenceCreateFlagBits typedef dword

; enum VkFenceCreateFlagBits {
    VK_FENCE_CREATE_SIGNALED_BIT equ 1
    VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkFenceCreateFlags = VkFlags, TypeKind.ELABORATED
VkFenceCreateFlags typedef dword

; TYPEDEF VkSemaphoreCreateFlags = VkFlags, TypeKind.ELABORATED
VkSemaphoreCreateFlags typedef dword

; enum VkEventCreateFlagBits {
    VK_EVENT_CREATE_DEVICE_ONLY_BIT equ 1
    VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR equ 1
    VK_EVENT_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkEventCreateFlagBits = enum VkEventCreateFlagBits, TypeKind.ELABORATED
VkEventCreateFlagBits typedef dword

; enum VkEventCreateFlagBits {
    VK_EVENT_CREATE_DEVICE_ONLY_BIT equ 1
    VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR equ 1
    VK_EVENT_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkEventCreateFlags = VkFlags, TypeKind.ELABORATED
VkEventCreateFlags typedef dword

; enum VkQueryPipelineStatisticFlagBits {
    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT equ 1
    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT equ 2
    VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT equ 4
    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT equ 8
    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT equ 16
    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT equ 32
    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT equ 64
    VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT equ 128
    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT equ 256
    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT equ 512
    VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT equ 1024
    VK_QUERY_PIPELINE_STATISTIC_TASK_SHADER_INVOCATIONS_BIT_EXT equ 2048
    VK_QUERY_PIPELINE_STATISTIC_MESH_SHADER_INVOCATIONS_BIT_EXT equ 4096
    VK_QUERY_PIPELINE_STATISTIC_CLUSTER_CULLING_SHADER_INVOCATIONS_BIT_HUAWEI equ 8192
    VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkQueryPipelineStatisticFlagBits = enum VkQueryPipelineStatisticFlagBits, TypeKind.ELABORATED
VkQueryPipelineStatisticFlagBits typedef dword

; enum VkQueryPipelineStatisticFlagBits {
    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT equ 1
    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT equ 2
    VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT equ 4
    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT equ 8
    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT equ 16
    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT equ 32
    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT equ 64
    VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT equ 128
    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT equ 256
    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT equ 512
    VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT equ 1024
    VK_QUERY_PIPELINE_STATISTIC_TASK_SHADER_INVOCATIONS_BIT_EXT equ 2048
    VK_QUERY_PIPELINE_STATISTIC_MESH_SHADER_INVOCATIONS_BIT_EXT equ 4096
    VK_QUERY_PIPELINE_STATISTIC_CLUSTER_CULLING_SHADER_INVOCATIONS_BIT_HUAWEI equ 8192
    VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkQueryPipelineStatisticFlags = VkFlags, TypeKind.ELABORATED
VkQueryPipelineStatisticFlags typedef dword

; TYPEDEF VkQueryPoolCreateFlags = VkFlags, TypeKind.ELABORATED
VkQueryPoolCreateFlags typedef dword

; enum VkQueryResultFlagBits {
    VK_QUERY_RESULT_64_BIT equ 1
    VK_QUERY_RESULT_WAIT_BIT equ 2
    VK_QUERY_RESULT_WITH_AVAILABILITY_BIT equ 4
    VK_QUERY_RESULT_PARTIAL_BIT equ 8
    VK_QUERY_RESULT_WITH_STATUS_BIT_KHR equ 16
    VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkQueryResultFlagBits = enum VkQueryResultFlagBits, TypeKind.ELABORATED
VkQueryResultFlagBits typedef dword

; enum VkQueryResultFlagBits {
    VK_QUERY_RESULT_64_BIT equ 1
    VK_QUERY_RESULT_WAIT_BIT equ 2
    VK_QUERY_RESULT_WITH_AVAILABILITY_BIT equ 4
    VK_QUERY_RESULT_PARTIAL_BIT equ 8
    VK_QUERY_RESULT_WITH_STATUS_BIT_KHR equ 16
    VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkQueryResultFlags = VkFlags, TypeKind.ELABORATED
VkQueryResultFlags typedef dword

; enum VkBufferCreateFlagBits {
    VK_BUFFER_CREATE_SPARSE_BINDING_BIT equ 1
    VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT equ 2
    VK_BUFFER_CREATE_SPARSE_ALIASED_BIT equ 4
    VK_BUFFER_CREATE_PROTECTED_BIT equ 8
    VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT equ 16
    VK_BUFFER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT equ 32
    VK_BUFFER_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR equ 64
    VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT equ 16
    VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR equ 16
    VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkBufferCreateFlagBits = enum VkBufferCreateFlagBits, TypeKind.ELABORATED
VkBufferCreateFlagBits typedef dword

; enum VkBufferCreateFlagBits {
    VK_BUFFER_CREATE_SPARSE_BINDING_BIT equ 1
    VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT equ 2
    VK_BUFFER_CREATE_SPARSE_ALIASED_BIT equ 4
    VK_BUFFER_CREATE_PROTECTED_BIT equ 8
    VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT equ 16
    VK_BUFFER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT equ 32
    VK_BUFFER_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR equ 64
    VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT equ 16
    VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR equ 16
    VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkBufferCreateFlags = VkFlags, TypeKind.ELABORATED
VkBufferCreateFlags typedef dword

; enum VkBufferUsageFlagBits {
    VK_BUFFER_USAGE_TRANSFER_SRC_BIT equ 1
    VK_BUFFER_USAGE_TRANSFER_DST_BIT equ 2
    VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT equ 4
    VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT equ 8
    VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT equ 16
    VK_BUFFER_USAGE_STORAGE_BUFFER_BIT equ 32
    VK_BUFFER_USAGE_INDEX_BUFFER_BIT equ 64
    VK_BUFFER_USAGE_VERTEX_BUFFER_BIT equ 128
    VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT equ 256
    VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT equ 131072
    VK_BUFFER_USAGE_VIDEO_DECODE_SRC_BIT_KHR equ 8192
    VK_BUFFER_USAGE_VIDEO_DECODE_DST_BIT_KHR equ 16384
    VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT equ 2048
    VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT equ 4096
    VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT equ 512
    VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR equ 524288
    VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR equ 1048576
    VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR equ 1024
    VK_BUFFER_USAGE_VIDEO_ENCODE_DST_BIT_KHR equ 32768
    VK_BUFFER_USAGE_VIDEO_ENCODE_SRC_BIT_KHR equ 65536
    VK_BUFFER_USAGE_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT equ 2097152
    VK_BUFFER_USAGE_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT equ 4194304
    VK_BUFFER_USAGE_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT equ 67108864
    VK_BUFFER_USAGE_MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT equ 8388608
    VK_BUFFER_USAGE_MICROMAP_STORAGE_BIT_EXT equ 16777216
    VK_BUFFER_USAGE_RAY_TRACING_BIT_NV equ 1024
    VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT equ 131072
    VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR equ 131072
    VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkBufferUsageFlagBits = enum VkBufferUsageFlagBits, TypeKind.ELABORATED
VkBufferUsageFlagBits typedef dword

; enum VkBufferUsageFlagBits {
    VK_BUFFER_USAGE_TRANSFER_SRC_BIT equ 1
    VK_BUFFER_USAGE_TRANSFER_DST_BIT equ 2
    VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT equ 4
    VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT equ 8
    VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT equ 16
    VK_BUFFER_USAGE_STORAGE_BUFFER_BIT equ 32
    VK_BUFFER_USAGE_INDEX_BUFFER_BIT equ 64
    VK_BUFFER_USAGE_VERTEX_BUFFER_BIT equ 128
    VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT equ 256
    VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT equ 131072
    VK_BUFFER_USAGE_VIDEO_DECODE_SRC_BIT_KHR equ 8192
    VK_BUFFER_USAGE_VIDEO_DECODE_DST_BIT_KHR equ 16384
    VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT equ 2048
    VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT equ 4096
    VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT equ 512
    VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR equ 524288
    VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR equ 1048576
    VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR equ 1024
    VK_BUFFER_USAGE_VIDEO_ENCODE_DST_BIT_KHR equ 32768
    VK_BUFFER_USAGE_VIDEO_ENCODE_SRC_BIT_KHR equ 65536
    VK_BUFFER_USAGE_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT equ 2097152
    VK_BUFFER_USAGE_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT equ 4194304
    VK_BUFFER_USAGE_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT equ 67108864
    VK_BUFFER_USAGE_MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT equ 8388608
    VK_BUFFER_USAGE_MICROMAP_STORAGE_BIT_EXT equ 16777216
    VK_BUFFER_USAGE_RAY_TRACING_BIT_NV equ 1024
    VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT equ 131072
    VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR equ 131072
    VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkBufferUsageFlags = VkFlags, TypeKind.ELABORATED
VkBufferUsageFlags typedef dword

; TYPEDEF VkBufferViewCreateFlags = VkFlags, TypeKind.ELABORATED
VkBufferViewCreateFlags typedef dword

; enum VkImageViewCreateFlagBits {
    VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT equ 1
    VK_IMAGE_VIEW_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT equ 4
    VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT equ 2
    VK_IMAGE_VIEW_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageViewCreateFlagBits = enum VkImageViewCreateFlagBits, TypeKind.ELABORATED
VkImageViewCreateFlagBits typedef dword

; enum VkImageViewCreateFlagBits {
    VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT equ 1
    VK_IMAGE_VIEW_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT equ 4
    VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT equ 2
    VK_IMAGE_VIEW_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkImageViewCreateFlags = VkFlags, TypeKind.ELABORATED
VkImageViewCreateFlags typedef dword

; TYPEDEF VkShaderModuleCreateFlags = VkFlags, TypeKind.ELABORATED
VkShaderModuleCreateFlags typedef dword

; enum VkPipelineCacheCreateFlagBits {
    VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT equ 1
    VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT equ 1
    VK_PIPELINE_CACHE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineCacheCreateFlagBits = enum VkPipelineCacheCreateFlagBits, TypeKind.ELABORATED
VkPipelineCacheCreateFlagBits typedef dword

; enum VkPipelineCacheCreateFlagBits {
    VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT equ 1
    VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT equ 1
    VK_PIPELINE_CACHE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineCacheCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineCacheCreateFlags typedef dword

; enum VkColorComponentFlagBits {
    VK_COLOR_COMPONENT_R_BIT equ 1
    VK_COLOR_COMPONENT_G_BIT equ 2
    VK_COLOR_COMPONENT_B_BIT equ 4
    VK_COLOR_COMPONENT_A_BIT equ 8
    VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkColorComponentFlagBits = enum VkColorComponentFlagBits, TypeKind.ELABORATED
VkColorComponentFlagBits typedef dword

; enum VkColorComponentFlagBits {
    VK_COLOR_COMPONENT_R_BIT equ 1
    VK_COLOR_COMPONENT_G_BIT equ 2
    VK_COLOR_COMPONENT_B_BIT equ 4
    VK_COLOR_COMPONENT_A_BIT equ 8
    VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkColorComponentFlags = VkFlags, TypeKind.ELABORATED
VkColorComponentFlags typedef dword

; enum VkPipelineCreateFlagBits {
    VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT equ 1
    VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT equ 2
    VK_PIPELINE_CREATE_DERIVATIVE_BIT equ 4
    VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT equ 8
    VK_PIPELINE_CREATE_DISPATCH_BASE_BIT equ 16
    VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT equ 256
    VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT equ 512
    VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR equ 2097152
    VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT equ 4194304
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR equ 16384
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR equ 32768
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR equ 65536
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR equ 131072
    VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR equ 4096
    VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR equ 8192
    VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR equ 524288
    VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV equ 32
    VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR equ 64
    VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR equ 128
    VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV equ 262144
    VK_PIPELINE_CREATE_LIBRARY_BIT_KHR equ 2048
    VK_PIPELINE_CREATE_DESCRIPTOR_BUFFER_BIT_EXT equ 536870912
    VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT equ 8388608
    VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT equ 1024
    VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV equ 1048576
    VK_PIPELINE_CREATE_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT equ 33554432
    VK_PIPELINE_CREATE_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT equ 67108864
    VK_PIPELINE_CREATE_RAY_TRACING_OPACITY_MICROMAP_BIT_EXT equ 16777216
    VK_PIPELINE_CREATE_NO_PROTECTED_ACCESS_BIT_EXT equ 134217728
    VK_PIPELINE_CREATE_PROTECTED_ACCESS_ONLY_BIT_EXT equ 1073741824
    VK_PIPELINE_CREATE_DISPATCH_BASE equ 16
    VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR equ 2097152
    VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT equ 4194304
    VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR equ 8
    VK_PIPELINE_CREATE_DISPATCH_BASE_KHR equ 16
    VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT equ 256
    VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT equ 512
    VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineCreateFlagBits = enum VkPipelineCreateFlagBits, TypeKind.ELABORATED
VkPipelineCreateFlagBits typedef dword

; enum VkPipelineCreateFlagBits {
    VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT equ 1
    VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT equ 2
    VK_PIPELINE_CREATE_DERIVATIVE_BIT equ 4
    VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT equ 8
    VK_PIPELINE_CREATE_DISPATCH_BASE_BIT equ 16
    VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT equ 256
    VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT equ 512
    VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR equ 2097152
    VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT equ 4194304
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR equ 16384
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR equ 32768
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR equ 65536
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR equ 131072
    VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR equ 4096
    VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR equ 8192
    VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR equ 524288
    VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV equ 32
    VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR equ 64
    VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR equ 128
    VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV equ 262144
    VK_PIPELINE_CREATE_LIBRARY_BIT_KHR equ 2048
    VK_PIPELINE_CREATE_DESCRIPTOR_BUFFER_BIT_EXT equ 536870912
    VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT equ 8388608
    VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT equ 1024
    VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV equ 1048576
    VK_PIPELINE_CREATE_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT equ 33554432
    VK_PIPELINE_CREATE_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT equ 67108864
    VK_PIPELINE_CREATE_RAY_TRACING_OPACITY_MICROMAP_BIT_EXT equ 16777216
    VK_PIPELINE_CREATE_NO_PROTECTED_ACCESS_BIT_EXT equ 134217728
    VK_PIPELINE_CREATE_PROTECTED_ACCESS_ONLY_BIT_EXT equ 1073741824
    VK_PIPELINE_CREATE_DISPATCH_BASE equ 16
    VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR equ 2097152
    VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT equ 4194304
    VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR equ 8
    VK_PIPELINE_CREATE_DISPATCH_BASE_KHR equ 16
    VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT equ 256
    VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT equ 512
    VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineCreateFlags typedef dword

; enum VkPipelineShaderStageCreateFlagBits {
    VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT equ 1
    VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT equ 2
    VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT equ 1
    VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT equ 2
    VK_PIPELINE_SHADER_STAGE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineShaderStageCreateFlagBits = enum VkPipelineShaderStageCreateFlagBits, TypeKind.ELABORATED
VkPipelineShaderStageCreateFlagBits typedef dword

; enum VkPipelineShaderStageCreateFlagBits {
    VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT equ 1
    VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT equ 2
    VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT equ 1
    VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT equ 2
    VK_PIPELINE_SHADER_STAGE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineShaderStageCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineShaderStageCreateFlags typedef dword

; enum VkShaderStageFlagBits {
    VK_SHADER_STAGE_VERTEX_BIT equ 1
    VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT equ 2
    VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT equ 4
    VK_SHADER_STAGE_GEOMETRY_BIT equ 8
    VK_SHADER_STAGE_FRAGMENT_BIT equ 16
    VK_SHADER_STAGE_COMPUTE_BIT equ 32
    VK_SHADER_STAGE_ALL_GRAPHICS equ 31
    VK_SHADER_STAGE_ALL equ 2147483647
    VK_SHADER_STAGE_RAYGEN_BIT_KHR equ 256
    VK_SHADER_STAGE_ANY_HIT_BIT_KHR equ 512
    VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR equ 1024
    VK_SHADER_STAGE_MISS_BIT_KHR equ 2048
    VK_SHADER_STAGE_INTERSECTION_BIT_KHR equ 4096
    VK_SHADER_STAGE_CALLABLE_BIT_KHR equ 8192
    VK_SHADER_STAGE_TASK_BIT_EXT equ 64
    VK_SHADER_STAGE_MESH_BIT_EXT equ 128
    VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI equ 16384
    VK_SHADER_STAGE_CLUSTER_CULLING_BIT_HUAWEI equ 524288
    VK_SHADER_STAGE_RAYGEN_BIT_NV equ 256
    VK_SHADER_STAGE_ANY_HIT_BIT_NV equ 512
    VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV equ 1024
    VK_SHADER_STAGE_MISS_BIT_NV equ 2048
    VK_SHADER_STAGE_INTERSECTION_BIT_NV equ 4096
    VK_SHADER_STAGE_CALLABLE_BIT_NV equ 8192
    VK_SHADER_STAGE_TASK_BIT_NV equ 64
    VK_SHADER_STAGE_MESH_BIT_NV equ 128
    VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkShaderStageFlagBits = enum VkShaderStageFlagBits, TypeKind.ELABORATED
VkShaderStageFlagBits typedef dword

; enum VkShaderStageFlagBits {
    VK_SHADER_STAGE_VERTEX_BIT equ 1
    VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT equ 2
    VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT equ 4
    VK_SHADER_STAGE_GEOMETRY_BIT equ 8
    VK_SHADER_STAGE_FRAGMENT_BIT equ 16
    VK_SHADER_STAGE_COMPUTE_BIT equ 32
    VK_SHADER_STAGE_ALL_GRAPHICS equ 31
    VK_SHADER_STAGE_ALL equ 2147483647
    VK_SHADER_STAGE_RAYGEN_BIT_KHR equ 256
    VK_SHADER_STAGE_ANY_HIT_BIT_KHR equ 512
    VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR equ 1024
    VK_SHADER_STAGE_MISS_BIT_KHR equ 2048
    VK_SHADER_STAGE_INTERSECTION_BIT_KHR equ 4096
    VK_SHADER_STAGE_CALLABLE_BIT_KHR equ 8192
    VK_SHADER_STAGE_TASK_BIT_EXT equ 64
    VK_SHADER_STAGE_MESH_BIT_EXT equ 128
    VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI equ 16384
    VK_SHADER_STAGE_CLUSTER_CULLING_BIT_HUAWEI equ 524288
    VK_SHADER_STAGE_RAYGEN_BIT_NV equ 256
    VK_SHADER_STAGE_ANY_HIT_BIT_NV equ 512
    VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV equ 1024
    VK_SHADER_STAGE_MISS_BIT_NV equ 2048
    VK_SHADER_STAGE_INTERSECTION_BIT_NV equ 4096
    VK_SHADER_STAGE_CALLABLE_BIT_NV equ 8192
    VK_SHADER_STAGE_TASK_BIT_NV equ 64
    VK_SHADER_STAGE_MESH_BIT_NV equ 128
    VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; enum VkCullModeFlagBits {
    VK_CULL_MODE_NONE equ 0
    VK_CULL_MODE_FRONT_BIT equ 1
    VK_CULL_MODE_BACK_BIT equ 2
    VK_CULL_MODE_FRONT_AND_BACK equ 3
    VK_CULL_MODE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCullModeFlagBits = enum VkCullModeFlagBits, TypeKind.ELABORATED
VkCullModeFlagBits typedef dword

; enum VkCullModeFlagBits {
    VK_CULL_MODE_NONE equ 0
    VK_CULL_MODE_FRONT_BIT equ 1
    VK_CULL_MODE_BACK_BIT equ 2
    VK_CULL_MODE_FRONT_AND_BACK equ 3
    VK_CULL_MODE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCullModeFlags = VkFlags, TypeKind.ELABORATED
VkCullModeFlags typedef dword

; TYPEDEF VkPipelineVertexInputStateCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineVertexInputStateCreateFlags typedef dword

; TYPEDEF VkPipelineInputAssemblyStateCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineInputAssemblyStateCreateFlags typedef dword

; TYPEDEF VkPipelineTessellationStateCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineTessellationStateCreateFlags typedef dword

; TYPEDEF VkPipelineViewportStateCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineViewportStateCreateFlags typedef dword

; TYPEDEF VkPipelineRasterizationStateCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineRasterizationStateCreateFlags typedef dword

; TYPEDEF VkPipelineMultisampleStateCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineMultisampleStateCreateFlags typedef dword

; enum VkPipelineDepthStencilStateCreateFlagBits {
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT equ 1
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT equ 2
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM equ 1
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM equ 2
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineDepthStencilStateCreateFlagBits = enum VkPipelineDepthStencilStateCreateFlagBits, TypeKind.ELABORATED
VkPipelineDepthStencilStateCreateFlagBits typedef dword

; enum VkPipelineDepthStencilStateCreateFlagBits {
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT equ 1
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT equ 2
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM equ 1
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM equ 2
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineDepthStencilStateCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineDepthStencilStateCreateFlags typedef dword

; enum VkPipelineColorBlendStateCreateFlagBits {
    VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT equ 1
    VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM equ 1
    VK_PIPELINE_COLOR_BLEND_STATE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineColorBlendStateCreateFlagBits = enum VkPipelineColorBlendStateCreateFlagBits, TypeKind.ELABORATED
VkPipelineColorBlendStateCreateFlagBits typedef dword

; enum VkPipelineColorBlendStateCreateFlagBits {
    VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT equ 1
    VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM equ 1
    VK_PIPELINE_COLOR_BLEND_STATE_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineColorBlendStateCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineColorBlendStateCreateFlags typedef dword

; TYPEDEF VkPipelineDynamicStateCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineDynamicStateCreateFlags typedef dword

; enum VkPipelineLayoutCreateFlagBits {
    VK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT equ 2
    VK_PIPELINE_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineLayoutCreateFlagBits = enum VkPipelineLayoutCreateFlagBits, TypeKind.ELABORATED
VkPipelineLayoutCreateFlagBits typedef dword

; enum VkPipelineLayoutCreateFlagBits {
    VK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT equ 2
    VK_PIPELINE_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineLayoutCreateFlags = VkFlags, TypeKind.ELABORATED
VkPipelineLayoutCreateFlags typedef dword

; TYPEDEF VkShaderStageFlags = VkFlags, TypeKind.ELABORATED
VkShaderStageFlags typedef dword

; enum VkSamplerCreateFlagBits {
    VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT equ 1
    VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT equ 2
    VK_SAMPLER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT equ 8
    VK_SAMPLER_CREATE_NON_SEAMLESS_CUBE_MAP_BIT_EXT equ 4
    VK_SAMPLER_CREATE_IMAGE_PROCESSING_BIT_QCOM equ 16
    VK_SAMPLER_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSamplerCreateFlagBits = enum VkSamplerCreateFlagBits, TypeKind.ELABORATED
VkSamplerCreateFlagBits typedef dword

; enum VkSamplerCreateFlagBits {
    VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT equ 1
    VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT equ 2
    VK_SAMPLER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT equ 8
    VK_SAMPLER_CREATE_NON_SEAMLESS_CUBE_MAP_BIT_EXT equ 4
    VK_SAMPLER_CREATE_IMAGE_PROCESSING_BIT_QCOM equ 16
    VK_SAMPLER_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSamplerCreateFlags = VkFlags, TypeKind.ELABORATED
VkSamplerCreateFlags typedef dword

; enum VkDescriptorPoolCreateFlagBits {
    VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT equ 1
    VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT equ 2
    VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_EXT equ 4
    VK_DESCRIPTOR_POOL_CREATE_ALLOW_OVERALLOCATION_SETS_BIT_NV equ 8
    VK_DESCRIPTOR_POOL_CREATE_ALLOW_OVERALLOCATION_POOLS_BIT_NV equ 16
    VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT equ 2
    VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE equ 4
    VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDescriptorPoolCreateFlagBits = enum VkDescriptorPoolCreateFlagBits, TypeKind.ELABORATED
VkDescriptorPoolCreateFlagBits typedef dword

; enum VkDescriptorPoolCreateFlagBits {
    VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT equ 1
    VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT equ 2
    VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_EXT equ 4
    VK_DESCRIPTOR_POOL_CREATE_ALLOW_OVERALLOCATION_SETS_BIT_NV equ 8
    VK_DESCRIPTOR_POOL_CREATE_ALLOW_OVERALLOCATION_POOLS_BIT_NV equ 16
    VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT equ 2
    VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE equ 4
    VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDescriptorPoolCreateFlags = VkFlags, TypeKind.ELABORATED
VkDescriptorPoolCreateFlags typedef dword

; TYPEDEF VkDescriptorPoolResetFlags = VkFlags, TypeKind.ELABORATED
VkDescriptorPoolResetFlags typedef dword

; enum VkDescriptorSetLayoutCreateFlagBits {
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT equ 2
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR equ 1
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_DESCRIPTOR_BUFFER_BIT_EXT equ 16
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_EMBEDDED_IMMUTABLE_SAMPLERS_BIT_EXT equ 32
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_INDIRECT_BINDABLE_BIT_NV equ 128
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_EXT equ 4
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_PER_STAGE_BIT_NV equ 64
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT equ 2
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE equ 4
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDescriptorSetLayoutCreateFlagBits = enum VkDescriptorSetLayoutCreateFlagBits, TypeKind.ELABORATED
VkDescriptorSetLayoutCreateFlagBits typedef dword

; enum VkDescriptorSetLayoutCreateFlagBits {
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT equ 2
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR equ 1
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_DESCRIPTOR_BUFFER_BIT_EXT equ 16
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_EMBEDDED_IMMUTABLE_SAMPLERS_BIT_EXT equ 32
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_INDIRECT_BINDABLE_BIT_NV equ 128
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_EXT equ 4
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_PER_STAGE_BIT_NV equ 64
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT equ 2
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE equ 4
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDescriptorSetLayoutCreateFlags = VkFlags, TypeKind.ELABORATED
VkDescriptorSetLayoutCreateFlags typedef dword

; enum VkAttachmentDescriptionFlagBits {
    VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT equ 1
    VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkAttachmentDescriptionFlagBits = enum VkAttachmentDescriptionFlagBits, TypeKind.ELABORATED
VkAttachmentDescriptionFlagBits typedef dword

; enum VkAttachmentDescriptionFlagBits {
    VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT equ 1
    VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkAttachmentDescriptionFlags = VkFlags, TypeKind.ELABORATED
VkAttachmentDescriptionFlags typedef dword

; enum VkDependencyFlagBits {
    VK_DEPENDENCY_BY_REGION_BIT equ 1
    VK_DEPENDENCY_DEVICE_GROUP_BIT equ 4
    VK_DEPENDENCY_VIEW_LOCAL_BIT equ 2
    VK_DEPENDENCY_FEEDBACK_LOOP_BIT_EXT equ 8
    VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR equ 2
    VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR equ 4
    VK_DEPENDENCY_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDependencyFlagBits = enum VkDependencyFlagBits, TypeKind.ELABORATED
VkDependencyFlagBits typedef dword

; enum VkDependencyFlagBits {
    VK_DEPENDENCY_BY_REGION_BIT equ 1
    VK_DEPENDENCY_DEVICE_GROUP_BIT equ 4
    VK_DEPENDENCY_VIEW_LOCAL_BIT equ 2
    VK_DEPENDENCY_FEEDBACK_LOOP_BIT_EXT equ 8
    VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR equ 2
    VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR equ 4
    VK_DEPENDENCY_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDependencyFlags = VkFlags, TypeKind.ELABORATED
VkDependencyFlags typedef dword

; enum VkFramebufferCreateFlagBits {
    VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT equ 1
    VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR equ 1
    VK_FRAMEBUFFER_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkFramebufferCreateFlagBits = enum VkFramebufferCreateFlagBits, TypeKind.ELABORATED
VkFramebufferCreateFlagBits typedef dword

; enum VkFramebufferCreateFlagBits {
    VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT equ 1
    VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR equ 1
    VK_FRAMEBUFFER_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkFramebufferCreateFlags = VkFlags, TypeKind.ELABORATED
VkFramebufferCreateFlags typedef dword

; enum VkRenderPassCreateFlagBits {
    VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM equ 2
    VK_RENDER_PASS_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkRenderPassCreateFlagBits = enum VkRenderPassCreateFlagBits, TypeKind.ELABORATED
VkRenderPassCreateFlagBits typedef dword

; enum VkRenderPassCreateFlagBits {
    VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM equ 2
    VK_RENDER_PASS_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkRenderPassCreateFlags = VkFlags, TypeKind.ELABORATED
VkRenderPassCreateFlags typedef dword

; enum VkSubpassDescriptionFlagBits {
    VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX equ 1
    VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX equ 2
    VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM equ 4
    VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM equ 8
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT equ 16
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT equ 32
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT equ 64
    VK_SUBPASS_DESCRIPTION_ENABLE_LEGACY_DITHERING_BIT_EXT equ 128
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM equ 16
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM equ 32
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM equ 64
    VK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSubpassDescriptionFlagBits = enum VkSubpassDescriptionFlagBits, TypeKind.ELABORATED
VkSubpassDescriptionFlagBits typedef dword

; enum VkSubpassDescriptionFlagBits {
    VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX equ 1
    VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX equ 2
    VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM equ 4
    VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM equ 8
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT equ 16
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT equ 32
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT equ 64
    VK_SUBPASS_DESCRIPTION_ENABLE_LEGACY_DITHERING_BIT_EXT equ 128
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM equ 16
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM equ 32
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM equ 64
    VK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSubpassDescriptionFlags = VkFlags, TypeKind.ELABORATED
VkSubpassDescriptionFlags typedef dword

; enum VkCommandPoolCreateFlagBits {
    VK_COMMAND_POOL_CREATE_TRANSIENT_BIT equ 1
    VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT equ 2
    VK_COMMAND_POOL_CREATE_PROTECTED_BIT equ 4
    VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCommandPoolCreateFlagBits = enum VkCommandPoolCreateFlagBits, TypeKind.ELABORATED
VkCommandPoolCreateFlagBits typedef dword

; enum VkCommandPoolCreateFlagBits {
    VK_COMMAND_POOL_CREATE_TRANSIENT_BIT equ 1
    VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT equ 2
    VK_COMMAND_POOL_CREATE_PROTECTED_BIT equ 4
    VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCommandPoolCreateFlags = VkFlags, TypeKind.ELABORATED
VkCommandPoolCreateFlags typedef dword

; enum VkCommandPoolResetFlagBits {
    VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT equ 1
    VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCommandPoolResetFlagBits = enum VkCommandPoolResetFlagBits, TypeKind.ELABORATED
VkCommandPoolResetFlagBits typedef dword

; enum VkCommandPoolResetFlagBits {
    VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT equ 1
    VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCommandPoolResetFlags = VkFlags, TypeKind.ELABORATED
VkCommandPoolResetFlags typedef dword

; enum VkCommandBufferUsageFlagBits {
    VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT equ 1
    VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT equ 2
    VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT equ 4
    VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCommandBufferUsageFlagBits = enum VkCommandBufferUsageFlagBits, TypeKind.ELABORATED
VkCommandBufferUsageFlagBits typedef dword

; enum VkCommandBufferUsageFlagBits {
    VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT equ 1
    VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT equ 2
    VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT equ 4
    VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCommandBufferUsageFlags = VkFlags, TypeKind.ELABORATED
VkCommandBufferUsageFlags typedef dword

; enum VkQueryControlFlagBits {
    VK_QUERY_CONTROL_PRECISE_BIT equ 1
    VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkQueryControlFlagBits = enum VkQueryControlFlagBits, TypeKind.ELABORATED
VkQueryControlFlagBits typedef dword

; enum VkQueryControlFlagBits {
    VK_QUERY_CONTROL_PRECISE_BIT equ 1
    VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkQueryControlFlags = VkFlags, TypeKind.ELABORATED
VkQueryControlFlags typedef dword

; enum VkCommandBufferResetFlagBits {
    VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT equ 1
    VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCommandBufferResetFlagBits = enum VkCommandBufferResetFlagBits, TypeKind.ELABORATED
VkCommandBufferResetFlagBits typedef dword

; enum VkCommandBufferResetFlagBits {
    VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT equ 1
    VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkCommandBufferResetFlags = VkFlags, TypeKind.ELABORATED
VkCommandBufferResetFlags typedef dword

; enum VkStencilFaceFlagBits {
    VK_STENCIL_FACE_FRONT_BIT equ 1
    VK_STENCIL_FACE_BACK_BIT equ 2
    VK_STENCIL_FACE_FRONT_AND_BACK equ 3
    VK_STENCIL_FRONT_AND_BACK equ 3
    VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkStencilFaceFlagBits = enum VkStencilFaceFlagBits, TypeKind.ELABORATED
VkStencilFaceFlagBits typedef dword

; enum VkStencilFaceFlagBits {
    VK_STENCIL_FACE_FRONT_BIT equ 1
    VK_STENCIL_FACE_BACK_BIT equ 2
    VK_STENCIL_FACE_FRONT_AND_BACK equ 3
    VK_STENCIL_FRONT_AND_BACK equ 3
    VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkStencilFaceFlags = VkFlags, TypeKind.ELABORATED
VkStencilFaceFlags typedef dword

VkExtent2D struct
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 0, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 4, size = 4
    height dword ?
VkExtent2D ends

; TYPEDEF VkExtent2D = struct VkExtent2D, TypeKind.ELABORATED
; remove struct typedef

VkExtent2D struct
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 0, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 4, size = 4
    height dword ?
VkExtent2D ends

VkExtent3D struct
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 0, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 4, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = depth, type = uint32_t, offset = 8, size = 4
    depth dword ?
VkExtent3D ends

; TYPEDEF VkExtent3D = struct VkExtent3D, TypeKind.ELABORATED
; remove struct typedef

VkExtent3D struct
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 0, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 4, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = depth, type = uint32_t, offset = 8, size = 4
    depth dword ?
VkExtent3D ends

VkOffset2D struct
;   TypeKind.ELABORATED
;   name = x, type = int32_t, offset = 0, size = 4
    x sdword ?
;   TypeKind.ELABORATED
;   name = y, type = int32_t, offset = 4, size = 4
    y sdword ?
VkOffset2D ends

; TYPEDEF VkOffset2D = struct VkOffset2D, TypeKind.ELABORATED
; remove struct typedef

VkOffset2D struct
;   TypeKind.ELABORATED
;   name = x, type = int32_t, offset = 0, size = 4
    x sdword ?
;   TypeKind.ELABORATED
;   name = y, type = int32_t, offset = 4, size = 4
    y sdword ?
VkOffset2D ends

VkOffset3D struct
;   TypeKind.ELABORATED
;   name = x, type = int32_t, offset = 0, size = 4
    x sdword ?
;   TypeKind.ELABORATED
;   name = y, type = int32_t, offset = 4, size = 4
    y sdword ?
;   TypeKind.ELABORATED
;   name = z, type = int32_t, offset = 8, size = 4
    z sdword ?
VkOffset3D ends

; TYPEDEF VkOffset3D = struct VkOffset3D, TypeKind.ELABORATED
; remove struct typedef

VkOffset3D struct
;   TypeKind.ELABORATED
;   name = x, type = int32_t, offset = 0, size = 4
    x sdword ?
;   TypeKind.ELABORATED
;   name = y, type = int32_t, offset = 4, size = 4
    y sdword ?
;   TypeKind.ELABORATED
;   name = z, type = int32_t, offset = 8, size = 4
    z sdword ?
VkOffset3D ends

VkRect2D struct
;   TypeKind.ELABORATED
;   name = offset, type = VkOffset2D, offset = 0, size = 8
    _offset VkOffset2D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent2D, offset = 8, size = 8
    extent VkExtent2D <>
VkRect2D ends

; TYPEDEF VkRect2D = struct VkRect2D, TypeKind.ELABORATED
; remove struct typedef

VkRect2D struct
;   TypeKind.ELABORATED
;   name = offset, type = VkOffset2D, offset = 0, size = 8
    _offset VkOffset2D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent2D, offset = 8, size = 8
    extent VkExtent2D <>
VkRect2D ends

VkBaseInStructure struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const struct VkBaseInStructure *, offset = 8, size = 8
    pNext qword ?
VkBaseInStructure ends

; TYPEDEF VkBaseInStructure = struct VkBaseInStructure, TypeKind.ELABORATED
; remove struct typedef

VkBaseInStructure struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const struct VkBaseInStructure *, offset = 8, size = 8
    pNext qword ?
VkBaseInStructure ends

VkBaseOutStructure struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = struct VkBaseOutStructure *, offset = 8, size = 8
    pNext qword ?
VkBaseOutStructure ends

; TYPEDEF VkBaseOutStructure = struct VkBaseOutStructure, TypeKind.ELABORATED
; remove struct typedef

VkBaseOutStructure struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = struct VkBaseOutStructure *, offset = 8, size = 8
    pNext qword ?
VkBaseOutStructure ends

VkBufferMemoryBarrier struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags, offset = 16, size = 4
    srcAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags, offset = 20, size = 4
    dstAccessMask dword ?
;   TypeKind.ELABORATED
;   name = srcQueueFamilyIndex, type = uint32_t, offset = 24, size = 4
    srcQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = dstQueueFamilyIndex, type = uint32_t, offset = 28, size = 4
    dstQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 32, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 40, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 48, size = 8
    _size VkDeviceSize <>
VkBufferMemoryBarrier ends

; TYPEDEF VkBufferMemoryBarrier = struct VkBufferMemoryBarrier, TypeKind.ELABORATED
; remove struct typedef

VkBufferMemoryBarrier struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags, offset = 16, size = 4
    srcAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags, offset = 20, size = 4
    dstAccessMask dword ?
;   TypeKind.ELABORATED
;   name = srcQueueFamilyIndex, type = uint32_t, offset = 24, size = 4
    srcQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = dstQueueFamilyIndex, type = uint32_t, offset = 28, size = 4
    dstQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 32, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 40, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 48, size = 8
    _size VkDeviceSize <>
VkBufferMemoryBarrier ends

VkDispatchIndirectCommand struct
;   TypeKind.ELABORATED
;   name = x, type = uint32_t, offset = 0, size = 4
    x dword ?
;   TypeKind.ELABORATED
;   name = y, type = uint32_t, offset = 4, size = 4
    y dword ?
;   TypeKind.ELABORATED
;   name = z, type = uint32_t, offset = 8, size = 4
    z dword ?
VkDispatchIndirectCommand ends

; TYPEDEF VkDispatchIndirectCommand = struct VkDispatchIndirectCommand, TypeKind.ELABORATED
; remove struct typedef

VkDispatchIndirectCommand struct
;   TypeKind.ELABORATED
;   name = x, type = uint32_t, offset = 0, size = 4
    x dword ?
;   TypeKind.ELABORATED
;   name = y, type = uint32_t, offset = 4, size = 4
    y dword ?
;   TypeKind.ELABORATED
;   name = z, type = uint32_t, offset = 8, size = 4
    z dword ?
VkDispatchIndirectCommand ends

VkDrawIndexedIndirectCommand struct
;   TypeKind.ELABORATED
;   name = indexCount, type = uint32_t, offset = 0, size = 4
    indexCount dword ?
;   TypeKind.ELABORATED
;   name = instanceCount, type = uint32_t, offset = 4, size = 4
    instanceCount dword ?
;   TypeKind.ELABORATED
;   name = firstIndex, type = uint32_t, offset = 8, size = 4
    firstIndex dword ?
;   TypeKind.ELABORATED
;   name = vertexOffset, type = int32_t, offset = 12, size = 4
    vertexOffset sdword ?
;   TypeKind.ELABORATED
;   name = firstInstance, type = uint32_t, offset = 16, size = 4
    firstInstance dword ?
VkDrawIndexedIndirectCommand ends

; TYPEDEF VkDrawIndexedIndirectCommand = struct VkDrawIndexedIndirectCommand, TypeKind.ELABORATED
; remove struct typedef

VkDrawIndexedIndirectCommand struct
;   TypeKind.ELABORATED
;   name = indexCount, type = uint32_t, offset = 0, size = 4
    indexCount dword ?
;   TypeKind.ELABORATED
;   name = instanceCount, type = uint32_t, offset = 4, size = 4
    instanceCount dword ?
;   TypeKind.ELABORATED
;   name = firstIndex, type = uint32_t, offset = 8, size = 4
    firstIndex dword ?
;   TypeKind.ELABORATED
;   name = vertexOffset, type = int32_t, offset = 12, size = 4
    vertexOffset sdword ?
;   TypeKind.ELABORATED
;   name = firstInstance, type = uint32_t, offset = 16, size = 4
    firstInstance dword ?
VkDrawIndexedIndirectCommand ends

VkDrawIndirectCommand struct
;   TypeKind.ELABORATED
;   name = vertexCount, type = uint32_t, offset = 0, size = 4
    vertexCount dword ?
;   TypeKind.ELABORATED
;   name = instanceCount, type = uint32_t, offset = 4, size = 4
    instanceCount dword ?
;   TypeKind.ELABORATED
;   name = firstVertex, type = uint32_t, offset = 8, size = 4
    firstVertex dword ?
;   TypeKind.ELABORATED
;   name = firstInstance, type = uint32_t, offset = 12, size = 4
    firstInstance dword ?
VkDrawIndirectCommand ends

; TYPEDEF VkDrawIndirectCommand = struct VkDrawIndirectCommand, TypeKind.ELABORATED
; remove struct typedef

VkDrawIndirectCommand struct
;   TypeKind.ELABORATED
;   name = vertexCount, type = uint32_t, offset = 0, size = 4
    vertexCount dword ?
;   TypeKind.ELABORATED
;   name = instanceCount, type = uint32_t, offset = 4, size = 4
    instanceCount dword ?
;   TypeKind.ELABORATED
;   name = firstVertex, type = uint32_t, offset = 8, size = 4
    firstVertex dword ?
;   TypeKind.ELABORATED
;   name = firstInstance, type = uint32_t, offset = 12, size = 4
    firstInstance dword ?
VkDrawIndirectCommand ends

VkImageSubresourceRange struct
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 0, size = 4
    aspectMask VkImageAspectFlags <>
;   TypeKind.ELABORATED
;   name = baseMipLevel, type = uint32_t, offset = 4, size = 4
    baseMipLevel dword ?
;   TypeKind.ELABORATED
;   name = levelCount, type = uint32_t, offset = 8, size = 4
    levelCount dword ?
;   TypeKind.ELABORATED
;   name = baseArrayLayer, type = uint32_t, offset = 12, size = 4
    baseArrayLayer dword ?
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 16, size = 4
    layerCount dword ?
VkImageSubresourceRange ends

; TYPEDEF VkImageSubresourceRange = struct VkImageSubresourceRange, TypeKind.ELABORATED
; remove struct typedef

VkImageSubresourceRange struct
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 0, size = 4
    aspectMask VkImageAspectFlags <>
;   TypeKind.ELABORATED
;   name = baseMipLevel, type = uint32_t, offset = 4, size = 4
    baseMipLevel dword ?
;   TypeKind.ELABORATED
;   name = levelCount, type = uint32_t, offset = 8, size = 4
    levelCount dword ?
;   TypeKind.ELABORATED
;   name = baseArrayLayer, type = uint32_t, offset = 12, size = 4
    baseArrayLayer dword ?
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 16, size = 4
    layerCount dword ?
VkImageSubresourceRange ends

VkImageMemoryBarrier struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags, offset = 16, size = 4
    srcAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags, offset = 20, size = 4
    dstAccessMask dword ?
;   TypeKind.ELABORATED
;   name = oldLayout, type = VkImageLayout, offset = 24, size = 4
    oldLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = newLayout, type = VkImageLayout, offset = 28, size = 4
    newLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = srcQueueFamilyIndex, type = uint32_t, offset = 32, size = 4
    srcQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = dstQueueFamilyIndex, type = uint32_t, offset = 36, size = 4
    dstQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 40, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = subresourceRange, type = VkImageSubresourceRange, offset = 48, size = 20
    subresourceRange VkImageSubresourceRange <>
VkImageMemoryBarrier ends

; TYPEDEF VkImageMemoryBarrier = struct VkImageMemoryBarrier, TypeKind.ELABORATED
; remove struct typedef

VkImageMemoryBarrier struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags, offset = 16, size = 4
    srcAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags, offset = 20, size = 4
    dstAccessMask dword ?
;   TypeKind.ELABORATED
;   name = oldLayout, type = VkImageLayout, offset = 24, size = 4
    oldLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = newLayout, type = VkImageLayout, offset = 28, size = 4
    newLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = srcQueueFamilyIndex, type = uint32_t, offset = 32, size = 4
    srcQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = dstQueueFamilyIndex, type = uint32_t, offset = 36, size = 4
    dstQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 40, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = subresourceRange, type = VkImageSubresourceRange, offset = 48, size = 20
    subresourceRange VkImageSubresourceRange <>
VkImageMemoryBarrier ends

VkMemoryBarrier struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags, offset = 16, size = 4
    srcAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags, offset = 20, size = 4
    dstAccessMask dword ?
VkMemoryBarrier ends

; TYPEDEF VkMemoryBarrier = struct VkMemoryBarrier, TypeKind.ELABORATED
; remove struct typedef

VkMemoryBarrier struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags, offset = 16, size = 4
    srcAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags, offset = 20, size = 4
    dstAccessMask dword ?
VkMemoryBarrier ends

VkPipelineCacheHeaderVersionOne struct
;   TypeKind.ELABORATED
;   name = headerSize, type = uint32_t, offset = 0, size = 4
    headerSize dword ?
;   TypeKind.ELABORATED
;   name = headerVersion, type = VkPipelineCacheHeaderVersion, offset = 4, size = 4
    headerVersion VkPipelineCacheHeaderVersion <>
;   TypeKind.ELABORATED
;   name = vendorID, type = uint32_t, offset = 8, size = 4
    vendorID dword ?
;   TypeKind.ELABORATED
;   name = deviceID, type = uint32_t, offset = 12, size = 4
    deviceID dword ?
;   TypeKind.CONSTANTARRAY
;   name = pipelineCacheUUID, type = uint8_t[16], offset = 16, size = 16
    pipelineCacheUUID byte 16 dup(?)
VkPipelineCacheHeaderVersionOne ends

; TYPEDEF VkPipelineCacheHeaderVersionOne = struct VkPipelineCacheHeaderVersionOne, TypeKind.ELABORATED
; remove struct typedef

VkPipelineCacheHeaderVersionOne struct
;   TypeKind.ELABORATED
;   name = headerSize, type = uint32_t, offset = 0, size = 4
    headerSize dword ?
;   TypeKind.ELABORATED
;   name = headerVersion, type = VkPipelineCacheHeaderVersion, offset = 4, size = 4
    headerVersion VkPipelineCacheHeaderVersion <>
;   TypeKind.ELABORATED
;   name = vendorID, type = uint32_t, offset = 8, size = 4
    vendorID dword ?
;   TypeKind.ELABORATED
;   name = deviceID, type = uint32_t, offset = 12, size = 4
    deviceID dword ?
;   TypeKind.CONSTANTARRAY
;   name = pipelineCacheUUID, type = uint8_t[16], offset = 16, size = 16
    pipelineCacheUUID byte 16 dup(?)
VkPipelineCacheHeaderVersionOne ends

; TYPEDEF PFN_vkAllocationFunction = void *(*)(void *, size_t, size_t, VkSystemAllocationScope) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkAllocationFunction typedef qword

; TYPEDEF PFN_vkFreeFunction = void (*)(void *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkFreeFunction typedef qword

; TYPEDEF PFN_vkInternalAllocationNotification = void (*)(void *, size_t, VkInternalAllocationType, VkSystemAllocationScope) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkInternalAllocationNotification typedef qword

; TYPEDEF PFN_vkInternalFreeNotification = void (*)(void *, size_t, VkInternalAllocationType, VkSystemAllocationScope) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkInternalFreeNotification typedef qword

; TYPEDEF PFN_vkReallocationFunction = void *(*)(void *, void *, size_t, size_t, VkSystemAllocationScope) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkReallocationFunction typedef qword

; TYPEDEF PFN_vkVoidFunction = void (*)(void) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkVoidFunction typedef qword

VkAllocationCallbacks struct
;   TypeKind.POINTER
;   name = pUserData, type = void *, offset = 0, size = 8
    pUserData qword ?
;   TypeKind.ELABORATED
;   name = pfnAllocation, type = PFN_vkAllocationFunction, offset = 8, size = 8
    pfnAllocation PFN_vkAllocationFunction <>
;   TypeKind.ELABORATED
;   name = pfnReallocation, type = PFN_vkReallocationFunction, offset = 16, size = 8
    pfnReallocation PFN_vkReallocationFunction <>
;   TypeKind.ELABORATED
;   name = pfnFree, type = PFN_vkFreeFunction, offset = 24, size = 8
    pfnFree PFN_vkFreeFunction <>
;   TypeKind.ELABORATED
;   name = pfnInternalAllocation, type = PFN_vkInternalAllocationNotification, offset = 32, size = 8
    pfnInternalAllocation PFN_vkInternalAllocationNotification <>
;   TypeKind.ELABORATED
;   name = pfnInternalFree, type = PFN_vkInternalFreeNotification, offset = 40, size = 8
    pfnInternalFree PFN_vkInternalFreeNotification <>
VkAllocationCallbacks ends

; TYPEDEF VkAllocationCallbacks = struct VkAllocationCallbacks, TypeKind.ELABORATED
; remove struct typedef

VkAllocationCallbacks struct
;   TypeKind.POINTER
;   name = pUserData, type = void *, offset = 0, size = 8
    pUserData qword ?
;   TypeKind.ELABORATED
;   name = pfnAllocation, type = PFN_vkAllocationFunction, offset = 8, size = 8
    pfnAllocation PFN_vkAllocationFunction <>
;   TypeKind.ELABORATED
;   name = pfnReallocation, type = PFN_vkReallocationFunction, offset = 16, size = 8
    pfnReallocation PFN_vkReallocationFunction <>
;   TypeKind.ELABORATED
;   name = pfnFree, type = PFN_vkFreeFunction, offset = 24, size = 8
    pfnFree PFN_vkFreeFunction <>
;   TypeKind.ELABORATED
;   name = pfnInternalAllocation, type = PFN_vkInternalAllocationNotification, offset = 32, size = 8
    pfnInternalAllocation PFN_vkInternalAllocationNotification <>
;   TypeKind.ELABORATED
;   name = pfnInternalFree, type = PFN_vkInternalFreeNotification, offset = 40, size = 8
    pfnInternalFree PFN_vkInternalFreeNotification <>
VkAllocationCallbacks ends

VkApplicationInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pApplicationName, type = const char *, offset = 16, size = 8
    pApplicationName qword ?
;   TypeKind.ELABORATED
;   name = applicationVersion, type = uint32_t, offset = 24, size = 4
    applicationVersion dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pEngineName, type = const char *, offset = 32, size = 8
    pEngineName qword ?
;   TypeKind.ELABORATED
;   name = engineVersion, type = uint32_t, offset = 40, size = 4
    engineVersion dword ?
;   TypeKind.ELABORATED
;   name = apiVersion, type = uint32_t, offset = 44, size = 4
    apiVersion dword ?
VkApplicationInfo ends

; TYPEDEF VkApplicationInfo = struct VkApplicationInfo, TypeKind.ELABORATED
; remove struct typedef

VkApplicationInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pApplicationName, type = const char *, offset = 16, size = 8
    pApplicationName qword ?
;   TypeKind.ELABORATED
;   name = applicationVersion, type = uint32_t, offset = 24, size = 4
    applicationVersion dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pEngineName, type = const char *, offset = 32, size = 8
    pEngineName qword ?
;   TypeKind.ELABORATED
;   name = engineVersion, type = uint32_t, offset = 40, size = 4
    engineVersion dword ?
;   TypeKind.ELABORATED
;   name = apiVersion, type = uint32_t, offset = 44, size = 4
    apiVersion dword ?
VkApplicationInfo ends

VkFormatProperties struct
;   TypeKind.ELABORATED
;   name = linearTilingFeatures, type = VkFormatFeatureFlags, offset = 0, size = 4
    linearTilingFeatures dword ?
;   TypeKind.ELABORATED
;   name = optimalTilingFeatures, type = VkFormatFeatureFlags, offset = 4, size = 4
    optimalTilingFeatures dword ?
;   TypeKind.ELABORATED
;   name = bufferFeatures, type = VkFormatFeatureFlags, offset = 8, size = 4
    bufferFeatures dword ?
VkFormatProperties ends

; TYPEDEF VkFormatProperties = struct VkFormatProperties, TypeKind.ELABORATED
; remove struct typedef

VkFormatProperties struct
;   TypeKind.ELABORATED
;   name = linearTilingFeatures, type = VkFormatFeatureFlags, offset = 0, size = 4
    linearTilingFeatures dword ?
;   TypeKind.ELABORATED
;   name = optimalTilingFeatures, type = VkFormatFeatureFlags, offset = 4, size = 4
    optimalTilingFeatures dword ?
;   TypeKind.ELABORATED
;   name = bufferFeatures, type = VkFormatFeatureFlags, offset = 8, size = 4
    bufferFeatures dword ?
VkFormatProperties ends

VkImageFormatProperties struct
;   TypeKind.ELABORATED
;   name = maxExtent, type = VkExtent3D, offset = 0, size = 12
    maxExtent VkExtent3D <>
;   TypeKind.ELABORATED
;   name = maxMipLevels, type = uint32_t, offset = 12, size = 4
    maxMipLevels dword ?
;   TypeKind.ELABORATED
;   name = maxArrayLayers, type = uint32_t, offset = 16, size = 4
    maxArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = sampleCounts, type = VkSampleCountFlags, offset = 20, size = 4
    sampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = maxResourceSize, type = VkDeviceSize, offset = 24, size = 8
    maxResourceSize VkDeviceSize <>
VkImageFormatProperties ends

; TYPEDEF VkImageFormatProperties = struct VkImageFormatProperties, TypeKind.ELABORATED
; remove struct typedef

VkImageFormatProperties struct
;   TypeKind.ELABORATED
;   name = maxExtent, type = VkExtent3D, offset = 0, size = 12
    maxExtent VkExtent3D <>
;   TypeKind.ELABORATED
;   name = maxMipLevels, type = uint32_t, offset = 12, size = 4
    maxMipLevels dword ?
;   TypeKind.ELABORATED
;   name = maxArrayLayers, type = uint32_t, offset = 16, size = 4
    maxArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = sampleCounts, type = VkSampleCountFlags, offset = 20, size = 4
    sampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = maxResourceSize, type = VkDeviceSize, offset = 24, size = 8
    maxResourceSize VkDeviceSize <>
VkImageFormatProperties ends

VkInstanceCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkInstanceCreateFlags, offset = 16, size = 4
    flags VkInstanceCreateFlags <>
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pApplicationInfo, type = const VkApplicationInfo *, offset = 24, size = 8
    pApplicationInfo qword ?
;   TypeKind.ELABORATED
;   name = enabledLayerCount, type = uint32_t, offset = 32, size = 4
    enabledLayerCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = ppEnabledLayerNames, type = const char *const *, offset = 40, size = 8
    ppEnabledLayerNames qword ?
;   TypeKind.ELABORATED
;   name = enabledExtensionCount, type = uint32_t, offset = 48, size = 4
    enabledExtensionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = ppEnabledExtensionNames, type = const char *const *, offset = 56, size = 8
    ppEnabledExtensionNames qword ?
VkInstanceCreateInfo ends

; TYPEDEF VkInstanceCreateInfo = struct VkInstanceCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkInstanceCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkInstanceCreateFlags, offset = 16, size = 4
    flags VkInstanceCreateFlags <>
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pApplicationInfo, type = const VkApplicationInfo *, offset = 24, size = 8
    pApplicationInfo qword ?
;   TypeKind.ELABORATED
;   name = enabledLayerCount, type = uint32_t, offset = 32, size = 4
    enabledLayerCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = ppEnabledLayerNames, type = const char *const *, offset = 40, size = 8
    ppEnabledLayerNames qword ?
;   TypeKind.ELABORATED
;   name = enabledExtensionCount, type = uint32_t, offset = 48, size = 4
    enabledExtensionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = ppEnabledExtensionNames, type = const char *const *, offset = 56, size = 8
    ppEnabledExtensionNames qword ?
VkInstanceCreateInfo ends

VkMemoryHeap struct
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 0, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = flags, type = VkMemoryHeapFlags, offset = 8, size = 4
    flags VkMemoryHeapFlags <>
VkMemoryHeap ends

; TYPEDEF VkMemoryHeap = struct VkMemoryHeap, TypeKind.ELABORATED
; remove struct typedef

VkMemoryHeap struct
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 0, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = flags, type = VkMemoryHeapFlags, offset = 8, size = 4
    flags VkMemoryHeapFlags <>
VkMemoryHeap ends

VkMemoryType struct
;   TypeKind.ELABORATED
;   name = propertyFlags, type = VkMemoryPropertyFlags, offset = 0, size = 4
    propertyFlags VkMemoryPropertyFlags <>
;   TypeKind.ELABORATED
;   name = heapIndex, type = uint32_t, offset = 4, size = 4
    heapIndex dword ?
VkMemoryType ends

; TYPEDEF VkMemoryType = struct VkMemoryType, TypeKind.ELABORATED
; remove struct typedef

VkMemoryType struct
;   TypeKind.ELABORATED
;   name = propertyFlags, type = VkMemoryPropertyFlags, offset = 0, size = 4
    propertyFlags VkMemoryPropertyFlags <>
;   TypeKind.ELABORATED
;   name = heapIndex, type = uint32_t, offset = 4, size = 4
    heapIndex dword ?
VkMemoryType ends

VkPhysicalDeviceFeatures struct
;   TypeKind.ELABORATED
;   name = robustBufferAccess, type = VkBool32, offset = 0, size = 4
    robustBufferAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = fullDrawIndexUint32, type = VkBool32, offset = 4, size = 4
    fullDrawIndexUint32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = imageCubeArray, type = VkBool32, offset = 8, size = 4
    imageCubeArray VkBool32 <>
;   TypeKind.ELABORATED
;   name = independentBlend, type = VkBool32, offset = 12, size = 4
    independentBlend VkBool32 <>
;   TypeKind.ELABORATED
;   name = geometryShader, type = VkBool32, offset = 16, size = 4
    geometryShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = tessellationShader, type = VkBool32, offset = 20, size = 4
    tessellationShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = sampleRateShading, type = VkBool32, offset = 24, size = 4
    sampleRateShading VkBool32 <>
;   TypeKind.ELABORATED
;   name = dualSrcBlend, type = VkBool32, offset = 28, size = 4
    dualSrcBlend VkBool32 <>
;   TypeKind.ELABORATED
;   name = logicOp, type = VkBool32, offset = 32, size = 4
    logicOp VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiDrawIndirect, type = VkBool32, offset = 36, size = 4
    multiDrawIndirect VkBool32 <>
;   TypeKind.ELABORATED
;   name = drawIndirectFirstInstance, type = VkBool32, offset = 40, size = 4
    drawIndirectFirstInstance VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthClamp, type = VkBool32, offset = 44, size = 4
    depthClamp VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthBiasClamp, type = VkBool32, offset = 48, size = 4
    depthBiasClamp VkBool32 <>
;   TypeKind.ELABORATED
;   name = fillModeNonSolid, type = VkBool32, offset = 52, size = 4
    fillModeNonSolid VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthBounds, type = VkBool32, offset = 56, size = 4
    depthBounds VkBool32 <>
;   TypeKind.ELABORATED
;   name = wideLines, type = VkBool32, offset = 60, size = 4
    wideLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = largePoints, type = VkBool32, offset = 64, size = 4
    largePoints VkBool32 <>
;   TypeKind.ELABORATED
;   name = alphaToOne, type = VkBool32, offset = 68, size = 4
    alphaToOne VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiViewport, type = VkBool32, offset = 72, size = 4
    multiViewport VkBool32 <>
;   TypeKind.ELABORATED
;   name = samplerAnisotropy, type = VkBool32, offset = 76, size = 4
    samplerAnisotropy VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureCompressionETC2, type = VkBool32, offset = 80, size = 4
    textureCompressionETC2 VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureCompressionASTC_LDR, type = VkBool32, offset = 84, size = 4
    textureCompressionASTC_LDR VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureCompressionBC, type = VkBool32, offset = 88, size = 4
    textureCompressionBC VkBool32 <>
;   TypeKind.ELABORATED
;   name = occlusionQueryPrecise, type = VkBool32, offset = 92, size = 4
    occlusionQueryPrecise VkBool32 <>
;   TypeKind.ELABORATED
;   name = pipelineStatisticsQuery, type = VkBool32, offset = 96, size = 4
    pipelineStatisticsQuery VkBool32 <>
;   TypeKind.ELABORATED
;   name = vertexPipelineStoresAndAtomics, type = VkBool32, offset = 100, size = 4
    vertexPipelineStoresAndAtomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentStoresAndAtomics, type = VkBool32, offset = 104, size = 4
    fragmentStoresAndAtomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTessellationAndGeometryPointSize, type = VkBool32, offset = 108, size = 4
    shaderTessellationAndGeometryPointSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderImageGatherExtended, type = VkBool32, offset = 112, size = 4
    shaderImageGatherExtended VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageExtendedFormats, type = VkBool32, offset = 116, size = 4
    shaderStorageImageExtendedFormats VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageMultisample, type = VkBool32, offset = 120, size = 4
    shaderStorageImageMultisample VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageReadWithoutFormat, type = VkBool32, offset = 124, size = 4
    shaderStorageImageReadWithoutFormat VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageWriteWithoutFormat, type = VkBool32, offset = 128, size = 4
    shaderStorageImageWriteWithoutFormat VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformBufferArrayDynamicIndexing, type = VkBool32, offset = 132, size = 4
    shaderUniformBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSampledImageArrayDynamicIndexing, type = VkBool32, offset = 136, size = 4
    shaderSampledImageArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageBufferArrayDynamicIndexing, type = VkBool32, offset = 140, size = 4
    shaderStorageBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageArrayDynamicIndexing, type = VkBool32, offset = 144, size = 4
    shaderStorageImageArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderClipDistance, type = VkBool32, offset = 148, size = 4
    shaderClipDistance VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderCullDistance, type = VkBool32, offset = 152, size = 4
    shaderCullDistance VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderFloat64, type = VkBool32, offset = 156, size = 4
    shaderFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInt64, type = VkBool32, offset = 160, size = 4
    shaderInt64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInt16, type = VkBool32, offset = 164, size = 4
    shaderInt16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderResourceResidency, type = VkBool32, offset = 168, size = 4
    shaderResourceResidency VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderResourceMinLod, type = VkBool32, offset = 172, size = 4
    shaderResourceMinLod VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseBinding, type = VkBool32, offset = 176, size = 4
    sparseBinding VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidencyBuffer, type = VkBool32, offset = 180, size = 4
    sparseResidencyBuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidencyImage2D, type = VkBool32, offset = 184, size = 4
    sparseResidencyImage2D VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidencyImage3D, type = VkBool32, offset = 188, size = 4
    sparseResidencyImage3D VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidency2Samples, type = VkBool32, offset = 192, size = 4
    sparseResidency2Samples VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidency4Samples, type = VkBool32, offset = 196, size = 4
    sparseResidency4Samples VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidency8Samples, type = VkBool32, offset = 200, size = 4
    sparseResidency8Samples VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidency16Samples, type = VkBool32, offset = 204, size = 4
    sparseResidency16Samples VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidencyAliased, type = VkBool32, offset = 208, size = 4
    sparseResidencyAliased VkBool32 <>
;   TypeKind.ELABORATED
;   name = variableMultisampleRate, type = VkBool32, offset = 212, size = 4
    variableMultisampleRate VkBool32 <>
;   TypeKind.ELABORATED
;   name = inheritedQueries, type = VkBool32, offset = 216, size = 4
    inheritedQueries VkBool32 <>
VkPhysicalDeviceFeatures ends

; TYPEDEF VkPhysicalDeviceFeatures = struct VkPhysicalDeviceFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFeatures struct
;   TypeKind.ELABORATED
;   name = robustBufferAccess, type = VkBool32, offset = 0, size = 4
    robustBufferAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = fullDrawIndexUint32, type = VkBool32, offset = 4, size = 4
    fullDrawIndexUint32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = imageCubeArray, type = VkBool32, offset = 8, size = 4
    imageCubeArray VkBool32 <>
;   TypeKind.ELABORATED
;   name = independentBlend, type = VkBool32, offset = 12, size = 4
    independentBlend VkBool32 <>
;   TypeKind.ELABORATED
;   name = geometryShader, type = VkBool32, offset = 16, size = 4
    geometryShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = tessellationShader, type = VkBool32, offset = 20, size = 4
    tessellationShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = sampleRateShading, type = VkBool32, offset = 24, size = 4
    sampleRateShading VkBool32 <>
;   TypeKind.ELABORATED
;   name = dualSrcBlend, type = VkBool32, offset = 28, size = 4
    dualSrcBlend VkBool32 <>
;   TypeKind.ELABORATED
;   name = logicOp, type = VkBool32, offset = 32, size = 4
    logicOp VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiDrawIndirect, type = VkBool32, offset = 36, size = 4
    multiDrawIndirect VkBool32 <>
;   TypeKind.ELABORATED
;   name = drawIndirectFirstInstance, type = VkBool32, offset = 40, size = 4
    drawIndirectFirstInstance VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthClamp, type = VkBool32, offset = 44, size = 4
    depthClamp VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthBiasClamp, type = VkBool32, offset = 48, size = 4
    depthBiasClamp VkBool32 <>
;   TypeKind.ELABORATED
;   name = fillModeNonSolid, type = VkBool32, offset = 52, size = 4
    fillModeNonSolid VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthBounds, type = VkBool32, offset = 56, size = 4
    depthBounds VkBool32 <>
;   TypeKind.ELABORATED
;   name = wideLines, type = VkBool32, offset = 60, size = 4
    wideLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = largePoints, type = VkBool32, offset = 64, size = 4
    largePoints VkBool32 <>
;   TypeKind.ELABORATED
;   name = alphaToOne, type = VkBool32, offset = 68, size = 4
    alphaToOne VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiViewport, type = VkBool32, offset = 72, size = 4
    multiViewport VkBool32 <>
;   TypeKind.ELABORATED
;   name = samplerAnisotropy, type = VkBool32, offset = 76, size = 4
    samplerAnisotropy VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureCompressionETC2, type = VkBool32, offset = 80, size = 4
    textureCompressionETC2 VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureCompressionASTC_LDR, type = VkBool32, offset = 84, size = 4
    textureCompressionASTC_LDR VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureCompressionBC, type = VkBool32, offset = 88, size = 4
    textureCompressionBC VkBool32 <>
;   TypeKind.ELABORATED
;   name = occlusionQueryPrecise, type = VkBool32, offset = 92, size = 4
    occlusionQueryPrecise VkBool32 <>
;   TypeKind.ELABORATED
;   name = pipelineStatisticsQuery, type = VkBool32, offset = 96, size = 4
    pipelineStatisticsQuery VkBool32 <>
;   TypeKind.ELABORATED
;   name = vertexPipelineStoresAndAtomics, type = VkBool32, offset = 100, size = 4
    vertexPipelineStoresAndAtomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentStoresAndAtomics, type = VkBool32, offset = 104, size = 4
    fragmentStoresAndAtomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTessellationAndGeometryPointSize, type = VkBool32, offset = 108, size = 4
    shaderTessellationAndGeometryPointSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderImageGatherExtended, type = VkBool32, offset = 112, size = 4
    shaderImageGatherExtended VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageExtendedFormats, type = VkBool32, offset = 116, size = 4
    shaderStorageImageExtendedFormats VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageMultisample, type = VkBool32, offset = 120, size = 4
    shaderStorageImageMultisample VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageReadWithoutFormat, type = VkBool32, offset = 124, size = 4
    shaderStorageImageReadWithoutFormat VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageWriteWithoutFormat, type = VkBool32, offset = 128, size = 4
    shaderStorageImageWriteWithoutFormat VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformBufferArrayDynamicIndexing, type = VkBool32, offset = 132, size = 4
    shaderUniformBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSampledImageArrayDynamicIndexing, type = VkBool32, offset = 136, size = 4
    shaderSampledImageArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageBufferArrayDynamicIndexing, type = VkBool32, offset = 140, size = 4
    shaderStorageBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageArrayDynamicIndexing, type = VkBool32, offset = 144, size = 4
    shaderStorageImageArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderClipDistance, type = VkBool32, offset = 148, size = 4
    shaderClipDistance VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderCullDistance, type = VkBool32, offset = 152, size = 4
    shaderCullDistance VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderFloat64, type = VkBool32, offset = 156, size = 4
    shaderFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInt64, type = VkBool32, offset = 160, size = 4
    shaderInt64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInt16, type = VkBool32, offset = 164, size = 4
    shaderInt16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderResourceResidency, type = VkBool32, offset = 168, size = 4
    shaderResourceResidency VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderResourceMinLod, type = VkBool32, offset = 172, size = 4
    shaderResourceMinLod VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseBinding, type = VkBool32, offset = 176, size = 4
    sparseBinding VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidencyBuffer, type = VkBool32, offset = 180, size = 4
    sparseResidencyBuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidencyImage2D, type = VkBool32, offset = 184, size = 4
    sparseResidencyImage2D VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidencyImage3D, type = VkBool32, offset = 188, size = 4
    sparseResidencyImage3D VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidency2Samples, type = VkBool32, offset = 192, size = 4
    sparseResidency2Samples VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidency4Samples, type = VkBool32, offset = 196, size = 4
    sparseResidency4Samples VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidency8Samples, type = VkBool32, offset = 200, size = 4
    sparseResidency8Samples VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidency16Samples, type = VkBool32, offset = 204, size = 4
    sparseResidency16Samples VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseResidencyAliased, type = VkBool32, offset = 208, size = 4
    sparseResidencyAliased VkBool32 <>
;   TypeKind.ELABORATED
;   name = variableMultisampleRate, type = VkBool32, offset = 212, size = 4
    variableMultisampleRate VkBool32 <>
;   TypeKind.ELABORATED
;   name = inheritedQueries, type = VkBool32, offset = 216, size = 4
    inheritedQueries VkBool32 <>
VkPhysicalDeviceFeatures ends

VkPhysicalDeviceLimits struct
;   TypeKind.ELABORATED
;   name = maxImageDimension1D, type = uint32_t, offset = 0, size = 4
    maxImageDimension1D dword ?
;   TypeKind.ELABORATED
;   name = maxImageDimension2D, type = uint32_t, offset = 4, size = 4
    maxImageDimension2D dword ?
;   TypeKind.ELABORATED
;   name = maxImageDimension3D, type = uint32_t, offset = 8, size = 4
    maxImageDimension3D dword ?
;   TypeKind.ELABORATED
;   name = maxImageDimensionCube, type = uint32_t, offset = 12, size = 4
    maxImageDimensionCube dword ?
;   TypeKind.ELABORATED
;   name = maxImageArrayLayers, type = uint32_t, offset = 16, size = 4
    maxImageArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = maxTexelBufferElements, type = uint32_t, offset = 20, size = 4
    maxTexelBufferElements dword ?
;   TypeKind.ELABORATED
;   name = maxUniformBufferRange, type = uint32_t, offset = 24, size = 4
    maxUniformBufferRange dword ?
;   TypeKind.ELABORATED
;   name = maxStorageBufferRange, type = uint32_t, offset = 28, size = 4
    maxStorageBufferRange dword ?
;   TypeKind.ELABORATED
;   name = maxPushConstantsSize, type = uint32_t, offset = 32, size = 4
    maxPushConstantsSize dword ?
;   TypeKind.ELABORATED
;   name = maxMemoryAllocationCount, type = uint32_t, offset = 36, size = 4
    maxMemoryAllocationCount dword ?
;   TypeKind.ELABORATED
;   name = maxSamplerAllocationCount, type = uint32_t, offset = 40, size = 4
    maxSamplerAllocationCount dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = bufferImageGranularity, type = VkDeviceSize, offset = 48, size = 8
    bufferImageGranularity VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = sparseAddressSpaceSize, type = VkDeviceSize, offset = 56, size = 8
    sparseAddressSpaceSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = maxBoundDescriptorSets, type = uint32_t, offset = 64, size = 4
    maxBoundDescriptorSets dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorSamplers, type = uint32_t, offset = 68, size = 4
    maxPerStageDescriptorSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUniformBuffers, type = uint32_t, offset = 72, size = 4
    maxPerStageDescriptorUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorStorageBuffers, type = uint32_t, offset = 76, size = 4
    maxPerStageDescriptorStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorSampledImages, type = uint32_t, offset = 80, size = 4
    maxPerStageDescriptorSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorStorageImages, type = uint32_t, offset = 84, size = 4
    maxPerStageDescriptorStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorInputAttachments, type = uint32_t, offset = 88, size = 4
    maxPerStageDescriptorInputAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageResources, type = uint32_t, offset = 92, size = 4
    maxPerStageResources dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetSamplers, type = uint32_t, offset = 96, size = 4
    maxDescriptorSetSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUniformBuffers, type = uint32_t, offset = 100, size = 4
    maxDescriptorSetUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUniformBuffersDynamic, type = uint32_t, offset = 104, size = 4
    maxDescriptorSetUniformBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetStorageBuffers, type = uint32_t, offset = 108, size = 4
    maxDescriptorSetStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetStorageBuffersDynamic, type = uint32_t, offset = 112, size = 4
    maxDescriptorSetStorageBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetSampledImages, type = uint32_t, offset = 116, size = 4
    maxDescriptorSetSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetStorageImages, type = uint32_t, offset = 120, size = 4
    maxDescriptorSetStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetInputAttachments, type = uint32_t, offset = 124, size = 4
    maxDescriptorSetInputAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxVertexInputAttributes, type = uint32_t, offset = 128, size = 4
    maxVertexInputAttributes dword ?
;   TypeKind.ELABORATED
;   name = maxVertexInputBindings, type = uint32_t, offset = 132, size = 4
    maxVertexInputBindings dword ?
;   TypeKind.ELABORATED
;   name = maxVertexInputAttributeOffset, type = uint32_t, offset = 136, size = 4
    maxVertexInputAttributeOffset dword ?
;   TypeKind.ELABORATED
;   name = maxVertexInputBindingStride, type = uint32_t, offset = 140, size = 4
    maxVertexInputBindingStride dword ?
;   TypeKind.ELABORATED
;   name = maxVertexOutputComponents, type = uint32_t, offset = 144, size = 4
    maxVertexOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationGenerationLevel, type = uint32_t, offset = 148, size = 4
    maxTessellationGenerationLevel dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationPatchSize, type = uint32_t, offset = 152, size = 4
    maxTessellationPatchSize dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationControlPerVertexInputComponents, type = uint32_t, offset = 156, size = 4
    maxTessellationControlPerVertexInputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationControlPerVertexOutputComponents, type = uint32_t, offset = 160, size = 4
    maxTessellationControlPerVertexOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationControlPerPatchOutputComponents, type = uint32_t, offset = 164, size = 4
    maxTessellationControlPerPatchOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationControlTotalOutputComponents, type = uint32_t, offset = 168, size = 4
    maxTessellationControlTotalOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationEvaluationInputComponents, type = uint32_t, offset = 172, size = 4
    maxTessellationEvaluationInputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationEvaluationOutputComponents, type = uint32_t, offset = 176, size = 4
    maxTessellationEvaluationOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryShaderInvocations, type = uint32_t, offset = 180, size = 4
    maxGeometryShaderInvocations dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryInputComponents, type = uint32_t, offset = 184, size = 4
    maxGeometryInputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryOutputComponents, type = uint32_t, offset = 188, size = 4
    maxGeometryOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryOutputVertices, type = uint32_t, offset = 192, size = 4
    maxGeometryOutputVertices dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryTotalOutputComponents, type = uint32_t, offset = 196, size = 4
    maxGeometryTotalOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentInputComponents, type = uint32_t, offset = 200, size = 4
    maxFragmentInputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentOutputAttachments, type = uint32_t, offset = 204, size = 4
    maxFragmentOutputAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentDualSrcAttachments, type = uint32_t, offset = 208, size = 4
    maxFragmentDualSrcAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentCombinedOutputResources, type = uint32_t, offset = 212, size = 4
    maxFragmentCombinedOutputResources dword ?
;   TypeKind.ELABORATED
;   name = maxComputeSharedMemorySize, type = uint32_t, offset = 216, size = 4
    maxComputeSharedMemorySize dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxComputeWorkGroupCount, type = uint32_t[3], offset = 220, size = 12
    maxComputeWorkGroupCount dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxComputeWorkGroupInvocations, type = uint32_t, offset = 232, size = 4
    maxComputeWorkGroupInvocations dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxComputeWorkGroupSize, type = uint32_t[3], offset = 236, size = 12
    maxComputeWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = subPixelPrecisionBits, type = uint32_t, offset = 248, size = 4
    subPixelPrecisionBits dword ?
;   TypeKind.ELABORATED
;   name = subTexelPrecisionBits, type = uint32_t, offset = 252, size = 4
    subTexelPrecisionBits dword ?
;   TypeKind.ELABORATED
;   name = mipmapPrecisionBits, type = uint32_t, offset = 256, size = 4
    mipmapPrecisionBits dword ?
;   TypeKind.ELABORATED
;   name = maxDrawIndexedIndexValue, type = uint32_t, offset = 260, size = 4
    maxDrawIndexedIndexValue dword ?
;   TypeKind.ELABORATED
;   name = maxDrawIndirectCount, type = uint32_t, offset = 264, size = 4
    maxDrawIndirectCount dword ?
;   TypeKind.FLOAT
;   name = maxSamplerLodBias, type = float, offset = 268, size = 4
    maxSamplerLodBias real4 ?
;   TypeKind.FLOAT
;   name = maxSamplerAnisotropy, type = float, offset = 272, size = 4
    maxSamplerAnisotropy real4 ?
;   TypeKind.ELABORATED
;   name = maxViewports, type = uint32_t, offset = 276, size = 4
    maxViewports dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxViewportDimensions, type = uint32_t[2], offset = 280, size = 8
    maxViewportDimensions dword 2 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = viewportBoundsRange, type = float[2], offset = 288, size = 8
    viewportBoundsRange real4 2 dup(?)
;   TypeKind.ELABORATED
;   name = viewportSubPixelBits, type = uint32_t, offset = 296, size = 4
    viewportSubPixelBits dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = minMemoryMapAlignment, type = size_t, offset = 304, size = 8
    minMemoryMapAlignment qword ?
;   TypeKind.ELABORATED
;   name = minTexelBufferOffsetAlignment, type = VkDeviceSize, offset = 312, size = 8
    minTexelBufferOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = minUniformBufferOffsetAlignment, type = VkDeviceSize, offset = 320, size = 8
    minUniformBufferOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = minStorageBufferOffsetAlignment, type = VkDeviceSize, offset = 328, size = 8
    minStorageBufferOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = minTexelOffset, type = int32_t, offset = 336, size = 4
    minTexelOffset sdword ?
;   TypeKind.ELABORATED
;   name = maxTexelOffset, type = uint32_t, offset = 340, size = 4
    maxTexelOffset dword ?
;   TypeKind.ELABORATED
;   name = minTexelGatherOffset, type = int32_t, offset = 344, size = 4
    minTexelGatherOffset sdword ?
;   TypeKind.ELABORATED
;   name = maxTexelGatherOffset, type = uint32_t, offset = 348, size = 4
    maxTexelGatherOffset dword ?
;   TypeKind.FLOAT
;   name = minInterpolationOffset, type = float, offset = 352, size = 4
    minInterpolationOffset real4 ?
;   TypeKind.FLOAT
;   name = maxInterpolationOffset, type = float, offset = 356, size = 4
    maxInterpolationOffset real4 ?
;   TypeKind.ELABORATED
;   name = subPixelInterpolationOffsetBits, type = uint32_t, offset = 360, size = 4
    subPixelInterpolationOffsetBits dword ?
;   TypeKind.ELABORATED
;   name = maxFramebufferWidth, type = uint32_t, offset = 364, size = 4
    maxFramebufferWidth dword ?
;   TypeKind.ELABORATED
;   name = maxFramebufferHeight, type = uint32_t, offset = 368, size = 4
    maxFramebufferHeight dword ?
;   TypeKind.ELABORATED
;   name = maxFramebufferLayers, type = uint32_t, offset = 372, size = 4
    maxFramebufferLayers dword ?
;   TypeKind.ELABORATED
;   name = framebufferColorSampleCounts, type = VkSampleCountFlags, offset = 376, size = 4
    framebufferColorSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = framebufferDepthSampleCounts, type = VkSampleCountFlags, offset = 380, size = 4
    framebufferDepthSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = framebufferStencilSampleCounts, type = VkSampleCountFlags, offset = 384, size = 4
    framebufferStencilSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = framebufferNoAttachmentsSampleCounts, type = VkSampleCountFlags, offset = 388, size = 4
    framebufferNoAttachmentsSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = maxColorAttachments, type = uint32_t, offset = 392, size = 4
    maxColorAttachments dword ?
;   TypeKind.ELABORATED
;   name = sampledImageColorSampleCounts, type = VkSampleCountFlags, offset = 396, size = 4
    sampledImageColorSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = sampledImageIntegerSampleCounts, type = VkSampleCountFlags, offset = 400, size = 4
    sampledImageIntegerSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = sampledImageDepthSampleCounts, type = VkSampleCountFlags, offset = 404, size = 4
    sampledImageDepthSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = sampledImageStencilSampleCounts, type = VkSampleCountFlags, offset = 408, size = 4
    sampledImageStencilSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = storageImageSampleCounts, type = VkSampleCountFlags, offset = 412, size = 4
    storageImageSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = maxSampleMaskWords, type = uint32_t, offset = 416, size = 4
    maxSampleMaskWords dword ?
;   TypeKind.ELABORATED
;   name = timestampComputeAndGraphics, type = VkBool32, offset = 420, size = 4
    timestampComputeAndGraphics VkBool32 <>
;   TypeKind.FLOAT
;   name = timestampPeriod, type = float, offset = 424, size = 4
    timestampPeriod real4 ?
;   TypeKind.ELABORATED
;   name = maxClipDistances, type = uint32_t, offset = 428, size = 4
    maxClipDistances dword ?
;   TypeKind.ELABORATED
;   name = maxCullDistances, type = uint32_t, offset = 432, size = 4
    maxCullDistances dword ?
;   TypeKind.ELABORATED
;   name = maxCombinedClipAndCullDistances, type = uint32_t, offset = 436, size = 4
    maxCombinedClipAndCullDistances dword ?
;   TypeKind.ELABORATED
;   name = discreteQueuePriorities, type = uint32_t, offset = 440, size = 4
    discreteQueuePriorities dword ?
;   TypeKind.CONSTANTARRAY
;   name = pointSizeRange, type = float[2], offset = 444, size = 8
    pointSizeRange real4 2 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = lineWidthRange, type = float[2], offset = 452, size = 8
    lineWidthRange real4 2 dup(?)
;   TypeKind.FLOAT
;   name = pointSizeGranularity, type = float, offset = 460, size = 4
    pointSizeGranularity real4 ?
;   TypeKind.FLOAT
;   name = lineWidthGranularity, type = float, offset = 464, size = 4
    lineWidthGranularity real4 ?
;   TypeKind.ELABORATED
;   name = strictLines, type = VkBool32, offset = 468, size = 4
    strictLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = standardSampleLocations, type = VkBool32, offset = 472, size = 4
    standardSampleLocations VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = optimalBufferCopyOffsetAlignment, type = VkDeviceSize, offset = 480, size = 8
    optimalBufferCopyOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = optimalBufferCopyRowPitchAlignment, type = VkDeviceSize, offset = 488, size = 8
    optimalBufferCopyRowPitchAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = nonCoherentAtomSize, type = VkDeviceSize, offset = 496, size = 8
    nonCoherentAtomSize VkDeviceSize <>
VkPhysicalDeviceLimits ends

; TYPEDEF VkPhysicalDeviceLimits = struct VkPhysicalDeviceLimits, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceLimits struct
;   TypeKind.ELABORATED
;   name = maxImageDimension1D, type = uint32_t, offset = 0, size = 4
    maxImageDimension1D dword ?
;   TypeKind.ELABORATED
;   name = maxImageDimension2D, type = uint32_t, offset = 4, size = 4
    maxImageDimension2D dword ?
;   TypeKind.ELABORATED
;   name = maxImageDimension3D, type = uint32_t, offset = 8, size = 4
    maxImageDimension3D dword ?
;   TypeKind.ELABORATED
;   name = maxImageDimensionCube, type = uint32_t, offset = 12, size = 4
    maxImageDimensionCube dword ?
;   TypeKind.ELABORATED
;   name = maxImageArrayLayers, type = uint32_t, offset = 16, size = 4
    maxImageArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = maxTexelBufferElements, type = uint32_t, offset = 20, size = 4
    maxTexelBufferElements dword ?
;   TypeKind.ELABORATED
;   name = maxUniformBufferRange, type = uint32_t, offset = 24, size = 4
    maxUniformBufferRange dword ?
;   TypeKind.ELABORATED
;   name = maxStorageBufferRange, type = uint32_t, offset = 28, size = 4
    maxStorageBufferRange dword ?
;   TypeKind.ELABORATED
;   name = maxPushConstantsSize, type = uint32_t, offset = 32, size = 4
    maxPushConstantsSize dword ?
;   TypeKind.ELABORATED
;   name = maxMemoryAllocationCount, type = uint32_t, offset = 36, size = 4
    maxMemoryAllocationCount dword ?
;   TypeKind.ELABORATED
;   name = maxSamplerAllocationCount, type = uint32_t, offset = 40, size = 4
    maxSamplerAllocationCount dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = bufferImageGranularity, type = VkDeviceSize, offset = 48, size = 8
    bufferImageGranularity VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = sparseAddressSpaceSize, type = VkDeviceSize, offset = 56, size = 8
    sparseAddressSpaceSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = maxBoundDescriptorSets, type = uint32_t, offset = 64, size = 4
    maxBoundDescriptorSets dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorSamplers, type = uint32_t, offset = 68, size = 4
    maxPerStageDescriptorSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUniformBuffers, type = uint32_t, offset = 72, size = 4
    maxPerStageDescriptorUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorStorageBuffers, type = uint32_t, offset = 76, size = 4
    maxPerStageDescriptorStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorSampledImages, type = uint32_t, offset = 80, size = 4
    maxPerStageDescriptorSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorStorageImages, type = uint32_t, offset = 84, size = 4
    maxPerStageDescriptorStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorInputAttachments, type = uint32_t, offset = 88, size = 4
    maxPerStageDescriptorInputAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageResources, type = uint32_t, offset = 92, size = 4
    maxPerStageResources dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetSamplers, type = uint32_t, offset = 96, size = 4
    maxDescriptorSetSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUniformBuffers, type = uint32_t, offset = 100, size = 4
    maxDescriptorSetUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUniformBuffersDynamic, type = uint32_t, offset = 104, size = 4
    maxDescriptorSetUniformBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetStorageBuffers, type = uint32_t, offset = 108, size = 4
    maxDescriptorSetStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetStorageBuffersDynamic, type = uint32_t, offset = 112, size = 4
    maxDescriptorSetStorageBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetSampledImages, type = uint32_t, offset = 116, size = 4
    maxDescriptorSetSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetStorageImages, type = uint32_t, offset = 120, size = 4
    maxDescriptorSetStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetInputAttachments, type = uint32_t, offset = 124, size = 4
    maxDescriptorSetInputAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxVertexInputAttributes, type = uint32_t, offset = 128, size = 4
    maxVertexInputAttributes dword ?
;   TypeKind.ELABORATED
;   name = maxVertexInputBindings, type = uint32_t, offset = 132, size = 4
    maxVertexInputBindings dword ?
;   TypeKind.ELABORATED
;   name = maxVertexInputAttributeOffset, type = uint32_t, offset = 136, size = 4
    maxVertexInputAttributeOffset dword ?
;   TypeKind.ELABORATED
;   name = maxVertexInputBindingStride, type = uint32_t, offset = 140, size = 4
    maxVertexInputBindingStride dword ?
;   TypeKind.ELABORATED
;   name = maxVertexOutputComponents, type = uint32_t, offset = 144, size = 4
    maxVertexOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationGenerationLevel, type = uint32_t, offset = 148, size = 4
    maxTessellationGenerationLevel dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationPatchSize, type = uint32_t, offset = 152, size = 4
    maxTessellationPatchSize dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationControlPerVertexInputComponents, type = uint32_t, offset = 156, size = 4
    maxTessellationControlPerVertexInputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationControlPerVertexOutputComponents, type = uint32_t, offset = 160, size = 4
    maxTessellationControlPerVertexOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationControlPerPatchOutputComponents, type = uint32_t, offset = 164, size = 4
    maxTessellationControlPerPatchOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationControlTotalOutputComponents, type = uint32_t, offset = 168, size = 4
    maxTessellationControlTotalOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationEvaluationInputComponents, type = uint32_t, offset = 172, size = 4
    maxTessellationEvaluationInputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxTessellationEvaluationOutputComponents, type = uint32_t, offset = 176, size = 4
    maxTessellationEvaluationOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryShaderInvocations, type = uint32_t, offset = 180, size = 4
    maxGeometryShaderInvocations dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryInputComponents, type = uint32_t, offset = 184, size = 4
    maxGeometryInputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryOutputComponents, type = uint32_t, offset = 188, size = 4
    maxGeometryOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryOutputVertices, type = uint32_t, offset = 192, size = 4
    maxGeometryOutputVertices dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryTotalOutputComponents, type = uint32_t, offset = 196, size = 4
    maxGeometryTotalOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentInputComponents, type = uint32_t, offset = 200, size = 4
    maxFragmentInputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentOutputAttachments, type = uint32_t, offset = 204, size = 4
    maxFragmentOutputAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentDualSrcAttachments, type = uint32_t, offset = 208, size = 4
    maxFragmentDualSrcAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentCombinedOutputResources, type = uint32_t, offset = 212, size = 4
    maxFragmentCombinedOutputResources dword ?
;   TypeKind.ELABORATED
;   name = maxComputeSharedMemorySize, type = uint32_t, offset = 216, size = 4
    maxComputeSharedMemorySize dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxComputeWorkGroupCount, type = uint32_t[3], offset = 220, size = 12
    maxComputeWorkGroupCount dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxComputeWorkGroupInvocations, type = uint32_t, offset = 232, size = 4
    maxComputeWorkGroupInvocations dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxComputeWorkGroupSize, type = uint32_t[3], offset = 236, size = 12
    maxComputeWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = subPixelPrecisionBits, type = uint32_t, offset = 248, size = 4
    subPixelPrecisionBits dword ?
;   TypeKind.ELABORATED
;   name = subTexelPrecisionBits, type = uint32_t, offset = 252, size = 4
    subTexelPrecisionBits dword ?
;   TypeKind.ELABORATED
;   name = mipmapPrecisionBits, type = uint32_t, offset = 256, size = 4
    mipmapPrecisionBits dword ?
;   TypeKind.ELABORATED
;   name = maxDrawIndexedIndexValue, type = uint32_t, offset = 260, size = 4
    maxDrawIndexedIndexValue dword ?
;   TypeKind.ELABORATED
;   name = maxDrawIndirectCount, type = uint32_t, offset = 264, size = 4
    maxDrawIndirectCount dword ?
;   TypeKind.FLOAT
;   name = maxSamplerLodBias, type = float, offset = 268, size = 4
    maxSamplerLodBias real4 ?
;   TypeKind.FLOAT
;   name = maxSamplerAnisotropy, type = float, offset = 272, size = 4
    maxSamplerAnisotropy real4 ?
;   TypeKind.ELABORATED
;   name = maxViewports, type = uint32_t, offset = 276, size = 4
    maxViewports dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxViewportDimensions, type = uint32_t[2], offset = 280, size = 8
    maxViewportDimensions dword 2 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = viewportBoundsRange, type = float[2], offset = 288, size = 8
    viewportBoundsRange real4 2 dup(?)
;   TypeKind.ELABORATED
;   name = viewportSubPixelBits, type = uint32_t, offset = 296, size = 4
    viewportSubPixelBits dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = minMemoryMapAlignment, type = size_t, offset = 304, size = 8
    minMemoryMapAlignment qword ?
;   TypeKind.ELABORATED
;   name = minTexelBufferOffsetAlignment, type = VkDeviceSize, offset = 312, size = 8
    minTexelBufferOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = minUniformBufferOffsetAlignment, type = VkDeviceSize, offset = 320, size = 8
    minUniformBufferOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = minStorageBufferOffsetAlignment, type = VkDeviceSize, offset = 328, size = 8
    minStorageBufferOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = minTexelOffset, type = int32_t, offset = 336, size = 4
    minTexelOffset sdword ?
;   TypeKind.ELABORATED
;   name = maxTexelOffset, type = uint32_t, offset = 340, size = 4
    maxTexelOffset dword ?
;   TypeKind.ELABORATED
;   name = minTexelGatherOffset, type = int32_t, offset = 344, size = 4
    minTexelGatherOffset sdword ?
;   TypeKind.ELABORATED
;   name = maxTexelGatherOffset, type = uint32_t, offset = 348, size = 4
    maxTexelGatherOffset dword ?
;   TypeKind.FLOAT
;   name = minInterpolationOffset, type = float, offset = 352, size = 4
    minInterpolationOffset real4 ?
;   TypeKind.FLOAT
;   name = maxInterpolationOffset, type = float, offset = 356, size = 4
    maxInterpolationOffset real4 ?
;   TypeKind.ELABORATED
;   name = subPixelInterpolationOffsetBits, type = uint32_t, offset = 360, size = 4
    subPixelInterpolationOffsetBits dword ?
;   TypeKind.ELABORATED
;   name = maxFramebufferWidth, type = uint32_t, offset = 364, size = 4
    maxFramebufferWidth dword ?
;   TypeKind.ELABORATED
;   name = maxFramebufferHeight, type = uint32_t, offset = 368, size = 4
    maxFramebufferHeight dword ?
;   TypeKind.ELABORATED
;   name = maxFramebufferLayers, type = uint32_t, offset = 372, size = 4
    maxFramebufferLayers dword ?
;   TypeKind.ELABORATED
;   name = framebufferColorSampleCounts, type = VkSampleCountFlags, offset = 376, size = 4
    framebufferColorSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = framebufferDepthSampleCounts, type = VkSampleCountFlags, offset = 380, size = 4
    framebufferDepthSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = framebufferStencilSampleCounts, type = VkSampleCountFlags, offset = 384, size = 4
    framebufferStencilSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = framebufferNoAttachmentsSampleCounts, type = VkSampleCountFlags, offset = 388, size = 4
    framebufferNoAttachmentsSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = maxColorAttachments, type = uint32_t, offset = 392, size = 4
    maxColorAttachments dword ?
;   TypeKind.ELABORATED
;   name = sampledImageColorSampleCounts, type = VkSampleCountFlags, offset = 396, size = 4
    sampledImageColorSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = sampledImageIntegerSampleCounts, type = VkSampleCountFlags, offset = 400, size = 4
    sampledImageIntegerSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = sampledImageDepthSampleCounts, type = VkSampleCountFlags, offset = 404, size = 4
    sampledImageDepthSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = sampledImageStencilSampleCounts, type = VkSampleCountFlags, offset = 408, size = 4
    sampledImageStencilSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = storageImageSampleCounts, type = VkSampleCountFlags, offset = 412, size = 4
    storageImageSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = maxSampleMaskWords, type = uint32_t, offset = 416, size = 4
    maxSampleMaskWords dword ?
;   TypeKind.ELABORATED
;   name = timestampComputeAndGraphics, type = VkBool32, offset = 420, size = 4
    timestampComputeAndGraphics VkBool32 <>
;   TypeKind.FLOAT
;   name = timestampPeriod, type = float, offset = 424, size = 4
    timestampPeriod real4 ?
;   TypeKind.ELABORATED
;   name = maxClipDistances, type = uint32_t, offset = 428, size = 4
    maxClipDistances dword ?
;   TypeKind.ELABORATED
;   name = maxCullDistances, type = uint32_t, offset = 432, size = 4
    maxCullDistances dword ?
;   TypeKind.ELABORATED
;   name = maxCombinedClipAndCullDistances, type = uint32_t, offset = 436, size = 4
    maxCombinedClipAndCullDistances dword ?
;   TypeKind.ELABORATED
;   name = discreteQueuePriorities, type = uint32_t, offset = 440, size = 4
    discreteQueuePriorities dword ?
;   TypeKind.CONSTANTARRAY
;   name = pointSizeRange, type = float[2], offset = 444, size = 8
    pointSizeRange real4 2 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = lineWidthRange, type = float[2], offset = 452, size = 8
    lineWidthRange real4 2 dup(?)
;   TypeKind.FLOAT
;   name = pointSizeGranularity, type = float, offset = 460, size = 4
    pointSizeGranularity real4 ?
;   TypeKind.FLOAT
;   name = lineWidthGranularity, type = float, offset = 464, size = 4
    lineWidthGranularity real4 ?
;   TypeKind.ELABORATED
;   name = strictLines, type = VkBool32, offset = 468, size = 4
    strictLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = standardSampleLocations, type = VkBool32, offset = 472, size = 4
    standardSampleLocations VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = optimalBufferCopyOffsetAlignment, type = VkDeviceSize, offset = 480, size = 8
    optimalBufferCopyOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = optimalBufferCopyRowPitchAlignment, type = VkDeviceSize, offset = 488, size = 8
    optimalBufferCopyRowPitchAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = nonCoherentAtomSize, type = VkDeviceSize, offset = 496, size = 8
    nonCoherentAtomSize VkDeviceSize <>
VkPhysicalDeviceLimits ends

VkPhysicalDeviceMemoryProperties struct
;   TypeKind.ELABORATED
;   name = memoryTypeCount, type = uint32_t, offset = 0, size = 4
    memoryTypeCount dword ?
;   TypeKind.CONSTANTARRAY
;   name = memoryTypes, type = VkMemoryType[32], offset = 4, size = 256
    memoryTypes VkMemoryType 32 dup(<>)
;   TypeKind.ELABORATED
;   name = memoryHeapCount, type = uint32_t, offset = 260, size = 4
    memoryHeapCount dword ?
;   TypeKind.CONSTANTARRAY
;   name = memoryHeaps, type = VkMemoryHeap[16], offset = 264, size = 256
    memoryHeaps VkMemoryHeap 16 dup(<>)
VkPhysicalDeviceMemoryProperties ends

; TYPEDEF VkPhysicalDeviceMemoryProperties = struct VkPhysicalDeviceMemoryProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMemoryProperties struct
;   TypeKind.ELABORATED
;   name = memoryTypeCount, type = uint32_t, offset = 0, size = 4
    memoryTypeCount dword ?
;   TypeKind.CONSTANTARRAY
;   name = memoryTypes, type = VkMemoryType[32], offset = 4, size = 256
    memoryTypes VkMemoryType 32 dup(<>)
;   TypeKind.ELABORATED
;   name = memoryHeapCount, type = uint32_t, offset = 260, size = 4
    memoryHeapCount dword ?
;   TypeKind.CONSTANTARRAY
;   name = memoryHeaps, type = VkMemoryHeap[16], offset = 264, size = 256
    memoryHeaps VkMemoryHeap 16 dup(<>)
VkPhysicalDeviceMemoryProperties ends

VkPhysicalDeviceSparseProperties struct
;   TypeKind.ELABORATED
;   name = residencyStandard2DBlockShape, type = VkBool32, offset = 0, size = 4
    residencyStandard2DBlockShape VkBool32 <>
;   TypeKind.ELABORATED
;   name = residencyStandard2DMultisampleBlockShape, type = VkBool32, offset = 4, size = 4
    residencyStandard2DMultisampleBlockShape VkBool32 <>
;   TypeKind.ELABORATED
;   name = residencyStandard3DBlockShape, type = VkBool32, offset = 8, size = 4
    residencyStandard3DBlockShape VkBool32 <>
;   TypeKind.ELABORATED
;   name = residencyAlignedMipSize, type = VkBool32, offset = 12, size = 4
    residencyAlignedMipSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = residencyNonResidentStrict, type = VkBool32, offset = 16, size = 4
    residencyNonResidentStrict VkBool32 <>
VkPhysicalDeviceSparseProperties ends

; TYPEDEF VkPhysicalDeviceSparseProperties = struct VkPhysicalDeviceSparseProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSparseProperties struct
;   TypeKind.ELABORATED
;   name = residencyStandard2DBlockShape, type = VkBool32, offset = 0, size = 4
    residencyStandard2DBlockShape VkBool32 <>
;   TypeKind.ELABORATED
;   name = residencyStandard2DMultisampleBlockShape, type = VkBool32, offset = 4, size = 4
    residencyStandard2DMultisampleBlockShape VkBool32 <>
;   TypeKind.ELABORATED
;   name = residencyStandard3DBlockShape, type = VkBool32, offset = 8, size = 4
    residencyStandard3DBlockShape VkBool32 <>
;   TypeKind.ELABORATED
;   name = residencyAlignedMipSize, type = VkBool32, offset = 12, size = 4
    residencyAlignedMipSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = residencyNonResidentStrict, type = VkBool32, offset = 16, size = 4
    residencyNonResidentStrict VkBool32 <>
VkPhysicalDeviceSparseProperties ends

VkPhysicalDeviceProperties struct
;   TypeKind.ELABORATED
;   name = apiVersion, type = uint32_t, offset = 0, size = 4
    apiVersion dword ?
;   TypeKind.ELABORATED
;   name = driverVersion, type = uint32_t, offset = 4, size = 4
    driverVersion dword ?
;   TypeKind.ELABORATED
;   name = vendorID, type = uint32_t, offset = 8, size = 4
    vendorID dword ?
;   TypeKind.ELABORATED
;   name = deviceID, type = uint32_t, offset = 12, size = 4
    deviceID dword ?
;   TypeKind.ELABORATED
;   name = deviceType, type = VkPhysicalDeviceType, offset = 16, size = 4
    deviceType VkPhysicalDeviceType <>
;   TypeKind.CONSTANTARRAY
;   name = deviceName, type = char[256], offset = 20, size = 256
    deviceName byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = pipelineCacheUUID, type = uint8_t[16], offset = 276, size = 16
    pipelineCacheUUID byte 16 dup(?)
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = limits, type = VkPhysicalDeviceLimits, offset = 296, size = 504
    limits VkPhysicalDeviceLimits <>
;   TypeKind.ELABORATED
;   name = sparseProperties, type = VkPhysicalDeviceSparseProperties, offset = 800, size = 20
    sparseProperties VkPhysicalDeviceSparseProperties <>
VkPhysicalDeviceProperties ends

; TYPEDEF VkPhysicalDeviceProperties = struct VkPhysicalDeviceProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceProperties struct
;   TypeKind.ELABORATED
;   name = apiVersion, type = uint32_t, offset = 0, size = 4
    apiVersion dword ?
;   TypeKind.ELABORATED
;   name = driverVersion, type = uint32_t, offset = 4, size = 4
    driverVersion dword ?
;   TypeKind.ELABORATED
;   name = vendorID, type = uint32_t, offset = 8, size = 4
    vendorID dword ?
;   TypeKind.ELABORATED
;   name = deviceID, type = uint32_t, offset = 12, size = 4
    deviceID dword ?
;   TypeKind.ELABORATED
;   name = deviceType, type = VkPhysicalDeviceType, offset = 16, size = 4
    deviceType VkPhysicalDeviceType <>
;   TypeKind.CONSTANTARRAY
;   name = deviceName, type = char[256], offset = 20, size = 256
    deviceName byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = pipelineCacheUUID, type = uint8_t[16], offset = 276, size = 16
    pipelineCacheUUID byte 16 dup(?)
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = limits, type = VkPhysicalDeviceLimits, offset = 296, size = 504
    limits VkPhysicalDeviceLimits <>
;   TypeKind.ELABORATED
;   name = sparseProperties, type = VkPhysicalDeviceSparseProperties, offset = 800, size = 20
    sparseProperties VkPhysicalDeviceSparseProperties <>
VkPhysicalDeviceProperties ends

VkQueueFamilyProperties struct
;   TypeKind.ELABORATED
;   name = queueFlags, type = VkQueueFlags, offset = 0, size = 4
    queueFlags VkQueueFlags <>
;   TypeKind.ELABORATED
;   name = queueCount, type = uint32_t, offset = 4, size = 4
    queueCount dword ?
;   TypeKind.ELABORATED
;   name = timestampValidBits, type = uint32_t, offset = 8, size = 4
    timestampValidBits dword ?
;   TypeKind.ELABORATED
;   name = minImageTransferGranularity, type = VkExtent3D, offset = 12, size = 12
    minImageTransferGranularity VkExtent3D <>
VkQueueFamilyProperties ends

; TYPEDEF VkQueueFamilyProperties = struct VkQueueFamilyProperties, TypeKind.ELABORATED
; remove struct typedef

VkQueueFamilyProperties struct
;   TypeKind.ELABORATED
;   name = queueFlags, type = VkQueueFlags, offset = 0, size = 4
    queueFlags VkQueueFlags <>
;   TypeKind.ELABORATED
;   name = queueCount, type = uint32_t, offset = 4, size = 4
    queueCount dword ?
;   TypeKind.ELABORATED
;   name = timestampValidBits, type = uint32_t, offset = 8, size = 4
    timestampValidBits dword ?
;   TypeKind.ELABORATED
;   name = minImageTransferGranularity, type = VkExtent3D, offset = 12, size = 12
    minImageTransferGranularity VkExtent3D <>
VkQueueFamilyProperties ends

VkDeviceQueueCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceQueueCreateFlags, offset = 16, size = 4
    flags VkDeviceQueueCreateFlags <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndex, type = uint32_t, offset = 20, size = 4
    queueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = queueCount, type = uint32_t, offset = 24, size = 4
    queueCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pQueuePriorities, type = const float *, offset = 32, size = 8
    pQueuePriorities qword ?
VkDeviceQueueCreateInfo ends

; TYPEDEF VkDeviceQueueCreateInfo = struct VkDeviceQueueCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkDeviceQueueCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceQueueCreateFlags, offset = 16, size = 4
    flags VkDeviceQueueCreateFlags <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndex, type = uint32_t, offset = 20, size = 4
    queueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = queueCount, type = uint32_t, offset = 24, size = 4
    queueCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pQueuePriorities, type = const float *, offset = 32, size = 8
    pQueuePriorities qword ?
VkDeviceQueueCreateInfo ends

VkDeviceCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceCreateFlags, offset = 16, size = 4
    flags VkDeviceCreateFlags <>
;   TypeKind.ELABORATED
;   name = queueCreateInfoCount, type = uint32_t, offset = 20, size = 4
    queueCreateInfoCount dword ?
;   TypeKind.POINTER
;   name = pQueueCreateInfos, type = const VkDeviceQueueCreateInfo *, offset = 24, size = 8
    pQueueCreateInfos qword ?
;   TypeKind.ELABORATED
;   name = enabledLayerCount, type = uint32_t, offset = 32, size = 4
    enabledLayerCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = ppEnabledLayerNames, type = const char *const *, offset = 40, size = 8
    ppEnabledLayerNames qword ?
;   TypeKind.ELABORATED
;   name = enabledExtensionCount, type = uint32_t, offset = 48, size = 4
    enabledExtensionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = ppEnabledExtensionNames, type = const char *const *, offset = 56, size = 8
    ppEnabledExtensionNames qword ?
;   TypeKind.POINTER
;   name = pEnabledFeatures, type = const VkPhysicalDeviceFeatures *, offset = 64, size = 8
    pEnabledFeatures qword ?
VkDeviceCreateInfo ends

; TYPEDEF VkDeviceCreateInfo = struct VkDeviceCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkDeviceCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceCreateFlags, offset = 16, size = 4
    flags VkDeviceCreateFlags <>
;   TypeKind.ELABORATED
;   name = queueCreateInfoCount, type = uint32_t, offset = 20, size = 4
    queueCreateInfoCount dword ?
;   TypeKind.POINTER
;   name = pQueueCreateInfos, type = const VkDeviceQueueCreateInfo *, offset = 24, size = 8
    pQueueCreateInfos qword ?
;   TypeKind.ELABORATED
;   name = enabledLayerCount, type = uint32_t, offset = 32, size = 4
    enabledLayerCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = ppEnabledLayerNames, type = const char *const *, offset = 40, size = 8
    ppEnabledLayerNames qword ?
;   TypeKind.ELABORATED
;   name = enabledExtensionCount, type = uint32_t, offset = 48, size = 4
    enabledExtensionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = ppEnabledExtensionNames, type = const char *const *, offset = 56, size = 8
    ppEnabledExtensionNames qword ?
;   TypeKind.POINTER
;   name = pEnabledFeatures, type = const VkPhysicalDeviceFeatures *, offset = 64, size = 8
    pEnabledFeatures qword ?
VkDeviceCreateInfo ends

VkExtensionProperties struct
;   TypeKind.CONSTANTARRAY
;   name = extensionName, type = char[256], offset = 0, size = 256
    extensionName byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = specVersion, type = uint32_t, offset = 256, size = 4
    specVersion dword ?
VkExtensionProperties ends

; TYPEDEF VkExtensionProperties = struct VkExtensionProperties, TypeKind.ELABORATED
; remove struct typedef

VkExtensionProperties struct
;   TypeKind.CONSTANTARRAY
;   name = extensionName, type = char[256], offset = 0, size = 256
    extensionName byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = specVersion, type = uint32_t, offset = 256, size = 4
    specVersion dword ?
VkExtensionProperties ends

VkLayerProperties struct
;   TypeKind.CONSTANTARRAY
;   name = layerName, type = char[256], offset = 0, size = 256
    layerName byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = specVersion, type = uint32_t, offset = 256, size = 4
    specVersion dword ?
;   TypeKind.ELABORATED
;   name = implementationVersion, type = uint32_t, offset = 260, size = 4
    implementationVersion dword ?
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 264, size = 256
    description byte 256 dup(?)
VkLayerProperties ends

; TYPEDEF VkLayerProperties = struct VkLayerProperties, TypeKind.ELABORATED
; remove struct typedef

VkLayerProperties struct
;   TypeKind.CONSTANTARRAY
;   name = layerName, type = char[256], offset = 0, size = 256
    layerName byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = specVersion, type = uint32_t, offset = 256, size = 4
    specVersion dword ?
;   TypeKind.ELABORATED
;   name = implementationVersion, type = uint32_t, offset = 260, size = 4
    implementationVersion dword ?
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 264, size = 256
    description byte 256 dup(?)
VkLayerProperties ends

VkSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = waitSemaphoreCount, type = uint32_t, offset = 16, size = 4
    waitSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pWaitSemaphores, type = const VkSemaphore *, offset = 24, size = 8
    pWaitSemaphores qword ?
;   TypeKind.POINTER
;   name = pWaitDstStageMask, type = const VkPipelineStageFlags *, offset = 32, size = 8
    pWaitDstStageMask qword ?
;   TypeKind.ELABORATED
;   name = commandBufferCount, type = uint32_t, offset = 40, size = 4
    commandBufferCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCommandBuffers, type = const VkCommandBuffer *, offset = 48, size = 8
    pCommandBuffers qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphoreCount, type = uint32_t, offset = 56, size = 4
    signalSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSignalSemaphores, type = const VkSemaphore *, offset = 64, size = 8
    pSignalSemaphores qword ?
VkSubmitInfo ends

; TYPEDEF VkSubmitInfo = struct VkSubmitInfo, TypeKind.ELABORATED
; remove struct typedef

VkSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = waitSemaphoreCount, type = uint32_t, offset = 16, size = 4
    waitSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pWaitSemaphores, type = const VkSemaphore *, offset = 24, size = 8
    pWaitSemaphores qword ?
;   TypeKind.POINTER
;   name = pWaitDstStageMask, type = const VkPipelineStageFlags *, offset = 32, size = 8
    pWaitDstStageMask qword ?
;   TypeKind.ELABORATED
;   name = commandBufferCount, type = uint32_t, offset = 40, size = 4
    commandBufferCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCommandBuffers, type = const VkCommandBuffer *, offset = 48, size = 8
    pCommandBuffers qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphoreCount, type = uint32_t, offset = 56, size = 4
    signalSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSignalSemaphores, type = const VkSemaphore *, offset = 64, size = 8
    pSignalSemaphores qword ?
VkSubmitInfo ends

VkMappedMemoryRange struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 16, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 24, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 32, size = 8
    _size VkDeviceSize <>
VkMappedMemoryRange ends

; TYPEDEF VkMappedMemoryRange = struct VkMappedMemoryRange, TypeKind.ELABORATED
; remove struct typedef

VkMappedMemoryRange struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 16, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 24, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 32, size = 8
    _size VkDeviceSize <>
VkMappedMemoryRange ends

VkMemoryAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = allocationSize, type = VkDeviceSize, offset = 16, size = 8
    allocationSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = memoryTypeIndex, type = uint32_t, offset = 24, size = 4
    memoryTypeIndex dword ?
VkMemoryAllocateInfo ends

; TYPEDEF VkMemoryAllocateInfo = struct VkMemoryAllocateInfo, TypeKind.ELABORATED
; remove struct typedef

VkMemoryAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = allocationSize, type = VkDeviceSize, offset = 16, size = 8
    allocationSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = memoryTypeIndex, type = uint32_t, offset = 24, size = 4
    memoryTypeIndex dword ?
VkMemoryAllocateInfo ends

VkMemoryRequirements struct
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 0, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = alignment, type = VkDeviceSize, offset = 8, size = 8
    alignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = memoryTypeBits, type = uint32_t, offset = 16, size = 4
    memoryTypeBits dword ?
VkMemoryRequirements ends

; TYPEDEF VkMemoryRequirements = struct VkMemoryRequirements, TypeKind.ELABORATED
; remove struct typedef

VkMemoryRequirements struct
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 0, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = alignment, type = VkDeviceSize, offset = 8, size = 8
    alignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = memoryTypeBits, type = uint32_t, offset = 16, size = 4
    memoryTypeBits dword ?
VkMemoryRequirements ends

VkSparseMemoryBind struct
;   TypeKind.ELABORATED
;   name = resourceOffset, type = VkDeviceSize, offset = 0, size = 8
    resourceOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 8, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 16, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 24, size = 8
    memoryOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = flags, type = VkSparseMemoryBindFlags, offset = 32, size = 4
    flags VkSparseMemoryBindFlags <>
VkSparseMemoryBind ends

; TYPEDEF VkSparseMemoryBind = struct VkSparseMemoryBind, TypeKind.ELABORATED
; remove struct typedef

VkSparseMemoryBind struct
;   TypeKind.ELABORATED
;   name = resourceOffset, type = VkDeviceSize, offset = 0, size = 8
    resourceOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 8, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 16, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 24, size = 8
    memoryOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = flags, type = VkSparseMemoryBindFlags, offset = 32, size = 4
    flags VkSparseMemoryBindFlags <>
VkSparseMemoryBind ends

VkSparseBufferMemoryBindInfo struct
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 0, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = bindCount, type = uint32_t, offset = 8, size = 4
    bindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBinds, type = const VkSparseMemoryBind *, offset = 16, size = 8
    pBinds qword ?
VkSparseBufferMemoryBindInfo ends

; TYPEDEF VkSparseBufferMemoryBindInfo = struct VkSparseBufferMemoryBindInfo, TypeKind.ELABORATED
; remove struct typedef

VkSparseBufferMemoryBindInfo struct
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 0, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = bindCount, type = uint32_t, offset = 8, size = 4
    bindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBinds, type = const VkSparseMemoryBind *, offset = 16, size = 8
    pBinds qword ?
VkSparseBufferMemoryBindInfo ends

VkSparseImageOpaqueMemoryBindInfo struct
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 0, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = bindCount, type = uint32_t, offset = 8, size = 4
    bindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBinds, type = const VkSparseMemoryBind *, offset = 16, size = 8
    pBinds qword ?
VkSparseImageOpaqueMemoryBindInfo ends

; TYPEDEF VkSparseImageOpaqueMemoryBindInfo = struct VkSparseImageOpaqueMemoryBindInfo, TypeKind.ELABORATED
; remove struct typedef

VkSparseImageOpaqueMemoryBindInfo struct
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 0, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = bindCount, type = uint32_t, offset = 8, size = 4
    bindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBinds, type = const VkSparseMemoryBind *, offset = 16, size = 8
    pBinds qword ?
VkSparseImageOpaqueMemoryBindInfo ends

VkImageSubresource struct
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 0, size = 4
    aspectMask VkImageAspectFlags <>
;   TypeKind.ELABORATED
;   name = mipLevel, type = uint32_t, offset = 4, size = 4
    mipLevel dword ?
;   TypeKind.ELABORATED
;   name = arrayLayer, type = uint32_t, offset = 8, size = 4
    arrayLayer dword ?
VkImageSubresource ends

; TYPEDEF VkImageSubresource = struct VkImageSubresource, TypeKind.ELABORATED
; remove struct typedef

VkImageSubresource struct
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 0, size = 4
    aspectMask VkImageAspectFlags <>
;   TypeKind.ELABORATED
;   name = mipLevel, type = uint32_t, offset = 4, size = 4
    mipLevel dword ?
;   TypeKind.ELABORATED
;   name = arrayLayer, type = uint32_t, offset = 8, size = 4
    arrayLayer dword ?
VkImageSubresource ends

VkSparseImageMemoryBind struct
;   TypeKind.ELABORATED
;   name = subresource, type = VkImageSubresource, offset = 0, size = 12
    subresource VkImageSubresource <>
;   TypeKind.ELABORATED
;   name = offset, type = VkOffset3D, offset = 12, size = 12
    _offset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 24, size = 12
    extent VkExtent3D <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 40, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 48, size = 8
    memoryOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = flags, type = VkSparseMemoryBindFlags, offset = 56, size = 4
    flags VkSparseMemoryBindFlags <>
VkSparseImageMemoryBind ends

; TYPEDEF VkSparseImageMemoryBind = struct VkSparseImageMemoryBind, TypeKind.ELABORATED
; remove struct typedef

VkSparseImageMemoryBind struct
;   TypeKind.ELABORATED
;   name = subresource, type = VkImageSubresource, offset = 0, size = 12
    subresource VkImageSubresource <>
;   TypeKind.ELABORATED
;   name = offset, type = VkOffset3D, offset = 12, size = 12
    _offset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 24, size = 12
    extent VkExtent3D <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 40, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 48, size = 8
    memoryOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = flags, type = VkSparseMemoryBindFlags, offset = 56, size = 4
    flags VkSparseMemoryBindFlags <>
VkSparseImageMemoryBind ends

VkSparseImageMemoryBindInfo struct
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 0, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = bindCount, type = uint32_t, offset = 8, size = 4
    bindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBinds, type = const VkSparseImageMemoryBind *, offset = 16, size = 8
    pBinds qword ?
VkSparseImageMemoryBindInfo ends

; TYPEDEF VkSparseImageMemoryBindInfo = struct VkSparseImageMemoryBindInfo, TypeKind.ELABORATED
; remove struct typedef

VkSparseImageMemoryBindInfo struct
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 0, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = bindCount, type = uint32_t, offset = 8, size = 4
    bindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBinds, type = const VkSparseImageMemoryBind *, offset = 16, size = 8
    pBinds qword ?
VkSparseImageMemoryBindInfo ends

VkBindSparseInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = waitSemaphoreCount, type = uint32_t, offset = 16, size = 4
    waitSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pWaitSemaphores, type = const VkSemaphore *, offset = 24, size = 8
    pWaitSemaphores qword ?
;   TypeKind.ELABORATED
;   name = bufferBindCount, type = uint32_t, offset = 32, size = 4
    bufferBindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBufferBinds, type = const VkSparseBufferMemoryBindInfo *, offset = 40, size = 8
    pBufferBinds qword ?
;   TypeKind.ELABORATED
;   name = imageOpaqueBindCount, type = uint32_t, offset = 48, size = 4
    imageOpaqueBindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pImageOpaqueBinds, type = const VkSparseImageOpaqueMemoryBindInfo *, offset = 56, size = 8
    pImageOpaqueBinds qword ?
;   TypeKind.ELABORATED
;   name = imageBindCount, type = uint32_t, offset = 64, size = 4
    imageBindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pImageBinds, type = const VkSparseImageMemoryBindInfo *, offset = 72, size = 8
    pImageBinds qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphoreCount, type = uint32_t, offset = 80, size = 4
    signalSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSignalSemaphores, type = const VkSemaphore *, offset = 88, size = 8
    pSignalSemaphores qword ?
VkBindSparseInfo ends

; TYPEDEF VkBindSparseInfo = struct VkBindSparseInfo, TypeKind.ELABORATED
; remove struct typedef

VkBindSparseInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = waitSemaphoreCount, type = uint32_t, offset = 16, size = 4
    waitSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pWaitSemaphores, type = const VkSemaphore *, offset = 24, size = 8
    pWaitSemaphores qword ?
;   TypeKind.ELABORATED
;   name = bufferBindCount, type = uint32_t, offset = 32, size = 4
    bufferBindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBufferBinds, type = const VkSparseBufferMemoryBindInfo *, offset = 40, size = 8
    pBufferBinds qword ?
;   TypeKind.ELABORATED
;   name = imageOpaqueBindCount, type = uint32_t, offset = 48, size = 4
    imageOpaqueBindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pImageOpaqueBinds, type = const VkSparseImageOpaqueMemoryBindInfo *, offset = 56, size = 8
    pImageOpaqueBinds qword ?
;   TypeKind.ELABORATED
;   name = imageBindCount, type = uint32_t, offset = 64, size = 4
    imageBindCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pImageBinds, type = const VkSparseImageMemoryBindInfo *, offset = 72, size = 8
    pImageBinds qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphoreCount, type = uint32_t, offset = 80, size = 4
    signalSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSignalSemaphores, type = const VkSemaphore *, offset = 88, size = 8
    pSignalSemaphores qword ?
VkBindSparseInfo ends

VkSparseImageFormatProperties struct
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 0, size = 4
    aspectMask VkImageAspectFlags <>
;   TypeKind.ELABORATED
;   name = imageGranularity, type = VkExtent3D, offset = 4, size = 12
    imageGranularity VkExtent3D <>
;   TypeKind.ELABORATED
;   name = flags, type = VkSparseImageFormatFlags, offset = 16, size = 4
    flags VkSparseImageFormatFlags <>
VkSparseImageFormatProperties ends

; TYPEDEF VkSparseImageFormatProperties = struct VkSparseImageFormatProperties, TypeKind.ELABORATED
; remove struct typedef

VkSparseImageFormatProperties struct
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 0, size = 4
    aspectMask VkImageAspectFlags <>
;   TypeKind.ELABORATED
;   name = imageGranularity, type = VkExtent3D, offset = 4, size = 12
    imageGranularity VkExtent3D <>
;   TypeKind.ELABORATED
;   name = flags, type = VkSparseImageFormatFlags, offset = 16, size = 4
    flags VkSparseImageFormatFlags <>
VkSparseImageFormatProperties ends

VkSparseImageMemoryRequirements struct
;   TypeKind.ELABORATED
;   name = formatProperties, type = VkSparseImageFormatProperties, offset = 0, size = 20
    formatProperties VkSparseImageFormatProperties <>
;   TypeKind.ELABORATED
;   name = imageMipTailFirstLod, type = uint32_t, offset = 20, size = 4
    imageMipTailFirstLod dword ?
;   TypeKind.ELABORATED
;   name = imageMipTailSize, type = VkDeviceSize, offset = 24, size = 8
    imageMipTailSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = imageMipTailOffset, type = VkDeviceSize, offset = 32, size = 8
    imageMipTailOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = imageMipTailStride, type = VkDeviceSize, offset = 40, size = 8
    imageMipTailStride VkDeviceSize <>
VkSparseImageMemoryRequirements ends

; TYPEDEF VkSparseImageMemoryRequirements = struct VkSparseImageMemoryRequirements, TypeKind.ELABORATED
; remove struct typedef

VkSparseImageMemoryRequirements struct
;   TypeKind.ELABORATED
;   name = formatProperties, type = VkSparseImageFormatProperties, offset = 0, size = 20
    formatProperties VkSparseImageFormatProperties <>
;   TypeKind.ELABORATED
;   name = imageMipTailFirstLod, type = uint32_t, offset = 20, size = 4
    imageMipTailFirstLod dword ?
;   TypeKind.ELABORATED
;   name = imageMipTailSize, type = VkDeviceSize, offset = 24, size = 8
    imageMipTailSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = imageMipTailOffset, type = VkDeviceSize, offset = 32, size = 8
    imageMipTailOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = imageMipTailStride, type = VkDeviceSize, offset = 40, size = 8
    imageMipTailStride VkDeviceSize <>
VkSparseImageMemoryRequirements ends

VkFenceCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkFenceCreateFlags, offset = 16, size = 4
    flags VkFenceCreateFlags <>
VkFenceCreateInfo ends

; TYPEDEF VkFenceCreateInfo = struct VkFenceCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkFenceCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkFenceCreateFlags, offset = 16, size = 4
    flags VkFenceCreateFlags <>
VkFenceCreateInfo ends

VkSemaphoreCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSemaphoreCreateFlags, offset = 16, size = 4
    flags VkSemaphoreCreateFlags <>
VkSemaphoreCreateInfo ends

; TYPEDEF VkSemaphoreCreateInfo = struct VkSemaphoreCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkSemaphoreCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSemaphoreCreateFlags, offset = 16, size = 4
    flags VkSemaphoreCreateFlags <>
VkSemaphoreCreateInfo ends

VkEventCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkEventCreateFlags, offset = 16, size = 4
    flags VkEventCreateFlags <>
VkEventCreateInfo ends

; TYPEDEF VkEventCreateInfo = struct VkEventCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkEventCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkEventCreateFlags, offset = 16, size = 4
    flags VkEventCreateFlags <>
VkEventCreateInfo ends

VkQueryPoolCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkQueryPoolCreateFlags, offset = 16, size = 4
    flags VkQueryPoolCreateFlags <>
;   TypeKind.ELABORATED
;   name = queryType, type = VkQueryType, offset = 20, size = 4
    queryType VkQueryType <>
;   TypeKind.ELABORATED
;   name = queryCount, type = uint32_t, offset = 24, size = 4
    queryCount dword ?
;   TypeKind.ELABORATED
;   name = pipelineStatistics, type = VkQueryPipelineStatisticFlags, offset = 28, size = 4
    pipelineStatistics VkQueryPipelineStatisticFlags <>
VkQueryPoolCreateInfo ends

; TYPEDEF VkQueryPoolCreateInfo = struct VkQueryPoolCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkQueryPoolCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkQueryPoolCreateFlags, offset = 16, size = 4
    flags VkQueryPoolCreateFlags <>
;   TypeKind.ELABORATED
;   name = queryType, type = VkQueryType, offset = 20, size = 4
    queryType VkQueryType <>
;   TypeKind.ELABORATED
;   name = queryCount, type = uint32_t, offset = 24, size = 4
    queryCount dword ?
;   TypeKind.ELABORATED
;   name = pipelineStatistics, type = VkQueryPipelineStatisticFlags, offset = 28, size = 4
    pipelineStatistics VkQueryPipelineStatisticFlags <>
VkQueryPoolCreateInfo ends

VkBufferCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkBufferCreateFlags, offset = 16, size = 4
    flags VkBufferCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 24, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = usage, type = VkBufferUsageFlags, offset = 32, size = 4
    usage VkBufferUsageFlags <>
;   TypeKind.ELABORATED
;   name = sharingMode, type = VkSharingMode, offset = 36, size = 4
    sharingMode VkSharingMode <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndexCount, type = uint32_t, offset = 40, size = 4
    queueFamilyIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pQueueFamilyIndices, type = const uint32_t *, offset = 48, size = 8
    pQueueFamilyIndices qword ?
VkBufferCreateInfo ends

; TYPEDEF VkBufferCreateInfo = struct VkBufferCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkBufferCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkBufferCreateFlags, offset = 16, size = 4
    flags VkBufferCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 24, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = usage, type = VkBufferUsageFlags, offset = 32, size = 4
    usage VkBufferUsageFlags <>
;   TypeKind.ELABORATED
;   name = sharingMode, type = VkSharingMode, offset = 36, size = 4
    sharingMode VkSharingMode <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndexCount, type = uint32_t, offset = 40, size = 4
    queueFamilyIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pQueueFamilyIndices, type = const uint32_t *, offset = 48, size = 8
    pQueueFamilyIndices qword ?
VkBufferCreateInfo ends

VkBufferViewCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkBufferViewCreateFlags, offset = 16, size = 4
    flags VkBufferViewCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 24, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 32, size = 4
    format VkFormat <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 40, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = range, type = VkDeviceSize, offset = 48, size = 8
    range VkDeviceSize <>
VkBufferViewCreateInfo ends

; TYPEDEF VkBufferViewCreateInfo = struct VkBufferViewCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkBufferViewCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkBufferViewCreateFlags, offset = 16, size = 4
    flags VkBufferViewCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 24, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 32, size = 4
    format VkFormat <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 40, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = range, type = VkDeviceSize, offset = 48, size = 8
    range VkDeviceSize <>
VkBufferViewCreateInfo ends

VkImageCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkImageCreateFlags, offset = 16, size = 4
    flags dword ?
;   TypeKind.ELABORATED
;   name = imageType, type = VkImageType, offset = 20, size = 4
    imageType VkImageType <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 24, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 28, size = 12
    extent VkExtent3D <>
;   TypeKind.ELABORATED
;   name = mipLevels, type = uint32_t, offset = 40, size = 4
    mipLevels dword ?
;   TypeKind.ELABORATED
;   name = arrayLayers, type = uint32_t, offset = 44, size = 4
    arrayLayers dword ?
;   TypeKind.ELABORATED
;   name = samples, type = VkSampleCountFlagBits, offset = 48, size = 4
    samples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = tiling, type = VkImageTiling, offset = 52, size = 4
    tiling VkImageTiling <>
;   TypeKind.ELABORATED
;   name = usage, type = VkImageUsageFlags, offset = 56, size = 4
    usage VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = sharingMode, type = VkSharingMode, offset = 60, size = 4
    sharingMode VkSharingMode <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndexCount, type = uint32_t, offset = 64, size = 4
    queueFamilyIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pQueueFamilyIndices, type = const uint32_t *, offset = 72, size = 8
    pQueueFamilyIndices qword ?
;   TypeKind.ELABORATED
;   name = initialLayout, type = VkImageLayout, offset = 80, size = 4
    initialLayout VkImageLayout <>
VkImageCreateInfo ends

; TYPEDEF VkImageCreateInfo = struct VkImageCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkImageCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkImageCreateFlags, offset = 16, size = 4
    flags dword ?
;   TypeKind.ELABORATED
;   name = imageType, type = VkImageType, offset = 20, size = 4
    imageType VkImageType <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 24, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 28, size = 12
    extent VkExtent3D <>
;   TypeKind.ELABORATED
;   name = mipLevels, type = uint32_t, offset = 40, size = 4
    mipLevels dword ?
;   TypeKind.ELABORATED
;   name = arrayLayers, type = uint32_t, offset = 44, size = 4
    arrayLayers dword ?
;   TypeKind.ELABORATED
;   name = samples, type = VkSampleCountFlagBits, offset = 48, size = 4
    samples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = tiling, type = VkImageTiling, offset = 52, size = 4
    tiling VkImageTiling <>
;   TypeKind.ELABORATED
;   name = usage, type = VkImageUsageFlags, offset = 56, size = 4
    usage VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = sharingMode, type = VkSharingMode, offset = 60, size = 4
    sharingMode VkSharingMode <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndexCount, type = uint32_t, offset = 64, size = 4
    queueFamilyIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pQueueFamilyIndices, type = const uint32_t *, offset = 72, size = 8
    pQueueFamilyIndices qword ?
;   TypeKind.ELABORATED
;   name = initialLayout, type = VkImageLayout, offset = 80, size = 4
    initialLayout VkImageLayout <>
VkImageCreateInfo ends

VkSubresourceLayout struct
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 0, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 8, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = rowPitch, type = VkDeviceSize, offset = 16, size = 8
    rowPitch VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = arrayPitch, type = VkDeviceSize, offset = 24, size = 8
    arrayPitch VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = depthPitch, type = VkDeviceSize, offset = 32, size = 8
    depthPitch VkDeviceSize <>
VkSubresourceLayout ends

; TYPEDEF VkSubresourceLayout = struct VkSubresourceLayout, TypeKind.ELABORATED
; remove struct typedef

VkSubresourceLayout struct
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 0, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 8, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = rowPitch, type = VkDeviceSize, offset = 16, size = 8
    rowPitch VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = arrayPitch, type = VkDeviceSize, offset = 24, size = 8
    arrayPitch VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = depthPitch, type = VkDeviceSize, offset = 32, size = 8
    depthPitch VkDeviceSize <>
VkSubresourceLayout ends

VkComponentMapping struct
;   TypeKind.ELABORATED
;   name = r, type = VkComponentSwizzle, offset = 0, size = 4
    r VkComponentSwizzle <>
;   TypeKind.ELABORATED
;   name = g, type = VkComponentSwizzle, offset = 4, size = 4
    g VkComponentSwizzle <>
;   TypeKind.ELABORATED
;   name = b, type = VkComponentSwizzle, offset = 8, size = 4
    b VkComponentSwizzle <>
;   TypeKind.ELABORATED
;   name = a, type = VkComponentSwizzle, offset = 12, size = 4
    a VkComponentSwizzle <>
VkComponentMapping ends

; TYPEDEF VkComponentMapping = struct VkComponentMapping, TypeKind.ELABORATED
; remove struct typedef

VkComponentMapping struct
;   TypeKind.ELABORATED
;   name = r, type = VkComponentSwizzle, offset = 0, size = 4
    r VkComponentSwizzle <>
;   TypeKind.ELABORATED
;   name = g, type = VkComponentSwizzle, offset = 4, size = 4
    g VkComponentSwizzle <>
;   TypeKind.ELABORATED
;   name = b, type = VkComponentSwizzle, offset = 8, size = 4
    b VkComponentSwizzle <>
;   TypeKind.ELABORATED
;   name = a, type = VkComponentSwizzle, offset = 12, size = 4
    a VkComponentSwizzle <>
VkComponentMapping ends

VkImageViewCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkImageViewCreateFlags, offset = 16, size = 4
    flags VkImageViewCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 24, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = viewType, type = VkImageViewType, offset = 32, size = 4
    viewType VkImageViewType <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 36, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = components, type = VkComponentMapping, offset = 40, size = 16
    components VkComponentMapping <>
;   TypeKind.ELABORATED
;   name = subresourceRange, type = VkImageSubresourceRange, offset = 56, size = 20
    subresourceRange VkImageSubresourceRange <>
VkImageViewCreateInfo ends

; TYPEDEF VkImageViewCreateInfo = struct VkImageViewCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkImageViewCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkImageViewCreateFlags, offset = 16, size = 4
    flags VkImageViewCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 24, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = viewType, type = VkImageViewType, offset = 32, size = 4
    viewType VkImageViewType <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 36, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = components, type = VkComponentMapping, offset = 40, size = 16
    components VkComponentMapping <>
;   TypeKind.ELABORATED
;   name = subresourceRange, type = VkImageSubresourceRange, offset = 56, size = 20
    subresourceRange VkImageSubresourceRange <>
VkImageViewCreateInfo ends

VkShaderModuleCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkShaderModuleCreateFlags, offset = 16, size = 4
    flags VkShaderModuleCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = codeSize, type = size_t, offset = 24, size = 8
    codeSize qword ?
;   TypeKind.POINTER
;   name = pCode, type = const uint32_t *, offset = 32, size = 8
    pCode qword ?
VkShaderModuleCreateInfo ends

; TYPEDEF VkShaderModuleCreateInfo = struct VkShaderModuleCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkShaderModuleCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkShaderModuleCreateFlags, offset = 16, size = 4
    flags VkShaderModuleCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = codeSize, type = size_t, offset = 24, size = 8
    codeSize qword ?
;   TypeKind.POINTER
;   name = pCode, type = const uint32_t *, offset = 32, size = 8
    pCode qword ?
VkShaderModuleCreateInfo ends

VkPipelineCacheCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCacheCreateFlags, offset = 16, size = 4
    flags VkPipelineCacheCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = initialDataSize, type = size_t, offset = 24, size = 8
    initialDataSize qword ?
;   TypeKind.POINTER
;   name = pInitialData, type = const void *, offset = 32, size = 8
    pInitialData qword ?
VkPipelineCacheCreateInfo ends

; TYPEDEF VkPipelineCacheCreateInfo = struct VkPipelineCacheCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineCacheCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCacheCreateFlags, offset = 16, size = 4
    flags VkPipelineCacheCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = initialDataSize, type = size_t, offset = 24, size = 8
    initialDataSize qword ?
;   TypeKind.POINTER
;   name = pInitialData, type = const void *, offset = 32, size = 8
    pInitialData qword ?
VkPipelineCacheCreateInfo ends

VkSpecializationMapEntry struct
;   TypeKind.ELABORATED
;   name = constantID, type = uint32_t, offset = 0, size = 4
    constantID dword ?
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 4, size = 4
    _offset dword ?
;   TypeKind.ELABORATED
;   name = size, type = size_t, offset = 8, size = 8
    _size qword ?
VkSpecializationMapEntry ends

; TYPEDEF VkSpecializationMapEntry = struct VkSpecializationMapEntry, TypeKind.ELABORATED
; remove struct typedef

VkSpecializationMapEntry struct
;   TypeKind.ELABORATED
;   name = constantID, type = uint32_t, offset = 0, size = 4
    constantID dword ?
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 4, size = 4
    _offset dword ?
;   TypeKind.ELABORATED
;   name = size, type = size_t, offset = 8, size = 8
    _size qword ?
VkSpecializationMapEntry ends

VkSpecializationInfo struct
;   TypeKind.ELABORATED
;   name = mapEntryCount, type = uint32_t, offset = 0, size = 4
    mapEntryCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pMapEntries, type = const VkSpecializationMapEntry *, offset = 8, size = 8
    pMapEntries qword ?
;   TypeKind.ELABORATED
;   name = dataSize, type = size_t, offset = 16, size = 8
    dataSize qword ?
;   TypeKind.POINTER
;   name = pData, type = const void *, offset = 24, size = 8
    pData qword ?
VkSpecializationInfo ends

; TYPEDEF VkSpecializationInfo = struct VkSpecializationInfo, TypeKind.ELABORATED
; remove struct typedef

VkSpecializationInfo struct
;   TypeKind.ELABORATED
;   name = mapEntryCount, type = uint32_t, offset = 0, size = 4
    mapEntryCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pMapEntries, type = const VkSpecializationMapEntry *, offset = 8, size = 8
    pMapEntries qword ?
;   TypeKind.ELABORATED
;   name = dataSize, type = size_t, offset = 16, size = 8
    dataSize qword ?
;   TypeKind.POINTER
;   name = pData, type = const void *, offset = 24, size = 8
    pData qword ?
VkSpecializationInfo ends

VkPipelineShaderStageCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineShaderStageCreateFlags, offset = 16, size = 4
    flags VkPipelineShaderStageCreateFlags <>
;   TypeKind.ELABORATED
;   name = stage, type = VkShaderStageFlagBits, offset = 20, size = 4
    stage VkShaderStageFlagBits <>
;   TypeKind.ELABORATED
;   name = module, type = VkShaderModule, offset = 24, size = 8
    module VkShaderModule <>
;   TypeKind.POINTER
;   name = pName, type = const char *, offset = 32, size = 8
    pName qword ?
;   TypeKind.POINTER
;   name = pSpecializationInfo, type = const VkSpecializationInfo *, offset = 40, size = 8
    pSpecializationInfo qword ?
VkPipelineShaderStageCreateInfo ends

; TYPEDEF VkPipelineShaderStageCreateInfo = struct VkPipelineShaderStageCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineShaderStageCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineShaderStageCreateFlags, offset = 16, size = 4
    flags VkPipelineShaderStageCreateFlags <>
;   TypeKind.ELABORATED
;   name = stage, type = VkShaderStageFlagBits, offset = 20, size = 4
    stage VkShaderStageFlagBits <>
;   TypeKind.ELABORATED
;   name = module, type = VkShaderModule, offset = 24, size = 8
    module VkShaderModule <>
;   TypeKind.POINTER
;   name = pName, type = const char *, offset = 32, size = 8
    pName qword ?
;   TypeKind.POINTER
;   name = pSpecializationInfo, type = const VkSpecializationInfo *, offset = 40, size = 8
    pSpecializationInfo qword ?
VkPipelineShaderStageCreateInfo ends

VkComputePipelineCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreateFlags, offset = 16, size = 4
    flags VkPipelineCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = stage, type = VkPipelineShaderStageCreateInfo, offset = 24, size = 48
    stage VkPipelineShaderStageCreateInfo <>
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 72, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = basePipelineHandle, type = VkPipeline, offset = 80, size = 8
    basePipelineHandle VkPipeline <>
;   TypeKind.ELABORATED
;   name = basePipelineIndex, type = int32_t, offset = 88, size = 4
    basePipelineIndex sdword ?
VkComputePipelineCreateInfo ends

; TYPEDEF VkComputePipelineCreateInfo = struct VkComputePipelineCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkComputePipelineCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreateFlags, offset = 16, size = 4
    flags VkPipelineCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = stage, type = VkPipelineShaderStageCreateInfo, offset = 24, size = 48
    stage VkPipelineShaderStageCreateInfo <>
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 72, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = basePipelineHandle, type = VkPipeline, offset = 80, size = 8
    basePipelineHandle VkPipeline <>
;   TypeKind.ELABORATED
;   name = basePipelineIndex, type = int32_t, offset = 88, size = 4
    basePipelineIndex sdword ?
VkComputePipelineCreateInfo ends

VkVertexInputBindingDescription struct
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 0, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = stride, type = uint32_t, offset = 4, size = 4
    stride dword ?
;   TypeKind.ELABORATED
;   name = inputRate, type = VkVertexInputRate, offset = 8, size = 4
    inputRate VkVertexInputRate <>
VkVertexInputBindingDescription ends

; TYPEDEF VkVertexInputBindingDescription = struct VkVertexInputBindingDescription, TypeKind.ELABORATED
; remove struct typedef

VkVertexInputBindingDescription struct
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 0, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = stride, type = uint32_t, offset = 4, size = 4
    stride dword ?
;   TypeKind.ELABORATED
;   name = inputRate, type = VkVertexInputRate, offset = 8, size = 4
    inputRate VkVertexInputRate <>
VkVertexInputBindingDescription ends

VkVertexInputAttributeDescription struct
;   TypeKind.ELABORATED
;   name = location, type = uint32_t, offset = 0, size = 4
    location dword ?
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 4, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 8, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 12, size = 4
    _offset dword ?
VkVertexInputAttributeDescription ends

; TYPEDEF VkVertexInputAttributeDescription = struct VkVertexInputAttributeDescription, TypeKind.ELABORATED
; remove struct typedef

VkVertexInputAttributeDescription struct
;   TypeKind.ELABORATED
;   name = location, type = uint32_t, offset = 0, size = 4
    location dword ?
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 4, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 8, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 12, size = 4
    _offset dword ?
VkVertexInputAttributeDescription ends

VkPipelineVertexInputStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineVertexInputStateCreateFlags, offset = 16, size = 4
    flags VkPipelineVertexInputStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = vertexBindingDescriptionCount, type = uint32_t, offset = 20, size = 4
    vertexBindingDescriptionCount dword ?
;   TypeKind.POINTER
;   name = pVertexBindingDescriptions, type = const VkVertexInputBindingDescription *, offset = 24, size = 8
    pVertexBindingDescriptions qword ?
;   TypeKind.ELABORATED
;   name = vertexAttributeDescriptionCount, type = uint32_t, offset = 32, size = 4
    vertexAttributeDescriptionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pVertexAttributeDescriptions, type = const VkVertexInputAttributeDescription *, offset = 40, size = 8
    pVertexAttributeDescriptions qword ?
VkPipelineVertexInputStateCreateInfo ends

; TYPEDEF VkPipelineVertexInputStateCreateInfo = struct VkPipelineVertexInputStateCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineVertexInputStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineVertexInputStateCreateFlags, offset = 16, size = 4
    flags VkPipelineVertexInputStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = vertexBindingDescriptionCount, type = uint32_t, offset = 20, size = 4
    vertexBindingDescriptionCount dword ?
;   TypeKind.POINTER
;   name = pVertexBindingDescriptions, type = const VkVertexInputBindingDescription *, offset = 24, size = 8
    pVertexBindingDescriptions qword ?
;   TypeKind.ELABORATED
;   name = vertexAttributeDescriptionCount, type = uint32_t, offset = 32, size = 4
    vertexAttributeDescriptionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pVertexAttributeDescriptions, type = const VkVertexInputAttributeDescription *, offset = 40, size = 8
    pVertexAttributeDescriptions qword ?
VkPipelineVertexInputStateCreateInfo ends

VkPipelineInputAssemblyStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineInputAssemblyStateCreateFlags, offset = 16, size = 4
    flags VkPipelineInputAssemblyStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = topology, type = VkPrimitiveTopology, offset = 20, size = 4
    topology VkPrimitiveTopology <>
;   TypeKind.ELABORATED
;   name = primitiveRestartEnable, type = VkBool32, offset = 24, size = 4
    primitiveRestartEnable VkBool32 <>
VkPipelineInputAssemblyStateCreateInfo ends

; TYPEDEF VkPipelineInputAssemblyStateCreateInfo = struct VkPipelineInputAssemblyStateCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineInputAssemblyStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineInputAssemblyStateCreateFlags, offset = 16, size = 4
    flags VkPipelineInputAssemblyStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = topology, type = VkPrimitiveTopology, offset = 20, size = 4
    topology VkPrimitiveTopology <>
;   TypeKind.ELABORATED
;   name = primitiveRestartEnable, type = VkBool32, offset = 24, size = 4
    primitiveRestartEnable VkBool32 <>
VkPipelineInputAssemblyStateCreateInfo ends

VkPipelineTessellationStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineTessellationStateCreateFlags, offset = 16, size = 4
    flags VkPipelineTessellationStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = patchControlPoints, type = uint32_t, offset = 20, size = 4
    patchControlPoints dword ?
VkPipelineTessellationStateCreateInfo ends

; TYPEDEF VkPipelineTessellationStateCreateInfo = struct VkPipelineTessellationStateCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineTessellationStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineTessellationStateCreateFlags, offset = 16, size = 4
    flags VkPipelineTessellationStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = patchControlPoints, type = uint32_t, offset = 20, size = 4
    patchControlPoints dword ?
VkPipelineTessellationStateCreateInfo ends

VkViewport struct
;   TypeKind.FLOAT
;   name = x, type = float, offset = 0, size = 4
    x real4 ?
;   TypeKind.FLOAT
;   name = y, type = float, offset = 4, size = 4
    y real4 ?
;   TypeKind.FLOAT
;   name = width, type = float, offset = 8, size = 4
    _width real4 ?
;   TypeKind.FLOAT
;   name = height, type = float, offset = 12, size = 4
    height real4 ?
;   TypeKind.FLOAT
;   name = minDepth, type = float, offset = 16, size = 4
    minDepth real4 ?
;   TypeKind.FLOAT
;   name = maxDepth, type = float, offset = 20, size = 4
    maxDepth real4 ?
VkViewport ends

; TYPEDEF VkViewport = struct VkViewport, TypeKind.ELABORATED
; remove struct typedef

VkViewport struct
;   TypeKind.FLOAT
;   name = x, type = float, offset = 0, size = 4
    x real4 ?
;   TypeKind.FLOAT
;   name = y, type = float, offset = 4, size = 4
    y real4 ?
;   TypeKind.FLOAT
;   name = width, type = float, offset = 8, size = 4
    _width real4 ?
;   TypeKind.FLOAT
;   name = height, type = float, offset = 12, size = 4
    height real4 ?
;   TypeKind.FLOAT
;   name = minDepth, type = float, offset = 16, size = 4
    minDepth real4 ?
;   TypeKind.FLOAT
;   name = maxDepth, type = float, offset = 20, size = 4
    maxDepth real4 ?
VkViewport ends

VkPipelineViewportStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineViewportStateCreateFlags, offset = 16, size = 4
    flags VkPipelineViewportStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = viewportCount, type = uint32_t, offset = 20, size = 4
    viewportCount dword ?
;   TypeKind.POINTER
;   name = pViewports, type = const VkViewport *, offset = 24, size = 8
    pViewports qword ?
;   TypeKind.ELABORATED
;   name = scissorCount, type = uint32_t, offset = 32, size = 4
    scissorCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pScissors, type = const VkRect2D *, offset = 40, size = 8
    pScissors qword ?
VkPipelineViewportStateCreateInfo ends

; TYPEDEF VkPipelineViewportStateCreateInfo = struct VkPipelineViewportStateCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineViewportStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineViewportStateCreateFlags, offset = 16, size = 4
    flags VkPipelineViewportStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = viewportCount, type = uint32_t, offset = 20, size = 4
    viewportCount dword ?
;   TypeKind.POINTER
;   name = pViewports, type = const VkViewport *, offset = 24, size = 8
    pViewports qword ?
;   TypeKind.ELABORATED
;   name = scissorCount, type = uint32_t, offset = 32, size = 4
    scissorCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pScissors, type = const VkRect2D *, offset = 40, size = 8
    pScissors qword ?
VkPipelineViewportStateCreateInfo ends

VkPipelineRasterizationStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineRasterizationStateCreateFlags, offset = 16, size = 4
    flags VkPipelineRasterizationStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = depthClampEnable, type = VkBool32, offset = 20, size = 4
    depthClampEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = rasterizerDiscardEnable, type = VkBool32, offset = 24, size = 4
    rasterizerDiscardEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = polygonMode, type = VkPolygonMode, offset = 28, size = 4
    polygonMode VkPolygonMode <>
;   TypeKind.ELABORATED
;   name = cullMode, type = VkCullModeFlags, offset = 32, size = 4
    cullMode VkCullModeFlags <>
;   TypeKind.ELABORATED
;   name = frontFace, type = VkFrontFace, offset = 36, size = 4
    frontFace VkFrontFace <>
;   TypeKind.ELABORATED
;   name = depthBiasEnable, type = VkBool32, offset = 40, size = 4
    depthBiasEnable VkBool32 <>
;   TypeKind.FLOAT
;   name = depthBiasConstantFactor, type = float, offset = 44, size = 4
    depthBiasConstantFactor real4 ?
;   TypeKind.FLOAT
;   name = depthBiasClamp, type = float, offset = 48, size = 4
    depthBiasClamp real4 ?
;   TypeKind.FLOAT
;   name = depthBiasSlopeFactor, type = float, offset = 52, size = 4
    depthBiasSlopeFactor real4 ?
;   TypeKind.FLOAT
;   name = lineWidth, type = float, offset = 56, size = 4
    lineWidth real4 ?
VkPipelineRasterizationStateCreateInfo ends

; TYPEDEF VkPipelineRasterizationStateCreateInfo = struct VkPipelineRasterizationStateCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineRasterizationStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineRasterizationStateCreateFlags, offset = 16, size = 4
    flags VkPipelineRasterizationStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = depthClampEnable, type = VkBool32, offset = 20, size = 4
    depthClampEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = rasterizerDiscardEnable, type = VkBool32, offset = 24, size = 4
    rasterizerDiscardEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = polygonMode, type = VkPolygonMode, offset = 28, size = 4
    polygonMode VkPolygonMode <>
;   TypeKind.ELABORATED
;   name = cullMode, type = VkCullModeFlags, offset = 32, size = 4
    cullMode VkCullModeFlags <>
;   TypeKind.ELABORATED
;   name = frontFace, type = VkFrontFace, offset = 36, size = 4
    frontFace VkFrontFace <>
;   TypeKind.ELABORATED
;   name = depthBiasEnable, type = VkBool32, offset = 40, size = 4
    depthBiasEnable VkBool32 <>
;   TypeKind.FLOAT
;   name = depthBiasConstantFactor, type = float, offset = 44, size = 4
    depthBiasConstantFactor real4 ?
;   TypeKind.FLOAT
;   name = depthBiasClamp, type = float, offset = 48, size = 4
    depthBiasClamp real4 ?
;   TypeKind.FLOAT
;   name = depthBiasSlopeFactor, type = float, offset = 52, size = 4
    depthBiasSlopeFactor real4 ?
;   TypeKind.FLOAT
;   name = lineWidth, type = float, offset = 56, size = 4
    lineWidth real4 ?
VkPipelineRasterizationStateCreateInfo ends

VkPipelineMultisampleStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineMultisampleStateCreateFlags, offset = 16, size = 4
    flags VkPipelineMultisampleStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = rasterizationSamples, type = VkSampleCountFlagBits, offset = 20, size = 4
    rasterizationSamples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = sampleShadingEnable, type = VkBool32, offset = 24, size = 4
    sampleShadingEnable VkBool32 <>
;   TypeKind.FLOAT
;   name = minSampleShading, type = float, offset = 28, size = 4
    minSampleShading real4 ?
;   TypeKind.POINTER
;   name = pSampleMask, type = const VkSampleMask *, offset = 32, size = 8
    pSampleMask qword ?
;   TypeKind.ELABORATED
;   name = alphaToCoverageEnable, type = VkBool32, offset = 40, size = 4
    alphaToCoverageEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = alphaToOneEnable, type = VkBool32, offset = 44, size = 4
    alphaToOneEnable VkBool32 <>
VkPipelineMultisampleStateCreateInfo ends

; TYPEDEF VkPipelineMultisampleStateCreateInfo = struct VkPipelineMultisampleStateCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineMultisampleStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineMultisampleStateCreateFlags, offset = 16, size = 4
    flags VkPipelineMultisampleStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = rasterizationSamples, type = VkSampleCountFlagBits, offset = 20, size = 4
    rasterizationSamples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = sampleShadingEnable, type = VkBool32, offset = 24, size = 4
    sampleShadingEnable VkBool32 <>
;   TypeKind.FLOAT
;   name = minSampleShading, type = float, offset = 28, size = 4
    minSampleShading real4 ?
;   TypeKind.POINTER
;   name = pSampleMask, type = const VkSampleMask *, offset = 32, size = 8
    pSampleMask qword ?
;   TypeKind.ELABORATED
;   name = alphaToCoverageEnable, type = VkBool32, offset = 40, size = 4
    alphaToCoverageEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = alphaToOneEnable, type = VkBool32, offset = 44, size = 4
    alphaToOneEnable VkBool32 <>
VkPipelineMultisampleStateCreateInfo ends

VkStencilOpState struct
;   TypeKind.ELABORATED
;   name = failOp, type = VkStencilOp, offset = 0, size = 4
    failOp VkStencilOp <>
;   TypeKind.ELABORATED
;   name = passOp, type = VkStencilOp, offset = 4, size = 4
    passOp VkStencilOp <>
;   TypeKind.ELABORATED
;   name = depthFailOp, type = VkStencilOp, offset = 8, size = 4
    depthFailOp VkStencilOp <>
;   TypeKind.ELABORATED
;   name = compareOp, type = VkCompareOp, offset = 12, size = 4
    compareOp VkCompareOp <>
;   TypeKind.ELABORATED
;   name = compareMask, type = uint32_t, offset = 16, size = 4
    compareMask dword ?
;   TypeKind.ELABORATED
;   name = writeMask, type = uint32_t, offset = 20, size = 4
    writeMask dword ?
;   TypeKind.ELABORATED
;   name = reference, type = uint32_t, offset = 24, size = 4
    reference dword ?
VkStencilOpState ends

; TYPEDEF VkStencilOpState = struct VkStencilOpState, TypeKind.ELABORATED
; remove struct typedef

VkStencilOpState struct
;   TypeKind.ELABORATED
;   name = failOp, type = VkStencilOp, offset = 0, size = 4
    failOp VkStencilOp <>
;   TypeKind.ELABORATED
;   name = passOp, type = VkStencilOp, offset = 4, size = 4
    passOp VkStencilOp <>
;   TypeKind.ELABORATED
;   name = depthFailOp, type = VkStencilOp, offset = 8, size = 4
    depthFailOp VkStencilOp <>
;   TypeKind.ELABORATED
;   name = compareOp, type = VkCompareOp, offset = 12, size = 4
    compareOp VkCompareOp <>
;   TypeKind.ELABORATED
;   name = compareMask, type = uint32_t, offset = 16, size = 4
    compareMask dword ?
;   TypeKind.ELABORATED
;   name = writeMask, type = uint32_t, offset = 20, size = 4
    writeMask dword ?
;   TypeKind.ELABORATED
;   name = reference, type = uint32_t, offset = 24, size = 4
    reference dword ?
VkStencilOpState ends

VkPipelineDepthStencilStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineDepthStencilStateCreateFlags, offset = 16, size = 4
    flags VkPipelineDepthStencilStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = depthTestEnable, type = VkBool32, offset = 20, size = 4
    depthTestEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthWriteEnable, type = VkBool32, offset = 24, size = 4
    depthWriteEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthCompareOp, type = VkCompareOp, offset = 28, size = 4
    depthCompareOp VkCompareOp <>
;   TypeKind.ELABORATED
;   name = depthBoundsTestEnable, type = VkBool32, offset = 32, size = 4
    depthBoundsTestEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = stencilTestEnable, type = VkBool32, offset = 36, size = 4
    stencilTestEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = front, type = VkStencilOpState, offset = 40, size = 28
    front VkStencilOpState <>
;   TypeKind.ELABORATED
;   name = back, type = VkStencilOpState, offset = 68, size = 28
    back VkStencilOpState <>
;   TypeKind.FLOAT
;   name = minDepthBounds, type = float, offset = 96, size = 4
    minDepthBounds real4 ?
;   TypeKind.FLOAT
;   name = maxDepthBounds, type = float, offset = 100, size = 4
    maxDepthBounds real4 ?
VkPipelineDepthStencilStateCreateInfo ends

; TYPEDEF VkPipelineDepthStencilStateCreateInfo = struct VkPipelineDepthStencilStateCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineDepthStencilStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineDepthStencilStateCreateFlags, offset = 16, size = 4
    flags VkPipelineDepthStencilStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = depthTestEnable, type = VkBool32, offset = 20, size = 4
    depthTestEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthWriteEnable, type = VkBool32, offset = 24, size = 4
    depthWriteEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthCompareOp, type = VkCompareOp, offset = 28, size = 4
    depthCompareOp VkCompareOp <>
;   TypeKind.ELABORATED
;   name = depthBoundsTestEnable, type = VkBool32, offset = 32, size = 4
    depthBoundsTestEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = stencilTestEnable, type = VkBool32, offset = 36, size = 4
    stencilTestEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = front, type = VkStencilOpState, offset = 40, size = 28
    front VkStencilOpState <>
;   TypeKind.ELABORATED
;   name = back, type = VkStencilOpState, offset = 68, size = 28
    back VkStencilOpState <>
;   TypeKind.FLOAT
;   name = minDepthBounds, type = float, offset = 96, size = 4
    minDepthBounds real4 ?
;   TypeKind.FLOAT
;   name = maxDepthBounds, type = float, offset = 100, size = 4
    maxDepthBounds real4 ?
VkPipelineDepthStencilStateCreateInfo ends

VkPipelineColorBlendAttachmentState struct
;   TypeKind.ELABORATED
;   name = blendEnable, type = VkBool32, offset = 0, size = 4
    blendEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = srcColorBlendFactor, type = VkBlendFactor, offset = 4, size = 4
    srcColorBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = dstColorBlendFactor, type = VkBlendFactor, offset = 8, size = 4
    dstColorBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = colorBlendOp, type = VkBlendOp, offset = 12, size = 4
    colorBlendOp VkBlendOp <>
;   TypeKind.ELABORATED
;   name = srcAlphaBlendFactor, type = VkBlendFactor, offset = 16, size = 4
    srcAlphaBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = dstAlphaBlendFactor, type = VkBlendFactor, offset = 20, size = 4
    dstAlphaBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = alphaBlendOp, type = VkBlendOp, offset = 24, size = 4
    alphaBlendOp VkBlendOp <>
;   TypeKind.ELABORATED
;   name = colorWriteMask, type = VkColorComponentFlags, offset = 28, size = 4
    colorWriteMask VkColorComponentFlags <>
VkPipelineColorBlendAttachmentState ends

; TYPEDEF VkPipelineColorBlendAttachmentState = struct VkPipelineColorBlendAttachmentState, TypeKind.ELABORATED
; remove struct typedef

VkPipelineColorBlendAttachmentState struct
;   TypeKind.ELABORATED
;   name = blendEnable, type = VkBool32, offset = 0, size = 4
    blendEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = srcColorBlendFactor, type = VkBlendFactor, offset = 4, size = 4
    srcColorBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = dstColorBlendFactor, type = VkBlendFactor, offset = 8, size = 4
    dstColorBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = colorBlendOp, type = VkBlendOp, offset = 12, size = 4
    colorBlendOp VkBlendOp <>
;   TypeKind.ELABORATED
;   name = srcAlphaBlendFactor, type = VkBlendFactor, offset = 16, size = 4
    srcAlphaBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = dstAlphaBlendFactor, type = VkBlendFactor, offset = 20, size = 4
    dstAlphaBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = alphaBlendOp, type = VkBlendOp, offset = 24, size = 4
    alphaBlendOp VkBlendOp <>
;   TypeKind.ELABORATED
;   name = colorWriteMask, type = VkColorComponentFlags, offset = 28, size = 4
    colorWriteMask VkColorComponentFlags <>
VkPipelineColorBlendAttachmentState ends

VkPipelineColorBlendStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineColorBlendStateCreateFlags, offset = 16, size = 4
    flags VkPipelineColorBlendStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = logicOpEnable, type = VkBool32, offset = 20, size = 4
    logicOpEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = logicOp, type = VkLogicOp, offset = 24, size = 4
    logicOp VkLogicOp <>
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 28, size = 4
    attachmentCount dword ?
;   TypeKind.POINTER
;   name = pAttachments, type = const VkPipelineColorBlendAttachmentState *, offset = 32, size = 8
    pAttachments qword ?
;   TypeKind.CONSTANTARRAY
;   name = blendConstants, type = float[4], offset = 40, size = 16
    blendConstants real4 4 dup(?)
VkPipelineColorBlendStateCreateInfo ends

; TYPEDEF VkPipelineColorBlendStateCreateInfo = struct VkPipelineColorBlendStateCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineColorBlendStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineColorBlendStateCreateFlags, offset = 16, size = 4
    flags VkPipelineColorBlendStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = logicOpEnable, type = VkBool32, offset = 20, size = 4
    logicOpEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = logicOp, type = VkLogicOp, offset = 24, size = 4
    logicOp VkLogicOp <>
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 28, size = 4
    attachmentCount dword ?
;   TypeKind.POINTER
;   name = pAttachments, type = const VkPipelineColorBlendAttachmentState *, offset = 32, size = 8
    pAttachments qword ?
;   TypeKind.CONSTANTARRAY
;   name = blendConstants, type = float[4], offset = 40, size = 16
    blendConstants real4 4 dup(?)
VkPipelineColorBlendStateCreateInfo ends

VkPipelineDynamicStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineDynamicStateCreateFlags, offset = 16, size = 4
    flags VkPipelineDynamicStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = dynamicStateCount, type = uint32_t, offset = 20, size = 4
    dynamicStateCount dword ?
;   TypeKind.POINTER
;   name = pDynamicStates, type = const VkDynamicState *, offset = 24, size = 8
    pDynamicStates qword ?
VkPipelineDynamicStateCreateInfo ends

; TYPEDEF VkPipelineDynamicStateCreateInfo = struct VkPipelineDynamicStateCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineDynamicStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineDynamicStateCreateFlags, offset = 16, size = 4
    flags VkPipelineDynamicStateCreateFlags <>
;   TypeKind.ELABORATED
;   name = dynamicStateCount, type = uint32_t, offset = 20, size = 4
    dynamicStateCount dword ?
;   TypeKind.POINTER
;   name = pDynamicStates, type = const VkDynamicState *, offset = 24, size = 8
    pDynamicStates qword ?
VkPipelineDynamicStateCreateInfo ends

VkGraphicsPipelineCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreateFlags, offset = 16, size = 4
    flags VkPipelineCreateFlags <>
;   TypeKind.ELABORATED
;   name = stageCount, type = uint32_t, offset = 20, size = 4
    stageCount dword ?
;   TypeKind.POINTER
;   name = pStages, type = const VkPipelineShaderStageCreateInfo *, offset = 24, size = 8
    pStages qword ?
;   TypeKind.POINTER
;   name = pVertexInputState, type = const VkPipelineVertexInputStateCreateInfo *, offset = 32, size = 8
    pVertexInputState qword ?
;   TypeKind.POINTER
;   name = pInputAssemblyState, type = const VkPipelineInputAssemblyStateCreateInfo *, offset = 40, size = 8
    pInputAssemblyState qword ?
;   TypeKind.POINTER
;   name = pTessellationState, type = const VkPipelineTessellationStateCreateInfo *, offset = 48, size = 8
    pTessellationState qword ?
;   TypeKind.POINTER
;   name = pViewportState, type = const VkPipelineViewportStateCreateInfo *, offset = 56, size = 8
    pViewportState qword ?
;   TypeKind.POINTER
;   name = pRasterizationState, type = const VkPipelineRasterizationStateCreateInfo *, offset = 64, size = 8
    pRasterizationState qword ?
;   TypeKind.POINTER
;   name = pMultisampleState, type = const VkPipelineMultisampleStateCreateInfo *, offset = 72, size = 8
    pMultisampleState qword ?
;   TypeKind.POINTER
;   name = pDepthStencilState, type = const VkPipelineDepthStencilStateCreateInfo *, offset = 80, size = 8
    pDepthStencilState qword ?
;   TypeKind.POINTER
;   name = pColorBlendState, type = const VkPipelineColorBlendStateCreateInfo *, offset = 88, size = 8
    pColorBlendState qword ?
;   TypeKind.POINTER
;   name = pDynamicState, type = const VkPipelineDynamicStateCreateInfo *, offset = 96, size = 8
    pDynamicState qword ?
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 104, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = renderPass, type = VkRenderPass, offset = 112, size = 8
    renderPass VkRenderPass <>
;   TypeKind.ELABORATED
;   name = subpass, type = uint32_t, offset = 120, size = 4
    subpass dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = basePipelineHandle, type = VkPipeline, offset = 128, size = 8
    basePipelineHandle VkPipeline <>
;   TypeKind.ELABORATED
;   name = basePipelineIndex, type = int32_t, offset = 136, size = 4
    basePipelineIndex sdword ?
VkGraphicsPipelineCreateInfo ends

; TYPEDEF VkGraphicsPipelineCreateInfo = struct VkGraphicsPipelineCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkGraphicsPipelineCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreateFlags, offset = 16, size = 4
    flags VkPipelineCreateFlags <>
;   TypeKind.ELABORATED
;   name = stageCount, type = uint32_t, offset = 20, size = 4
    stageCount dword ?
;   TypeKind.POINTER
;   name = pStages, type = const VkPipelineShaderStageCreateInfo *, offset = 24, size = 8
    pStages qword ?
;   TypeKind.POINTER
;   name = pVertexInputState, type = const VkPipelineVertexInputStateCreateInfo *, offset = 32, size = 8
    pVertexInputState qword ?
;   TypeKind.POINTER
;   name = pInputAssemblyState, type = const VkPipelineInputAssemblyStateCreateInfo *, offset = 40, size = 8
    pInputAssemblyState qword ?
;   TypeKind.POINTER
;   name = pTessellationState, type = const VkPipelineTessellationStateCreateInfo *, offset = 48, size = 8
    pTessellationState qword ?
;   TypeKind.POINTER
;   name = pViewportState, type = const VkPipelineViewportStateCreateInfo *, offset = 56, size = 8
    pViewportState qword ?
;   TypeKind.POINTER
;   name = pRasterizationState, type = const VkPipelineRasterizationStateCreateInfo *, offset = 64, size = 8
    pRasterizationState qword ?
;   TypeKind.POINTER
;   name = pMultisampleState, type = const VkPipelineMultisampleStateCreateInfo *, offset = 72, size = 8
    pMultisampleState qword ?
;   TypeKind.POINTER
;   name = pDepthStencilState, type = const VkPipelineDepthStencilStateCreateInfo *, offset = 80, size = 8
    pDepthStencilState qword ?
;   TypeKind.POINTER
;   name = pColorBlendState, type = const VkPipelineColorBlendStateCreateInfo *, offset = 88, size = 8
    pColorBlendState qword ?
;   TypeKind.POINTER
;   name = pDynamicState, type = const VkPipelineDynamicStateCreateInfo *, offset = 96, size = 8
    pDynamicState qword ?
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 104, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = renderPass, type = VkRenderPass, offset = 112, size = 8
    renderPass VkRenderPass <>
;   TypeKind.ELABORATED
;   name = subpass, type = uint32_t, offset = 120, size = 4
    subpass dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = basePipelineHandle, type = VkPipeline, offset = 128, size = 8
    basePipelineHandle VkPipeline <>
;   TypeKind.ELABORATED
;   name = basePipelineIndex, type = int32_t, offset = 136, size = 4
    basePipelineIndex sdword ?
VkGraphicsPipelineCreateInfo ends

VkPushConstantRange struct
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 0, size = 4
    stageFlags VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 4, size = 4
    _offset dword ?
;   TypeKind.ELABORATED
;   name = size, type = uint32_t, offset = 8, size = 4
    _size dword ?
VkPushConstantRange ends

; TYPEDEF VkPushConstantRange = struct VkPushConstantRange, TypeKind.ELABORATED
; remove struct typedef

VkPushConstantRange struct
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 0, size = 4
    stageFlags VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 4, size = 4
    _offset dword ?
;   TypeKind.ELABORATED
;   name = size, type = uint32_t, offset = 8, size = 4
    _size dword ?
VkPushConstantRange ends

VkPipelineLayoutCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineLayoutCreateFlags, offset = 16, size = 4
    flags VkPipelineLayoutCreateFlags <>
;   TypeKind.ELABORATED
;   name = setLayoutCount, type = uint32_t, offset = 20, size = 4
    setLayoutCount dword ?
;   TypeKind.POINTER
;   name = pSetLayouts, type = const VkDescriptorSetLayout *, offset = 24, size = 8
    pSetLayouts qword ?
;   TypeKind.ELABORATED
;   name = pushConstantRangeCount, type = uint32_t, offset = 32, size = 4
    pushConstantRangeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPushConstantRanges, type = const VkPushConstantRange *, offset = 40, size = 8
    pPushConstantRanges qword ?
VkPipelineLayoutCreateInfo ends

; TYPEDEF VkPipelineLayoutCreateInfo = struct VkPipelineLayoutCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineLayoutCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineLayoutCreateFlags, offset = 16, size = 4
    flags VkPipelineLayoutCreateFlags <>
;   TypeKind.ELABORATED
;   name = setLayoutCount, type = uint32_t, offset = 20, size = 4
    setLayoutCount dword ?
;   TypeKind.POINTER
;   name = pSetLayouts, type = const VkDescriptorSetLayout *, offset = 24, size = 8
    pSetLayouts qword ?
;   TypeKind.ELABORATED
;   name = pushConstantRangeCount, type = uint32_t, offset = 32, size = 4
    pushConstantRangeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPushConstantRanges, type = const VkPushConstantRange *, offset = 40, size = 8
    pPushConstantRanges qword ?
VkPipelineLayoutCreateInfo ends

VkSamplerCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSamplerCreateFlags, offset = 16, size = 4
    flags VkSamplerCreateFlags <>
;   TypeKind.ELABORATED
;   name = magFilter, type = VkFilter, offset = 20, size = 4
    magFilter VkFilter <>
;   TypeKind.ELABORATED
;   name = minFilter, type = VkFilter, offset = 24, size = 4
    minFilter VkFilter <>
;   TypeKind.ELABORATED
;   name = mipmapMode, type = VkSamplerMipmapMode, offset = 28, size = 4
    mipmapMode VkSamplerMipmapMode <>
;   TypeKind.ELABORATED
;   name = addressModeU, type = VkSamplerAddressMode, offset = 32, size = 4
    addressModeU VkSamplerAddressMode <>
;   TypeKind.ELABORATED
;   name = addressModeV, type = VkSamplerAddressMode, offset = 36, size = 4
    addressModeV VkSamplerAddressMode <>
;   TypeKind.ELABORATED
;   name = addressModeW, type = VkSamplerAddressMode, offset = 40, size = 4
    addressModeW VkSamplerAddressMode <>
;   TypeKind.FLOAT
;   name = mipLodBias, type = float, offset = 44, size = 4
    mipLodBias real4 ?
;   TypeKind.ELABORATED
;   name = anisotropyEnable, type = VkBool32, offset = 48, size = 4
    anisotropyEnable VkBool32 <>
;   TypeKind.FLOAT
;   name = maxAnisotropy, type = float, offset = 52, size = 4
    maxAnisotropy real4 ?
;   TypeKind.ELABORATED
;   name = compareEnable, type = VkBool32, offset = 56, size = 4
    compareEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = compareOp, type = VkCompareOp, offset = 60, size = 4
    compareOp VkCompareOp <>
;   TypeKind.FLOAT
;   name = minLod, type = float, offset = 64, size = 4
    minLod real4 ?
;   TypeKind.FLOAT
;   name = maxLod, type = float, offset = 68, size = 4
    maxLod real4 ?
;   TypeKind.ELABORATED
;   name = borderColor, type = VkBorderColor, offset = 72, size = 4
    borderColor VkBorderColor <>
;   TypeKind.ELABORATED
;   name = unnormalizedCoordinates, type = VkBool32, offset = 76, size = 4
    unnormalizedCoordinates VkBool32 <>
VkSamplerCreateInfo ends

; TYPEDEF VkSamplerCreateInfo = struct VkSamplerCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkSamplerCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSamplerCreateFlags, offset = 16, size = 4
    flags VkSamplerCreateFlags <>
;   TypeKind.ELABORATED
;   name = magFilter, type = VkFilter, offset = 20, size = 4
    magFilter VkFilter <>
;   TypeKind.ELABORATED
;   name = minFilter, type = VkFilter, offset = 24, size = 4
    minFilter VkFilter <>
;   TypeKind.ELABORATED
;   name = mipmapMode, type = VkSamplerMipmapMode, offset = 28, size = 4
    mipmapMode VkSamplerMipmapMode <>
;   TypeKind.ELABORATED
;   name = addressModeU, type = VkSamplerAddressMode, offset = 32, size = 4
    addressModeU VkSamplerAddressMode <>
;   TypeKind.ELABORATED
;   name = addressModeV, type = VkSamplerAddressMode, offset = 36, size = 4
    addressModeV VkSamplerAddressMode <>
;   TypeKind.ELABORATED
;   name = addressModeW, type = VkSamplerAddressMode, offset = 40, size = 4
    addressModeW VkSamplerAddressMode <>
;   TypeKind.FLOAT
;   name = mipLodBias, type = float, offset = 44, size = 4
    mipLodBias real4 ?
;   TypeKind.ELABORATED
;   name = anisotropyEnable, type = VkBool32, offset = 48, size = 4
    anisotropyEnable VkBool32 <>
;   TypeKind.FLOAT
;   name = maxAnisotropy, type = float, offset = 52, size = 4
    maxAnisotropy real4 ?
;   TypeKind.ELABORATED
;   name = compareEnable, type = VkBool32, offset = 56, size = 4
    compareEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = compareOp, type = VkCompareOp, offset = 60, size = 4
    compareOp VkCompareOp <>
;   TypeKind.FLOAT
;   name = minLod, type = float, offset = 64, size = 4
    minLod real4 ?
;   TypeKind.FLOAT
;   name = maxLod, type = float, offset = 68, size = 4
    maxLod real4 ?
;   TypeKind.ELABORATED
;   name = borderColor, type = VkBorderColor, offset = 72, size = 4
    borderColor VkBorderColor <>
;   TypeKind.ELABORATED
;   name = unnormalizedCoordinates, type = VkBool32, offset = 76, size = 4
    unnormalizedCoordinates VkBool32 <>
VkSamplerCreateInfo ends

VkCopyDescriptorSet struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcSet, type = VkDescriptorSet, offset = 16, size = 8
    srcSet VkDescriptorSet <>
;   TypeKind.ELABORATED
;   name = srcBinding, type = uint32_t, offset = 24, size = 4
    srcBinding dword ?
;   TypeKind.ELABORATED
;   name = srcArrayElement, type = uint32_t, offset = 28, size = 4
    srcArrayElement dword ?
;   TypeKind.ELABORATED
;   name = dstSet, type = VkDescriptorSet, offset = 32, size = 8
    dstSet VkDescriptorSet <>
;   TypeKind.ELABORATED
;   name = dstBinding, type = uint32_t, offset = 40, size = 4
    dstBinding dword ?
;   TypeKind.ELABORATED
;   name = dstArrayElement, type = uint32_t, offset = 44, size = 4
    dstArrayElement dword ?
;   TypeKind.ELABORATED
;   name = descriptorCount, type = uint32_t, offset = 48, size = 4
    descriptorCount dword ?
VkCopyDescriptorSet ends

; TYPEDEF VkCopyDescriptorSet = struct VkCopyDescriptorSet, TypeKind.ELABORATED
; remove struct typedef

VkCopyDescriptorSet struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcSet, type = VkDescriptorSet, offset = 16, size = 8
    srcSet VkDescriptorSet <>
;   TypeKind.ELABORATED
;   name = srcBinding, type = uint32_t, offset = 24, size = 4
    srcBinding dword ?
;   TypeKind.ELABORATED
;   name = srcArrayElement, type = uint32_t, offset = 28, size = 4
    srcArrayElement dword ?
;   TypeKind.ELABORATED
;   name = dstSet, type = VkDescriptorSet, offset = 32, size = 8
    dstSet VkDescriptorSet <>
;   TypeKind.ELABORATED
;   name = dstBinding, type = uint32_t, offset = 40, size = 4
    dstBinding dword ?
;   TypeKind.ELABORATED
;   name = dstArrayElement, type = uint32_t, offset = 44, size = 4
    dstArrayElement dword ?
;   TypeKind.ELABORATED
;   name = descriptorCount, type = uint32_t, offset = 48, size = 4
    descriptorCount dword ?
VkCopyDescriptorSet ends

VkDescriptorBufferInfo struct
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 0, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 8, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = range, type = VkDeviceSize, offset = 16, size = 8
    range VkDeviceSize <>
VkDescriptorBufferInfo ends

; TYPEDEF VkDescriptorBufferInfo = struct VkDescriptorBufferInfo, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorBufferInfo struct
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 0, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 8, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = range, type = VkDeviceSize, offset = 16, size = 8
    range VkDeviceSize <>
VkDescriptorBufferInfo ends

VkDescriptorImageInfo struct
;   TypeKind.ELABORATED
;   name = sampler, type = VkSampler, offset = 0, size = 8
    sampler VkSampler <>
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 8, size = 8
    imageView VkImageView <>
;   TypeKind.ELABORATED
;   name = imageLayout, type = VkImageLayout, offset = 16, size = 4
    imageLayout VkImageLayout <>
VkDescriptorImageInfo ends

; TYPEDEF VkDescriptorImageInfo = struct VkDescriptorImageInfo, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorImageInfo struct
;   TypeKind.ELABORATED
;   name = sampler, type = VkSampler, offset = 0, size = 8
    sampler VkSampler <>
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 8, size = 8
    imageView VkImageView <>
;   TypeKind.ELABORATED
;   name = imageLayout, type = VkImageLayout, offset = 16, size = 4
    imageLayout VkImageLayout <>
VkDescriptorImageInfo ends

VkDescriptorPoolSize struct
;   TypeKind.ELABORATED
;   name = type, type = VkDescriptorType, offset = 0, size = 4
    __type VkDescriptorType <>
;   TypeKind.ELABORATED
;   name = descriptorCount, type = uint32_t, offset = 4, size = 4
    descriptorCount dword ?
VkDescriptorPoolSize ends

; TYPEDEF VkDescriptorPoolSize = struct VkDescriptorPoolSize, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorPoolSize struct
;   TypeKind.ELABORATED
;   name = type, type = VkDescriptorType, offset = 0, size = 4
    __type VkDescriptorType <>
;   TypeKind.ELABORATED
;   name = descriptorCount, type = uint32_t, offset = 4, size = 4
    descriptorCount dword ?
VkDescriptorPoolSize ends

VkDescriptorPoolCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDescriptorPoolCreateFlags, offset = 16, size = 4
    flags VkDescriptorPoolCreateFlags <>
;   TypeKind.ELABORATED
;   name = maxSets, type = uint32_t, offset = 20, size = 4
    maxSets dword ?
;   TypeKind.ELABORATED
;   name = poolSizeCount, type = uint32_t, offset = 24, size = 4
    poolSizeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPoolSizes, type = const VkDescriptorPoolSize *, offset = 32, size = 8
    pPoolSizes qword ?
VkDescriptorPoolCreateInfo ends

; TYPEDEF VkDescriptorPoolCreateInfo = struct VkDescriptorPoolCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorPoolCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDescriptorPoolCreateFlags, offset = 16, size = 4
    flags VkDescriptorPoolCreateFlags <>
;   TypeKind.ELABORATED
;   name = maxSets, type = uint32_t, offset = 20, size = 4
    maxSets dword ?
;   TypeKind.ELABORATED
;   name = poolSizeCount, type = uint32_t, offset = 24, size = 4
    poolSizeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPoolSizes, type = const VkDescriptorPoolSize *, offset = 32, size = 8
    pPoolSizes qword ?
VkDescriptorPoolCreateInfo ends

VkDescriptorSetAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorPool, type = VkDescriptorPool, offset = 16, size = 8
    descriptorPool VkDescriptorPool <>
;   TypeKind.ELABORATED
;   name = descriptorSetCount, type = uint32_t, offset = 24, size = 4
    descriptorSetCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSetLayouts, type = const VkDescriptorSetLayout *, offset = 32, size = 8
    pSetLayouts qword ?
VkDescriptorSetAllocateInfo ends

; TYPEDEF VkDescriptorSetAllocateInfo = struct VkDescriptorSetAllocateInfo, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorSetAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorPool, type = VkDescriptorPool, offset = 16, size = 8
    descriptorPool VkDescriptorPool <>
;   TypeKind.ELABORATED
;   name = descriptorSetCount, type = uint32_t, offset = 24, size = 4
    descriptorSetCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSetLayouts, type = const VkDescriptorSetLayout *, offset = 32, size = 8
    pSetLayouts qword ?
VkDescriptorSetAllocateInfo ends

VkDescriptorSetLayoutBinding struct
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 0, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = descriptorType, type = VkDescriptorType, offset = 4, size = 4
    descriptorType VkDescriptorType <>
;   TypeKind.ELABORATED
;   name = descriptorCount, type = uint32_t, offset = 8, size = 4
    descriptorCount dword ?
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 12, size = 4
    stageFlags VkShaderStageFlags <>
;   TypeKind.POINTER
;   name = pImmutableSamplers, type = const VkSampler *, offset = 16, size = 8
    pImmutableSamplers qword ?
VkDescriptorSetLayoutBinding ends

; TYPEDEF VkDescriptorSetLayoutBinding = struct VkDescriptorSetLayoutBinding, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorSetLayoutBinding struct
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 0, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = descriptorType, type = VkDescriptorType, offset = 4, size = 4
    descriptorType VkDescriptorType <>
;   TypeKind.ELABORATED
;   name = descriptorCount, type = uint32_t, offset = 8, size = 4
    descriptorCount dword ?
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 12, size = 4
    stageFlags VkShaderStageFlags <>
;   TypeKind.POINTER
;   name = pImmutableSamplers, type = const VkSampler *, offset = 16, size = 8
    pImmutableSamplers qword ?
VkDescriptorSetLayoutBinding ends

VkDescriptorSetLayoutCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDescriptorSetLayoutCreateFlags, offset = 16, size = 4
    flags VkDescriptorSetLayoutCreateFlags <>
;   TypeKind.ELABORATED
;   name = bindingCount, type = uint32_t, offset = 20, size = 4
    bindingCount dword ?
;   TypeKind.POINTER
;   name = pBindings, type = const VkDescriptorSetLayoutBinding *, offset = 24, size = 8
    pBindings qword ?
VkDescriptorSetLayoutCreateInfo ends

; TYPEDEF VkDescriptorSetLayoutCreateInfo = struct VkDescriptorSetLayoutCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorSetLayoutCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDescriptorSetLayoutCreateFlags, offset = 16, size = 4
    flags VkDescriptorSetLayoutCreateFlags <>
;   TypeKind.ELABORATED
;   name = bindingCount, type = uint32_t, offset = 20, size = 4
    bindingCount dword ?
;   TypeKind.POINTER
;   name = pBindings, type = const VkDescriptorSetLayoutBinding *, offset = 24, size = 8
    pBindings qword ?
VkDescriptorSetLayoutCreateInfo ends

VkWriteDescriptorSet struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dstSet, type = VkDescriptorSet, offset = 16, size = 8
    dstSet VkDescriptorSet <>
;   TypeKind.ELABORATED
;   name = dstBinding, type = uint32_t, offset = 24, size = 4
    dstBinding dword ?
;   TypeKind.ELABORATED
;   name = dstArrayElement, type = uint32_t, offset = 28, size = 4
    dstArrayElement dword ?
;   TypeKind.ELABORATED
;   name = descriptorCount, type = uint32_t, offset = 32, size = 4
    descriptorCount dword ?
;   TypeKind.ELABORATED
;   name = descriptorType, type = VkDescriptorType, offset = 36, size = 4
    descriptorType VkDescriptorType <>
;   TypeKind.POINTER
;   name = pImageInfo, type = const VkDescriptorImageInfo *, offset = 40, size = 8
    pImageInfo qword ?
;   TypeKind.POINTER
;   name = pBufferInfo, type = const VkDescriptorBufferInfo *, offset = 48, size = 8
    pBufferInfo qword ?
;   TypeKind.POINTER
;   name = pTexelBufferView, type = const VkBufferView *, offset = 56, size = 8
    pTexelBufferView qword ?
VkWriteDescriptorSet ends

; TYPEDEF VkWriteDescriptorSet = struct VkWriteDescriptorSet, TypeKind.ELABORATED
; remove struct typedef

VkWriteDescriptorSet struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dstSet, type = VkDescriptorSet, offset = 16, size = 8
    dstSet VkDescriptorSet <>
;   TypeKind.ELABORATED
;   name = dstBinding, type = uint32_t, offset = 24, size = 4
    dstBinding dword ?
;   TypeKind.ELABORATED
;   name = dstArrayElement, type = uint32_t, offset = 28, size = 4
    dstArrayElement dword ?
;   TypeKind.ELABORATED
;   name = descriptorCount, type = uint32_t, offset = 32, size = 4
    descriptorCount dword ?
;   TypeKind.ELABORATED
;   name = descriptorType, type = VkDescriptorType, offset = 36, size = 4
    descriptorType VkDescriptorType <>
;   TypeKind.POINTER
;   name = pImageInfo, type = const VkDescriptorImageInfo *, offset = 40, size = 8
    pImageInfo qword ?
;   TypeKind.POINTER
;   name = pBufferInfo, type = const VkDescriptorBufferInfo *, offset = 48, size = 8
    pBufferInfo qword ?
;   TypeKind.POINTER
;   name = pTexelBufferView, type = const VkBufferView *, offset = 56, size = 8
    pTexelBufferView qword ?
VkWriteDescriptorSet ends

VkAttachmentDescription struct
;   TypeKind.ELABORATED
;   name = flags, type = VkAttachmentDescriptionFlags, offset = 0, size = 4
    flags VkAttachmentDescriptionFlags <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 4, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = samples, type = VkSampleCountFlagBits, offset = 8, size = 4
    samples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = loadOp, type = VkAttachmentLoadOp, offset = 12, size = 4
    loadOp VkAttachmentLoadOp <>
;   TypeKind.ELABORATED
;   name = storeOp, type = VkAttachmentStoreOp, offset = 16, size = 4
    storeOp VkAttachmentStoreOp <>
;   TypeKind.ELABORATED
;   name = stencilLoadOp, type = VkAttachmentLoadOp, offset = 20, size = 4
    stencilLoadOp VkAttachmentLoadOp <>
;   TypeKind.ELABORATED
;   name = stencilStoreOp, type = VkAttachmentStoreOp, offset = 24, size = 4
    stencilStoreOp VkAttachmentStoreOp <>
;   TypeKind.ELABORATED
;   name = initialLayout, type = VkImageLayout, offset = 28, size = 4
    initialLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = finalLayout, type = VkImageLayout, offset = 32, size = 4
    finalLayout VkImageLayout <>
VkAttachmentDescription ends

; TYPEDEF VkAttachmentDescription = struct VkAttachmentDescription, TypeKind.ELABORATED
; remove struct typedef

VkAttachmentDescription struct
;   TypeKind.ELABORATED
;   name = flags, type = VkAttachmentDescriptionFlags, offset = 0, size = 4
    flags VkAttachmentDescriptionFlags <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 4, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = samples, type = VkSampleCountFlagBits, offset = 8, size = 4
    samples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = loadOp, type = VkAttachmentLoadOp, offset = 12, size = 4
    loadOp VkAttachmentLoadOp <>
;   TypeKind.ELABORATED
;   name = storeOp, type = VkAttachmentStoreOp, offset = 16, size = 4
    storeOp VkAttachmentStoreOp <>
;   TypeKind.ELABORATED
;   name = stencilLoadOp, type = VkAttachmentLoadOp, offset = 20, size = 4
    stencilLoadOp VkAttachmentLoadOp <>
;   TypeKind.ELABORATED
;   name = stencilStoreOp, type = VkAttachmentStoreOp, offset = 24, size = 4
    stencilStoreOp VkAttachmentStoreOp <>
;   TypeKind.ELABORATED
;   name = initialLayout, type = VkImageLayout, offset = 28, size = 4
    initialLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = finalLayout, type = VkImageLayout, offset = 32, size = 4
    finalLayout VkImageLayout <>
VkAttachmentDescription ends

VkAttachmentReference struct
;   TypeKind.ELABORATED
;   name = attachment, type = uint32_t, offset = 0, size = 4
    attachment dword ?
;   TypeKind.ELABORATED
;   name = layout, type = VkImageLayout, offset = 4, size = 4
    layout VkImageLayout <>
VkAttachmentReference ends

; TYPEDEF VkAttachmentReference = struct VkAttachmentReference, TypeKind.ELABORATED
; remove struct typedef

VkAttachmentReference struct
;   TypeKind.ELABORATED
;   name = attachment, type = uint32_t, offset = 0, size = 4
    attachment dword ?
;   TypeKind.ELABORATED
;   name = layout, type = VkImageLayout, offset = 4, size = 4
    layout VkImageLayout <>
VkAttachmentReference ends

VkFramebufferCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkFramebufferCreateFlags, offset = 16, size = 4
    flags VkFramebufferCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = renderPass, type = VkRenderPass, offset = 24, size = 8
    renderPass VkRenderPass <>
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 32, size = 4
    attachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAttachments, type = const VkImageView *, offset = 40, size = 8
    pAttachments qword ?
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 48, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 52, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = layers, type = uint32_t, offset = 56, size = 4
    layers dword ?
VkFramebufferCreateInfo ends

; TYPEDEF VkFramebufferCreateInfo = struct VkFramebufferCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkFramebufferCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkFramebufferCreateFlags, offset = 16, size = 4
    flags VkFramebufferCreateFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = renderPass, type = VkRenderPass, offset = 24, size = 8
    renderPass VkRenderPass <>
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 32, size = 4
    attachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAttachments, type = const VkImageView *, offset = 40, size = 8
    pAttachments qword ?
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 48, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 52, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = layers, type = uint32_t, offset = 56, size = 4
    layers dword ?
VkFramebufferCreateInfo ends

VkSubpassDescription struct
;   TypeKind.ELABORATED
;   name = flags, type = VkSubpassDescriptionFlags, offset = 0, size = 4
    flags VkSubpassDescriptionFlags <>
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 4, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
;   TypeKind.ELABORATED
;   name = inputAttachmentCount, type = uint32_t, offset = 8, size = 4
    inputAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pInputAttachments, type = const VkAttachmentReference *, offset = 16, size = 8
    pInputAttachments qword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 24, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachments, type = const VkAttachmentReference *, offset = 32, size = 8
    pColorAttachments qword ?
;   TypeKind.POINTER
;   name = pResolveAttachments, type = const VkAttachmentReference *, offset = 40, size = 8
    pResolveAttachments qword ?
;   TypeKind.POINTER
;   name = pDepthStencilAttachment, type = const VkAttachmentReference *, offset = 48, size = 8
    pDepthStencilAttachment qword ?
;   TypeKind.ELABORATED
;   name = preserveAttachmentCount, type = uint32_t, offset = 56, size = 4
    preserveAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPreserveAttachments, type = const uint32_t *, offset = 64, size = 8
    pPreserveAttachments qword ?
VkSubpassDescription ends

; TYPEDEF VkSubpassDescription = struct VkSubpassDescription, TypeKind.ELABORATED
; remove struct typedef

VkSubpassDescription struct
;   TypeKind.ELABORATED
;   name = flags, type = VkSubpassDescriptionFlags, offset = 0, size = 4
    flags VkSubpassDescriptionFlags <>
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 4, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
;   TypeKind.ELABORATED
;   name = inputAttachmentCount, type = uint32_t, offset = 8, size = 4
    inputAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pInputAttachments, type = const VkAttachmentReference *, offset = 16, size = 8
    pInputAttachments qword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 24, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachments, type = const VkAttachmentReference *, offset = 32, size = 8
    pColorAttachments qword ?
;   TypeKind.POINTER
;   name = pResolveAttachments, type = const VkAttachmentReference *, offset = 40, size = 8
    pResolveAttachments qword ?
;   TypeKind.POINTER
;   name = pDepthStencilAttachment, type = const VkAttachmentReference *, offset = 48, size = 8
    pDepthStencilAttachment qword ?
;   TypeKind.ELABORATED
;   name = preserveAttachmentCount, type = uint32_t, offset = 56, size = 4
    preserveAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPreserveAttachments, type = const uint32_t *, offset = 64, size = 8
    pPreserveAttachments qword ?
VkSubpassDescription ends

VkSubpassDependency struct
;   TypeKind.ELABORATED
;   name = srcSubpass, type = uint32_t, offset = 0, size = 4
    srcSubpass dword ?
;   TypeKind.ELABORATED
;   name = dstSubpass, type = uint32_t, offset = 4, size = 4
    dstSubpass dword ?
;   TypeKind.ELABORATED
;   name = srcStageMask, type = VkPipelineStageFlags, offset = 8, size = 4
    srcStageMask VkPipelineStageFlags <>
;   TypeKind.ELABORATED
;   name = dstStageMask, type = VkPipelineStageFlags, offset = 12, size = 4
    dstStageMask VkPipelineStageFlags <>
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags, offset = 16, size = 4
    srcAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags, offset = 20, size = 4
    dstAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dependencyFlags, type = VkDependencyFlags, offset = 24, size = 4
    dependencyFlags VkDependencyFlags <>
VkSubpassDependency ends

; TYPEDEF VkSubpassDependency = struct VkSubpassDependency, TypeKind.ELABORATED
; remove struct typedef

VkSubpassDependency struct
;   TypeKind.ELABORATED
;   name = srcSubpass, type = uint32_t, offset = 0, size = 4
    srcSubpass dword ?
;   TypeKind.ELABORATED
;   name = dstSubpass, type = uint32_t, offset = 4, size = 4
    dstSubpass dword ?
;   TypeKind.ELABORATED
;   name = srcStageMask, type = VkPipelineStageFlags, offset = 8, size = 4
    srcStageMask VkPipelineStageFlags <>
;   TypeKind.ELABORATED
;   name = dstStageMask, type = VkPipelineStageFlags, offset = 12, size = 4
    dstStageMask VkPipelineStageFlags <>
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags, offset = 16, size = 4
    srcAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags, offset = 20, size = 4
    dstAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dependencyFlags, type = VkDependencyFlags, offset = 24, size = 4
    dependencyFlags VkDependencyFlags <>
VkSubpassDependency ends

VkRenderPassCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkRenderPassCreateFlags, offset = 16, size = 4
    flags VkRenderPassCreateFlags <>
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 20, size = 4
    attachmentCount dword ?
;   TypeKind.POINTER
;   name = pAttachments, type = const VkAttachmentDescription *, offset = 24, size = 8
    pAttachments qword ?
;   TypeKind.ELABORATED
;   name = subpassCount, type = uint32_t, offset = 32, size = 4
    subpassCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSubpasses, type = const VkSubpassDescription *, offset = 40, size = 8
    pSubpasses qword ?
;   TypeKind.ELABORATED
;   name = dependencyCount, type = uint32_t, offset = 48, size = 4
    dependencyCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDependencies, type = const VkSubpassDependency *, offset = 56, size = 8
    pDependencies qword ?
VkRenderPassCreateInfo ends

; TYPEDEF VkRenderPassCreateInfo = struct VkRenderPassCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkRenderPassCreateFlags, offset = 16, size = 4
    flags VkRenderPassCreateFlags <>
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 20, size = 4
    attachmentCount dword ?
;   TypeKind.POINTER
;   name = pAttachments, type = const VkAttachmentDescription *, offset = 24, size = 8
    pAttachments qword ?
;   TypeKind.ELABORATED
;   name = subpassCount, type = uint32_t, offset = 32, size = 4
    subpassCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSubpasses, type = const VkSubpassDescription *, offset = 40, size = 8
    pSubpasses qword ?
;   TypeKind.ELABORATED
;   name = dependencyCount, type = uint32_t, offset = 48, size = 4
    dependencyCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDependencies, type = const VkSubpassDependency *, offset = 56, size = 8
    pDependencies qword ?
VkRenderPassCreateInfo ends

VkCommandPoolCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkCommandPoolCreateFlags, offset = 16, size = 4
    flags VkCommandPoolCreateFlags <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndex, type = uint32_t, offset = 20, size = 4
    queueFamilyIndex dword ?
VkCommandPoolCreateInfo ends

; TYPEDEF VkCommandPoolCreateInfo = struct VkCommandPoolCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkCommandPoolCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkCommandPoolCreateFlags, offset = 16, size = 4
    flags VkCommandPoolCreateFlags <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndex, type = uint32_t, offset = 20, size = 4
    queueFamilyIndex dword ?
VkCommandPoolCreateInfo ends

VkCommandBufferAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = commandPool, type = VkCommandPool, offset = 16, size = 8
    commandPool VkCommandPool <>
;   TypeKind.ELABORATED
;   name = level, type = VkCommandBufferLevel, offset = 24, size = 4
    level VkCommandBufferLevel <>
;   TypeKind.ELABORATED
;   name = commandBufferCount, type = uint32_t, offset = 28, size = 4
    commandBufferCount dword ?
VkCommandBufferAllocateInfo ends

; TYPEDEF VkCommandBufferAllocateInfo = struct VkCommandBufferAllocateInfo, TypeKind.ELABORATED
; remove struct typedef

VkCommandBufferAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = commandPool, type = VkCommandPool, offset = 16, size = 8
    commandPool VkCommandPool <>
;   TypeKind.ELABORATED
;   name = level, type = VkCommandBufferLevel, offset = 24, size = 4
    level VkCommandBufferLevel <>
;   TypeKind.ELABORATED
;   name = commandBufferCount, type = uint32_t, offset = 28, size = 4
    commandBufferCount dword ?
VkCommandBufferAllocateInfo ends

VkCommandBufferInheritanceInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = renderPass, type = VkRenderPass, offset = 16, size = 8
    renderPass VkRenderPass <>
;   TypeKind.ELABORATED
;   name = subpass, type = uint32_t, offset = 24, size = 4
    subpass dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = framebuffer, type = VkFramebuffer, offset = 32, size = 8
    framebuffer VkFramebuffer <>
;   TypeKind.ELABORATED
;   name = occlusionQueryEnable, type = VkBool32, offset = 40, size = 4
    occlusionQueryEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = queryFlags, type = VkQueryControlFlags, offset = 44, size = 4
    queryFlags VkQueryControlFlags <>
;   TypeKind.ELABORATED
;   name = pipelineStatistics, type = VkQueryPipelineStatisticFlags, offset = 48, size = 4
    pipelineStatistics VkQueryPipelineStatisticFlags <>
VkCommandBufferInheritanceInfo ends

; TYPEDEF VkCommandBufferInheritanceInfo = struct VkCommandBufferInheritanceInfo, TypeKind.ELABORATED
; remove struct typedef

VkCommandBufferInheritanceInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = renderPass, type = VkRenderPass, offset = 16, size = 8
    renderPass VkRenderPass <>
;   TypeKind.ELABORATED
;   name = subpass, type = uint32_t, offset = 24, size = 4
    subpass dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = framebuffer, type = VkFramebuffer, offset = 32, size = 8
    framebuffer VkFramebuffer <>
;   TypeKind.ELABORATED
;   name = occlusionQueryEnable, type = VkBool32, offset = 40, size = 4
    occlusionQueryEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = queryFlags, type = VkQueryControlFlags, offset = 44, size = 4
    queryFlags VkQueryControlFlags <>
;   TypeKind.ELABORATED
;   name = pipelineStatistics, type = VkQueryPipelineStatisticFlags, offset = 48, size = 4
    pipelineStatistics VkQueryPipelineStatisticFlags <>
VkCommandBufferInheritanceInfo ends

VkCommandBufferBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkCommandBufferUsageFlags, offset = 16, size = 4
    flags VkCommandBufferUsageFlags <>
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pInheritanceInfo, type = const VkCommandBufferInheritanceInfo *, offset = 24, size = 8
    pInheritanceInfo qword ?
VkCommandBufferBeginInfo ends

; TYPEDEF VkCommandBufferBeginInfo = struct VkCommandBufferBeginInfo, TypeKind.ELABORATED
; remove struct typedef

VkCommandBufferBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkCommandBufferUsageFlags, offset = 16, size = 4
    flags VkCommandBufferUsageFlags <>
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pInheritanceInfo, type = const VkCommandBufferInheritanceInfo *, offset = 24, size = 8
    pInheritanceInfo qword ?
VkCommandBufferBeginInfo ends

VkBufferCopy struct
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkDeviceSize, offset = 0, size = 8
    srcOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkDeviceSize, offset = 8, size = 8
    dstOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 16, size = 8
    _size VkDeviceSize <>
VkBufferCopy ends

; TYPEDEF VkBufferCopy = struct VkBufferCopy, TypeKind.ELABORATED
; remove struct typedef

VkBufferCopy struct
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkDeviceSize, offset = 0, size = 8
    srcOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkDeviceSize, offset = 8, size = 8
    dstOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 16, size = 8
    _size VkDeviceSize <>
VkBufferCopy ends

VkImageSubresourceLayers struct
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 0, size = 4
    aspectMask VkImageAspectFlags <>
;   TypeKind.ELABORATED
;   name = mipLevel, type = uint32_t, offset = 4, size = 4
    mipLevel dword ?
;   TypeKind.ELABORATED
;   name = baseArrayLayer, type = uint32_t, offset = 8, size = 4
    baseArrayLayer dword ?
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 12, size = 4
    layerCount dword ?
VkImageSubresourceLayers ends

; TYPEDEF VkImageSubresourceLayers = struct VkImageSubresourceLayers, TypeKind.ELABORATED
; remove struct typedef

VkImageSubresourceLayers struct
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 0, size = 4
    aspectMask VkImageAspectFlags <>
;   TypeKind.ELABORATED
;   name = mipLevel, type = uint32_t, offset = 4, size = 4
    mipLevel dword ?
;   TypeKind.ELABORATED
;   name = baseArrayLayer, type = uint32_t, offset = 8, size = 4
    baseArrayLayer dword ?
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 12, size = 4
    layerCount dword ?
VkImageSubresourceLayers ends

VkBufferImageCopy struct
;   TypeKind.ELABORATED
;   name = bufferOffset, type = VkDeviceSize, offset = 0, size = 8
    bufferOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = bufferRowLength, type = uint32_t, offset = 8, size = 4
    bufferRowLength dword ?
;   TypeKind.ELABORATED
;   name = bufferImageHeight, type = uint32_t, offset = 12, size = 4
    bufferImageHeight dword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresourceLayers, offset = 16, size = 16
    imageSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = imageOffset, type = VkOffset3D, offset = 32, size = 12
    imageOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent3D, offset = 44, size = 12
    imageExtent VkExtent3D <>
VkBufferImageCopy ends

; TYPEDEF VkBufferImageCopy = struct VkBufferImageCopy, TypeKind.ELABORATED
; remove struct typedef

VkBufferImageCopy struct
;   TypeKind.ELABORATED
;   name = bufferOffset, type = VkDeviceSize, offset = 0, size = 8
    bufferOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = bufferRowLength, type = uint32_t, offset = 8, size = 4
    bufferRowLength dword ?
;   TypeKind.ELABORATED
;   name = bufferImageHeight, type = uint32_t, offset = 12, size = 4
    bufferImageHeight dword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresourceLayers, offset = 16, size = 16
    imageSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = imageOffset, type = VkOffset3D, offset = 32, size = 12
    imageOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent3D, offset = 44, size = 12
    imageExtent VkExtent3D <>
VkBufferImageCopy ends

; TYPEDEF VkClearColorValue = union VkClearColorValue, TypeKind.ELABORATED
; remove union typedef

VkClearDepthStencilValue struct
;   TypeKind.FLOAT
;   name = depth, type = float, offset = 0, size = 4
    depth real4 ?
;   TypeKind.ELABORATED
;   name = stencil, type = uint32_t, offset = 4, size = 4
    stencil dword ?
VkClearDepthStencilValue ends

; TYPEDEF VkClearDepthStencilValue = struct VkClearDepthStencilValue, TypeKind.ELABORATED
; remove struct typedef

VkClearDepthStencilValue struct
;   TypeKind.FLOAT
;   name = depth, type = float, offset = 0, size = 4
    depth real4 ?
;   TypeKind.ELABORATED
;   name = stencil, type = uint32_t, offset = 4, size = 4
    stencil dword ?
VkClearDepthStencilValue ends

; TYPEDEF VkClearValue = union VkClearValue, TypeKind.ELABORATED
; remove union typedef

VkClearAttachment struct
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 0, size = 4
    aspectMask VkImageAspectFlags <>
;   TypeKind.ELABORATED
;   name = colorAttachment, type = uint32_t, offset = 4, size = 4
    colorAttachment dword ?
;   TypeKind.ELABORATED
;   name = clearValue, type = VkClearValue, offset = 8, size = 16
    clearValue VkClearValue <>
VkClearAttachment ends

; TYPEDEF VkClearAttachment = struct VkClearAttachment, TypeKind.ELABORATED
; remove struct typedef

VkClearAttachment struct
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 0, size = 4
    aspectMask VkImageAspectFlags <>
;   TypeKind.ELABORATED
;   name = colorAttachment, type = uint32_t, offset = 4, size = 4
    colorAttachment dword ?
;   TypeKind.ELABORATED
;   name = clearValue, type = VkClearValue, offset = 8, size = 16
    clearValue VkClearValue <>
VkClearAttachment ends

VkClearRect struct
;   TypeKind.ELABORATED
;   name = rect, type = VkRect2D, offset = 0, size = 16
    rect VkRect2D <>
;   TypeKind.ELABORATED
;   name = baseArrayLayer, type = uint32_t, offset = 16, size = 4
    baseArrayLayer dword ?
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 20, size = 4
    layerCount dword ?
VkClearRect ends

; TYPEDEF VkClearRect = struct VkClearRect, TypeKind.ELABORATED
; remove struct typedef

VkClearRect struct
;   TypeKind.ELABORATED
;   name = rect, type = VkRect2D, offset = 0, size = 16
    rect VkRect2D <>
;   TypeKind.ELABORATED
;   name = baseArrayLayer, type = uint32_t, offset = 16, size = 4
    baseArrayLayer dword ?
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 20, size = 4
    layerCount dword ?
VkClearRect ends

VkImageBlit struct
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 0, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.CONSTANTARRAY
;   name = srcOffsets, type = VkOffset3D[2], offset = 16, size = 24
    srcOffsets VkOffset3D 2 dup(<>)
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 40, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.CONSTANTARRAY
;   name = dstOffsets, type = VkOffset3D[2], offset = 56, size = 24
    dstOffsets VkOffset3D 2 dup(<>)
VkImageBlit ends

; TYPEDEF VkImageBlit = struct VkImageBlit, TypeKind.ELABORATED
; remove struct typedef

VkImageBlit struct
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 0, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.CONSTANTARRAY
;   name = srcOffsets, type = VkOffset3D[2], offset = 16, size = 24
    srcOffsets VkOffset3D 2 dup(<>)
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 40, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.CONSTANTARRAY
;   name = dstOffsets, type = VkOffset3D[2], offset = 56, size = 24
    dstOffsets VkOffset3D 2 dup(<>)
VkImageBlit ends

VkImageCopy struct
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 0, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkOffset3D, offset = 16, size = 12
    srcOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 28, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkOffset3D, offset = 44, size = 12
    dstOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 56, size = 12
    extent VkExtent3D <>
VkImageCopy ends

; TYPEDEF VkImageCopy = struct VkImageCopy, TypeKind.ELABORATED
; remove struct typedef

VkImageCopy struct
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 0, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkOffset3D, offset = 16, size = 12
    srcOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 28, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkOffset3D, offset = 44, size = 12
    dstOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 56, size = 12
    extent VkExtent3D <>
VkImageCopy ends

VkImageResolve struct
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 0, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkOffset3D, offset = 16, size = 12
    srcOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 28, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkOffset3D, offset = 44, size = 12
    dstOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 56, size = 12
    extent VkExtent3D <>
VkImageResolve ends

; TYPEDEF VkImageResolve = struct VkImageResolve, TypeKind.ELABORATED
; remove struct typedef

VkImageResolve struct
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 0, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkOffset3D, offset = 16, size = 12
    srcOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 28, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkOffset3D, offset = 44, size = 12
    dstOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 56, size = 12
    extent VkExtent3D <>
VkImageResolve ends

VkRenderPassBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = renderPass, type = VkRenderPass, offset = 16, size = 8
    renderPass VkRenderPass <>
;   TypeKind.ELABORATED
;   name = framebuffer, type = VkFramebuffer, offset = 24, size = 8
    framebuffer VkFramebuffer <>
;   TypeKind.ELABORATED
;   name = renderArea, type = VkRect2D, offset = 32, size = 16
    renderArea VkRect2D <>
;   TypeKind.ELABORATED
;   name = clearValueCount, type = uint32_t, offset = 48, size = 4
    clearValueCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pClearValues, type = const VkClearValue *, offset = 56, size = 8
    pClearValues qword ?
VkRenderPassBeginInfo ends

; TYPEDEF VkRenderPassBeginInfo = struct VkRenderPassBeginInfo, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = renderPass, type = VkRenderPass, offset = 16, size = 8
    renderPass VkRenderPass <>
;   TypeKind.ELABORATED
;   name = framebuffer, type = VkFramebuffer, offset = 24, size = 8
    framebuffer VkFramebuffer <>
;   TypeKind.ELABORATED
;   name = renderArea, type = VkRect2D, offset = 32, size = 16
    renderArea VkRect2D <>
;   TypeKind.ELABORATED
;   name = clearValueCount, type = uint32_t, offset = 48, size = 4
    clearValueCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pClearValues, type = const VkClearValue *, offset = 56, size = 8
    pClearValues qword ?
VkRenderPassBeginInfo ends

; TYPEDEF PFN_vkCreateInstance = VkResult (*)(const VkInstanceCreateInfo *, const VkAllocationCallbacks *, VkInstance *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateInstance typedef qword

; TYPEDEF PFN_vkDestroyInstance = void (*)(VkInstance, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyInstance typedef qword

; TYPEDEF PFN_vkEnumeratePhysicalDevices = VkResult (*)(VkInstance, uint32_t *, VkPhysicalDevice *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkEnumeratePhysicalDevices typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceFeatures = void (*)(VkPhysicalDevice, VkPhysicalDeviceFeatures *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceFeatures typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceFormatProperties = void (*)(VkPhysicalDevice, VkFormat, VkFormatProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceFormatProperties typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceImageFormatProperties = VkResult (*)(VkPhysicalDevice, VkFormat, VkImageType, VkImageTiling, VkImageUsageFlags, VkImageCreateFlags, VkImageFormatProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceImageFormatProperties typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceProperties = void (*)(VkPhysicalDevice, VkPhysicalDeviceProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceProperties typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceQueueFamilyProperties = void (*)(VkPhysicalDevice, uint32_t *, VkQueueFamilyProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceQueueFamilyProperties typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceMemoryProperties = void (*)(VkPhysicalDevice, VkPhysicalDeviceMemoryProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceMemoryProperties typedef qword

; TYPEDEF PFN_vkGetInstanceProcAddr = PFN_vkVoidFunction (*)(VkInstance, const char *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetInstanceProcAddr typedef qword

; TYPEDEF PFN_vkGetDeviceProcAddr = PFN_vkVoidFunction (*)(VkDevice, const char *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceProcAddr typedef qword

; TYPEDEF PFN_vkCreateDevice = VkResult (*)(VkPhysicalDevice, const VkDeviceCreateInfo *, const VkAllocationCallbacks *, VkDevice *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateDevice typedef qword

; TYPEDEF PFN_vkDestroyDevice = void (*)(VkDevice, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyDevice typedef qword

; TYPEDEF PFN_vkEnumerateInstanceExtensionProperties = VkResult (*)(const char *, uint32_t *, VkExtensionProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkEnumerateInstanceExtensionProperties typedef qword

; TYPEDEF PFN_vkEnumerateDeviceExtensionProperties = VkResult (*)(VkPhysicalDevice, const char *, uint32_t *, VkExtensionProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkEnumerateDeviceExtensionProperties typedef qword

; TYPEDEF PFN_vkEnumerateInstanceLayerProperties = VkResult (*)(uint32_t *, VkLayerProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkEnumerateInstanceLayerProperties typedef qword

; TYPEDEF PFN_vkEnumerateDeviceLayerProperties = VkResult (*)(VkPhysicalDevice, uint32_t *, VkLayerProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkEnumerateDeviceLayerProperties typedef qword

; TYPEDEF PFN_vkGetDeviceQueue = void (*)(VkDevice, uint32_t, uint32_t, VkQueue *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceQueue typedef qword

; TYPEDEF PFN_vkQueueSubmit = VkResult (*)(VkQueue, uint32_t, const VkSubmitInfo *, VkFence) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkQueueSubmit typedef qword

; TYPEDEF PFN_vkQueueWaitIdle = VkResult (*)(VkQueue) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkQueueWaitIdle typedef qword

; TYPEDEF PFN_vkDeviceWaitIdle = VkResult (*)(VkDevice) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDeviceWaitIdle typedef qword

; TYPEDEF PFN_vkAllocateMemory = VkResult (*)(VkDevice, const VkMemoryAllocateInfo *, const VkAllocationCallbacks *, VkDeviceMemory *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkAllocateMemory typedef qword

; TYPEDEF PFN_vkFreeMemory = void (*)(VkDevice, VkDeviceMemory, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkFreeMemory typedef qword

; TYPEDEF PFN_vkMapMemory = VkResult (*)(VkDevice, VkDeviceMemory, VkDeviceSize, VkDeviceSize, VkMemoryMapFlags, void **) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkMapMemory typedef qword

; TYPEDEF PFN_vkUnmapMemory = void (*)(VkDevice, VkDeviceMemory) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkUnmapMemory typedef qword

; TYPEDEF PFN_vkFlushMappedMemoryRanges = VkResult (*)(VkDevice, uint32_t, const VkMappedMemoryRange *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkFlushMappedMemoryRanges typedef qword

; TYPEDEF PFN_vkInvalidateMappedMemoryRanges = VkResult (*)(VkDevice, uint32_t, const VkMappedMemoryRange *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkInvalidateMappedMemoryRanges typedef qword

; TYPEDEF PFN_vkGetDeviceMemoryCommitment = void (*)(VkDevice, VkDeviceMemory, VkDeviceSize *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceMemoryCommitment typedef qword

; TYPEDEF PFN_vkBindBufferMemory = VkResult (*)(VkDevice, VkBuffer, VkDeviceMemory, VkDeviceSize) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBindBufferMemory typedef qword

; TYPEDEF PFN_vkBindImageMemory = VkResult (*)(VkDevice, VkImage, VkDeviceMemory, VkDeviceSize) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBindImageMemory typedef qword

; TYPEDEF PFN_vkGetBufferMemoryRequirements = void (*)(VkDevice, VkBuffer, VkMemoryRequirements *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetBufferMemoryRequirements typedef qword

; TYPEDEF PFN_vkGetImageMemoryRequirements = void (*)(VkDevice, VkImage, VkMemoryRequirements *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageMemoryRequirements typedef qword

; TYPEDEF PFN_vkGetImageSparseMemoryRequirements = void (*)(VkDevice, VkImage, uint32_t *, VkSparseImageMemoryRequirements *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageSparseMemoryRequirements typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceSparseImageFormatProperties = void (*)(VkPhysicalDevice, VkFormat, VkImageType, VkSampleCountFlagBits, VkImageUsageFlags, VkImageTiling, uint32_t *, VkSparseImageFormatProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceSparseImageFormatProperties typedef qword

; TYPEDEF PFN_vkQueueBindSparse = VkResult (*)(VkQueue, uint32_t, const VkBindSparseInfo *, VkFence) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkQueueBindSparse typedef qword

; TYPEDEF PFN_vkCreateFence = VkResult (*)(VkDevice, const VkFenceCreateInfo *, const VkAllocationCallbacks *, VkFence *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateFence typedef qword

; TYPEDEF PFN_vkDestroyFence = void (*)(VkDevice, VkFence, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyFence typedef qword

; TYPEDEF PFN_vkResetFences = VkResult (*)(VkDevice, uint32_t, const VkFence *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkResetFences typedef qword

; TYPEDEF PFN_vkGetFenceStatus = VkResult (*)(VkDevice, VkFence) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetFenceStatus typedef qword

; TYPEDEF PFN_vkWaitForFences = VkResult (*)(VkDevice, uint32_t, const VkFence *, VkBool32, uint64_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkWaitForFences typedef qword

; TYPEDEF PFN_vkCreateSemaphore = VkResult (*)(VkDevice, const VkSemaphoreCreateInfo *, const VkAllocationCallbacks *, VkSemaphore *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateSemaphore typedef qword

; TYPEDEF PFN_vkDestroySemaphore = void (*)(VkDevice, VkSemaphore, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroySemaphore typedef qword

; TYPEDEF PFN_vkCreateEvent = VkResult (*)(VkDevice, const VkEventCreateInfo *, const VkAllocationCallbacks *, VkEvent *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateEvent typedef qword

; TYPEDEF PFN_vkDestroyEvent = void (*)(VkDevice, VkEvent, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyEvent typedef qword

; TYPEDEF PFN_vkGetEventStatus = VkResult (*)(VkDevice, VkEvent) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetEventStatus typedef qword

; TYPEDEF PFN_vkSetEvent = VkResult (*)(VkDevice, VkEvent) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSetEvent typedef qword

; TYPEDEF PFN_vkResetEvent = VkResult (*)(VkDevice, VkEvent) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkResetEvent typedef qword

; TYPEDEF PFN_vkCreateQueryPool = VkResult (*)(VkDevice, const VkQueryPoolCreateInfo *, const VkAllocationCallbacks *, VkQueryPool *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateQueryPool typedef qword

; TYPEDEF PFN_vkDestroyQueryPool = void (*)(VkDevice, VkQueryPool, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyQueryPool typedef qword

; TYPEDEF PFN_vkGetQueryPoolResults = VkResult (*)(VkDevice, VkQueryPool, uint32_t, uint32_t, size_t, void *, VkDeviceSize, VkQueryResultFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetQueryPoolResults typedef qword

; TYPEDEF PFN_vkCreateBuffer = VkResult (*)(VkDevice, const VkBufferCreateInfo *, const VkAllocationCallbacks *, VkBuffer *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateBuffer typedef qword

; TYPEDEF PFN_vkDestroyBuffer = void (*)(VkDevice, VkBuffer, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyBuffer typedef qword

; TYPEDEF PFN_vkCreateBufferView = VkResult (*)(VkDevice, const VkBufferViewCreateInfo *, const VkAllocationCallbacks *, VkBufferView *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateBufferView typedef qword

; TYPEDEF PFN_vkDestroyBufferView = void (*)(VkDevice, VkBufferView, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyBufferView typedef qword

; TYPEDEF PFN_vkCreateImage = VkResult (*)(VkDevice, const VkImageCreateInfo *, const VkAllocationCallbacks *, VkImage *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateImage typedef qword

; TYPEDEF PFN_vkDestroyImage = void (*)(VkDevice, VkImage, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyImage typedef qword

; TYPEDEF PFN_vkGetImageSubresourceLayout = void (*)(VkDevice, VkImage, const VkImageSubresource *, VkSubresourceLayout *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageSubresourceLayout typedef qword

; TYPEDEF PFN_vkCreateImageView = VkResult (*)(VkDevice, const VkImageViewCreateInfo *, const VkAllocationCallbacks *, VkImageView *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateImageView typedef qword

; TYPEDEF PFN_vkDestroyImageView = void (*)(VkDevice, VkImageView, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyImageView typedef qword

; TYPEDEF PFN_vkCreateShaderModule = VkResult (*)(VkDevice, const VkShaderModuleCreateInfo *, const VkAllocationCallbacks *, VkShaderModule *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateShaderModule typedef qword

; TYPEDEF PFN_vkDestroyShaderModule = void (*)(VkDevice, VkShaderModule, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyShaderModule typedef qword

; TYPEDEF PFN_vkCreatePipelineCache = VkResult (*)(VkDevice, const VkPipelineCacheCreateInfo *, const VkAllocationCallbacks *, VkPipelineCache *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreatePipelineCache typedef qword

; TYPEDEF PFN_vkDestroyPipelineCache = void (*)(VkDevice, VkPipelineCache, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyPipelineCache typedef qword

; TYPEDEF PFN_vkGetPipelineCacheData = VkResult (*)(VkDevice, VkPipelineCache, size_t *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPipelineCacheData typedef qword

; TYPEDEF PFN_vkMergePipelineCaches = VkResult (*)(VkDevice, VkPipelineCache, uint32_t, const VkPipelineCache *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkMergePipelineCaches typedef qword

; TYPEDEF PFN_vkCreateGraphicsPipelines = VkResult (*)(VkDevice, VkPipelineCache, uint32_t, const VkGraphicsPipelineCreateInfo *, const VkAllocationCallbacks *, VkPipeline *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateGraphicsPipelines typedef qword

; TYPEDEF PFN_vkCreateComputePipelines = VkResult (*)(VkDevice, VkPipelineCache, uint32_t, const VkComputePipelineCreateInfo *, const VkAllocationCallbacks *, VkPipeline *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateComputePipelines typedef qword

; TYPEDEF PFN_vkDestroyPipeline = void (*)(VkDevice, VkPipeline, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyPipeline typedef qword

; TYPEDEF PFN_vkCreatePipelineLayout = VkResult (*)(VkDevice, const VkPipelineLayoutCreateInfo *, const VkAllocationCallbacks *, VkPipelineLayout *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreatePipelineLayout typedef qword

; TYPEDEF PFN_vkDestroyPipelineLayout = void (*)(VkDevice, VkPipelineLayout, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyPipelineLayout typedef qword

; TYPEDEF PFN_vkCreateSampler = VkResult (*)(VkDevice, const VkSamplerCreateInfo *, const VkAllocationCallbacks *, VkSampler *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateSampler typedef qword

; TYPEDEF PFN_vkDestroySampler = void (*)(VkDevice, VkSampler, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroySampler typedef qword

; TYPEDEF PFN_vkCreateDescriptorSetLayout = VkResult (*)(VkDevice, const VkDescriptorSetLayoutCreateInfo *, const VkAllocationCallbacks *, VkDescriptorSetLayout *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateDescriptorSetLayout typedef qword

; TYPEDEF PFN_vkDestroyDescriptorSetLayout = void (*)(VkDevice, VkDescriptorSetLayout, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyDescriptorSetLayout typedef qword

; TYPEDEF PFN_vkCreateDescriptorPool = VkResult (*)(VkDevice, const VkDescriptorPoolCreateInfo *, const VkAllocationCallbacks *, VkDescriptorPool *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateDescriptorPool typedef qword

; TYPEDEF PFN_vkDestroyDescriptorPool = void (*)(VkDevice, VkDescriptorPool, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyDescriptorPool typedef qword

; TYPEDEF PFN_vkResetDescriptorPool = VkResult (*)(VkDevice, VkDescriptorPool, VkDescriptorPoolResetFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkResetDescriptorPool typedef qword

; TYPEDEF PFN_vkAllocateDescriptorSets = VkResult (*)(VkDevice, const VkDescriptorSetAllocateInfo *, VkDescriptorSet *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkAllocateDescriptorSets typedef qword

; TYPEDEF PFN_vkFreeDescriptorSets = VkResult (*)(VkDevice, VkDescriptorPool, uint32_t, const VkDescriptorSet *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkFreeDescriptorSets typedef qword

; TYPEDEF PFN_vkUpdateDescriptorSets = void (*)(VkDevice, uint32_t, const VkWriteDescriptorSet *, uint32_t, const VkCopyDescriptorSet *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkUpdateDescriptorSets typedef qword

; TYPEDEF PFN_vkCreateFramebuffer = VkResult (*)(VkDevice, const VkFramebufferCreateInfo *, const VkAllocationCallbacks *, VkFramebuffer *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateFramebuffer typedef qword

; TYPEDEF PFN_vkDestroyFramebuffer = void (*)(VkDevice, VkFramebuffer, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyFramebuffer typedef qword

; TYPEDEF PFN_vkCreateRenderPass = VkResult (*)(VkDevice, const VkRenderPassCreateInfo *, const VkAllocationCallbacks *, VkRenderPass *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateRenderPass typedef qword

; TYPEDEF PFN_vkDestroyRenderPass = void (*)(VkDevice, VkRenderPass, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyRenderPass typedef qword

; TYPEDEF PFN_vkGetRenderAreaGranularity = void (*)(VkDevice, VkRenderPass, VkExtent2D *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetRenderAreaGranularity typedef qword

; TYPEDEF PFN_vkCreateCommandPool = VkResult (*)(VkDevice, const VkCommandPoolCreateInfo *, const VkAllocationCallbacks *, VkCommandPool *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateCommandPool typedef qword

; TYPEDEF PFN_vkDestroyCommandPool = void (*)(VkDevice, VkCommandPool, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyCommandPool typedef qword

; TYPEDEF PFN_vkResetCommandPool = VkResult (*)(VkDevice, VkCommandPool, VkCommandPoolResetFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkResetCommandPool typedef qword

; TYPEDEF PFN_vkAllocateCommandBuffers = VkResult (*)(VkDevice, const VkCommandBufferAllocateInfo *, VkCommandBuffer *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkAllocateCommandBuffers typedef qword

; TYPEDEF PFN_vkFreeCommandBuffers = void (*)(VkDevice, VkCommandPool, uint32_t, const VkCommandBuffer *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkFreeCommandBuffers typedef qword

; TYPEDEF PFN_vkBeginCommandBuffer = VkResult (*)(VkCommandBuffer, const VkCommandBufferBeginInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBeginCommandBuffer typedef qword

; TYPEDEF PFN_vkEndCommandBuffer = VkResult (*)(VkCommandBuffer) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkEndCommandBuffer typedef qword

; TYPEDEF PFN_vkResetCommandBuffer = VkResult (*)(VkCommandBuffer, VkCommandBufferResetFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkResetCommandBuffer typedef qword

; TYPEDEF PFN_vkCmdBindPipeline = void (*)(VkCommandBuffer, VkPipelineBindPoint, VkPipeline) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindPipeline typedef qword

; TYPEDEF PFN_vkCmdSetViewport = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkViewport *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetViewport typedef qword

; TYPEDEF PFN_vkCmdSetScissor = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkRect2D *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetScissor typedef qword

; TYPEDEF PFN_vkCmdSetLineWidth = void (*)(VkCommandBuffer, float) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetLineWidth typedef qword

; TYPEDEF PFN_vkCmdSetDepthBias = void (*)(VkCommandBuffer, float, float, float) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthBias typedef qword

; TYPEDEF PFN_vkCmdSetBlendConstants = void (*)(VkCommandBuffer, const float *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetBlendConstants typedef qword

; TYPEDEF PFN_vkCmdSetDepthBounds = void (*)(VkCommandBuffer, float, float) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthBounds typedef qword

; TYPEDEF PFN_vkCmdSetStencilCompareMask = void (*)(VkCommandBuffer, VkStencilFaceFlags, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetStencilCompareMask typedef qword

; TYPEDEF PFN_vkCmdSetStencilWriteMask = void (*)(VkCommandBuffer, VkStencilFaceFlags, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetStencilWriteMask typedef qword

; TYPEDEF PFN_vkCmdSetStencilReference = void (*)(VkCommandBuffer, VkStencilFaceFlags, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetStencilReference typedef qword

; TYPEDEF PFN_vkCmdBindDescriptorSets = void (*)(VkCommandBuffer, VkPipelineBindPoint, VkPipelineLayout, uint32_t, uint32_t, const VkDescriptorSet *, uint32_t, const uint32_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindDescriptorSets typedef qword

; TYPEDEF PFN_vkCmdBindIndexBuffer = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkIndexType) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindIndexBuffer typedef qword

; TYPEDEF PFN_vkCmdBindVertexBuffers = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkBuffer *, const VkDeviceSize *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindVertexBuffers typedef qword

; TYPEDEF PFN_vkCmdDraw = void (*)(VkCommandBuffer, uint32_t, uint32_t, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDraw typedef qword

; TYPEDEF PFN_vkCmdDrawIndexed = void (*)(VkCommandBuffer, uint32_t, uint32_t, uint32_t, int32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawIndexed typedef qword

; TYPEDEF PFN_vkCmdDrawIndirect = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawIndirect typedef qword

; TYPEDEF PFN_vkCmdDrawIndexedIndirect = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawIndexedIndirect typedef qword

; TYPEDEF PFN_vkCmdDispatch = void (*)(VkCommandBuffer, uint32_t, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDispatch typedef qword

; TYPEDEF PFN_vkCmdDispatchIndirect = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDispatchIndirect typedef qword

; TYPEDEF PFN_vkCmdCopyBuffer = void (*)(VkCommandBuffer, VkBuffer, VkBuffer, uint32_t, const VkBufferCopy *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyBuffer typedef qword

; TYPEDEF PFN_vkCmdCopyImage = void (*)(VkCommandBuffer, VkImage, VkImageLayout, VkImage, VkImageLayout, uint32_t, const VkImageCopy *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyImage typedef qword

; TYPEDEF PFN_vkCmdBlitImage = void (*)(VkCommandBuffer, VkImage, VkImageLayout, VkImage, VkImageLayout, uint32_t, const VkImageBlit *, VkFilter) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBlitImage typedef qword

; TYPEDEF PFN_vkCmdCopyBufferToImage = void (*)(VkCommandBuffer, VkBuffer, VkImage, VkImageLayout, uint32_t, const VkBufferImageCopy *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyBufferToImage typedef qword

; TYPEDEF PFN_vkCmdCopyImageToBuffer = void (*)(VkCommandBuffer, VkImage, VkImageLayout, VkBuffer, uint32_t, const VkBufferImageCopy *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyImageToBuffer typedef qword

; TYPEDEF PFN_vkCmdUpdateBuffer = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkDeviceSize, const void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdUpdateBuffer typedef qword

; TYPEDEF PFN_vkCmdFillBuffer = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkDeviceSize, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdFillBuffer typedef qword

; TYPEDEF PFN_vkCmdClearColorImage = void (*)(VkCommandBuffer, VkImage, VkImageLayout, const VkClearColorValue *, uint32_t, const VkImageSubresourceRange *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdClearColorImage typedef qword

; TYPEDEF PFN_vkCmdClearDepthStencilImage = void (*)(VkCommandBuffer, VkImage, VkImageLayout, const VkClearDepthStencilValue *, uint32_t, const VkImageSubresourceRange *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdClearDepthStencilImage typedef qword

; TYPEDEF PFN_vkCmdClearAttachments = void (*)(VkCommandBuffer, uint32_t, const VkClearAttachment *, uint32_t, const VkClearRect *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdClearAttachments typedef qword

; TYPEDEF PFN_vkCmdResolveImage = void (*)(VkCommandBuffer, VkImage, VkImageLayout, VkImage, VkImageLayout, uint32_t, const VkImageResolve *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdResolveImage typedef qword

; TYPEDEF PFN_vkCmdSetEvent = void (*)(VkCommandBuffer, VkEvent, VkPipelineStageFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetEvent typedef qword

; TYPEDEF PFN_vkCmdResetEvent = void (*)(VkCommandBuffer, VkEvent, VkPipelineStageFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdResetEvent typedef qword

; TYPEDEF PFN_vkCmdWaitEvents = void (*)(VkCommandBuffer, uint32_t, const VkEvent *, VkPipelineStageFlags, VkPipelineStageFlags, uint32_t, const VkMemoryBarrier *, uint32_t, const VkBufferMemoryBarrier *, uint32_t, const VkImageMemoryBarrier *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdWaitEvents typedef qword

; TYPEDEF PFN_vkCmdPipelineBarrier = void (*)(VkCommandBuffer, VkPipelineStageFlags, VkPipelineStageFlags, VkDependencyFlags, uint32_t, const VkMemoryBarrier *, uint32_t, const VkBufferMemoryBarrier *, uint32_t, const VkImageMemoryBarrier *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdPipelineBarrier typedef qword

; TYPEDEF PFN_vkCmdBeginQuery = void (*)(VkCommandBuffer, VkQueryPool, uint32_t, VkQueryControlFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBeginQuery typedef qword

; TYPEDEF PFN_vkCmdEndQuery = void (*)(VkCommandBuffer, VkQueryPool, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEndQuery typedef qword

; TYPEDEF PFN_vkCmdResetQueryPool = void (*)(VkCommandBuffer, VkQueryPool, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdResetQueryPool typedef qword

; TYPEDEF PFN_vkCmdWriteTimestamp = void (*)(VkCommandBuffer, VkPipelineStageFlagBits, VkQueryPool, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdWriteTimestamp typedef qword

; TYPEDEF PFN_vkCmdCopyQueryPoolResults = void (*)(VkCommandBuffer, VkQueryPool, uint32_t, uint32_t, VkBuffer, VkDeviceSize, VkDeviceSize, VkQueryResultFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyQueryPoolResults typedef qword

; TYPEDEF PFN_vkCmdPushConstants = void (*)(VkCommandBuffer, VkPipelineLayout, VkShaderStageFlags, uint32_t, uint32_t, const void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdPushConstants typedef qword

; TYPEDEF PFN_vkCmdBeginRenderPass = void (*)(VkCommandBuffer, const VkRenderPassBeginInfo *, VkSubpassContents) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBeginRenderPass typedef qword

; TYPEDEF PFN_vkCmdNextSubpass = void (*)(VkCommandBuffer, VkSubpassContents) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdNextSubpass typedef qword

; TYPEDEF PFN_vkCmdEndRenderPass = void (*)(VkCommandBuffer) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEndRenderPass typedef qword

; TYPEDEF PFN_vkCmdExecuteCommands = void (*)(VkCommandBuffer, uint32_t, const VkCommandBuffer *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdExecuteCommands typedef qword

; VkResult vkCreateInstance(const VkInstanceCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkInstance * pInstance)
vkCreateInstance qword ?

; void vkDestroyInstance(VkInstance instance, const VkAllocationCallbacks * pAllocator)
vkDestroyInstance qword ?

; VkResult vkEnumeratePhysicalDevices(VkInstance instance, uint32_t * pPhysicalDeviceCount, VkPhysicalDevice * pPhysicalDevices)
vkEnumeratePhysicalDevices qword ?

; void vkGetPhysicalDeviceFeatures(VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures * pFeatures)
vkGetPhysicalDeviceFeatures qword ?

; void vkGetPhysicalDeviceFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties * pFormatProperties)
vkGetPhysicalDeviceFormatProperties qword ?

; VkResult vkGetPhysicalDeviceImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, VkImageFormatProperties * pImageFormatProperties)
vkGetPhysicalDeviceImageFormatProperties qword ?

; void vkGetPhysicalDeviceProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties * pProperties)
vkGetPhysicalDeviceProperties qword ?

; void vkGetPhysicalDeviceQueueFamilyProperties(VkPhysicalDevice physicalDevice, uint32_t * pQueueFamilyPropertyCount, VkQueueFamilyProperties * pQueueFamilyProperties)
vkGetPhysicalDeviceQueueFamilyProperties qword ?

; void vkGetPhysicalDeviceMemoryProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties * pMemoryProperties)
vkGetPhysicalDeviceMemoryProperties qword ?

; PFN_vkVoidFunction vkGetInstanceProcAddr(VkInstance instance, const char * pName)
vkGetInstanceProcAddr qword ?

; PFN_vkVoidFunction vkGetDeviceProcAddr(VkDevice device, const char * pName)
vkGetDeviceProcAddr qword ?

; VkResult vkCreateDevice(VkPhysicalDevice physicalDevice, const VkDeviceCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkDevice * pDevice)
vkCreateDevice qword ?

; void vkDestroyDevice(VkDevice device, const VkAllocationCallbacks * pAllocator)
vkDestroyDevice qword ?

; VkResult vkEnumerateInstanceExtensionProperties(const char * pLayerName, uint32_t * pPropertyCount, VkExtensionProperties * pProperties)
vkEnumerateInstanceExtensionProperties qword ?

; VkResult vkEnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, const char * pLayerName, uint32_t * pPropertyCount, VkExtensionProperties * pProperties)
vkEnumerateDeviceExtensionProperties qword ?

; VkResult vkEnumerateInstanceLayerProperties(uint32_t * pPropertyCount, VkLayerProperties * pProperties)
vkEnumerateInstanceLayerProperties qword ?

; VkResult vkEnumerateDeviceLayerProperties(VkPhysicalDevice physicalDevice, uint32_t * pPropertyCount, VkLayerProperties * pProperties)
vkEnumerateDeviceLayerProperties qword ?

; void vkGetDeviceQueue(VkDevice device, uint32_t queueFamilyIndex, uint32_t queueIndex, VkQueue * pQueue)
vkGetDeviceQueue qword ?

; VkResult vkQueueSubmit(VkQueue queue, uint32_t submitCount, const VkSubmitInfo * pSubmits, VkFence fence)
vkQueueSubmit qword ?

; VkResult vkQueueWaitIdle(VkQueue queue)
vkQueueWaitIdle qword ?

; VkResult vkDeviceWaitIdle(VkDevice device)
vkDeviceWaitIdle qword ?

; VkResult vkAllocateMemory(VkDevice device, const VkMemoryAllocateInfo * pAllocateInfo, const VkAllocationCallbacks * pAllocator, VkDeviceMemory * pMemory)
vkAllocateMemory qword ?

; void vkFreeMemory(VkDevice device, VkDeviceMemory memory, const VkAllocationCallbacks * pAllocator)
vkFreeMemory qword ?

; VkResult vkMapMemory(VkDevice device, VkDeviceMemory memory, VkDeviceSize offset, VkDeviceSize size, VkMemoryMapFlags flags, void ** ppData)
vkMapMemory qword ?

; void vkUnmapMemory(VkDevice device, VkDeviceMemory memory)
vkUnmapMemory qword ?

; VkResult vkFlushMappedMemoryRanges(VkDevice device, uint32_t memoryRangeCount, const VkMappedMemoryRange * pMemoryRanges)
vkFlushMappedMemoryRanges qword ?

; VkResult vkInvalidateMappedMemoryRanges(VkDevice device, uint32_t memoryRangeCount, const VkMappedMemoryRange * pMemoryRanges)
vkInvalidateMappedMemoryRanges qword ?

; void vkGetDeviceMemoryCommitment(VkDevice device, VkDeviceMemory memory, VkDeviceSize * pCommittedMemoryInBytes)
vkGetDeviceMemoryCommitment qword ?

; VkResult vkBindBufferMemory(VkDevice device, VkBuffer buffer, VkDeviceMemory memory, VkDeviceSize memoryOffset)
vkBindBufferMemory qword ?

; VkResult vkBindImageMemory(VkDevice device, VkImage image, VkDeviceMemory memory, VkDeviceSize memoryOffset)
vkBindImageMemory qword ?

; void vkGetBufferMemoryRequirements(VkDevice device, VkBuffer buffer, VkMemoryRequirements * pMemoryRequirements)
vkGetBufferMemoryRequirements qword ?

; void vkGetImageMemoryRequirements(VkDevice device, VkImage image, VkMemoryRequirements * pMemoryRequirements)
vkGetImageMemoryRequirements qword ?

; void vkGetImageSparseMemoryRequirements(VkDevice device, VkImage image, uint32_t * pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements * pSparseMemoryRequirements)
vkGetImageSparseMemoryRequirements qword ?

; void vkGetPhysicalDeviceSparseImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlagBits samples, VkImageUsageFlags usage, VkImageTiling tiling, uint32_t * pPropertyCount, VkSparseImageFormatProperties * pProperties)
vkGetPhysicalDeviceSparseImageFormatProperties qword ?

; VkResult vkQueueBindSparse(VkQueue queue, uint32_t bindInfoCount, const VkBindSparseInfo * pBindInfo, VkFence fence)
vkQueueBindSparse qword ?

; VkResult vkCreateFence(VkDevice device, const VkFenceCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkFence * pFence)
vkCreateFence qword ?

; void vkDestroyFence(VkDevice device, VkFence fence, const VkAllocationCallbacks * pAllocator)
vkDestroyFence qword ?

; VkResult vkResetFences(VkDevice device, uint32_t fenceCount, const VkFence * pFences)
vkResetFences qword ?

; VkResult vkGetFenceStatus(VkDevice device, VkFence fence)
vkGetFenceStatus qword ?

; VkResult vkWaitForFences(VkDevice device, uint32_t fenceCount, const VkFence * pFences, VkBool32 waitAll, uint64_t timeout)
vkWaitForFences qword ?

; VkResult vkCreateSemaphore(VkDevice device, const VkSemaphoreCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkSemaphore * pSemaphore)
vkCreateSemaphore qword ?

; void vkDestroySemaphore(VkDevice device, VkSemaphore semaphore, const VkAllocationCallbacks * pAllocator)
vkDestroySemaphore qword ?

; VkResult vkCreateEvent(VkDevice device, const VkEventCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkEvent * pEvent)
vkCreateEvent qword ?

; void vkDestroyEvent(VkDevice device, VkEvent event, const VkAllocationCallbacks * pAllocator)
vkDestroyEvent qword ?

; VkResult vkGetEventStatus(VkDevice device, VkEvent event)
vkGetEventStatus qword ?

; VkResult vkSetEvent(VkDevice device, VkEvent event)
vkSetEvent qword ?

; VkResult vkResetEvent(VkDevice device, VkEvent event)
vkResetEvent qword ?

; VkResult vkCreateQueryPool(VkDevice device, const VkQueryPoolCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkQueryPool * pQueryPool)
vkCreateQueryPool qword ?

; void vkDestroyQueryPool(VkDevice device, VkQueryPool queryPool, const VkAllocationCallbacks * pAllocator)
vkDestroyQueryPool qword ?

; VkResult vkGetQueryPoolResults(VkDevice device, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount, size_t dataSize, void * pData, VkDeviceSize stride, VkQueryResultFlags flags)
vkGetQueryPoolResults qword ?

; VkResult vkCreateBuffer(VkDevice device, const VkBufferCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkBuffer * pBuffer)
vkCreateBuffer qword ?

; void vkDestroyBuffer(VkDevice device, VkBuffer buffer, const VkAllocationCallbacks * pAllocator)
vkDestroyBuffer qword ?

; VkResult vkCreateBufferView(VkDevice device, const VkBufferViewCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkBufferView * pView)
vkCreateBufferView qword ?

; void vkDestroyBufferView(VkDevice device, VkBufferView bufferView, const VkAllocationCallbacks * pAllocator)
vkDestroyBufferView qword ?

; VkResult vkCreateImage(VkDevice device, const VkImageCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkImage * pImage)
vkCreateImage qword ?

; void vkDestroyImage(VkDevice device, VkImage image, const VkAllocationCallbacks * pAllocator)
vkDestroyImage qword ?

; void vkGetImageSubresourceLayout(VkDevice device, VkImage image, const VkImageSubresource * pSubresource, VkSubresourceLayout * pLayout)
vkGetImageSubresourceLayout qword ?

; VkResult vkCreateImageView(VkDevice device, const VkImageViewCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkImageView * pView)
vkCreateImageView qword ?

; void vkDestroyImageView(VkDevice device, VkImageView imageView, const VkAllocationCallbacks * pAllocator)
vkDestroyImageView qword ?

; VkResult vkCreateShaderModule(VkDevice device, const VkShaderModuleCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkShaderModule * pShaderModule)
vkCreateShaderModule qword ?

; void vkDestroyShaderModule(VkDevice device, VkShaderModule shaderModule, const VkAllocationCallbacks * pAllocator)
vkDestroyShaderModule qword ?

; VkResult vkCreatePipelineCache(VkDevice device, const VkPipelineCacheCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkPipelineCache * pPipelineCache)
vkCreatePipelineCache qword ?

; void vkDestroyPipelineCache(VkDevice device, VkPipelineCache pipelineCache, const VkAllocationCallbacks * pAllocator)
vkDestroyPipelineCache qword ?

; VkResult vkGetPipelineCacheData(VkDevice device, VkPipelineCache pipelineCache, size_t * pDataSize, void * pData)
vkGetPipelineCacheData qword ?

; VkResult vkMergePipelineCaches(VkDevice device, VkPipelineCache dstCache, uint32_t srcCacheCount, const VkPipelineCache * pSrcCaches)
vkMergePipelineCaches qword ?

; VkResult vkCreateGraphicsPipelines(VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkGraphicsPipelineCreateInfo * pCreateInfos, const VkAllocationCallbacks * pAllocator, VkPipeline * pPipelines)
vkCreateGraphicsPipelines qword ?

; VkResult vkCreateComputePipelines(VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkComputePipelineCreateInfo * pCreateInfos, const VkAllocationCallbacks * pAllocator, VkPipeline * pPipelines)
vkCreateComputePipelines qword ?

; void vkDestroyPipeline(VkDevice device, VkPipeline pipeline, const VkAllocationCallbacks * pAllocator)
vkDestroyPipeline qword ?

; VkResult vkCreatePipelineLayout(VkDevice device, const VkPipelineLayoutCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkPipelineLayout * pPipelineLayout)
vkCreatePipelineLayout qword ?

; void vkDestroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout, const VkAllocationCallbacks * pAllocator)
vkDestroyPipelineLayout qword ?

; VkResult vkCreateSampler(VkDevice device, const VkSamplerCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkSampler * pSampler)
vkCreateSampler qword ?

; void vkDestroySampler(VkDevice device, VkSampler sampler, const VkAllocationCallbacks * pAllocator)
vkDestroySampler qword ?

; VkResult vkCreateDescriptorSetLayout(VkDevice device, const VkDescriptorSetLayoutCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkDescriptorSetLayout * pSetLayout)
vkCreateDescriptorSetLayout qword ?

; void vkDestroyDescriptorSetLayout(VkDevice device, VkDescriptorSetLayout descriptorSetLayout, const VkAllocationCallbacks * pAllocator)
vkDestroyDescriptorSetLayout qword ?

; VkResult vkCreateDescriptorPool(VkDevice device, const VkDescriptorPoolCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkDescriptorPool * pDescriptorPool)
vkCreateDescriptorPool qword ?

; void vkDestroyDescriptorPool(VkDevice device, VkDescriptorPool descriptorPool, const VkAllocationCallbacks * pAllocator)
vkDestroyDescriptorPool qword ?

; VkResult vkResetDescriptorPool(VkDevice device, VkDescriptorPool descriptorPool, VkDescriptorPoolResetFlags flags)
vkResetDescriptorPool qword ?

; VkResult vkAllocateDescriptorSets(VkDevice device, const VkDescriptorSetAllocateInfo * pAllocateInfo, VkDescriptorSet * pDescriptorSets)
vkAllocateDescriptorSets qword ?

; VkResult vkFreeDescriptorSets(VkDevice device, VkDescriptorPool descriptorPool, uint32_t descriptorSetCount, const VkDescriptorSet * pDescriptorSets)
vkFreeDescriptorSets qword ?

; void vkUpdateDescriptorSets(VkDevice device, uint32_t descriptorWriteCount, const VkWriteDescriptorSet * pDescriptorWrites, uint32_t descriptorCopyCount, const VkCopyDescriptorSet * pDescriptorCopies)
vkUpdateDescriptorSets qword ?

; VkResult vkCreateFramebuffer(VkDevice device, const VkFramebufferCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkFramebuffer * pFramebuffer)
vkCreateFramebuffer qword ?

; void vkDestroyFramebuffer(VkDevice device, VkFramebuffer framebuffer, const VkAllocationCallbacks * pAllocator)
vkDestroyFramebuffer qword ?

; VkResult vkCreateRenderPass(VkDevice device, const VkRenderPassCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkRenderPass * pRenderPass)
vkCreateRenderPass qword ?

; void vkDestroyRenderPass(VkDevice device, VkRenderPass renderPass, const VkAllocationCallbacks * pAllocator)
vkDestroyRenderPass qword ?

; void vkGetRenderAreaGranularity(VkDevice device, VkRenderPass renderPass, VkExtent2D * pGranularity)
vkGetRenderAreaGranularity qword ?

; VkResult vkCreateCommandPool(VkDevice device, const VkCommandPoolCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkCommandPool * pCommandPool)
vkCreateCommandPool qword ?

; void vkDestroyCommandPool(VkDevice device, VkCommandPool commandPool, const VkAllocationCallbacks * pAllocator)
vkDestroyCommandPool qword ?

; VkResult vkResetCommandPool(VkDevice device, VkCommandPool commandPool, VkCommandPoolResetFlags flags)
vkResetCommandPool qword ?

; VkResult vkAllocateCommandBuffers(VkDevice device, const VkCommandBufferAllocateInfo * pAllocateInfo, VkCommandBuffer * pCommandBuffers)
vkAllocateCommandBuffers qword ?

; void vkFreeCommandBuffers(VkDevice device, VkCommandPool commandPool, uint32_t commandBufferCount, const VkCommandBuffer * pCommandBuffers)
vkFreeCommandBuffers qword ?

; VkResult vkBeginCommandBuffer(VkCommandBuffer commandBuffer, const VkCommandBufferBeginInfo * pBeginInfo)
vkBeginCommandBuffer qword ?

; VkResult vkEndCommandBuffer(VkCommandBuffer commandBuffer)
vkEndCommandBuffer qword ?

; VkResult vkResetCommandBuffer(VkCommandBuffer commandBuffer, VkCommandBufferResetFlags flags)
vkResetCommandBuffer qword ?

; void vkCmdBindPipeline(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipeline pipeline)
vkCmdBindPipeline qword ?

; void vkCmdSetViewport(VkCommandBuffer commandBuffer, uint32_t firstViewport, uint32_t viewportCount, const VkViewport * pViewports)
vkCmdSetViewport qword ?

; void vkCmdSetScissor(VkCommandBuffer commandBuffer, uint32_t firstScissor, uint32_t scissorCount, const VkRect2D * pScissors)
vkCmdSetScissor qword ?

; void vkCmdSetLineWidth(VkCommandBuffer commandBuffer, float lineWidth)
vkCmdSetLineWidth qword ?

; void vkCmdSetDepthBias(VkCommandBuffer commandBuffer, float depthBiasConstantFactor, float depthBiasClamp, float depthBiasSlopeFactor)
vkCmdSetDepthBias qword ?

; void vkCmdSetBlendConstants(VkCommandBuffer commandBuffer, const float[4] blendConstants)
vkCmdSetBlendConstants qword ?

; void vkCmdSetDepthBounds(VkCommandBuffer commandBuffer, float minDepthBounds, float maxDepthBounds)
vkCmdSetDepthBounds qword ?

; void vkCmdSetStencilCompareMask(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t compareMask)
vkCmdSetStencilCompareMask qword ?

; void vkCmdSetStencilWriteMask(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t writeMask)
vkCmdSetStencilWriteMask qword ?

; void vkCmdSetStencilReference(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t reference)
vkCmdSetStencilReference qword ?

; void vkCmdBindDescriptorSets(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipelineLayout layout, uint32_t firstSet, uint32_t descriptorSetCount, const VkDescriptorSet * pDescriptorSets, uint32_t dynamicOffsetCount, const uint32_t * pDynamicOffsets)
vkCmdBindDescriptorSets qword ?

; void vkCmdBindIndexBuffer(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkIndexType indexType)
vkCmdBindIndexBuffer qword ?

; void vkCmdBindVertexBuffers(VkCommandBuffer commandBuffer, uint32_t firstBinding, uint32_t bindingCount, const VkBuffer * pBuffers, const VkDeviceSize * pOffsets)
vkCmdBindVertexBuffers qword ?

; void vkCmdDraw(VkCommandBuffer commandBuffer, uint32_t vertexCount, uint32_t instanceCount, uint32_t firstVertex, uint32_t firstInstance)
vkCmdDraw qword ?

; void vkCmdDrawIndexed(VkCommandBuffer commandBuffer, uint32_t indexCount, uint32_t instanceCount, uint32_t firstIndex, int32_t vertexOffset, uint32_t firstInstance)
vkCmdDrawIndexed qword ?

; void vkCmdDrawIndirect(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, uint32_t drawCount, uint32_t stride)
vkCmdDrawIndirect qword ?

; void vkCmdDrawIndexedIndirect(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, uint32_t drawCount, uint32_t stride)
vkCmdDrawIndexedIndirect qword ?

; void vkCmdDispatch(VkCommandBuffer commandBuffer, uint32_t groupCountX, uint32_t groupCountY, uint32_t groupCountZ)
vkCmdDispatch qword ?

; void vkCmdDispatchIndirect(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset)
vkCmdDispatchIndirect qword ?

; void vkCmdCopyBuffer(VkCommandBuffer commandBuffer, VkBuffer srcBuffer, VkBuffer dstBuffer, uint32_t regionCount, const VkBufferCopy * pRegions)
vkCmdCopyBuffer qword ?

; void vkCmdCopyImage(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageCopy * pRegions)
vkCmdCopyImage qword ?

; void vkCmdBlitImage(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageBlit * pRegions, VkFilter filter)
vkCmdBlitImage qword ?

; void vkCmdCopyBufferToImage(VkCommandBuffer commandBuffer, VkBuffer srcBuffer, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkBufferImageCopy * pRegions)
vkCmdCopyBufferToImage qword ?

; void vkCmdCopyImageToBuffer(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkBuffer dstBuffer, uint32_t regionCount, const VkBufferImageCopy * pRegions)
vkCmdCopyImageToBuffer qword ?

; void vkCmdUpdateBuffer(VkCommandBuffer commandBuffer, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize dataSize, const void * pData)
vkCmdUpdateBuffer qword ?

; void vkCmdFillBuffer(VkCommandBuffer commandBuffer, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize size, uint32_t data)
vkCmdFillBuffer qword ?

; void vkCmdClearColorImage(VkCommandBuffer commandBuffer, VkImage image, VkImageLayout imageLayout, const VkClearColorValue * pColor, uint32_t rangeCount, const VkImageSubresourceRange * pRanges)
vkCmdClearColorImage qword ?

; void vkCmdClearDepthStencilImage(VkCommandBuffer commandBuffer, VkImage image, VkImageLayout imageLayout, const VkClearDepthStencilValue * pDepthStencil, uint32_t rangeCount, const VkImageSubresourceRange * pRanges)
vkCmdClearDepthStencilImage qword ?

; void vkCmdClearAttachments(VkCommandBuffer commandBuffer, uint32_t attachmentCount, const VkClearAttachment * pAttachments, uint32_t rectCount, const VkClearRect * pRects)
vkCmdClearAttachments qword ?

; void vkCmdResolveImage(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageResolve * pRegions)
vkCmdResolveImage qword ?

; void vkCmdSetEvent(VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags stageMask)
vkCmdSetEvent qword ?

; void vkCmdResetEvent(VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags stageMask)
vkCmdResetEvent qword ?

; void vkCmdWaitEvents(VkCommandBuffer commandBuffer, uint32_t eventCount, const VkEvent * pEvents, VkPipelineStageFlags srcStageMask, VkPipelineStageFlags dstStageMask, uint32_t memoryBarrierCount, const VkMemoryBarrier * pMemoryBarriers, uint32_t bufferMemoryBarrierCount, const VkBufferMemoryBarrier * pBufferMemoryBarriers, uint32_t imageMemoryBarrierCount, const VkImageMemoryBarrier * pImageMemoryBarriers)
vkCmdWaitEvents qword ?

; void vkCmdPipelineBarrier(VkCommandBuffer commandBuffer, VkPipelineStageFlags srcStageMask, VkPipelineStageFlags dstStageMask, VkDependencyFlags dependencyFlags, uint32_t memoryBarrierCount, const VkMemoryBarrier * pMemoryBarriers, uint32_t bufferMemoryBarrierCount, const VkBufferMemoryBarrier * pBufferMemoryBarriers, uint32_t imageMemoryBarrierCount, const VkImageMemoryBarrier * pImageMemoryBarriers)
vkCmdPipelineBarrier qword ?

; void vkCmdBeginQuery(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query, VkQueryControlFlags flags)
vkCmdBeginQuery qword ?

; void vkCmdEndQuery(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query)
vkCmdEndQuery qword ?

; void vkCmdResetQueryPool(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount)
vkCmdResetQueryPool qword ?

; void vkCmdWriteTimestamp(VkCommandBuffer commandBuffer, VkPipelineStageFlagBits pipelineStage, VkQueryPool queryPool, uint32_t query)
vkCmdWriteTimestamp qword ?

; void vkCmdCopyQueryPoolResults(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize stride, VkQueryResultFlags flags)
vkCmdCopyQueryPoolResults qword ?

; void vkCmdPushConstants(VkCommandBuffer commandBuffer, VkPipelineLayout layout, VkShaderStageFlags stageFlags, uint32_t offset, uint32_t size, const void * pValues)
vkCmdPushConstants qword ?

; void vkCmdBeginRenderPass(VkCommandBuffer commandBuffer, const VkRenderPassBeginInfo * pRenderPassBegin, VkSubpassContents contents)
vkCmdBeginRenderPass qword ?

; void vkCmdNextSubpass(VkCommandBuffer commandBuffer, VkSubpassContents contents)
vkCmdNextSubpass qword ?

; void vkCmdEndRenderPass(VkCommandBuffer commandBuffer)
vkCmdEndRenderPass qword ?

; void vkCmdExecuteCommands(VkCommandBuffer commandBuffer, uint32_t commandBufferCount, const VkCommandBuffer * pCommandBuffers)
vkCmdExecuteCommands qword ?

; TYPEDEF VkSamplerYcbcrConversion = struct VkSamplerYcbcrConversion_T *, TypeKind.POINTER
VkSamplerYcbcrConversion typedef qword

; TYPEDEF VkDescriptorUpdateTemplate = struct VkDescriptorUpdateTemplate_T *, TypeKind.POINTER
VkDescriptorUpdateTemplate typedef qword

; enum VkPointClippingBehavior {
    VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES equ 0
    VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY equ 1
    VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR equ 0
    VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR equ 1
    VK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPointClippingBehavior = enum VkPointClippingBehavior, TypeKind.ELABORATED
VkPointClippingBehavior typedef dword

; enum VkPointClippingBehavior {
    VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES equ 0
    VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY equ 1
    VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR equ 0
    VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR equ 1
    VK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM equ 2147483647
; }

; enum VkTessellationDomainOrigin {
    VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT equ 0
    VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT equ 1
    VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR equ 0
    VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR equ 1
    VK_TESSELLATION_DOMAIN_ORIGIN_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkTessellationDomainOrigin = enum VkTessellationDomainOrigin, TypeKind.ELABORATED
VkTessellationDomainOrigin typedef dword

; enum VkTessellationDomainOrigin {
    VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT equ 0
    VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT equ 1
    VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR equ 0
    VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR equ 1
    VK_TESSELLATION_DOMAIN_ORIGIN_MAX_ENUM equ 2147483647
; }

; enum VkSamplerYcbcrModelConversion {
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY equ 0
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY equ 1
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709 equ 2
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601 equ 3
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020 equ 4
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR equ 0
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR equ 1
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR equ 2
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR equ 3
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR equ 4
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSamplerYcbcrModelConversion = enum VkSamplerYcbcrModelConversion, TypeKind.ELABORATED
VkSamplerYcbcrModelConversion typedef dword

; enum VkSamplerYcbcrModelConversion {
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY equ 0
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY equ 1
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709 equ 2
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601 equ 3
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020 equ 4
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR equ 0
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR equ 1
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR equ 2
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR equ 3
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR equ 4
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_MAX_ENUM equ 2147483647
; }

; enum VkSamplerYcbcrRange {
    VK_SAMPLER_YCBCR_RANGE_ITU_FULL equ 0
    VK_SAMPLER_YCBCR_RANGE_ITU_NARROW equ 1
    VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR equ 0
    VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR equ 1
    VK_SAMPLER_YCBCR_RANGE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSamplerYcbcrRange = enum VkSamplerYcbcrRange, TypeKind.ELABORATED
VkSamplerYcbcrRange typedef dword

; enum VkSamplerYcbcrRange {
    VK_SAMPLER_YCBCR_RANGE_ITU_FULL equ 0
    VK_SAMPLER_YCBCR_RANGE_ITU_NARROW equ 1
    VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR equ 0
    VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR equ 1
    VK_SAMPLER_YCBCR_RANGE_MAX_ENUM equ 2147483647
; }

; enum VkChromaLocation {
    VK_CHROMA_LOCATION_COSITED_EVEN equ 0
    VK_CHROMA_LOCATION_MIDPOINT equ 1
    VK_CHROMA_LOCATION_COSITED_EVEN_KHR equ 0
    VK_CHROMA_LOCATION_MIDPOINT_KHR equ 1
    VK_CHROMA_LOCATION_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkChromaLocation = enum VkChromaLocation, TypeKind.ELABORATED
VkChromaLocation typedef dword

; enum VkChromaLocation {
    VK_CHROMA_LOCATION_COSITED_EVEN equ 0
    VK_CHROMA_LOCATION_MIDPOINT equ 1
    VK_CHROMA_LOCATION_COSITED_EVEN_KHR equ 0
    VK_CHROMA_LOCATION_MIDPOINT_KHR equ 1
    VK_CHROMA_LOCATION_MAX_ENUM equ 2147483647
; }

; enum VkDescriptorUpdateTemplateType {
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET equ 0
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR equ 1
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR equ 0
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDescriptorUpdateTemplateType = enum VkDescriptorUpdateTemplateType, TypeKind.ELABORATED
VkDescriptorUpdateTemplateType typedef dword

; enum VkDescriptorUpdateTemplateType {
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET equ 0
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR equ 1
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR equ 0
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM equ 2147483647
; }

; enum VkSubgroupFeatureFlagBits {
    VK_SUBGROUP_FEATURE_BASIC_BIT equ 1
    VK_SUBGROUP_FEATURE_VOTE_BIT equ 2
    VK_SUBGROUP_FEATURE_ARITHMETIC_BIT equ 4
    VK_SUBGROUP_FEATURE_BALLOT_BIT equ 8
    VK_SUBGROUP_FEATURE_SHUFFLE_BIT equ 16
    VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT equ 32
    VK_SUBGROUP_FEATURE_CLUSTERED_BIT equ 64
    VK_SUBGROUP_FEATURE_QUAD_BIT equ 128
    VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV equ 256
    VK_SUBGROUP_FEATURE_ROTATE_BIT_KHR equ 512
    VK_SUBGROUP_FEATURE_ROTATE_CLUSTERED_BIT_KHR equ 1024
    VK_SUBGROUP_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSubgroupFeatureFlagBits = enum VkSubgroupFeatureFlagBits, TypeKind.ELABORATED
VkSubgroupFeatureFlagBits typedef dword

; enum VkSubgroupFeatureFlagBits {
    VK_SUBGROUP_FEATURE_BASIC_BIT equ 1
    VK_SUBGROUP_FEATURE_VOTE_BIT equ 2
    VK_SUBGROUP_FEATURE_ARITHMETIC_BIT equ 4
    VK_SUBGROUP_FEATURE_BALLOT_BIT equ 8
    VK_SUBGROUP_FEATURE_SHUFFLE_BIT equ 16
    VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT equ 32
    VK_SUBGROUP_FEATURE_CLUSTERED_BIT equ 64
    VK_SUBGROUP_FEATURE_QUAD_BIT equ 128
    VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV equ 256
    VK_SUBGROUP_FEATURE_ROTATE_BIT_KHR equ 512
    VK_SUBGROUP_FEATURE_ROTATE_CLUSTERED_BIT_KHR equ 1024
    VK_SUBGROUP_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSubgroupFeatureFlags = VkFlags, TypeKind.ELABORATED
VkSubgroupFeatureFlags typedef dword

; enum VkPeerMemoryFeatureFlagBits {
    VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT equ 1
    VK_PEER_MEMORY_FEATURE_COPY_DST_BIT equ 2
    VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT equ 4
    VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT equ 8
    VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR equ 1
    VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR equ 2
    VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR equ 4
    VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR equ 8
    VK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPeerMemoryFeatureFlagBits = enum VkPeerMemoryFeatureFlagBits, TypeKind.ELABORATED
VkPeerMemoryFeatureFlagBits typedef dword

; enum VkPeerMemoryFeatureFlagBits {
    VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT equ 1
    VK_PEER_MEMORY_FEATURE_COPY_DST_BIT equ 2
    VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT equ 4
    VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT equ 8
    VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR equ 1
    VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR equ 2
    VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR equ 4
    VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR equ 8
    VK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPeerMemoryFeatureFlags = VkFlags, TypeKind.ELABORATED
VkPeerMemoryFeatureFlags typedef dword

; enum VkMemoryAllocateFlagBits {
    VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT equ 1
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT equ 2
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT equ 4
    VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR equ 1
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR equ 2
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR equ 4
    VK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkMemoryAllocateFlagBits = enum VkMemoryAllocateFlagBits, TypeKind.ELABORATED
VkMemoryAllocateFlagBits typedef dword

; enum VkMemoryAllocateFlagBits {
    VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT equ 1
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT equ 2
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT equ 4
    VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR equ 1
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR equ 2
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR equ 4
    VK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkMemoryAllocateFlags = VkFlags, TypeKind.ELABORATED
VkMemoryAllocateFlags typedef dword

; TYPEDEF VkCommandPoolTrimFlags = VkFlags, TypeKind.ELABORATED
VkCommandPoolTrimFlags typedef dword

; TYPEDEF VkDescriptorUpdateTemplateCreateFlags = VkFlags, TypeKind.ELABORATED
VkDescriptorUpdateTemplateCreateFlags typedef dword

; enum VkExternalMemoryHandleTypeFlagBits {
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT equ 1
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT equ 2
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT equ 4
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT equ 8
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT equ 16
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT equ 32
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT equ 64
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT equ 512
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID equ 1024
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT equ 128
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT equ 256
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA equ 2048
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV equ 4096
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX equ 16384
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR equ 1
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR equ 2
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR equ 4
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR equ 8
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR equ 16
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR equ 32
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR equ 64
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalMemoryHandleTypeFlagBits = enum VkExternalMemoryHandleTypeFlagBits, TypeKind.ELABORATED
VkExternalMemoryHandleTypeFlagBits typedef dword

; enum VkExternalMemoryHandleTypeFlagBits {
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT equ 1
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT equ 2
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT equ 4
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT equ 8
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT equ 16
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT equ 32
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT equ 64
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT equ 512
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID equ 1024
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT equ 128
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT equ 256
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA equ 2048
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV equ 4096
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX equ 16384
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR equ 1
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR equ 2
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR equ 4
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR equ 8
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR equ 16
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR equ 32
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR equ 64
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalMemoryHandleTypeFlags = VkFlags, TypeKind.ELABORATED
VkExternalMemoryHandleTypeFlags typedef dword

; enum VkExternalMemoryFeatureFlagBits {
    VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT equ 1
    VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT equ 2
    VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT equ 4
    VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR equ 1
    VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR equ 2
    VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR equ 4
    VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalMemoryFeatureFlagBits = enum VkExternalMemoryFeatureFlagBits, TypeKind.ELABORATED
VkExternalMemoryFeatureFlagBits typedef dword

; enum VkExternalMemoryFeatureFlagBits {
    VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT equ 1
    VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT equ 2
    VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT equ 4
    VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR equ 1
    VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR equ 2
    VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR equ 4
    VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalMemoryFeatureFlags = VkFlags, TypeKind.ELABORATED
VkExternalMemoryFeatureFlags typedef dword

; enum VkExternalFenceHandleTypeFlagBits {
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT equ 1
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT equ 2
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT equ 4
    VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT equ 8
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR equ 1
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR equ 2
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR equ 4
    VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR equ 8
    VK_EXTERNAL_FENCE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalFenceHandleTypeFlagBits = enum VkExternalFenceHandleTypeFlagBits, TypeKind.ELABORATED
VkExternalFenceHandleTypeFlagBits typedef dword

; enum VkExternalFenceHandleTypeFlagBits {
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT equ 1
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT equ 2
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT equ 4
    VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT equ 8
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR equ 1
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR equ 2
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR equ 4
    VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR equ 8
    VK_EXTERNAL_FENCE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalFenceHandleTypeFlags = VkFlags, TypeKind.ELABORATED
VkExternalFenceHandleTypeFlags typedef dword

; enum VkExternalFenceFeatureFlagBits {
    VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT equ 1
    VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT equ 2
    VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR equ 1
    VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR equ 2
    VK_EXTERNAL_FENCE_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalFenceFeatureFlagBits = enum VkExternalFenceFeatureFlagBits, TypeKind.ELABORATED
VkExternalFenceFeatureFlagBits typedef dword

; enum VkExternalFenceFeatureFlagBits {
    VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT equ 1
    VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT equ 2
    VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR equ 1
    VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR equ 2
    VK_EXTERNAL_FENCE_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalFenceFeatureFlags = VkFlags, TypeKind.ELABORATED
VkExternalFenceFeatureFlags typedef dword

; enum VkFenceImportFlagBits {
    VK_FENCE_IMPORT_TEMPORARY_BIT equ 1
    VK_FENCE_IMPORT_TEMPORARY_BIT_KHR equ 1
    VK_FENCE_IMPORT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkFenceImportFlagBits = enum VkFenceImportFlagBits, TypeKind.ELABORATED
VkFenceImportFlagBits typedef dword

; enum VkFenceImportFlagBits {
    VK_FENCE_IMPORT_TEMPORARY_BIT equ 1
    VK_FENCE_IMPORT_TEMPORARY_BIT_KHR equ 1
    VK_FENCE_IMPORT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkFenceImportFlags = VkFlags, TypeKind.ELABORATED
VkFenceImportFlags typedef dword

; enum VkSemaphoreImportFlagBits {
    VK_SEMAPHORE_IMPORT_TEMPORARY_BIT equ 1
    VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR equ 1
    VK_SEMAPHORE_IMPORT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSemaphoreImportFlagBits = enum VkSemaphoreImportFlagBits, TypeKind.ELABORATED
VkSemaphoreImportFlagBits typedef dword

; enum VkSemaphoreImportFlagBits {
    VK_SEMAPHORE_IMPORT_TEMPORARY_BIT equ 1
    VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR equ 1
    VK_SEMAPHORE_IMPORT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSemaphoreImportFlags = VkFlags, TypeKind.ELABORATED
VkSemaphoreImportFlags typedef dword

; enum VkExternalSemaphoreHandleTypeFlagBits {
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT equ 1
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT equ 2
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT equ 4
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT equ 8
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT equ 16
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA equ 128
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT equ 8
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR equ 1
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR equ 2
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR equ 4
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR equ 8
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR equ 16
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalSemaphoreHandleTypeFlagBits = enum VkExternalSemaphoreHandleTypeFlagBits, TypeKind.ELABORATED
VkExternalSemaphoreHandleTypeFlagBits typedef dword

; enum VkExternalSemaphoreHandleTypeFlagBits {
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT equ 1
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT equ 2
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT equ 4
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT equ 8
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT equ 16
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA equ 128
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT equ 8
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR equ 1
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR equ 2
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR equ 4
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR equ 8
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR equ 16
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalSemaphoreHandleTypeFlags = VkFlags, TypeKind.ELABORATED
VkExternalSemaphoreHandleTypeFlags typedef dword

; enum VkExternalSemaphoreFeatureFlagBits {
    VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT equ 1
    VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT equ 2
    VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR equ 1
    VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR equ 2
    VK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalSemaphoreFeatureFlagBits = enum VkExternalSemaphoreFeatureFlagBits, TypeKind.ELABORATED
VkExternalSemaphoreFeatureFlagBits typedef dword

; enum VkExternalSemaphoreFeatureFlagBits {
    VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT equ 1
    VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT equ 2
    VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR equ 1
    VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR equ 2
    VK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkExternalSemaphoreFeatureFlags = VkFlags, TypeKind.ELABORATED
VkExternalSemaphoreFeatureFlags typedef dword

VkPhysicalDeviceSubgroupProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subgroupSize, type = uint32_t, offset = 16, size = 4
    subgroupSize dword ?
;   TypeKind.ELABORATED
;   name = supportedStages, type = VkShaderStageFlags, offset = 20, size = 4
    supportedStages VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = supportedOperations, type = VkSubgroupFeatureFlags, offset = 24, size = 4
    supportedOperations VkSubgroupFeatureFlags <>
;   TypeKind.ELABORATED
;   name = quadOperationsInAllStages, type = VkBool32, offset = 28, size = 4
    quadOperationsInAllStages VkBool32 <>
VkPhysicalDeviceSubgroupProperties ends

; TYPEDEF VkPhysicalDeviceSubgroupProperties = struct VkPhysicalDeviceSubgroupProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSubgroupProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subgroupSize, type = uint32_t, offset = 16, size = 4
    subgroupSize dword ?
;   TypeKind.ELABORATED
;   name = supportedStages, type = VkShaderStageFlags, offset = 20, size = 4
    supportedStages VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = supportedOperations, type = VkSubgroupFeatureFlags, offset = 24, size = 4
    supportedOperations VkSubgroupFeatureFlags <>
;   TypeKind.ELABORATED
;   name = quadOperationsInAllStages, type = VkBool32, offset = 28, size = 4
    quadOperationsInAllStages VkBool32 <>
VkPhysicalDeviceSubgroupProperties ends

VkBindBufferMemoryInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 32, size = 8
    memoryOffset VkDeviceSize <>
VkBindBufferMemoryInfo ends

; TYPEDEF VkBindBufferMemoryInfo = struct VkBindBufferMemoryInfo, TypeKind.ELABORATED
; remove struct typedef

VkBindBufferMemoryInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 32, size = 8
    memoryOffset VkDeviceSize <>
VkBindBufferMemoryInfo ends

VkBindImageMemoryInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 32, size = 8
    memoryOffset VkDeviceSize <>
VkBindImageMemoryInfo ends

; TYPEDEF VkBindImageMemoryInfo = struct VkBindImageMemoryInfo, TypeKind.ELABORATED
; remove struct typedef

VkBindImageMemoryInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 32, size = 8
    memoryOffset VkDeviceSize <>
VkBindImageMemoryInfo ends

VkPhysicalDevice16BitStorageFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = storageBuffer16BitAccess, type = VkBool32, offset = 16, size = 4
    storageBuffer16BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = uniformAndStorageBuffer16BitAccess, type = VkBool32, offset = 20, size = 4
    uniformAndStorageBuffer16BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = storagePushConstant16, type = VkBool32, offset = 24, size = 4
    storagePushConstant16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = storageInputOutput16, type = VkBool32, offset = 28, size = 4
    storageInputOutput16 VkBool32 <>
VkPhysicalDevice16BitStorageFeatures ends

; TYPEDEF VkPhysicalDevice16BitStorageFeatures = struct VkPhysicalDevice16BitStorageFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevice16BitStorageFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = storageBuffer16BitAccess, type = VkBool32, offset = 16, size = 4
    storageBuffer16BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = uniformAndStorageBuffer16BitAccess, type = VkBool32, offset = 20, size = 4
    uniformAndStorageBuffer16BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = storagePushConstant16, type = VkBool32, offset = 24, size = 4
    storagePushConstant16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = storageInputOutput16, type = VkBool32, offset = 28, size = 4
    storageInputOutput16 VkBool32 <>
VkPhysicalDevice16BitStorageFeatures ends

VkMemoryDedicatedRequirements struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = prefersDedicatedAllocation, type = VkBool32, offset = 16, size = 4
    prefersDedicatedAllocation VkBool32 <>
;   TypeKind.ELABORATED
;   name = requiresDedicatedAllocation, type = VkBool32, offset = 20, size = 4
    requiresDedicatedAllocation VkBool32 <>
VkMemoryDedicatedRequirements ends

; TYPEDEF VkMemoryDedicatedRequirements = struct VkMemoryDedicatedRequirements, TypeKind.ELABORATED
; remove struct typedef

VkMemoryDedicatedRequirements struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = prefersDedicatedAllocation, type = VkBool32, offset = 16, size = 4
    prefersDedicatedAllocation VkBool32 <>
;   TypeKind.ELABORATED
;   name = requiresDedicatedAllocation, type = VkBool32, offset = 20, size = 4
    requiresDedicatedAllocation VkBool32 <>
VkMemoryDedicatedRequirements ends

VkMemoryDedicatedAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 24, size = 8
    _buffer VkBuffer <>
VkMemoryDedicatedAllocateInfo ends

; TYPEDEF VkMemoryDedicatedAllocateInfo = struct VkMemoryDedicatedAllocateInfo, TypeKind.ELABORATED
; remove struct typedef

VkMemoryDedicatedAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 24, size = 8
    _buffer VkBuffer <>
VkMemoryDedicatedAllocateInfo ends

VkMemoryAllocateFlagsInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkMemoryAllocateFlags, offset = 16, size = 4
    flags VkMemoryAllocateFlags <>
;   TypeKind.ELABORATED
;   name = deviceMask, type = uint32_t, offset = 20, size = 4
    deviceMask dword ?
VkMemoryAllocateFlagsInfo ends

; TYPEDEF VkMemoryAllocateFlagsInfo = struct VkMemoryAllocateFlagsInfo, TypeKind.ELABORATED
; remove struct typedef

VkMemoryAllocateFlagsInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkMemoryAllocateFlags, offset = 16, size = 4
    flags VkMemoryAllocateFlags <>
;   TypeKind.ELABORATED
;   name = deviceMask, type = uint32_t, offset = 20, size = 4
    deviceMask dword ?
VkMemoryAllocateFlagsInfo ends

VkDeviceGroupRenderPassBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceMask, type = uint32_t, offset = 16, size = 4
    deviceMask dword ?
;   TypeKind.ELABORATED
;   name = deviceRenderAreaCount, type = uint32_t, offset = 20, size = 4
    deviceRenderAreaCount dword ?
;   TypeKind.POINTER
;   name = pDeviceRenderAreas, type = const VkRect2D *, offset = 24, size = 8
    pDeviceRenderAreas qword ?
VkDeviceGroupRenderPassBeginInfo ends

; TYPEDEF VkDeviceGroupRenderPassBeginInfo = struct VkDeviceGroupRenderPassBeginInfo, TypeKind.ELABORATED
; remove struct typedef

VkDeviceGroupRenderPassBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceMask, type = uint32_t, offset = 16, size = 4
    deviceMask dword ?
;   TypeKind.ELABORATED
;   name = deviceRenderAreaCount, type = uint32_t, offset = 20, size = 4
    deviceRenderAreaCount dword ?
;   TypeKind.POINTER
;   name = pDeviceRenderAreas, type = const VkRect2D *, offset = 24, size = 8
    pDeviceRenderAreas qword ?
VkDeviceGroupRenderPassBeginInfo ends

VkDeviceGroupCommandBufferBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceMask, type = uint32_t, offset = 16, size = 4
    deviceMask dword ?
VkDeviceGroupCommandBufferBeginInfo ends

; TYPEDEF VkDeviceGroupCommandBufferBeginInfo = struct VkDeviceGroupCommandBufferBeginInfo, TypeKind.ELABORATED
; remove struct typedef

VkDeviceGroupCommandBufferBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceMask, type = uint32_t, offset = 16, size = 4
    deviceMask dword ?
VkDeviceGroupCommandBufferBeginInfo ends

VkDeviceGroupSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = waitSemaphoreCount, type = uint32_t, offset = 16, size = 4
    waitSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pWaitSemaphoreDeviceIndices, type = const uint32_t *, offset = 24, size = 8
    pWaitSemaphoreDeviceIndices qword ?
;   TypeKind.ELABORATED
;   name = commandBufferCount, type = uint32_t, offset = 32, size = 4
    commandBufferCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCommandBufferDeviceMasks, type = const uint32_t *, offset = 40, size = 8
    pCommandBufferDeviceMasks qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphoreCount, type = uint32_t, offset = 48, size = 4
    signalSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSignalSemaphoreDeviceIndices, type = const uint32_t *, offset = 56, size = 8
    pSignalSemaphoreDeviceIndices qword ?
VkDeviceGroupSubmitInfo ends

; TYPEDEF VkDeviceGroupSubmitInfo = struct VkDeviceGroupSubmitInfo, TypeKind.ELABORATED
; remove struct typedef

VkDeviceGroupSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = waitSemaphoreCount, type = uint32_t, offset = 16, size = 4
    waitSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pWaitSemaphoreDeviceIndices, type = const uint32_t *, offset = 24, size = 8
    pWaitSemaphoreDeviceIndices qword ?
;   TypeKind.ELABORATED
;   name = commandBufferCount, type = uint32_t, offset = 32, size = 4
    commandBufferCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCommandBufferDeviceMasks, type = const uint32_t *, offset = 40, size = 8
    pCommandBufferDeviceMasks qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphoreCount, type = uint32_t, offset = 48, size = 4
    signalSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSignalSemaphoreDeviceIndices, type = const uint32_t *, offset = 56, size = 8
    pSignalSemaphoreDeviceIndices qword ?
VkDeviceGroupSubmitInfo ends

VkDeviceGroupBindSparseInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = resourceDeviceIndex, type = uint32_t, offset = 16, size = 4
    resourceDeviceIndex dword ?
;   TypeKind.ELABORATED
;   name = memoryDeviceIndex, type = uint32_t, offset = 20, size = 4
    memoryDeviceIndex dword ?
VkDeviceGroupBindSparseInfo ends

; TYPEDEF VkDeviceGroupBindSparseInfo = struct VkDeviceGroupBindSparseInfo, TypeKind.ELABORATED
; remove struct typedef

VkDeviceGroupBindSparseInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = resourceDeviceIndex, type = uint32_t, offset = 16, size = 4
    resourceDeviceIndex dword ?
;   TypeKind.ELABORATED
;   name = memoryDeviceIndex, type = uint32_t, offset = 20, size = 4
    memoryDeviceIndex dword ?
VkDeviceGroupBindSparseInfo ends

VkBindBufferMemoryDeviceGroupInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceIndexCount, type = uint32_t, offset = 16, size = 4
    deviceIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDeviceIndices, type = const uint32_t *, offset = 24, size = 8
    pDeviceIndices qword ?
VkBindBufferMemoryDeviceGroupInfo ends

; TYPEDEF VkBindBufferMemoryDeviceGroupInfo = struct VkBindBufferMemoryDeviceGroupInfo, TypeKind.ELABORATED
; remove struct typedef

VkBindBufferMemoryDeviceGroupInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceIndexCount, type = uint32_t, offset = 16, size = 4
    deviceIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDeviceIndices, type = const uint32_t *, offset = 24, size = 8
    pDeviceIndices qword ?
VkBindBufferMemoryDeviceGroupInfo ends

VkBindImageMemoryDeviceGroupInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceIndexCount, type = uint32_t, offset = 16, size = 4
    deviceIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDeviceIndices, type = const uint32_t *, offset = 24, size = 8
    pDeviceIndices qword ?
;   TypeKind.ELABORATED
;   name = splitInstanceBindRegionCount, type = uint32_t, offset = 32, size = 4
    splitInstanceBindRegionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSplitInstanceBindRegions, type = const VkRect2D *, offset = 40, size = 8
    pSplitInstanceBindRegions qword ?
VkBindImageMemoryDeviceGroupInfo ends

; TYPEDEF VkBindImageMemoryDeviceGroupInfo = struct VkBindImageMemoryDeviceGroupInfo, TypeKind.ELABORATED
; remove struct typedef

VkBindImageMemoryDeviceGroupInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceIndexCount, type = uint32_t, offset = 16, size = 4
    deviceIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDeviceIndices, type = const uint32_t *, offset = 24, size = 8
    pDeviceIndices qword ?
;   TypeKind.ELABORATED
;   name = splitInstanceBindRegionCount, type = uint32_t, offset = 32, size = 4
    splitInstanceBindRegionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSplitInstanceBindRegions, type = const VkRect2D *, offset = 40, size = 8
    pSplitInstanceBindRegions qword ?
VkBindImageMemoryDeviceGroupInfo ends

VkPhysicalDeviceGroupProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = physicalDeviceCount, type = uint32_t, offset = 16, size = 4
    physicalDeviceCount dword ?
    byte 4 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = physicalDevices, type = VkPhysicalDevice[32], offset = 24, size = 256
    physicalDevices VkPhysicalDevice 32 dup(<>)
;   TypeKind.ELABORATED
;   name = subsetAllocation, type = VkBool32, offset = 280, size = 4
    subsetAllocation VkBool32 <>
VkPhysicalDeviceGroupProperties ends

; TYPEDEF VkPhysicalDeviceGroupProperties = struct VkPhysicalDeviceGroupProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceGroupProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = physicalDeviceCount, type = uint32_t, offset = 16, size = 4
    physicalDeviceCount dword ?
    byte 4 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = physicalDevices, type = VkPhysicalDevice[32], offset = 24, size = 256
    physicalDevices VkPhysicalDevice 32 dup(<>)
;   TypeKind.ELABORATED
;   name = subsetAllocation, type = VkBool32, offset = 280, size = 4
    subsetAllocation VkBool32 <>
VkPhysicalDeviceGroupProperties ends

VkDeviceGroupDeviceCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = physicalDeviceCount, type = uint32_t, offset = 16, size = 4
    physicalDeviceCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPhysicalDevices, type = const VkPhysicalDevice *, offset = 24, size = 8
    pPhysicalDevices qword ?
VkDeviceGroupDeviceCreateInfo ends

; TYPEDEF VkDeviceGroupDeviceCreateInfo = struct VkDeviceGroupDeviceCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkDeviceGroupDeviceCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = physicalDeviceCount, type = uint32_t, offset = 16, size = 4
    physicalDeviceCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPhysicalDevices, type = const VkPhysicalDevice *, offset = 24, size = 8
    pPhysicalDevices qword ?
VkDeviceGroupDeviceCreateInfo ends

VkBufferMemoryRequirementsInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
VkBufferMemoryRequirementsInfo2 ends

; TYPEDEF VkBufferMemoryRequirementsInfo2 = struct VkBufferMemoryRequirementsInfo2, TypeKind.ELABORATED
; remove struct typedef

VkBufferMemoryRequirementsInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
VkBufferMemoryRequirementsInfo2 ends

VkImageMemoryRequirementsInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
VkImageMemoryRequirementsInfo2 ends

; TYPEDEF VkImageMemoryRequirementsInfo2 = struct VkImageMemoryRequirementsInfo2, TypeKind.ELABORATED
; remove struct typedef

VkImageMemoryRequirementsInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
VkImageMemoryRequirementsInfo2 ends

VkImageSparseMemoryRequirementsInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
VkImageSparseMemoryRequirementsInfo2 ends

; TYPEDEF VkImageSparseMemoryRequirementsInfo2 = struct VkImageSparseMemoryRequirementsInfo2, TypeKind.ELABORATED
; remove struct typedef

VkImageSparseMemoryRequirementsInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
VkImageSparseMemoryRequirementsInfo2 ends

VkMemoryRequirements2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryRequirements, type = VkMemoryRequirements, offset = 16, size = 24
    memoryRequirements VkMemoryRequirements <>
VkMemoryRequirements2 ends

; TYPEDEF VkMemoryRequirements2 = struct VkMemoryRequirements2, TypeKind.ELABORATED
; remove struct typedef

VkMemoryRequirements2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryRequirements, type = VkMemoryRequirements, offset = 16, size = 24
    memoryRequirements VkMemoryRequirements <>
VkMemoryRequirements2 ends

VkSparseImageMemoryRequirements2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryRequirements, type = VkSparseImageMemoryRequirements, offset = 16, size = 48
    memoryRequirements VkSparseImageMemoryRequirements <>
VkSparseImageMemoryRequirements2 ends

; TYPEDEF VkSparseImageMemoryRequirements2 = struct VkSparseImageMemoryRequirements2, TypeKind.ELABORATED
; remove struct typedef

VkSparseImageMemoryRequirements2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryRequirements, type = VkSparseImageMemoryRequirements, offset = 16, size = 48
    memoryRequirements VkSparseImageMemoryRequirements <>
VkSparseImageMemoryRequirements2 ends

VkPhysicalDeviceFeatures2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = features, type = VkPhysicalDeviceFeatures, offset = 16, size = 220
    features VkPhysicalDeviceFeatures <>
VkPhysicalDeviceFeatures2 ends

; TYPEDEF VkPhysicalDeviceFeatures2 = struct VkPhysicalDeviceFeatures2, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFeatures2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = features, type = VkPhysicalDeviceFeatures, offset = 16, size = 220
    features VkPhysicalDeviceFeatures <>
VkPhysicalDeviceFeatures2 ends

VkPhysicalDeviceProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = properties, type = VkPhysicalDeviceProperties, offset = 16, size = 824
    properties VkPhysicalDeviceProperties <>
VkPhysicalDeviceProperties2 ends

; TYPEDEF VkPhysicalDeviceProperties2 = struct VkPhysicalDeviceProperties2, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = properties, type = VkPhysicalDeviceProperties, offset = 16, size = 824
    properties VkPhysicalDeviceProperties <>
VkPhysicalDeviceProperties2 ends

VkFormatProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = formatProperties, type = VkFormatProperties, offset = 16, size = 12
    formatProperties VkFormatProperties <>
VkFormatProperties2 ends

; TYPEDEF VkFormatProperties2 = struct VkFormatProperties2, TypeKind.ELABORATED
; remove struct typedef

VkFormatProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = formatProperties, type = VkFormatProperties, offset = 16, size = 12
    formatProperties VkFormatProperties <>
VkFormatProperties2 ends

VkImageFormatProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageFormatProperties, type = VkImageFormatProperties, offset = 16, size = 32
    imageFormatProperties VkImageFormatProperties <>
VkImageFormatProperties2 ends

; TYPEDEF VkImageFormatProperties2 = struct VkImageFormatProperties2, TypeKind.ELABORATED
; remove struct typedef

VkImageFormatProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageFormatProperties, type = VkImageFormatProperties, offset = 16, size = 32
    imageFormatProperties VkImageFormatProperties <>
VkImageFormatProperties2 ends

VkPhysicalDeviceImageFormatInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 16, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = type, type = VkImageType, offset = 20, size = 4
    __type VkImageType <>
;   TypeKind.ELABORATED
;   name = tiling, type = VkImageTiling, offset = 24, size = 4
    tiling VkImageTiling <>
;   TypeKind.ELABORATED
;   name = usage, type = VkImageUsageFlags, offset = 28, size = 4
    usage VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = flags, type = VkImageCreateFlags, offset = 32, size = 4
    flags dword ?
VkPhysicalDeviceImageFormatInfo2 ends

; TYPEDEF VkPhysicalDeviceImageFormatInfo2 = struct VkPhysicalDeviceImageFormatInfo2, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageFormatInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 16, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = type, type = VkImageType, offset = 20, size = 4
    __type VkImageType <>
;   TypeKind.ELABORATED
;   name = tiling, type = VkImageTiling, offset = 24, size = 4
    tiling VkImageTiling <>
;   TypeKind.ELABORATED
;   name = usage, type = VkImageUsageFlags, offset = 28, size = 4
    usage VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = flags, type = VkImageCreateFlags, offset = 32, size = 4
    flags dword ?
VkPhysicalDeviceImageFormatInfo2 ends

VkQueueFamilyProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queueFamilyProperties, type = VkQueueFamilyProperties, offset = 16, size = 24
    queueFamilyProperties VkQueueFamilyProperties <>
VkQueueFamilyProperties2 ends

; TYPEDEF VkQueueFamilyProperties2 = struct VkQueueFamilyProperties2, TypeKind.ELABORATED
; remove struct typedef

VkQueueFamilyProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queueFamilyProperties, type = VkQueueFamilyProperties, offset = 16, size = 24
    queueFamilyProperties VkQueueFamilyProperties <>
VkQueueFamilyProperties2 ends

VkPhysicalDeviceMemoryProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryProperties, type = VkPhysicalDeviceMemoryProperties, offset = 16, size = 520
    memoryProperties VkPhysicalDeviceMemoryProperties <>
VkPhysicalDeviceMemoryProperties2 ends

; TYPEDEF VkPhysicalDeviceMemoryProperties2 = struct VkPhysicalDeviceMemoryProperties2, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMemoryProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryProperties, type = VkPhysicalDeviceMemoryProperties, offset = 16, size = 520
    memoryProperties VkPhysicalDeviceMemoryProperties <>
VkPhysicalDeviceMemoryProperties2 ends

VkSparseImageFormatProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = properties, type = VkSparseImageFormatProperties, offset = 16, size = 20
    properties VkSparseImageFormatProperties <>
VkSparseImageFormatProperties2 ends

; TYPEDEF VkSparseImageFormatProperties2 = struct VkSparseImageFormatProperties2, TypeKind.ELABORATED
; remove struct typedef

VkSparseImageFormatProperties2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = properties, type = VkSparseImageFormatProperties, offset = 16, size = 20
    properties VkSparseImageFormatProperties <>
VkSparseImageFormatProperties2 ends

VkPhysicalDeviceSparseImageFormatInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 16, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = type, type = VkImageType, offset = 20, size = 4
    __type VkImageType <>
;   TypeKind.ELABORATED
;   name = samples, type = VkSampleCountFlagBits, offset = 24, size = 4
    samples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = usage, type = VkImageUsageFlags, offset = 28, size = 4
    usage VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = tiling, type = VkImageTiling, offset = 32, size = 4
    tiling VkImageTiling <>
VkPhysicalDeviceSparseImageFormatInfo2 ends

; TYPEDEF VkPhysicalDeviceSparseImageFormatInfo2 = struct VkPhysicalDeviceSparseImageFormatInfo2, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSparseImageFormatInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 16, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = type, type = VkImageType, offset = 20, size = 4
    __type VkImageType <>
;   TypeKind.ELABORATED
;   name = samples, type = VkSampleCountFlagBits, offset = 24, size = 4
    samples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = usage, type = VkImageUsageFlags, offset = 28, size = 4
    usage VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = tiling, type = VkImageTiling, offset = 32, size = 4
    tiling VkImageTiling <>
VkPhysicalDeviceSparseImageFormatInfo2 ends

VkPhysicalDevicePointClippingProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pointClippingBehavior, type = VkPointClippingBehavior, offset = 16, size = 4
    pointClippingBehavior VkPointClippingBehavior <>
VkPhysicalDevicePointClippingProperties ends

; TYPEDEF VkPhysicalDevicePointClippingProperties = struct VkPhysicalDevicePointClippingProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePointClippingProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pointClippingBehavior, type = VkPointClippingBehavior, offset = 16, size = 4
    pointClippingBehavior VkPointClippingBehavior <>
VkPhysicalDevicePointClippingProperties ends

VkInputAttachmentAspectReference struct
;   TypeKind.ELABORATED
;   name = subpass, type = uint32_t, offset = 0, size = 4
    subpass dword ?
;   TypeKind.ELABORATED
;   name = inputAttachmentIndex, type = uint32_t, offset = 4, size = 4
    inputAttachmentIndex dword ?
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 8, size = 4
    aspectMask VkImageAspectFlags <>
VkInputAttachmentAspectReference ends

; TYPEDEF VkInputAttachmentAspectReference = struct VkInputAttachmentAspectReference, TypeKind.ELABORATED
; remove struct typedef

VkInputAttachmentAspectReference struct
;   TypeKind.ELABORATED
;   name = subpass, type = uint32_t, offset = 0, size = 4
    subpass dword ?
;   TypeKind.ELABORATED
;   name = inputAttachmentIndex, type = uint32_t, offset = 4, size = 4
    inputAttachmentIndex dword ?
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 8, size = 4
    aspectMask VkImageAspectFlags <>
VkInputAttachmentAspectReference ends

VkRenderPassInputAttachmentAspectCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = aspectReferenceCount, type = uint32_t, offset = 16, size = 4
    aspectReferenceCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAspectReferences, type = const VkInputAttachmentAspectReference *, offset = 24, size = 8
    pAspectReferences qword ?
VkRenderPassInputAttachmentAspectCreateInfo ends

; TYPEDEF VkRenderPassInputAttachmentAspectCreateInfo = struct VkRenderPassInputAttachmentAspectCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassInputAttachmentAspectCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = aspectReferenceCount, type = uint32_t, offset = 16, size = 4
    aspectReferenceCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAspectReferences, type = const VkInputAttachmentAspectReference *, offset = 24, size = 8
    pAspectReferences qword ?
VkRenderPassInputAttachmentAspectCreateInfo ends

VkImageViewUsageCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = usage, type = VkImageUsageFlags, offset = 16, size = 4
    usage VkImageUsageFlags <>
VkImageViewUsageCreateInfo ends

; TYPEDEF VkImageViewUsageCreateInfo = struct VkImageViewUsageCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkImageViewUsageCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = usage, type = VkImageUsageFlags, offset = 16, size = 4
    usage VkImageUsageFlags <>
VkImageViewUsageCreateInfo ends

VkPipelineTessellationDomainOriginStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = domainOrigin, type = VkTessellationDomainOrigin, offset = 16, size = 4
    domainOrigin VkTessellationDomainOrigin <>
VkPipelineTessellationDomainOriginStateCreateInfo ends

; TYPEDEF VkPipelineTessellationDomainOriginStateCreateInfo = struct VkPipelineTessellationDomainOriginStateCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineTessellationDomainOriginStateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = domainOrigin, type = VkTessellationDomainOrigin, offset = 16, size = 4
    domainOrigin VkTessellationDomainOrigin <>
VkPipelineTessellationDomainOriginStateCreateInfo ends

VkRenderPassMultiviewCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subpassCount, type = uint32_t, offset = 16, size = 4
    subpassCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pViewMasks, type = const uint32_t *, offset = 24, size = 8
    pViewMasks qword ?
;   TypeKind.ELABORATED
;   name = dependencyCount, type = uint32_t, offset = 32, size = 4
    dependencyCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pViewOffsets, type = const int32_t *, offset = 40, size = 8
    pViewOffsets qword ?
;   TypeKind.ELABORATED
;   name = correlationMaskCount, type = uint32_t, offset = 48, size = 4
    correlationMaskCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCorrelationMasks, type = const uint32_t *, offset = 56, size = 8
    pCorrelationMasks qword ?
VkRenderPassMultiviewCreateInfo ends

; TYPEDEF VkRenderPassMultiviewCreateInfo = struct VkRenderPassMultiviewCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassMultiviewCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subpassCount, type = uint32_t, offset = 16, size = 4
    subpassCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pViewMasks, type = const uint32_t *, offset = 24, size = 8
    pViewMasks qword ?
;   TypeKind.ELABORATED
;   name = dependencyCount, type = uint32_t, offset = 32, size = 4
    dependencyCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pViewOffsets, type = const int32_t *, offset = 40, size = 8
    pViewOffsets qword ?
;   TypeKind.ELABORATED
;   name = correlationMaskCount, type = uint32_t, offset = 48, size = 4
    correlationMaskCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCorrelationMasks, type = const uint32_t *, offset = 56, size = 8
    pCorrelationMasks qword ?
VkRenderPassMultiviewCreateInfo ends

VkPhysicalDeviceMultiviewFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multiview, type = VkBool32, offset = 16, size = 4
    multiview VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewGeometryShader, type = VkBool32, offset = 20, size = 4
    multiviewGeometryShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewTessellationShader, type = VkBool32, offset = 24, size = 4
    multiviewTessellationShader VkBool32 <>
VkPhysicalDeviceMultiviewFeatures ends

; TYPEDEF VkPhysicalDeviceMultiviewFeatures = struct VkPhysicalDeviceMultiviewFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMultiviewFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multiview, type = VkBool32, offset = 16, size = 4
    multiview VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewGeometryShader, type = VkBool32, offset = 20, size = 4
    multiviewGeometryShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewTessellationShader, type = VkBool32, offset = 24, size = 4
    multiviewTessellationShader VkBool32 <>
VkPhysicalDeviceMultiviewFeatures ends

VkPhysicalDeviceMultiviewProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxMultiviewViewCount, type = uint32_t, offset = 16, size = 4
    maxMultiviewViewCount dword ?
;   TypeKind.ELABORATED
;   name = maxMultiviewInstanceIndex, type = uint32_t, offset = 20, size = 4
    maxMultiviewInstanceIndex dword ?
VkPhysicalDeviceMultiviewProperties ends

; TYPEDEF VkPhysicalDeviceMultiviewProperties = struct VkPhysicalDeviceMultiviewProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMultiviewProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxMultiviewViewCount, type = uint32_t, offset = 16, size = 4
    maxMultiviewViewCount dword ?
;   TypeKind.ELABORATED
;   name = maxMultiviewInstanceIndex, type = uint32_t, offset = 20, size = 4
    maxMultiviewInstanceIndex dword ?
VkPhysicalDeviceMultiviewProperties ends

VkPhysicalDeviceVariablePointersFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = variablePointersStorageBuffer, type = VkBool32, offset = 16, size = 4
    variablePointersStorageBuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = variablePointers, type = VkBool32, offset = 20, size = 4
    variablePointers VkBool32 <>
VkPhysicalDeviceVariablePointersFeatures ends

; TYPEDEF VkPhysicalDeviceVariablePointersFeatures = struct VkPhysicalDeviceVariablePointersFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVariablePointersFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = variablePointersStorageBuffer, type = VkBool32, offset = 16, size = 4
    variablePointersStorageBuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = variablePointers, type = VkBool32, offset = 20, size = 4
    variablePointers VkBool32 <>
VkPhysicalDeviceVariablePointersFeatures ends

; TYPEDEF VkPhysicalDeviceVariablePointerFeatures = VkPhysicalDeviceVariablePointersFeatures, TypeKind.ELABORATED

VkPhysicalDeviceProtectedMemoryFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = protectedMemory, type = VkBool32, offset = 16, size = 4
    protectedMemory VkBool32 <>
VkPhysicalDeviceProtectedMemoryFeatures ends

; TYPEDEF VkPhysicalDeviceProtectedMemoryFeatures = struct VkPhysicalDeviceProtectedMemoryFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceProtectedMemoryFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = protectedMemory, type = VkBool32, offset = 16, size = 4
    protectedMemory VkBool32 <>
VkPhysicalDeviceProtectedMemoryFeatures ends

VkPhysicalDeviceProtectedMemoryProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = protectedNoFault, type = VkBool32, offset = 16, size = 4
    protectedNoFault VkBool32 <>
VkPhysicalDeviceProtectedMemoryProperties ends

; TYPEDEF VkPhysicalDeviceProtectedMemoryProperties = struct VkPhysicalDeviceProtectedMemoryProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceProtectedMemoryProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = protectedNoFault, type = VkBool32, offset = 16, size = 4
    protectedNoFault VkBool32 <>
VkPhysicalDeviceProtectedMemoryProperties ends

VkDeviceQueueInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceQueueCreateFlags, offset = 16, size = 4
    flags VkDeviceQueueCreateFlags <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndex, type = uint32_t, offset = 20, size = 4
    queueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = queueIndex, type = uint32_t, offset = 24, size = 4
    queueIndex dword ?
VkDeviceQueueInfo2 ends

; TYPEDEF VkDeviceQueueInfo2 = struct VkDeviceQueueInfo2, TypeKind.ELABORATED
; remove struct typedef

VkDeviceQueueInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceQueueCreateFlags, offset = 16, size = 4
    flags VkDeviceQueueCreateFlags <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndex, type = uint32_t, offset = 20, size = 4
    queueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = queueIndex, type = uint32_t, offset = 24, size = 4
    queueIndex dword ?
VkDeviceQueueInfo2 ends

VkProtectedSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = protectedSubmit, type = VkBool32, offset = 16, size = 4
    protectedSubmit VkBool32 <>
VkProtectedSubmitInfo ends

; TYPEDEF VkProtectedSubmitInfo = struct VkProtectedSubmitInfo, TypeKind.ELABORATED
; remove struct typedef

VkProtectedSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = protectedSubmit, type = VkBool32, offset = 16, size = 4
    protectedSubmit VkBool32 <>
VkProtectedSubmitInfo ends

VkSamplerYcbcrConversionCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 16, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = ycbcrModel, type = VkSamplerYcbcrModelConversion, offset = 20, size = 4
    ycbcrModel VkSamplerYcbcrModelConversion <>
;   TypeKind.ELABORATED
;   name = ycbcrRange, type = VkSamplerYcbcrRange, offset = 24, size = 4
    ycbcrRange VkSamplerYcbcrRange <>
;   TypeKind.ELABORATED
;   name = components, type = VkComponentMapping, offset = 28, size = 16
    components VkComponentMapping <>
;   TypeKind.ELABORATED
;   name = xChromaOffset, type = VkChromaLocation, offset = 44, size = 4
    xChromaOffset VkChromaLocation <>
;   TypeKind.ELABORATED
;   name = yChromaOffset, type = VkChromaLocation, offset = 48, size = 4
    yChromaOffset VkChromaLocation <>
;   TypeKind.ELABORATED
;   name = chromaFilter, type = VkFilter, offset = 52, size = 4
    chromaFilter VkFilter <>
;   TypeKind.ELABORATED
;   name = forceExplicitReconstruction, type = VkBool32, offset = 56, size = 4
    forceExplicitReconstruction VkBool32 <>
VkSamplerYcbcrConversionCreateInfo ends

; TYPEDEF VkSamplerYcbcrConversionCreateInfo = struct VkSamplerYcbcrConversionCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkSamplerYcbcrConversionCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 16, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = ycbcrModel, type = VkSamplerYcbcrModelConversion, offset = 20, size = 4
    ycbcrModel VkSamplerYcbcrModelConversion <>
;   TypeKind.ELABORATED
;   name = ycbcrRange, type = VkSamplerYcbcrRange, offset = 24, size = 4
    ycbcrRange VkSamplerYcbcrRange <>
;   TypeKind.ELABORATED
;   name = components, type = VkComponentMapping, offset = 28, size = 16
    components VkComponentMapping <>
;   TypeKind.ELABORATED
;   name = xChromaOffset, type = VkChromaLocation, offset = 44, size = 4
    xChromaOffset VkChromaLocation <>
;   TypeKind.ELABORATED
;   name = yChromaOffset, type = VkChromaLocation, offset = 48, size = 4
    yChromaOffset VkChromaLocation <>
;   TypeKind.ELABORATED
;   name = chromaFilter, type = VkFilter, offset = 52, size = 4
    chromaFilter VkFilter <>
;   TypeKind.ELABORATED
;   name = forceExplicitReconstruction, type = VkBool32, offset = 56, size = 4
    forceExplicitReconstruction VkBool32 <>
VkSamplerYcbcrConversionCreateInfo ends

VkSamplerYcbcrConversionInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = conversion, type = VkSamplerYcbcrConversion, offset = 16, size = 8
    conversion VkSamplerYcbcrConversion <>
VkSamplerYcbcrConversionInfo ends

; TYPEDEF VkSamplerYcbcrConversionInfo = struct VkSamplerYcbcrConversionInfo, TypeKind.ELABORATED
; remove struct typedef

VkSamplerYcbcrConversionInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = conversion, type = VkSamplerYcbcrConversion, offset = 16, size = 8
    conversion VkSamplerYcbcrConversion <>
VkSamplerYcbcrConversionInfo ends

VkBindImagePlaneMemoryInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = planeAspect, type = VkImageAspectFlagBits, offset = 16, size = 4
    planeAspect VkImageAspectFlagBits <>
VkBindImagePlaneMemoryInfo ends

; TYPEDEF VkBindImagePlaneMemoryInfo = struct VkBindImagePlaneMemoryInfo, TypeKind.ELABORATED
; remove struct typedef

VkBindImagePlaneMemoryInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = planeAspect, type = VkImageAspectFlagBits, offset = 16, size = 4
    planeAspect VkImageAspectFlagBits <>
VkBindImagePlaneMemoryInfo ends

VkImagePlaneMemoryRequirementsInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = planeAspect, type = VkImageAspectFlagBits, offset = 16, size = 4
    planeAspect VkImageAspectFlagBits <>
VkImagePlaneMemoryRequirementsInfo ends

; TYPEDEF VkImagePlaneMemoryRequirementsInfo = struct VkImagePlaneMemoryRequirementsInfo, TypeKind.ELABORATED
; remove struct typedef

VkImagePlaneMemoryRequirementsInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = planeAspect, type = VkImageAspectFlagBits, offset = 16, size = 4
    planeAspect VkImageAspectFlagBits <>
VkImagePlaneMemoryRequirementsInfo ends

VkPhysicalDeviceSamplerYcbcrConversionFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = samplerYcbcrConversion, type = VkBool32, offset = 16, size = 4
    samplerYcbcrConversion VkBool32 <>
VkPhysicalDeviceSamplerYcbcrConversionFeatures ends

; TYPEDEF VkPhysicalDeviceSamplerYcbcrConversionFeatures = struct VkPhysicalDeviceSamplerYcbcrConversionFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSamplerYcbcrConversionFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = samplerYcbcrConversion, type = VkBool32, offset = 16, size = 4
    samplerYcbcrConversion VkBool32 <>
VkPhysicalDeviceSamplerYcbcrConversionFeatures ends

VkSamplerYcbcrConversionImageFormatProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = combinedImageSamplerDescriptorCount, type = uint32_t, offset = 16, size = 4
    combinedImageSamplerDescriptorCount dword ?
VkSamplerYcbcrConversionImageFormatProperties ends

; TYPEDEF VkSamplerYcbcrConversionImageFormatProperties = struct VkSamplerYcbcrConversionImageFormatProperties, TypeKind.ELABORATED
; remove struct typedef

VkSamplerYcbcrConversionImageFormatProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = combinedImageSamplerDescriptorCount, type = uint32_t, offset = 16, size = 4
    combinedImageSamplerDescriptorCount dword ?
VkSamplerYcbcrConversionImageFormatProperties ends

VkDescriptorUpdateTemplateEntry struct
;   TypeKind.ELABORATED
;   name = dstBinding, type = uint32_t, offset = 0, size = 4
    dstBinding dword ?
;   TypeKind.ELABORATED
;   name = dstArrayElement, type = uint32_t, offset = 4, size = 4
    dstArrayElement dword ?
;   TypeKind.ELABORATED
;   name = descriptorCount, type = uint32_t, offset = 8, size = 4
    descriptorCount dword ?
;   TypeKind.ELABORATED
;   name = descriptorType, type = VkDescriptorType, offset = 12, size = 4
    descriptorType VkDescriptorType <>
;   TypeKind.ELABORATED
;   name = offset, type = size_t, offset = 16, size = 8
    _offset qword ?
;   TypeKind.ELABORATED
;   name = stride, type = size_t, offset = 24, size = 8
    stride qword ?
VkDescriptorUpdateTemplateEntry ends

; TYPEDEF VkDescriptorUpdateTemplateEntry = struct VkDescriptorUpdateTemplateEntry, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorUpdateTemplateEntry struct
;   TypeKind.ELABORATED
;   name = dstBinding, type = uint32_t, offset = 0, size = 4
    dstBinding dword ?
;   TypeKind.ELABORATED
;   name = dstArrayElement, type = uint32_t, offset = 4, size = 4
    dstArrayElement dword ?
;   TypeKind.ELABORATED
;   name = descriptorCount, type = uint32_t, offset = 8, size = 4
    descriptorCount dword ?
;   TypeKind.ELABORATED
;   name = descriptorType, type = VkDescriptorType, offset = 12, size = 4
    descriptorType VkDescriptorType <>
;   TypeKind.ELABORATED
;   name = offset, type = size_t, offset = 16, size = 8
    _offset qword ?
;   TypeKind.ELABORATED
;   name = stride, type = size_t, offset = 24, size = 8
    stride qword ?
VkDescriptorUpdateTemplateEntry ends

VkDescriptorUpdateTemplateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDescriptorUpdateTemplateCreateFlags, offset = 16, size = 4
    flags VkDescriptorUpdateTemplateCreateFlags <>
;   TypeKind.ELABORATED
;   name = descriptorUpdateEntryCount, type = uint32_t, offset = 20, size = 4
    descriptorUpdateEntryCount dword ?
;   TypeKind.POINTER
;   name = pDescriptorUpdateEntries, type = const VkDescriptorUpdateTemplateEntry *, offset = 24, size = 8
    pDescriptorUpdateEntries qword ?
;   TypeKind.ELABORATED
;   name = templateType, type = VkDescriptorUpdateTemplateType, offset = 32, size = 4
    templateType VkDescriptorUpdateTemplateType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = descriptorSetLayout, type = VkDescriptorSetLayout, offset = 40, size = 8
    descriptorSetLayout VkDescriptorSetLayout <>
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 48, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pipelineLayout, type = VkPipelineLayout, offset = 56, size = 8
    pipelineLayout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = set, type = uint32_t, offset = 64, size = 4
    set dword ?
VkDescriptorUpdateTemplateCreateInfo ends

; TYPEDEF VkDescriptorUpdateTemplateCreateInfo = struct VkDescriptorUpdateTemplateCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorUpdateTemplateCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDescriptorUpdateTemplateCreateFlags, offset = 16, size = 4
    flags VkDescriptorUpdateTemplateCreateFlags <>
;   TypeKind.ELABORATED
;   name = descriptorUpdateEntryCount, type = uint32_t, offset = 20, size = 4
    descriptorUpdateEntryCount dword ?
;   TypeKind.POINTER
;   name = pDescriptorUpdateEntries, type = const VkDescriptorUpdateTemplateEntry *, offset = 24, size = 8
    pDescriptorUpdateEntries qword ?
;   TypeKind.ELABORATED
;   name = templateType, type = VkDescriptorUpdateTemplateType, offset = 32, size = 4
    templateType VkDescriptorUpdateTemplateType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = descriptorSetLayout, type = VkDescriptorSetLayout, offset = 40, size = 8
    descriptorSetLayout VkDescriptorSetLayout <>
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 48, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pipelineLayout, type = VkPipelineLayout, offset = 56, size = 8
    pipelineLayout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = set, type = uint32_t, offset = 64, size = 4
    set dword ?
VkDescriptorUpdateTemplateCreateInfo ends

VkExternalMemoryProperties struct
;   TypeKind.ELABORATED
;   name = externalMemoryFeatures, type = VkExternalMemoryFeatureFlags, offset = 0, size = 4
    externalMemoryFeatures VkExternalMemoryFeatureFlags <>
;   TypeKind.ELABORATED
;   name = exportFromImportedHandleTypes, type = VkExternalMemoryHandleTypeFlags, offset = 4, size = 4
    exportFromImportedHandleTypes VkExternalMemoryHandleTypeFlags <>
;   TypeKind.ELABORATED
;   name = compatibleHandleTypes, type = VkExternalMemoryHandleTypeFlags, offset = 8, size = 4
    compatibleHandleTypes VkExternalMemoryHandleTypeFlags <>
VkExternalMemoryProperties ends

; TYPEDEF VkExternalMemoryProperties = struct VkExternalMemoryProperties, TypeKind.ELABORATED
; remove struct typedef

VkExternalMemoryProperties struct
;   TypeKind.ELABORATED
;   name = externalMemoryFeatures, type = VkExternalMemoryFeatureFlags, offset = 0, size = 4
    externalMemoryFeatures VkExternalMemoryFeatureFlags <>
;   TypeKind.ELABORATED
;   name = exportFromImportedHandleTypes, type = VkExternalMemoryHandleTypeFlags, offset = 4, size = 4
    exportFromImportedHandleTypes VkExternalMemoryHandleTypeFlags <>
;   TypeKind.ELABORATED
;   name = compatibleHandleTypes, type = VkExternalMemoryHandleTypeFlags, offset = 8, size = 4
    compatibleHandleTypes VkExternalMemoryHandleTypeFlags <>
VkExternalMemoryProperties ends

VkPhysicalDeviceExternalImageFormatInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 16, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
VkPhysicalDeviceExternalImageFormatInfo ends

; TYPEDEF VkPhysicalDeviceExternalImageFormatInfo = struct VkPhysicalDeviceExternalImageFormatInfo, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExternalImageFormatInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 16, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
VkPhysicalDeviceExternalImageFormatInfo ends

VkExternalImageFormatProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = externalMemoryProperties, type = VkExternalMemoryProperties, offset = 16, size = 12
    externalMemoryProperties VkExternalMemoryProperties <>
VkExternalImageFormatProperties ends

; TYPEDEF VkExternalImageFormatProperties = struct VkExternalImageFormatProperties, TypeKind.ELABORATED
; remove struct typedef

VkExternalImageFormatProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = externalMemoryProperties, type = VkExternalMemoryProperties, offset = 16, size = 12
    externalMemoryProperties VkExternalMemoryProperties <>
VkExternalImageFormatProperties ends

VkPhysicalDeviceExternalBufferInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkBufferCreateFlags, offset = 16, size = 4
    flags VkBufferCreateFlags <>
;   TypeKind.ELABORATED
;   name = usage, type = VkBufferUsageFlags, offset = 20, size = 4
    usage VkBufferUsageFlags <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 24, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
VkPhysicalDeviceExternalBufferInfo ends

; TYPEDEF VkPhysicalDeviceExternalBufferInfo = struct VkPhysicalDeviceExternalBufferInfo, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExternalBufferInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkBufferCreateFlags, offset = 16, size = 4
    flags VkBufferCreateFlags <>
;   TypeKind.ELABORATED
;   name = usage, type = VkBufferUsageFlags, offset = 20, size = 4
    usage VkBufferUsageFlags <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 24, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
VkPhysicalDeviceExternalBufferInfo ends

VkExternalBufferProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = externalMemoryProperties, type = VkExternalMemoryProperties, offset = 16, size = 12
    externalMemoryProperties VkExternalMemoryProperties <>
VkExternalBufferProperties ends

; TYPEDEF VkExternalBufferProperties = struct VkExternalBufferProperties, TypeKind.ELABORATED
; remove struct typedef

VkExternalBufferProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = externalMemoryProperties, type = VkExternalMemoryProperties, offset = 16, size = 12
    externalMemoryProperties VkExternalMemoryProperties <>
VkExternalBufferProperties ends

VkPhysicalDeviceIDProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = deviceUUID, type = uint8_t[16], offset = 16, size = 16
    deviceUUID byte 16 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = driverUUID, type = uint8_t[16], offset = 32, size = 16
    driverUUID byte 16 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = deviceLUID, type = uint8_t[8], offset = 48, size = 8
    deviceLUID byte 8 dup(?)
;   TypeKind.ELABORATED
;   name = deviceNodeMask, type = uint32_t, offset = 56, size = 4
    deviceNodeMask dword ?
;   TypeKind.ELABORATED
;   name = deviceLUIDValid, type = VkBool32, offset = 60, size = 4
    deviceLUIDValid VkBool32 <>
VkPhysicalDeviceIDProperties ends

; TYPEDEF VkPhysicalDeviceIDProperties = struct VkPhysicalDeviceIDProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceIDProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = deviceUUID, type = uint8_t[16], offset = 16, size = 16
    deviceUUID byte 16 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = driverUUID, type = uint8_t[16], offset = 32, size = 16
    driverUUID byte 16 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = deviceLUID, type = uint8_t[8], offset = 48, size = 8
    deviceLUID byte 8 dup(?)
;   TypeKind.ELABORATED
;   name = deviceNodeMask, type = uint32_t, offset = 56, size = 4
    deviceNodeMask dword ?
;   TypeKind.ELABORATED
;   name = deviceLUIDValid, type = VkBool32, offset = 60, size = 4
    deviceLUIDValid VkBool32 <>
VkPhysicalDeviceIDProperties ends

VkExternalMemoryImageCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalMemoryHandleTypeFlags, offset = 16, size = 4
    handleTypes VkExternalMemoryHandleTypeFlags <>
VkExternalMemoryImageCreateInfo ends

; TYPEDEF VkExternalMemoryImageCreateInfo = struct VkExternalMemoryImageCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkExternalMemoryImageCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalMemoryHandleTypeFlags, offset = 16, size = 4
    handleTypes VkExternalMemoryHandleTypeFlags <>
VkExternalMemoryImageCreateInfo ends

VkExternalMemoryBufferCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalMemoryHandleTypeFlags, offset = 16, size = 4
    handleTypes VkExternalMemoryHandleTypeFlags <>
VkExternalMemoryBufferCreateInfo ends

; TYPEDEF VkExternalMemoryBufferCreateInfo = struct VkExternalMemoryBufferCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkExternalMemoryBufferCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalMemoryHandleTypeFlags, offset = 16, size = 4
    handleTypes VkExternalMemoryHandleTypeFlags <>
VkExternalMemoryBufferCreateInfo ends

VkExportMemoryAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalMemoryHandleTypeFlags, offset = 16, size = 4
    handleTypes VkExternalMemoryHandleTypeFlags <>
VkExportMemoryAllocateInfo ends

; TYPEDEF VkExportMemoryAllocateInfo = struct VkExportMemoryAllocateInfo, TypeKind.ELABORATED
; remove struct typedef

VkExportMemoryAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalMemoryHandleTypeFlags, offset = 16, size = 4
    handleTypes VkExternalMemoryHandleTypeFlags <>
VkExportMemoryAllocateInfo ends

VkPhysicalDeviceExternalFenceInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalFenceHandleTypeFlagBits, offset = 16, size = 4
    handleType VkExternalFenceHandleTypeFlagBits <>
VkPhysicalDeviceExternalFenceInfo ends

; TYPEDEF VkPhysicalDeviceExternalFenceInfo = struct VkPhysicalDeviceExternalFenceInfo, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExternalFenceInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalFenceHandleTypeFlagBits, offset = 16, size = 4
    handleType VkExternalFenceHandleTypeFlagBits <>
VkPhysicalDeviceExternalFenceInfo ends

VkExternalFenceProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = exportFromImportedHandleTypes, type = VkExternalFenceHandleTypeFlags, offset = 16, size = 4
    exportFromImportedHandleTypes VkExternalFenceHandleTypeFlags <>
;   TypeKind.ELABORATED
;   name = compatibleHandleTypes, type = VkExternalFenceHandleTypeFlags, offset = 20, size = 4
    compatibleHandleTypes VkExternalFenceHandleTypeFlags <>
;   TypeKind.ELABORATED
;   name = externalFenceFeatures, type = VkExternalFenceFeatureFlags, offset = 24, size = 4
    externalFenceFeatures VkExternalFenceFeatureFlags <>
VkExternalFenceProperties ends

; TYPEDEF VkExternalFenceProperties = struct VkExternalFenceProperties, TypeKind.ELABORATED
; remove struct typedef

VkExternalFenceProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = exportFromImportedHandleTypes, type = VkExternalFenceHandleTypeFlags, offset = 16, size = 4
    exportFromImportedHandleTypes VkExternalFenceHandleTypeFlags <>
;   TypeKind.ELABORATED
;   name = compatibleHandleTypes, type = VkExternalFenceHandleTypeFlags, offset = 20, size = 4
    compatibleHandleTypes VkExternalFenceHandleTypeFlags <>
;   TypeKind.ELABORATED
;   name = externalFenceFeatures, type = VkExternalFenceFeatureFlags, offset = 24, size = 4
    externalFenceFeatures VkExternalFenceFeatureFlags <>
VkExternalFenceProperties ends

VkExportFenceCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalFenceHandleTypeFlags, offset = 16, size = 4
    handleTypes VkExternalFenceHandleTypeFlags <>
VkExportFenceCreateInfo ends

; TYPEDEF VkExportFenceCreateInfo = struct VkExportFenceCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkExportFenceCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalFenceHandleTypeFlags, offset = 16, size = 4
    handleTypes VkExternalFenceHandleTypeFlags <>
VkExportFenceCreateInfo ends

VkExportSemaphoreCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalSemaphoreHandleTypeFlags, offset = 16, size = 4
    handleTypes VkExternalSemaphoreHandleTypeFlags <>
VkExportSemaphoreCreateInfo ends

; TYPEDEF VkExportSemaphoreCreateInfo = struct VkExportSemaphoreCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkExportSemaphoreCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalSemaphoreHandleTypeFlags, offset = 16, size = 4
    handleTypes VkExternalSemaphoreHandleTypeFlags <>
VkExportSemaphoreCreateInfo ends

VkPhysicalDeviceExternalSemaphoreInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalSemaphoreHandleTypeFlagBits, offset = 16, size = 4
    handleType VkExternalSemaphoreHandleTypeFlagBits <>
VkPhysicalDeviceExternalSemaphoreInfo ends

; TYPEDEF VkPhysicalDeviceExternalSemaphoreInfo = struct VkPhysicalDeviceExternalSemaphoreInfo, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExternalSemaphoreInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalSemaphoreHandleTypeFlagBits, offset = 16, size = 4
    handleType VkExternalSemaphoreHandleTypeFlagBits <>
VkPhysicalDeviceExternalSemaphoreInfo ends

VkExternalSemaphoreProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = exportFromImportedHandleTypes, type = VkExternalSemaphoreHandleTypeFlags, offset = 16, size = 4
    exportFromImportedHandleTypes VkExternalSemaphoreHandleTypeFlags <>
;   TypeKind.ELABORATED
;   name = compatibleHandleTypes, type = VkExternalSemaphoreHandleTypeFlags, offset = 20, size = 4
    compatibleHandleTypes VkExternalSemaphoreHandleTypeFlags <>
;   TypeKind.ELABORATED
;   name = externalSemaphoreFeatures, type = VkExternalSemaphoreFeatureFlags, offset = 24, size = 4
    externalSemaphoreFeatures VkExternalSemaphoreFeatureFlags <>
VkExternalSemaphoreProperties ends

; TYPEDEF VkExternalSemaphoreProperties = struct VkExternalSemaphoreProperties, TypeKind.ELABORATED
; remove struct typedef

VkExternalSemaphoreProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = exportFromImportedHandleTypes, type = VkExternalSemaphoreHandleTypeFlags, offset = 16, size = 4
    exportFromImportedHandleTypes VkExternalSemaphoreHandleTypeFlags <>
;   TypeKind.ELABORATED
;   name = compatibleHandleTypes, type = VkExternalSemaphoreHandleTypeFlags, offset = 20, size = 4
    compatibleHandleTypes VkExternalSemaphoreHandleTypeFlags <>
;   TypeKind.ELABORATED
;   name = externalSemaphoreFeatures, type = VkExternalSemaphoreFeatureFlags, offset = 24, size = 4
    externalSemaphoreFeatures VkExternalSemaphoreFeatureFlags <>
VkExternalSemaphoreProperties ends

VkPhysicalDeviceMaintenance3Properties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxPerSetDescriptors, type = uint32_t, offset = 16, size = 4
    maxPerSetDescriptors dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = maxMemoryAllocationSize, type = VkDeviceSize, offset = 24, size = 8
    maxMemoryAllocationSize VkDeviceSize <>
VkPhysicalDeviceMaintenance3Properties ends

; TYPEDEF VkPhysicalDeviceMaintenance3Properties = struct VkPhysicalDeviceMaintenance3Properties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMaintenance3Properties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxPerSetDescriptors, type = uint32_t, offset = 16, size = 4
    maxPerSetDescriptors dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = maxMemoryAllocationSize, type = VkDeviceSize, offset = 24, size = 8
    maxMemoryAllocationSize VkDeviceSize <>
VkPhysicalDeviceMaintenance3Properties ends

VkDescriptorSetLayoutSupport struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supported, type = VkBool32, offset = 16, size = 4
    supported VkBool32 <>
VkDescriptorSetLayoutSupport ends

; TYPEDEF VkDescriptorSetLayoutSupport = struct VkDescriptorSetLayoutSupport, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorSetLayoutSupport struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supported, type = VkBool32, offset = 16, size = 4
    supported VkBool32 <>
VkDescriptorSetLayoutSupport ends

VkPhysicalDeviceShaderDrawParametersFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderDrawParameters, type = VkBool32, offset = 16, size = 4
    shaderDrawParameters VkBool32 <>
VkPhysicalDeviceShaderDrawParametersFeatures ends

; TYPEDEF VkPhysicalDeviceShaderDrawParametersFeatures = struct VkPhysicalDeviceShaderDrawParametersFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderDrawParametersFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderDrawParameters, type = VkBool32, offset = 16, size = 4
    shaderDrawParameters VkBool32 <>
VkPhysicalDeviceShaderDrawParametersFeatures ends

; TYPEDEF VkPhysicalDeviceShaderDrawParameterFeatures = VkPhysicalDeviceShaderDrawParametersFeatures, TypeKind.ELABORATED

; TYPEDEF PFN_vkEnumerateInstanceVersion = VkResult (*)(uint32_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkEnumerateInstanceVersion typedef qword

; TYPEDEF PFN_vkBindBufferMemory2 = VkResult (*)(VkDevice, uint32_t, const VkBindBufferMemoryInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBindBufferMemory2 typedef qword

; TYPEDEF PFN_vkBindImageMemory2 = VkResult (*)(VkDevice, uint32_t, const VkBindImageMemoryInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBindImageMemory2 typedef qword

; TYPEDEF PFN_vkGetDeviceGroupPeerMemoryFeatures = void (*)(VkDevice, uint32_t, uint32_t, uint32_t, VkPeerMemoryFeatureFlags *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceGroupPeerMemoryFeatures typedef qword

; TYPEDEF PFN_vkCmdSetDeviceMask = void (*)(VkCommandBuffer, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDeviceMask typedef qword

; TYPEDEF PFN_vkCmdDispatchBase = void (*)(VkCommandBuffer, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDispatchBase typedef qword

; TYPEDEF PFN_vkEnumeratePhysicalDeviceGroups = VkResult (*)(VkInstance, uint32_t *, VkPhysicalDeviceGroupProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkEnumeratePhysicalDeviceGroups typedef qword

; TYPEDEF PFN_vkGetImageMemoryRequirements2 = void (*)(VkDevice, const VkImageMemoryRequirementsInfo2 *, VkMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageMemoryRequirements2 typedef qword

; TYPEDEF PFN_vkGetBufferMemoryRequirements2 = void (*)(VkDevice, const VkBufferMemoryRequirementsInfo2 *, VkMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetBufferMemoryRequirements2 typedef qword

; TYPEDEF PFN_vkGetImageSparseMemoryRequirements2 = void (*)(VkDevice, const VkImageSparseMemoryRequirementsInfo2 *, uint32_t *, VkSparseImageMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageSparseMemoryRequirements2 typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceFeatures2 = void (*)(VkPhysicalDevice, VkPhysicalDeviceFeatures2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceFeatures2 typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceProperties2 = void (*)(VkPhysicalDevice, VkPhysicalDeviceProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceProperties2 typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceFormatProperties2 = void (*)(VkPhysicalDevice, VkFormat, VkFormatProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceFormatProperties2 typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceImageFormatProperties2 = VkResult (*)(VkPhysicalDevice, const VkPhysicalDeviceImageFormatInfo2 *, VkImageFormatProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceImageFormatProperties2 typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceQueueFamilyProperties2 = void (*)(VkPhysicalDevice, uint32_t *, VkQueueFamilyProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceQueueFamilyProperties2 typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceMemoryProperties2 = void (*)(VkPhysicalDevice, VkPhysicalDeviceMemoryProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceMemoryProperties2 typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceSparseImageFormatProperties2 = void (*)(VkPhysicalDevice, const VkPhysicalDeviceSparseImageFormatInfo2 *, uint32_t *, VkSparseImageFormatProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceSparseImageFormatProperties2 typedef qword

; TYPEDEF PFN_vkTrimCommandPool = void (*)(VkDevice, VkCommandPool, VkCommandPoolTrimFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkTrimCommandPool typedef qword

; TYPEDEF PFN_vkGetDeviceQueue2 = void (*)(VkDevice, const VkDeviceQueueInfo2 *, VkQueue *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceQueue2 typedef qword

; TYPEDEF PFN_vkCreateSamplerYcbcrConversion = VkResult (*)(VkDevice, const VkSamplerYcbcrConversionCreateInfo *, const VkAllocationCallbacks *, VkSamplerYcbcrConversion *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateSamplerYcbcrConversion typedef qword

; TYPEDEF PFN_vkDestroySamplerYcbcrConversion = void (*)(VkDevice, VkSamplerYcbcrConversion, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroySamplerYcbcrConversion typedef qword

; TYPEDEF PFN_vkCreateDescriptorUpdateTemplate = VkResult (*)(VkDevice, const VkDescriptorUpdateTemplateCreateInfo *, const VkAllocationCallbacks *, VkDescriptorUpdateTemplate *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateDescriptorUpdateTemplate typedef qword

; TYPEDEF PFN_vkDestroyDescriptorUpdateTemplate = void (*)(VkDevice, VkDescriptorUpdateTemplate, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyDescriptorUpdateTemplate typedef qword

; TYPEDEF PFN_vkUpdateDescriptorSetWithTemplate = void (*)(VkDevice, VkDescriptorSet, VkDescriptorUpdateTemplate, const void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkUpdateDescriptorSetWithTemplate typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceExternalBufferProperties = void (*)(VkPhysicalDevice, const VkPhysicalDeviceExternalBufferInfo *, VkExternalBufferProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceExternalBufferProperties typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceExternalFenceProperties = void (*)(VkPhysicalDevice, const VkPhysicalDeviceExternalFenceInfo *, VkExternalFenceProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceExternalFenceProperties typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceExternalSemaphoreProperties = void (*)(VkPhysicalDevice, const VkPhysicalDeviceExternalSemaphoreInfo *, VkExternalSemaphoreProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceExternalSemaphoreProperties typedef qword

; TYPEDEF PFN_vkGetDescriptorSetLayoutSupport = void (*)(VkDevice, const VkDescriptorSetLayoutCreateInfo *, VkDescriptorSetLayoutSupport *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDescriptorSetLayoutSupport typedef qword

; VkResult vkEnumerateInstanceVersion(uint32_t * pApiVersion)
vkEnumerateInstanceVersion qword ?

; VkResult vkBindBufferMemory2(VkDevice device, uint32_t bindInfoCount, const VkBindBufferMemoryInfo * pBindInfos)
vkBindBufferMemory2 qword ?

; VkResult vkBindImageMemory2(VkDevice device, uint32_t bindInfoCount, const VkBindImageMemoryInfo * pBindInfos)
vkBindImageMemory2 qword ?

; void vkGetDeviceGroupPeerMemoryFeatures(VkDevice device, uint32_t heapIndex, uint32_t localDeviceIndex, uint32_t remoteDeviceIndex, VkPeerMemoryFeatureFlags * pPeerMemoryFeatures)
vkGetDeviceGroupPeerMemoryFeatures qword ?

; void vkCmdSetDeviceMask(VkCommandBuffer commandBuffer, uint32_t deviceMask)
vkCmdSetDeviceMask qword ?

; void vkCmdDispatchBase(VkCommandBuffer commandBuffer, uint32_t baseGroupX, uint32_t baseGroupY, uint32_t baseGroupZ, uint32_t groupCountX, uint32_t groupCountY, uint32_t groupCountZ)
vkCmdDispatchBase qword ?

; VkResult vkEnumeratePhysicalDeviceGroups(VkInstance instance, uint32_t * pPhysicalDeviceGroupCount, VkPhysicalDeviceGroupProperties * pPhysicalDeviceGroupProperties)
vkEnumeratePhysicalDeviceGroups qword ?

; void vkGetImageMemoryRequirements2(VkDevice device, const VkImageMemoryRequirementsInfo2 * pInfo, VkMemoryRequirements2 * pMemoryRequirements)
vkGetImageMemoryRequirements2 qword ?

; void vkGetBufferMemoryRequirements2(VkDevice device, const VkBufferMemoryRequirementsInfo2 * pInfo, VkMemoryRequirements2 * pMemoryRequirements)
vkGetBufferMemoryRequirements2 qword ?

; void vkGetImageSparseMemoryRequirements2(VkDevice device, const VkImageSparseMemoryRequirementsInfo2 * pInfo, uint32_t * pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements2 * pSparseMemoryRequirements)
vkGetImageSparseMemoryRequirements2 qword ?

; void vkGetPhysicalDeviceFeatures2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures2 * pFeatures)
vkGetPhysicalDeviceFeatures2 qword ?

; void vkGetPhysicalDeviceProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties2 * pProperties)
vkGetPhysicalDeviceProperties2 qword ?

; void vkGetPhysicalDeviceFormatProperties2(VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties2 * pFormatProperties)
vkGetPhysicalDeviceFormatProperties2 qword ?

; VkResult vkGetPhysicalDeviceImageFormatProperties2(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceImageFormatInfo2 * pImageFormatInfo, VkImageFormatProperties2 * pImageFormatProperties)
vkGetPhysicalDeviceImageFormatProperties2 qword ?

; void vkGetPhysicalDeviceQueueFamilyProperties2(VkPhysicalDevice physicalDevice, uint32_t * pQueueFamilyPropertyCount, VkQueueFamilyProperties2 * pQueueFamilyProperties)
vkGetPhysicalDeviceQueueFamilyProperties2 qword ?

; void vkGetPhysicalDeviceMemoryProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties2 * pMemoryProperties)
vkGetPhysicalDeviceMemoryProperties2 qword ?

; void vkGetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceSparseImageFormatInfo2 * pFormatInfo, uint32_t * pPropertyCount, VkSparseImageFormatProperties2 * pProperties)
vkGetPhysicalDeviceSparseImageFormatProperties2 qword ?

; void vkTrimCommandPool(VkDevice device, VkCommandPool commandPool, VkCommandPoolTrimFlags flags)
vkTrimCommandPool qword ?

; void vkGetDeviceQueue2(VkDevice device, const VkDeviceQueueInfo2 * pQueueInfo, VkQueue * pQueue)
vkGetDeviceQueue2 qword ?

; VkResult vkCreateSamplerYcbcrConversion(VkDevice device, const VkSamplerYcbcrConversionCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkSamplerYcbcrConversion * pYcbcrConversion)
vkCreateSamplerYcbcrConversion qword ?

; void vkDestroySamplerYcbcrConversion(VkDevice device, VkSamplerYcbcrConversion ycbcrConversion, const VkAllocationCallbacks * pAllocator)
vkDestroySamplerYcbcrConversion qword ?

; VkResult vkCreateDescriptorUpdateTemplate(VkDevice device, const VkDescriptorUpdateTemplateCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkDescriptorUpdateTemplate * pDescriptorUpdateTemplate)
vkCreateDescriptorUpdateTemplate qword ?

; void vkDestroyDescriptorUpdateTemplate(VkDevice device, VkDescriptorUpdateTemplate descriptorUpdateTemplate, const VkAllocationCallbacks * pAllocator)
vkDestroyDescriptorUpdateTemplate qword ?

; void vkUpdateDescriptorSetWithTemplate(VkDevice device, VkDescriptorSet descriptorSet, VkDescriptorUpdateTemplate descriptorUpdateTemplate, const void * pData)
vkUpdateDescriptorSetWithTemplate qword ?

; void vkGetPhysicalDeviceExternalBufferProperties(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceExternalBufferInfo * pExternalBufferInfo, VkExternalBufferProperties * pExternalBufferProperties)
vkGetPhysicalDeviceExternalBufferProperties qword ?

; void vkGetPhysicalDeviceExternalFenceProperties(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceExternalFenceInfo * pExternalFenceInfo, VkExternalFenceProperties * pExternalFenceProperties)
vkGetPhysicalDeviceExternalFenceProperties qword ?

; void vkGetPhysicalDeviceExternalSemaphoreProperties(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceExternalSemaphoreInfo * pExternalSemaphoreInfo, VkExternalSemaphoreProperties * pExternalSemaphoreProperties)
vkGetPhysicalDeviceExternalSemaphoreProperties qword ?

; void vkGetDescriptorSetLayoutSupport(VkDevice device, const VkDescriptorSetLayoutCreateInfo * pCreateInfo, VkDescriptorSetLayoutSupport * pSupport)
vkGetDescriptorSetLayoutSupport qword ?

; enum VkDriverId {
    VK_DRIVER_ID_AMD_PROPRIETARY equ 1
    VK_DRIVER_ID_AMD_OPEN_SOURCE equ 2
    VK_DRIVER_ID_MESA_RADV equ 3
    VK_DRIVER_ID_NVIDIA_PROPRIETARY equ 4
    VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS equ 5
    VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA equ 6
    VK_DRIVER_ID_IMAGINATION_PROPRIETARY equ 7
    VK_DRIVER_ID_QUALCOMM_PROPRIETARY equ 8
    VK_DRIVER_ID_ARM_PROPRIETARY equ 9
    VK_DRIVER_ID_GOOGLE_SWIFTSHADER equ 10
    VK_DRIVER_ID_GGP_PROPRIETARY equ 11
    VK_DRIVER_ID_BROADCOM_PROPRIETARY equ 12
    VK_DRIVER_ID_MESA_LLVMPIPE equ 13
    VK_DRIVER_ID_MOLTENVK equ 14
    VK_DRIVER_ID_COREAVI_PROPRIETARY equ 15
    VK_DRIVER_ID_JUICE_PROPRIETARY equ 16
    VK_DRIVER_ID_VERISILICON_PROPRIETARY equ 17
    VK_DRIVER_ID_MESA_TURNIP equ 18
    VK_DRIVER_ID_MESA_V3DV equ 19
    VK_DRIVER_ID_MESA_PANVK equ 20
    VK_DRIVER_ID_SAMSUNG_PROPRIETARY equ 21
    VK_DRIVER_ID_MESA_VENUS equ 22
    VK_DRIVER_ID_MESA_DOZEN equ 23
    VK_DRIVER_ID_MESA_NVK equ 24
    VK_DRIVER_ID_IMAGINATION_OPEN_SOURCE_MESA equ 25
    VK_DRIVER_ID_MESA_AGXV equ 26
    VK_DRIVER_ID_AMD_PROPRIETARY_KHR equ 1
    VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR equ 2
    VK_DRIVER_ID_MESA_RADV_KHR equ 3
    VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR equ 4
    VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR equ 5
    VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR equ 6
    VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR equ 7
    VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR equ 8
    VK_DRIVER_ID_ARM_PROPRIETARY_KHR equ 9
    VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR equ 10
    VK_DRIVER_ID_GGP_PROPRIETARY_KHR equ 11
    VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR equ 12
    VK_DRIVER_ID_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDriverId = enum VkDriverId, TypeKind.ELABORATED
VkDriverId typedef dword

; enum VkDriverId {
    VK_DRIVER_ID_AMD_PROPRIETARY equ 1
    VK_DRIVER_ID_AMD_OPEN_SOURCE equ 2
    VK_DRIVER_ID_MESA_RADV equ 3
    VK_DRIVER_ID_NVIDIA_PROPRIETARY equ 4
    VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS equ 5
    VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA equ 6
    VK_DRIVER_ID_IMAGINATION_PROPRIETARY equ 7
    VK_DRIVER_ID_QUALCOMM_PROPRIETARY equ 8
    VK_DRIVER_ID_ARM_PROPRIETARY equ 9
    VK_DRIVER_ID_GOOGLE_SWIFTSHADER equ 10
    VK_DRIVER_ID_GGP_PROPRIETARY equ 11
    VK_DRIVER_ID_BROADCOM_PROPRIETARY equ 12
    VK_DRIVER_ID_MESA_LLVMPIPE equ 13
    VK_DRIVER_ID_MOLTENVK equ 14
    VK_DRIVER_ID_COREAVI_PROPRIETARY equ 15
    VK_DRIVER_ID_JUICE_PROPRIETARY equ 16
    VK_DRIVER_ID_VERISILICON_PROPRIETARY equ 17
    VK_DRIVER_ID_MESA_TURNIP equ 18
    VK_DRIVER_ID_MESA_V3DV equ 19
    VK_DRIVER_ID_MESA_PANVK equ 20
    VK_DRIVER_ID_SAMSUNG_PROPRIETARY equ 21
    VK_DRIVER_ID_MESA_VENUS equ 22
    VK_DRIVER_ID_MESA_DOZEN equ 23
    VK_DRIVER_ID_MESA_NVK equ 24
    VK_DRIVER_ID_IMAGINATION_OPEN_SOURCE_MESA equ 25
    VK_DRIVER_ID_MESA_AGXV equ 26
    VK_DRIVER_ID_AMD_PROPRIETARY_KHR equ 1
    VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR equ 2
    VK_DRIVER_ID_MESA_RADV_KHR equ 3
    VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR equ 4
    VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR equ 5
    VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR equ 6
    VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR equ 7
    VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR equ 8
    VK_DRIVER_ID_ARM_PROPRIETARY_KHR equ 9
    VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR equ 10
    VK_DRIVER_ID_GGP_PROPRIETARY_KHR equ 11
    VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR equ 12
    VK_DRIVER_ID_MAX_ENUM equ 2147483647
; }

; enum VkShaderFloatControlsIndependence {
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY equ 0
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL equ 1
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE equ 2
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR equ 0
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR equ 1
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR equ 2
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkShaderFloatControlsIndependence = enum VkShaderFloatControlsIndependence, TypeKind.ELABORATED
VkShaderFloatControlsIndependence typedef dword

; enum VkShaderFloatControlsIndependence {
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY equ 0
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL equ 1
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE equ 2
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR equ 0
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR equ 1
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR equ 2
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM equ 2147483647
; }

; enum VkSamplerReductionMode {
    VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE equ 0
    VK_SAMPLER_REDUCTION_MODE_MIN equ 1
    VK_SAMPLER_REDUCTION_MODE_MAX equ 2
    VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_RANGECLAMP_QCOM equ 1000521000
    VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT equ 0
    VK_SAMPLER_REDUCTION_MODE_MIN_EXT equ 1
    VK_SAMPLER_REDUCTION_MODE_MAX_EXT equ 2
    VK_SAMPLER_REDUCTION_MODE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSamplerReductionMode = enum VkSamplerReductionMode, TypeKind.ELABORATED
VkSamplerReductionMode typedef dword

; enum VkSamplerReductionMode {
    VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE equ 0
    VK_SAMPLER_REDUCTION_MODE_MIN equ 1
    VK_SAMPLER_REDUCTION_MODE_MAX equ 2
    VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_RANGECLAMP_QCOM equ 1000521000
    VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT equ 0
    VK_SAMPLER_REDUCTION_MODE_MIN_EXT equ 1
    VK_SAMPLER_REDUCTION_MODE_MAX_EXT equ 2
    VK_SAMPLER_REDUCTION_MODE_MAX_ENUM equ 2147483647
; }

; enum VkSemaphoreType {
    VK_SEMAPHORE_TYPE_BINARY equ 0
    VK_SEMAPHORE_TYPE_TIMELINE equ 1
    VK_SEMAPHORE_TYPE_BINARY_KHR equ 0
    VK_SEMAPHORE_TYPE_TIMELINE_KHR equ 1
    VK_SEMAPHORE_TYPE_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSemaphoreType = enum VkSemaphoreType, TypeKind.ELABORATED
VkSemaphoreType typedef dword

; enum VkSemaphoreType {
    VK_SEMAPHORE_TYPE_BINARY equ 0
    VK_SEMAPHORE_TYPE_TIMELINE equ 1
    VK_SEMAPHORE_TYPE_BINARY_KHR equ 0
    VK_SEMAPHORE_TYPE_TIMELINE_KHR equ 1
    VK_SEMAPHORE_TYPE_MAX_ENUM equ 2147483647
; }

; enum VkResolveModeFlagBits {
    VK_RESOLVE_MODE_NONE equ 0
    VK_RESOLVE_MODE_SAMPLE_ZERO_BIT equ 1
    VK_RESOLVE_MODE_AVERAGE_BIT equ 2
    VK_RESOLVE_MODE_MIN_BIT equ 4
    VK_RESOLVE_MODE_MAX_BIT equ 8
    VK_RESOLVE_MODE_EXTERNAL_FORMAT_DOWNSAMPLE_ANDROID equ 16
    VK_RESOLVE_MODE_NONE_KHR equ 0
    VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR equ 1
    VK_RESOLVE_MODE_AVERAGE_BIT_KHR equ 2
    VK_RESOLVE_MODE_MIN_BIT_KHR equ 4
    VK_RESOLVE_MODE_MAX_BIT_KHR equ 8
    VK_RESOLVE_MODE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkResolveModeFlagBits = enum VkResolveModeFlagBits, TypeKind.ELABORATED
VkResolveModeFlagBits typedef dword

; enum VkResolveModeFlagBits {
    VK_RESOLVE_MODE_NONE equ 0
    VK_RESOLVE_MODE_SAMPLE_ZERO_BIT equ 1
    VK_RESOLVE_MODE_AVERAGE_BIT equ 2
    VK_RESOLVE_MODE_MIN_BIT equ 4
    VK_RESOLVE_MODE_MAX_BIT equ 8
    VK_RESOLVE_MODE_EXTERNAL_FORMAT_DOWNSAMPLE_ANDROID equ 16
    VK_RESOLVE_MODE_NONE_KHR equ 0
    VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR equ 1
    VK_RESOLVE_MODE_AVERAGE_BIT_KHR equ 2
    VK_RESOLVE_MODE_MIN_BIT_KHR equ 4
    VK_RESOLVE_MODE_MAX_BIT_KHR equ 8
    VK_RESOLVE_MODE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkResolveModeFlags = VkFlags, TypeKind.ELABORATED
VkResolveModeFlags typedef dword

; enum VkDescriptorBindingFlagBits {
    VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT equ 1
    VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT equ 2
    VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT equ 4
    VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT equ 8
    VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT equ 1
    VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT equ 2
    VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT equ 4
    VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT equ 8
    VK_DESCRIPTOR_BINDING_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDescriptorBindingFlagBits = enum VkDescriptorBindingFlagBits, TypeKind.ELABORATED
VkDescriptorBindingFlagBits typedef dword

; enum VkDescriptorBindingFlagBits {
    VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT equ 1
    VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT equ 2
    VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT equ 4
    VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT equ 8
    VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT equ 1
    VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT equ 2
    VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT equ 4
    VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT equ 8
    VK_DESCRIPTOR_BINDING_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkDescriptorBindingFlags = VkFlags, TypeKind.ELABORATED
VkDescriptorBindingFlags typedef dword

; enum VkSemaphoreWaitFlagBits {
    VK_SEMAPHORE_WAIT_ANY_BIT equ 1
    VK_SEMAPHORE_WAIT_ANY_BIT_KHR equ 1
    VK_SEMAPHORE_WAIT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSemaphoreWaitFlagBits = enum VkSemaphoreWaitFlagBits, TypeKind.ELABORATED
VkSemaphoreWaitFlagBits typedef dword

; enum VkSemaphoreWaitFlagBits {
    VK_SEMAPHORE_WAIT_ANY_BIT equ 1
    VK_SEMAPHORE_WAIT_ANY_BIT_KHR equ 1
    VK_SEMAPHORE_WAIT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSemaphoreWaitFlags = VkFlags, TypeKind.ELABORATED
VkSemaphoreWaitFlags typedef dword

VkPhysicalDeviceVulkan11Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = storageBuffer16BitAccess, type = VkBool32, offset = 16, size = 4
    storageBuffer16BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = uniformAndStorageBuffer16BitAccess, type = VkBool32, offset = 20, size = 4
    uniformAndStorageBuffer16BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = storagePushConstant16, type = VkBool32, offset = 24, size = 4
    storagePushConstant16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = storageInputOutput16, type = VkBool32, offset = 28, size = 4
    storageInputOutput16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiview, type = VkBool32, offset = 32, size = 4
    multiview VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewGeometryShader, type = VkBool32, offset = 36, size = 4
    multiviewGeometryShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewTessellationShader, type = VkBool32, offset = 40, size = 4
    multiviewTessellationShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = variablePointersStorageBuffer, type = VkBool32, offset = 44, size = 4
    variablePointersStorageBuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = variablePointers, type = VkBool32, offset = 48, size = 4
    variablePointers VkBool32 <>
;   TypeKind.ELABORATED
;   name = protectedMemory, type = VkBool32, offset = 52, size = 4
    protectedMemory VkBool32 <>
;   TypeKind.ELABORATED
;   name = samplerYcbcrConversion, type = VkBool32, offset = 56, size = 4
    samplerYcbcrConversion VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDrawParameters, type = VkBool32, offset = 60, size = 4
    shaderDrawParameters VkBool32 <>
VkPhysicalDeviceVulkan11Features ends

; TYPEDEF VkPhysicalDeviceVulkan11Features = struct VkPhysicalDeviceVulkan11Features, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVulkan11Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = storageBuffer16BitAccess, type = VkBool32, offset = 16, size = 4
    storageBuffer16BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = uniformAndStorageBuffer16BitAccess, type = VkBool32, offset = 20, size = 4
    uniformAndStorageBuffer16BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = storagePushConstant16, type = VkBool32, offset = 24, size = 4
    storagePushConstant16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = storageInputOutput16, type = VkBool32, offset = 28, size = 4
    storageInputOutput16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiview, type = VkBool32, offset = 32, size = 4
    multiview VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewGeometryShader, type = VkBool32, offset = 36, size = 4
    multiviewGeometryShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewTessellationShader, type = VkBool32, offset = 40, size = 4
    multiviewTessellationShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = variablePointersStorageBuffer, type = VkBool32, offset = 44, size = 4
    variablePointersStorageBuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = variablePointers, type = VkBool32, offset = 48, size = 4
    variablePointers VkBool32 <>
;   TypeKind.ELABORATED
;   name = protectedMemory, type = VkBool32, offset = 52, size = 4
    protectedMemory VkBool32 <>
;   TypeKind.ELABORATED
;   name = samplerYcbcrConversion, type = VkBool32, offset = 56, size = 4
    samplerYcbcrConversion VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDrawParameters, type = VkBool32, offset = 60, size = 4
    shaderDrawParameters VkBool32 <>
VkPhysicalDeviceVulkan11Features ends

VkPhysicalDeviceVulkan11Properties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = deviceUUID, type = uint8_t[16], offset = 16, size = 16
    deviceUUID byte 16 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = driverUUID, type = uint8_t[16], offset = 32, size = 16
    driverUUID byte 16 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = deviceLUID, type = uint8_t[8], offset = 48, size = 8
    deviceLUID byte 8 dup(?)
;   TypeKind.ELABORATED
;   name = deviceNodeMask, type = uint32_t, offset = 56, size = 4
    deviceNodeMask dword ?
;   TypeKind.ELABORATED
;   name = deviceLUIDValid, type = VkBool32, offset = 60, size = 4
    deviceLUIDValid VkBool32 <>
;   TypeKind.ELABORATED
;   name = subgroupSize, type = uint32_t, offset = 64, size = 4
    subgroupSize dword ?
;   TypeKind.ELABORATED
;   name = subgroupSupportedStages, type = VkShaderStageFlags, offset = 68, size = 4
    subgroupSupportedStages VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = subgroupSupportedOperations, type = VkSubgroupFeatureFlags, offset = 72, size = 4
    subgroupSupportedOperations VkSubgroupFeatureFlags <>
;   TypeKind.ELABORATED
;   name = subgroupQuadOperationsInAllStages, type = VkBool32, offset = 76, size = 4
    subgroupQuadOperationsInAllStages VkBool32 <>
;   TypeKind.ELABORATED
;   name = pointClippingBehavior, type = VkPointClippingBehavior, offset = 80, size = 4
    pointClippingBehavior VkPointClippingBehavior <>
;   TypeKind.ELABORATED
;   name = maxMultiviewViewCount, type = uint32_t, offset = 84, size = 4
    maxMultiviewViewCount dword ?
;   TypeKind.ELABORATED
;   name = maxMultiviewInstanceIndex, type = uint32_t, offset = 88, size = 4
    maxMultiviewInstanceIndex dword ?
;   TypeKind.ELABORATED
;   name = protectedNoFault, type = VkBool32, offset = 92, size = 4
    protectedNoFault VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxPerSetDescriptors, type = uint32_t, offset = 96, size = 4
    maxPerSetDescriptors dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = maxMemoryAllocationSize, type = VkDeviceSize, offset = 104, size = 8
    maxMemoryAllocationSize VkDeviceSize <>
VkPhysicalDeviceVulkan11Properties ends

; TYPEDEF VkPhysicalDeviceVulkan11Properties = struct VkPhysicalDeviceVulkan11Properties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVulkan11Properties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = deviceUUID, type = uint8_t[16], offset = 16, size = 16
    deviceUUID byte 16 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = driverUUID, type = uint8_t[16], offset = 32, size = 16
    driverUUID byte 16 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = deviceLUID, type = uint8_t[8], offset = 48, size = 8
    deviceLUID byte 8 dup(?)
;   TypeKind.ELABORATED
;   name = deviceNodeMask, type = uint32_t, offset = 56, size = 4
    deviceNodeMask dword ?
;   TypeKind.ELABORATED
;   name = deviceLUIDValid, type = VkBool32, offset = 60, size = 4
    deviceLUIDValid VkBool32 <>
;   TypeKind.ELABORATED
;   name = subgroupSize, type = uint32_t, offset = 64, size = 4
    subgroupSize dword ?
;   TypeKind.ELABORATED
;   name = subgroupSupportedStages, type = VkShaderStageFlags, offset = 68, size = 4
    subgroupSupportedStages VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = subgroupSupportedOperations, type = VkSubgroupFeatureFlags, offset = 72, size = 4
    subgroupSupportedOperations VkSubgroupFeatureFlags <>
;   TypeKind.ELABORATED
;   name = subgroupQuadOperationsInAllStages, type = VkBool32, offset = 76, size = 4
    subgroupQuadOperationsInAllStages VkBool32 <>
;   TypeKind.ELABORATED
;   name = pointClippingBehavior, type = VkPointClippingBehavior, offset = 80, size = 4
    pointClippingBehavior VkPointClippingBehavior <>
;   TypeKind.ELABORATED
;   name = maxMultiviewViewCount, type = uint32_t, offset = 84, size = 4
    maxMultiviewViewCount dword ?
;   TypeKind.ELABORATED
;   name = maxMultiviewInstanceIndex, type = uint32_t, offset = 88, size = 4
    maxMultiviewInstanceIndex dword ?
;   TypeKind.ELABORATED
;   name = protectedNoFault, type = VkBool32, offset = 92, size = 4
    protectedNoFault VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxPerSetDescriptors, type = uint32_t, offset = 96, size = 4
    maxPerSetDescriptors dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = maxMemoryAllocationSize, type = VkDeviceSize, offset = 104, size = 8
    maxMemoryAllocationSize VkDeviceSize <>
VkPhysicalDeviceVulkan11Properties ends

VkPhysicalDeviceVulkan12Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = samplerMirrorClampToEdge, type = VkBool32, offset = 16, size = 4
    samplerMirrorClampToEdge VkBool32 <>
;   TypeKind.ELABORATED
;   name = drawIndirectCount, type = VkBool32, offset = 20, size = 4
    drawIndirectCount VkBool32 <>
;   TypeKind.ELABORATED
;   name = storageBuffer8BitAccess, type = VkBool32, offset = 24, size = 4
    storageBuffer8BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = uniformAndStorageBuffer8BitAccess, type = VkBool32, offset = 28, size = 4
    uniformAndStorageBuffer8BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = storagePushConstant8, type = VkBool32, offset = 32, size = 4
    storagePushConstant8 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferInt64Atomics, type = VkBool32, offset = 36, size = 4
    shaderBufferInt64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedInt64Atomics, type = VkBool32, offset = 40, size = 4
    shaderSharedInt64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderFloat16, type = VkBool32, offset = 44, size = 4
    shaderFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInt8, type = VkBool32, offset = 48, size = 4
    shaderInt8 VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorIndexing, type = VkBool32, offset = 52, size = 4
    descriptorIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayDynamicIndexing, type = VkBool32, offset = 56, size = 4
    shaderInputAttachmentArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformTexelBufferArrayDynamicIndexing, type = VkBool32, offset = 60, size = 4
    shaderUniformTexelBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageTexelBufferArrayDynamicIndexing, type = VkBool32, offset = 64, size = 4
    shaderStorageTexelBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformBufferArrayNonUniformIndexing, type = VkBool32, offset = 68, size = 4
    shaderUniformBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSampledImageArrayNonUniformIndexing, type = VkBool32, offset = 72, size = 4
    shaderSampledImageArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageBufferArrayNonUniformIndexing, type = VkBool32, offset = 76, size = 4
    shaderStorageBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageArrayNonUniformIndexing, type = VkBool32, offset = 80, size = 4
    shaderStorageImageArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayNonUniformIndexing, type = VkBool32, offset = 84, size = 4
    shaderInputAttachmentArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformTexelBufferArrayNonUniformIndexing, type = VkBool32, offset = 88, size = 4
    shaderUniformTexelBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageTexelBufferArrayNonUniformIndexing, type = VkBool32, offset = 92, size = 4
    shaderStorageTexelBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUniformBufferUpdateAfterBind, type = VkBool32, offset = 96, size = 4
    descriptorBindingUniformBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingSampledImageUpdateAfterBind, type = VkBool32, offset = 100, size = 4
    descriptorBindingSampledImageUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageImageUpdateAfterBind, type = VkBool32, offset = 104, size = 4
    descriptorBindingStorageImageUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageBufferUpdateAfterBind, type = VkBool32, offset = 108, size = 4
    descriptorBindingStorageBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUniformTexelBufferUpdateAfterBind, type = VkBool32, offset = 112, size = 4
    descriptorBindingUniformTexelBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageTexelBufferUpdateAfterBind, type = VkBool32, offset = 116, size = 4
    descriptorBindingStorageTexelBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUpdateUnusedWhilePending, type = VkBool32, offset = 120, size = 4
    descriptorBindingUpdateUnusedWhilePending VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingPartiallyBound, type = VkBool32, offset = 124, size = 4
    descriptorBindingPartiallyBound VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingVariableDescriptorCount, type = VkBool32, offset = 128, size = 4
    descriptorBindingVariableDescriptorCount VkBool32 <>
;   TypeKind.ELABORATED
;   name = runtimeDescriptorArray, type = VkBool32, offset = 132, size = 4
    runtimeDescriptorArray VkBool32 <>
;   TypeKind.ELABORATED
;   name = samplerFilterMinmax, type = VkBool32, offset = 136, size = 4
    samplerFilterMinmax VkBool32 <>
;   TypeKind.ELABORATED
;   name = scalarBlockLayout, type = VkBool32, offset = 140, size = 4
    scalarBlockLayout VkBool32 <>
;   TypeKind.ELABORATED
;   name = imagelessFramebuffer, type = VkBool32, offset = 144, size = 4
    imagelessFramebuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = uniformBufferStandardLayout, type = VkBool32, offset = 148, size = 4
    uniformBufferStandardLayout VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSubgroupExtendedTypes, type = VkBool32, offset = 152, size = 4
    shaderSubgroupExtendedTypes VkBool32 <>
;   TypeKind.ELABORATED
;   name = separateDepthStencilLayouts, type = VkBool32, offset = 156, size = 4
    separateDepthStencilLayouts VkBool32 <>
;   TypeKind.ELABORATED
;   name = hostQueryReset, type = VkBool32, offset = 160, size = 4
    hostQueryReset VkBool32 <>
;   TypeKind.ELABORATED
;   name = timelineSemaphore, type = VkBool32, offset = 164, size = 4
    timelineSemaphore VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddress, type = VkBool32, offset = 168, size = 4
    bufferDeviceAddress VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressCaptureReplay, type = VkBool32, offset = 172, size = 4
    bufferDeviceAddressCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressMultiDevice, type = VkBool32, offset = 176, size = 4
    bufferDeviceAddressMultiDevice VkBool32 <>
;   TypeKind.ELABORATED
;   name = vulkanMemoryModel, type = VkBool32, offset = 180, size = 4
    vulkanMemoryModel VkBool32 <>
;   TypeKind.ELABORATED
;   name = vulkanMemoryModelDeviceScope, type = VkBool32, offset = 184, size = 4
    vulkanMemoryModelDeviceScope VkBool32 <>
;   TypeKind.ELABORATED
;   name = vulkanMemoryModelAvailabilityVisibilityChains, type = VkBool32, offset = 188, size = 4
    vulkanMemoryModelAvailabilityVisibilityChains VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderOutputViewportIndex, type = VkBool32, offset = 192, size = 4
    shaderOutputViewportIndex VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderOutputLayer, type = VkBool32, offset = 196, size = 4
    shaderOutputLayer VkBool32 <>
;   TypeKind.ELABORATED
;   name = subgroupBroadcastDynamicId, type = VkBool32, offset = 200, size = 4
    subgroupBroadcastDynamicId VkBool32 <>
VkPhysicalDeviceVulkan12Features ends

; TYPEDEF VkPhysicalDeviceVulkan12Features = struct VkPhysicalDeviceVulkan12Features, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVulkan12Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = samplerMirrorClampToEdge, type = VkBool32, offset = 16, size = 4
    samplerMirrorClampToEdge VkBool32 <>
;   TypeKind.ELABORATED
;   name = drawIndirectCount, type = VkBool32, offset = 20, size = 4
    drawIndirectCount VkBool32 <>
;   TypeKind.ELABORATED
;   name = storageBuffer8BitAccess, type = VkBool32, offset = 24, size = 4
    storageBuffer8BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = uniformAndStorageBuffer8BitAccess, type = VkBool32, offset = 28, size = 4
    uniformAndStorageBuffer8BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = storagePushConstant8, type = VkBool32, offset = 32, size = 4
    storagePushConstant8 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferInt64Atomics, type = VkBool32, offset = 36, size = 4
    shaderBufferInt64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedInt64Atomics, type = VkBool32, offset = 40, size = 4
    shaderSharedInt64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderFloat16, type = VkBool32, offset = 44, size = 4
    shaderFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInt8, type = VkBool32, offset = 48, size = 4
    shaderInt8 VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorIndexing, type = VkBool32, offset = 52, size = 4
    descriptorIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayDynamicIndexing, type = VkBool32, offset = 56, size = 4
    shaderInputAttachmentArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformTexelBufferArrayDynamicIndexing, type = VkBool32, offset = 60, size = 4
    shaderUniformTexelBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageTexelBufferArrayDynamicIndexing, type = VkBool32, offset = 64, size = 4
    shaderStorageTexelBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformBufferArrayNonUniformIndexing, type = VkBool32, offset = 68, size = 4
    shaderUniformBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSampledImageArrayNonUniformIndexing, type = VkBool32, offset = 72, size = 4
    shaderSampledImageArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageBufferArrayNonUniformIndexing, type = VkBool32, offset = 76, size = 4
    shaderStorageBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageArrayNonUniformIndexing, type = VkBool32, offset = 80, size = 4
    shaderStorageImageArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayNonUniformIndexing, type = VkBool32, offset = 84, size = 4
    shaderInputAttachmentArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformTexelBufferArrayNonUniformIndexing, type = VkBool32, offset = 88, size = 4
    shaderUniformTexelBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageTexelBufferArrayNonUniformIndexing, type = VkBool32, offset = 92, size = 4
    shaderStorageTexelBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUniformBufferUpdateAfterBind, type = VkBool32, offset = 96, size = 4
    descriptorBindingUniformBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingSampledImageUpdateAfterBind, type = VkBool32, offset = 100, size = 4
    descriptorBindingSampledImageUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageImageUpdateAfterBind, type = VkBool32, offset = 104, size = 4
    descriptorBindingStorageImageUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageBufferUpdateAfterBind, type = VkBool32, offset = 108, size = 4
    descriptorBindingStorageBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUniformTexelBufferUpdateAfterBind, type = VkBool32, offset = 112, size = 4
    descriptorBindingUniformTexelBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageTexelBufferUpdateAfterBind, type = VkBool32, offset = 116, size = 4
    descriptorBindingStorageTexelBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUpdateUnusedWhilePending, type = VkBool32, offset = 120, size = 4
    descriptorBindingUpdateUnusedWhilePending VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingPartiallyBound, type = VkBool32, offset = 124, size = 4
    descriptorBindingPartiallyBound VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingVariableDescriptorCount, type = VkBool32, offset = 128, size = 4
    descriptorBindingVariableDescriptorCount VkBool32 <>
;   TypeKind.ELABORATED
;   name = runtimeDescriptorArray, type = VkBool32, offset = 132, size = 4
    runtimeDescriptorArray VkBool32 <>
;   TypeKind.ELABORATED
;   name = samplerFilterMinmax, type = VkBool32, offset = 136, size = 4
    samplerFilterMinmax VkBool32 <>
;   TypeKind.ELABORATED
;   name = scalarBlockLayout, type = VkBool32, offset = 140, size = 4
    scalarBlockLayout VkBool32 <>
;   TypeKind.ELABORATED
;   name = imagelessFramebuffer, type = VkBool32, offset = 144, size = 4
    imagelessFramebuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = uniformBufferStandardLayout, type = VkBool32, offset = 148, size = 4
    uniformBufferStandardLayout VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSubgroupExtendedTypes, type = VkBool32, offset = 152, size = 4
    shaderSubgroupExtendedTypes VkBool32 <>
;   TypeKind.ELABORATED
;   name = separateDepthStencilLayouts, type = VkBool32, offset = 156, size = 4
    separateDepthStencilLayouts VkBool32 <>
;   TypeKind.ELABORATED
;   name = hostQueryReset, type = VkBool32, offset = 160, size = 4
    hostQueryReset VkBool32 <>
;   TypeKind.ELABORATED
;   name = timelineSemaphore, type = VkBool32, offset = 164, size = 4
    timelineSemaphore VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddress, type = VkBool32, offset = 168, size = 4
    bufferDeviceAddress VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressCaptureReplay, type = VkBool32, offset = 172, size = 4
    bufferDeviceAddressCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressMultiDevice, type = VkBool32, offset = 176, size = 4
    bufferDeviceAddressMultiDevice VkBool32 <>
;   TypeKind.ELABORATED
;   name = vulkanMemoryModel, type = VkBool32, offset = 180, size = 4
    vulkanMemoryModel VkBool32 <>
;   TypeKind.ELABORATED
;   name = vulkanMemoryModelDeviceScope, type = VkBool32, offset = 184, size = 4
    vulkanMemoryModelDeviceScope VkBool32 <>
;   TypeKind.ELABORATED
;   name = vulkanMemoryModelAvailabilityVisibilityChains, type = VkBool32, offset = 188, size = 4
    vulkanMemoryModelAvailabilityVisibilityChains VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderOutputViewportIndex, type = VkBool32, offset = 192, size = 4
    shaderOutputViewportIndex VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderOutputLayer, type = VkBool32, offset = 196, size = 4
    shaderOutputLayer VkBool32 <>
;   TypeKind.ELABORATED
;   name = subgroupBroadcastDynamicId, type = VkBool32, offset = 200, size = 4
    subgroupBroadcastDynamicId VkBool32 <>
VkPhysicalDeviceVulkan12Features ends

VkConformanceVersion struct
;   TypeKind.ELABORATED
;   name = major, type = uint8_t, offset = 0, size = 1
    major byte ?
;   TypeKind.ELABORATED
;   name = minor, type = uint8_t, offset = 1, size = 1
    minor byte ?
;   TypeKind.ELABORATED
;   name = subminor, type = uint8_t, offset = 2, size = 1
    subminor byte ?
;   TypeKind.ELABORATED
;   name = patch, type = uint8_t, offset = 3, size = 1
    patch byte ?
VkConformanceVersion ends

; TYPEDEF VkConformanceVersion = struct VkConformanceVersion, TypeKind.ELABORATED
; remove struct typedef

VkConformanceVersion struct
;   TypeKind.ELABORATED
;   name = major, type = uint8_t, offset = 0, size = 1
    major byte ?
;   TypeKind.ELABORATED
;   name = minor, type = uint8_t, offset = 1, size = 1
    minor byte ?
;   TypeKind.ELABORATED
;   name = subminor, type = uint8_t, offset = 2, size = 1
    subminor byte ?
;   TypeKind.ELABORATED
;   name = patch, type = uint8_t, offset = 3, size = 1
    patch byte ?
VkConformanceVersion ends

VkPhysicalDeviceVulkan12Properties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = driverID, type = VkDriverId, offset = 16, size = 4
    driverID VkDriverId <>
;   TypeKind.CONSTANTARRAY
;   name = driverName, type = char[256], offset = 20, size = 256
    driverName byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = driverInfo, type = char[256], offset = 276, size = 256
    driverInfo byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = conformanceVersion, type = VkConformanceVersion, offset = 532, size = 4
    conformanceVersion VkConformanceVersion <>
;   TypeKind.ELABORATED
;   name = denormBehaviorIndependence, type = VkShaderFloatControlsIndependence, offset = 536, size = 4
    denormBehaviorIndependence VkShaderFloatControlsIndependence <>
;   TypeKind.ELABORATED
;   name = roundingModeIndependence, type = VkShaderFloatControlsIndependence, offset = 540, size = 4
    roundingModeIndependence VkShaderFloatControlsIndependence <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat16, type = VkBool32, offset = 544, size = 4
    shaderSignedZeroInfNanPreserveFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat32, type = VkBool32, offset = 548, size = 4
    shaderSignedZeroInfNanPreserveFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat64, type = VkBool32, offset = 552, size = 4
    shaderSignedZeroInfNanPreserveFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat16, type = VkBool32, offset = 556, size = 4
    shaderDenormPreserveFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat32, type = VkBool32, offset = 560, size = 4
    shaderDenormPreserveFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat64, type = VkBool32, offset = 564, size = 4
    shaderDenormPreserveFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat16, type = VkBool32, offset = 568, size = 4
    shaderDenormFlushToZeroFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat32, type = VkBool32, offset = 572, size = 4
    shaderDenormFlushToZeroFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat64, type = VkBool32, offset = 576, size = 4
    shaderDenormFlushToZeroFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat16, type = VkBool32, offset = 580, size = 4
    shaderRoundingModeRTEFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat32, type = VkBool32, offset = 584, size = 4
    shaderRoundingModeRTEFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat64, type = VkBool32, offset = 588, size = 4
    shaderRoundingModeRTEFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat16, type = VkBool32, offset = 592, size = 4
    shaderRoundingModeRTZFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat32, type = VkBool32, offset = 596, size = 4
    shaderRoundingModeRTZFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat64, type = VkBool32, offset = 600, size = 4
    shaderRoundingModeRTZFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxUpdateAfterBindDescriptorsInAllPools, type = uint32_t, offset = 604, size = 4
    maxUpdateAfterBindDescriptorsInAllPools dword ?
;   TypeKind.ELABORATED
;   name = shaderUniformBufferArrayNonUniformIndexingNative, type = VkBool32, offset = 608, size = 4
    shaderUniformBufferArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSampledImageArrayNonUniformIndexingNative, type = VkBool32, offset = 612, size = 4
    shaderSampledImageArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageBufferArrayNonUniformIndexingNative, type = VkBool32, offset = 616, size = 4
    shaderStorageBufferArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageArrayNonUniformIndexingNative, type = VkBool32, offset = 620, size = 4
    shaderStorageImageArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayNonUniformIndexingNative, type = VkBool32, offset = 624, size = 4
    shaderInputAttachmentArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = robustBufferAccessUpdateAfterBind, type = VkBool32, offset = 628, size = 4
    robustBufferAccessUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = quadDivergentImplicitLod, type = VkBool32, offset = 632, size = 4
    quadDivergentImplicitLod VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindSamplers, type = uint32_t, offset = 636, size = 4
    maxPerStageDescriptorUpdateAfterBindSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindUniformBuffers, type = uint32_t, offset = 640, size = 4
    maxPerStageDescriptorUpdateAfterBindUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindStorageBuffers, type = uint32_t, offset = 644, size = 4
    maxPerStageDescriptorUpdateAfterBindStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindSampledImages, type = uint32_t, offset = 648, size = 4
    maxPerStageDescriptorUpdateAfterBindSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindStorageImages, type = uint32_t, offset = 652, size = 4
    maxPerStageDescriptorUpdateAfterBindStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindInputAttachments, type = uint32_t, offset = 656, size = 4
    maxPerStageDescriptorUpdateAfterBindInputAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageUpdateAfterBindResources, type = uint32_t, offset = 660, size = 4
    maxPerStageUpdateAfterBindResources dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindSamplers, type = uint32_t, offset = 664, size = 4
    maxDescriptorSetUpdateAfterBindSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindUniformBuffers, type = uint32_t, offset = 668, size = 4
    maxDescriptorSetUpdateAfterBindUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindUniformBuffersDynamic, type = uint32_t, offset = 672, size = 4
    maxDescriptorSetUpdateAfterBindUniformBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageBuffers, type = uint32_t, offset = 676, size = 4
    maxDescriptorSetUpdateAfterBindStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageBuffersDynamic, type = uint32_t, offset = 680, size = 4
    maxDescriptorSetUpdateAfterBindStorageBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindSampledImages, type = uint32_t, offset = 684, size = 4
    maxDescriptorSetUpdateAfterBindSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageImages, type = uint32_t, offset = 688, size = 4
    maxDescriptorSetUpdateAfterBindStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindInputAttachments, type = uint32_t, offset = 692, size = 4
    maxDescriptorSetUpdateAfterBindInputAttachments dword ?
;   TypeKind.ELABORATED
;   name = supportedDepthResolveModes, type = VkResolveModeFlags, offset = 696, size = 4
    supportedDepthResolveModes VkResolveModeFlags <>
;   TypeKind.ELABORATED
;   name = supportedStencilResolveModes, type = VkResolveModeFlags, offset = 700, size = 4
    supportedStencilResolveModes VkResolveModeFlags <>
;   TypeKind.ELABORATED
;   name = independentResolveNone, type = VkBool32, offset = 704, size = 4
    independentResolveNone VkBool32 <>
;   TypeKind.ELABORATED
;   name = independentResolve, type = VkBool32, offset = 708, size = 4
    independentResolve VkBool32 <>
;   TypeKind.ELABORATED
;   name = filterMinmaxSingleComponentFormats, type = VkBool32, offset = 712, size = 4
    filterMinmaxSingleComponentFormats VkBool32 <>
;   TypeKind.ELABORATED
;   name = filterMinmaxImageComponentMapping, type = VkBool32, offset = 716, size = 4
    filterMinmaxImageComponentMapping VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxTimelineSemaphoreValueDifference, type = uint64_t, offset = 720, size = 8
    maxTimelineSemaphoreValueDifference qword ?
;   TypeKind.ELABORATED
;   name = framebufferIntegerColorSampleCounts, type = VkSampleCountFlags, offset = 728, size = 4
    framebufferIntegerColorSampleCounts VkSampleCountFlags <>
VkPhysicalDeviceVulkan12Properties ends

; TYPEDEF VkPhysicalDeviceVulkan12Properties = struct VkPhysicalDeviceVulkan12Properties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVulkan12Properties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = driverID, type = VkDriverId, offset = 16, size = 4
    driverID VkDriverId <>
;   TypeKind.CONSTANTARRAY
;   name = driverName, type = char[256], offset = 20, size = 256
    driverName byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = driverInfo, type = char[256], offset = 276, size = 256
    driverInfo byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = conformanceVersion, type = VkConformanceVersion, offset = 532, size = 4
    conformanceVersion VkConformanceVersion <>
;   TypeKind.ELABORATED
;   name = denormBehaviorIndependence, type = VkShaderFloatControlsIndependence, offset = 536, size = 4
    denormBehaviorIndependence VkShaderFloatControlsIndependence <>
;   TypeKind.ELABORATED
;   name = roundingModeIndependence, type = VkShaderFloatControlsIndependence, offset = 540, size = 4
    roundingModeIndependence VkShaderFloatControlsIndependence <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat16, type = VkBool32, offset = 544, size = 4
    shaderSignedZeroInfNanPreserveFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat32, type = VkBool32, offset = 548, size = 4
    shaderSignedZeroInfNanPreserveFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat64, type = VkBool32, offset = 552, size = 4
    shaderSignedZeroInfNanPreserveFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat16, type = VkBool32, offset = 556, size = 4
    shaderDenormPreserveFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat32, type = VkBool32, offset = 560, size = 4
    shaderDenormPreserveFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat64, type = VkBool32, offset = 564, size = 4
    shaderDenormPreserveFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat16, type = VkBool32, offset = 568, size = 4
    shaderDenormFlushToZeroFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat32, type = VkBool32, offset = 572, size = 4
    shaderDenormFlushToZeroFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat64, type = VkBool32, offset = 576, size = 4
    shaderDenormFlushToZeroFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat16, type = VkBool32, offset = 580, size = 4
    shaderRoundingModeRTEFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat32, type = VkBool32, offset = 584, size = 4
    shaderRoundingModeRTEFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat64, type = VkBool32, offset = 588, size = 4
    shaderRoundingModeRTEFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat16, type = VkBool32, offset = 592, size = 4
    shaderRoundingModeRTZFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat32, type = VkBool32, offset = 596, size = 4
    shaderRoundingModeRTZFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat64, type = VkBool32, offset = 600, size = 4
    shaderRoundingModeRTZFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxUpdateAfterBindDescriptorsInAllPools, type = uint32_t, offset = 604, size = 4
    maxUpdateAfterBindDescriptorsInAllPools dword ?
;   TypeKind.ELABORATED
;   name = shaderUniformBufferArrayNonUniformIndexingNative, type = VkBool32, offset = 608, size = 4
    shaderUniformBufferArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSampledImageArrayNonUniformIndexingNative, type = VkBool32, offset = 612, size = 4
    shaderSampledImageArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageBufferArrayNonUniformIndexingNative, type = VkBool32, offset = 616, size = 4
    shaderStorageBufferArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageArrayNonUniformIndexingNative, type = VkBool32, offset = 620, size = 4
    shaderStorageImageArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayNonUniformIndexingNative, type = VkBool32, offset = 624, size = 4
    shaderInputAttachmentArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = robustBufferAccessUpdateAfterBind, type = VkBool32, offset = 628, size = 4
    robustBufferAccessUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = quadDivergentImplicitLod, type = VkBool32, offset = 632, size = 4
    quadDivergentImplicitLod VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindSamplers, type = uint32_t, offset = 636, size = 4
    maxPerStageDescriptorUpdateAfterBindSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindUniformBuffers, type = uint32_t, offset = 640, size = 4
    maxPerStageDescriptorUpdateAfterBindUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindStorageBuffers, type = uint32_t, offset = 644, size = 4
    maxPerStageDescriptorUpdateAfterBindStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindSampledImages, type = uint32_t, offset = 648, size = 4
    maxPerStageDescriptorUpdateAfterBindSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindStorageImages, type = uint32_t, offset = 652, size = 4
    maxPerStageDescriptorUpdateAfterBindStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindInputAttachments, type = uint32_t, offset = 656, size = 4
    maxPerStageDescriptorUpdateAfterBindInputAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageUpdateAfterBindResources, type = uint32_t, offset = 660, size = 4
    maxPerStageUpdateAfterBindResources dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindSamplers, type = uint32_t, offset = 664, size = 4
    maxDescriptorSetUpdateAfterBindSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindUniformBuffers, type = uint32_t, offset = 668, size = 4
    maxDescriptorSetUpdateAfterBindUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindUniformBuffersDynamic, type = uint32_t, offset = 672, size = 4
    maxDescriptorSetUpdateAfterBindUniformBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageBuffers, type = uint32_t, offset = 676, size = 4
    maxDescriptorSetUpdateAfterBindStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageBuffersDynamic, type = uint32_t, offset = 680, size = 4
    maxDescriptorSetUpdateAfterBindStorageBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindSampledImages, type = uint32_t, offset = 684, size = 4
    maxDescriptorSetUpdateAfterBindSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageImages, type = uint32_t, offset = 688, size = 4
    maxDescriptorSetUpdateAfterBindStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindInputAttachments, type = uint32_t, offset = 692, size = 4
    maxDescriptorSetUpdateAfterBindInputAttachments dword ?
;   TypeKind.ELABORATED
;   name = supportedDepthResolveModes, type = VkResolveModeFlags, offset = 696, size = 4
    supportedDepthResolveModes VkResolveModeFlags <>
;   TypeKind.ELABORATED
;   name = supportedStencilResolveModes, type = VkResolveModeFlags, offset = 700, size = 4
    supportedStencilResolveModes VkResolveModeFlags <>
;   TypeKind.ELABORATED
;   name = independentResolveNone, type = VkBool32, offset = 704, size = 4
    independentResolveNone VkBool32 <>
;   TypeKind.ELABORATED
;   name = independentResolve, type = VkBool32, offset = 708, size = 4
    independentResolve VkBool32 <>
;   TypeKind.ELABORATED
;   name = filterMinmaxSingleComponentFormats, type = VkBool32, offset = 712, size = 4
    filterMinmaxSingleComponentFormats VkBool32 <>
;   TypeKind.ELABORATED
;   name = filterMinmaxImageComponentMapping, type = VkBool32, offset = 716, size = 4
    filterMinmaxImageComponentMapping VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxTimelineSemaphoreValueDifference, type = uint64_t, offset = 720, size = 8
    maxTimelineSemaphoreValueDifference qword ?
;   TypeKind.ELABORATED
;   name = framebufferIntegerColorSampleCounts, type = VkSampleCountFlags, offset = 728, size = 4
    framebufferIntegerColorSampleCounts VkSampleCountFlags <>
VkPhysicalDeviceVulkan12Properties ends

VkImageFormatListCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = viewFormatCount, type = uint32_t, offset = 16, size = 4
    viewFormatCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pViewFormats, type = const VkFormat *, offset = 24, size = 8
    pViewFormats qword ?
VkImageFormatListCreateInfo ends

; TYPEDEF VkImageFormatListCreateInfo = struct VkImageFormatListCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkImageFormatListCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = viewFormatCount, type = uint32_t, offset = 16, size = 4
    viewFormatCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pViewFormats, type = const VkFormat *, offset = 24, size = 8
    pViewFormats qword ?
VkImageFormatListCreateInfo ends

VkAttachmentDescription2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkAttachmentDescriptionFlags, offset = 16, size = 4
    flags VkAttachmentDescriptionFlags <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 20, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = samples, type = VkSampleCountFlagBits, offset = 24, size = 4
    samples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = loadOp, type = VkAttachmentLoadOp, offset = 28, size = 4
    loadOp VkAttachmentLoadOp <>
;   TypeKind.ELABORATED
;   name = storeOp, type = VkAttachmentStoreOp, offset = 32, size = 4
    storeOp VkAttachmentStoreOp <>
;   TypeKind.ELABORATED
;   name = stencilLoadOp, type = VkAttachmentLoadOp, offset = 36, size = 4
    stencilLoadOp VkAttachmentLoadOp <>
;   TypeKind.ELABORATED
;   name = stencilStoreOp, type = VkAttachmentStoreOp, offset = 40, size = 4
    stencilStoreOp VkAttachmentStoreOp <>
;   TypeKind.ELABORATED
;   name = initialLayout, type = VkImageLayout, offset = 44, size = 4
    initialLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = finalLayout, type = VkImageLayout, offset = 48, size = 4
    finalLayout VkImageLayout <>
VkAttachmentDescription2 ends

; TYPEDEF VkAttachmentDescription2 = struct VkAttachmentDescription2, TypeKind.ELABORATED
; remove struct typedef

VkAttachmentDescription2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkAttachmentDescriptionFlags, offset = 16, size = 4
    flags VkAttachmentDescriptionFlags <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 20, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = samples, type = VkSampleCountFlagBits, offset = 24, size = 4
    samples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = loadOp, type = VkAttachmentLoadOp, offset = 28, size = 4
    loadOp VkAttachmentLoadOp <>
;   TypeKind.ELABORATED
;   name = storeOp, type = VkAttachmentStoreOp, offset = 32, size = 4
    storeOp VkAttachmentStoreOp <>
;   TypeKind.ELABORATED
;   name = stencilLoadOp, type = VkAttachmentLoadOp, offset = 36, size = 4
    stencilLoadOp VkAttachmentLoadOp <>
;   TypeKind.ELABORATED
;   name = stencilStoreOp, type = VkAttachmentStoreOp, offset = 40, size = 4
    stencilStoreOp VkAttachmentStoreOp <>
;   TypeKind.ELABORATED
;   name = initialLayout, type = VkImageLayout, offset = 44, size = 4
    initialLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = finalLayout, type = VkImageLayout, offset = 48, size = 4
    finalLayout VkImageLayout <>
VkAttachmentDescription2 ends

VkAttachmentReference2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachment, type = uint32_t, offset = 16, size = 4
    attachment dword ?
;   TypeKind.ELABORATED
;   name = layout, type = VkImageLayout, offset = 20, size = 4
    layout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 24, size = 4
    aspectMask VkImageAspectFlags <>
VkAttachmentReference2 ends

; TYPEDEF VkAttachmentReference2 = struct VkAttachmentReference2, TypeKind.ELABORATED
; remove struct typedef

VkAttachmentReference2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachment, type = uint32_t, offset = 16, size = 4
    attachment dword ?
;   TypeKind.ELABORATED
;   name = layout, type = VkImageLayout, offset = 20, size = 4
    layout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = aspectMask, type = VkImageAspectFlags, offset = 24, size = 4
    aspectMask VkImageAspectFlags <>
VkAttachmentReference2 ends

VkSubpassDescription2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSubpassDescriptionFlags, offset = 16, size = 4
    flags VkSubpassDescriptionFlags <>
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 20, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
;   TypeKind.ELABORATED
;   name = viewMask, type = uint32_t, offset = 24, size = 4
    viewMask dword ?
;   TypeKind.ELABORATED
;   name = inputAttachmentCount, type = uint32_t, offset = 28, size = 4
    inputAttachmentCount dword ?
;   TypeKind.POINTER
;   name = pInputAttachments, type = const VkAttachmentReference2 *, offset = 32, size = 8
    pInputAttachments qword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 40, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachments, type = const VkAttachmentReference2 *, offset = 48, size = 8
    pColorAttachments qword ?
;   TypeKind.POINTER
;   name = pResolveAttachments, type = const VkAttachmentReference2 *, offset = 56, size = 8
    pResolveAttachments qword ?
;   TypeKind.POINTER
;   name = pDepthStencilAttachment, type = const VkAttachmentReference2 *, offset = 64, size = 8
    pDepthStencilAttachment qword ?
;   TypeKind.ELABORATED
;   name = preserveAttachmentCount, type = uint32_t, offset = 72, size = 4
    preserveAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPreserveAttachments, type = const uint32_t *, offset = 80, size = 8
    pPreserveAttachments qword ?
VkSubpassDescription2 ends

; TYPEDEF VkSubpassDescription2 = struct VkSubpassDescription2, TypeKind.ELABORATED
; remove struct typedef

VkSubpassDescription2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSubpassDescriptionFlags, offset = 16, size = 4
    flags VkSubpassDescriptionFlags <>
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 20, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
;   TypeKind.ELABORATED
;   name = viewMask, type = uint32_t, offset = 24, size = 4
    viewMask dword ?
;   TypeKind.ELABORATED
;   name = inputAttachmentCount, type = uint32_t, offset = 28, size = 4
    inputAttachmentCount dword ?
;   TypeKind.POINTER
;   name = pInputAttachments, type = const VkAttachmentReference2 *, offset = 32, size = 8
    pInputAttachments qword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 40, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachments, type = const VkAttachmentReference2 *, offset = 48, size = 8
    pColorAttachments qword ?
;   TypeKind.POINTER
;   name = pResolveAttachments, type = const VkAttachmentReference2 *, offset = 56, size = 8
    pResolveAttachments qword ?
;   TypeKind.POINTER
;   name = pDepthStencilAttachment, type = const VkAttachmentReference2 *, offset = 64, size = 8
    pDepthStencilAttachment qword ?
;   TypeKind.ELABORATED
;   name = preserveAttachmentCount, type = uint32_t, offset = 72, size = 4
    preserveAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPreserveAttachments, type = const uint32_t *, offset = 80, size = 8
    pPreserveAttachments qword ?
VkSubpassDescription2 ends

VkSubpassDependency2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcSubpass, type = uint32_t, offset = 16, size = 4
    srcSubpass dword ?
;   TypeKind.ELABORATED
;   name = dstSubpass, type = uint32_t, offset = 20, size = 4
    dstSubpass dword ?
;   TypeKind.ELABORATED
;   name = srcStageMask, type = VkPipelineStageFlags, offset = 24, size = 4
    srcStageMask VkPipelineStageFlags <>
;   TypeKind.ELABORATED
;   name = dstStageMask, type = VkPipelineStageFlags, offset = 28, size = 4
    dstStageMask VkPipelineStageFlags <>
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags, offset = 32, size = 4
    srcAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags, offset = 36, size = 4
    dstAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dependencyFlags, type = VkDependencyFlags, offset = 40, size = 4
    dependencyFlags VkDependencyFlags <>
;   TypeKind.ELABORATED
;   name = viewOffset, type = int32_t, offset = 44, size = 4
    viewOffset sdword ?
VkSubpassDependency2 ends

; TYPEDEF VkSubpassDependency2 = struct VkSubpassDependency2, TypeKind.ELABORATED
; remove struct typedef

VkSubpassDependency2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcSubpass, type = uint32_t, offset = 16, size = 4
    srcSubpass dword ?
;   TypeKind.ELABORATED
;   name = dstSubpass, type = uint32_t, offset = 20, size = 4
    dstSubpass dword ?
;   TypeKind.ELABORATED
;   name = srcStageMask, type = VkPipelineStageFlags, offset = 24, size = 4
    srcStageMask VkPipelineStageFlags <>
;   TypeKind.ELABORATED
;   name = dstStageMask, type = VkPipelineStageFlags, offset = 28, size = 4
    dstStageMask VkPipelineStageFlags <>
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags, offset = 32, size = 4
    srcAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags, offset = 36, size = 4
    dstAccessMask dword ?
;   TypeKind.ELABORATED
;   name = dependencyFlags, type = VkDependencyFlags, offset = 40, size = 4
    dependencyFlags VkDependencyFlags <>
;   TypeKind.ELABORATED
;   name = viewOffset, type = int32_t, offset = 44, size = 4
    viewOffset sdword ?
VkSubpassDependency2 ends

VkRenderPassCreateInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkRenderPassCreateFlags, offset = 16, size = 4
    flags VkRenderPassCreateFlags <>
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 20, size = 4
    attachmentCount dword ?
;   TypeKind.POINTER
;   name = pAttachments, type = const VkAttachmentDescription2 *, offset = 24, size = 8
    pAttachments qword ?
;   TypeKind.ELABORATED
;   name = subpassCount, type = uint32_t, offset = 32, size = 4
    subpassCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSubpasses, type = const VkSubpassDescription2 *, offset = 40, size = 8
    pSubpasses qword ?
;   TypeKind.ELABORATED
;   name = dependencyCount, type = uint32_t, offset = 48, size = 4
    dependencyCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDependencies, type = const VkSubpassDependency2 *, offset = 56, size = 8
    pDependencies qword ?
;   TypeKind.ELABORATED
;   name = correlatedViewMaskCount, type = uint32_t, offset = 64, size = 4
    correlatedViewMaskCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCorrelatedViewMasks, type = const uint32_t *, offset = 72, size = 8
    pCorrelatedViewMasks qword ?
VkRenderPassCreateInfo2 ends

; TYPEDEF VkRenderPassCreateInfo2 = struct VkRenderPassCreateInfo2, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassCreateInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkRenderPassCreateFlags, offset = 16, size = 4
    flags VkRenderPassCreateFlags <>
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 20, size = 4
    attachmentCount dword ?
;   TypeKind.POINTER
;   name = pAttachments, type = const VkAttachmentDescription2 *, offset = 24, size = 8
    pAttachments qword ?
;   TypeKind.ELABORATED
;   name = subpassCount, type = uint32_t, offset = 32, size = 4
    subpassCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSubpasses, type = const VkSubpassDescription2 *, offset = 40, size = 8
    pSubpasses qword ?
;   TypeKind.ELABORATED
;   name = dependencyCount, type = uint32_t, offset = 48, size = 4
    dependencyCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDependencies, type = const VkSubpassDependency2 *, offset = 56, size = 8
    pDependencies qword ?
;   TypeKind.ELABORATED
;   name = correlatedViewMaskCount, type = uint32_t, offset = 64, size = 4
    correlatedViewMaskCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCorrelatedViewMasks, type = const uint32_t *, offset = 72, size = 8
    pCorrelatedViewMasks qword ?
VkRenderPassCreateInfo2 ends

VkSubpassBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = contents, type = VkSubpassContents, offset = 16, size = 4
    contents VkSubpassContents <>
VkSubpassBeginInfo ends

; TYPEDEF VkSubpassBeginInfo = struct VkSubpassBeginInfo, TypeKind.ELABORATED
; remove struct typedef

VkSubpassBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = contents, type = VkSubpassContents, offset = 16, size = 4
    contents VkSubpassContents <>
VkSubpassBeginInfo ends

VkSubpassEndInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
VkSubpassEndInfo ends

; TYPEDEF VkSubpassEndInfo = struct VkSubpassEndInfo, TypeKind.ELABORATED
; remove struct typedef

VkSubpassEndInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
VkSubpassEndInfo ends

VkPhysicalDevice8BitStorageFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = storageBuffer8BitAccess, type = VkBool32, offset = 16, size = 4
    storageBuffer8BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = uniformAndStorageBuffer8BitAccess, type = VkBool32, offset = 20, size = 4
    uniformAndStorageBuffer8BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = storagePushConstant8, type = VkBool32, offset = 24, size = 4
    storagePushConstant8 VkBool32 <>
VkPhysicalDevice8BitStorageFeatures ends

; TYPEDEF VkPhysicalDevice8BitStorageFeatures = struct VkPhysicalDevice8BitStorageFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevice8BitStorageFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = storageBuffer8BitAccess, type = VkBool32, offset = 16, size = 4
    storageBuffer8BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = uniformAndStorageBuffer8BitAccess, type = VkBool32, offset = 20, size = 4
    uniformAndStorageBuffer8BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = storagePushConstant8, type = VkBool32, offset = 24, size = 4
    storagePushConstant8 VkBool32 <>
VkPhysicalDevice8BitStorageFeatures ends

VkPhysicalDeviceDriverProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = driverID, type = VkDriverId, offset = 16, size = 4
    driverID VkDriverId <>
;   TypeKind.CONSTANTARRAY
;   name = driverName, type = char[256], offset = 20, size = 256
    driverName byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = driverInfo, type = char[256], offset = 276, size = 256
    driverInfo byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = conformanceVersion, type = VkConformanceVersion, offset = 532, size = 4
    conformanceVersion VkConformanceVersion <>
VkPhysicalDeviceDriverProperties ends

; TYPEDEF VkPhysicalDeviceDriverProperties = struct VkPhysicalDeviceDriverProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDriverProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = driverID, type = VkDriverId, offset = 16, size = 4
    driverID VkDriverId <>
;   TypeKind.CONSTANTARRAY
;   name = driverName, type = char[256], offset = 20, size = 256
    driverName byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = driverInfo, type = char[256], offset = 276, size = 256
    driverInfo byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = conformanceVersion, type = VkConformanceVersion, offset = 532, size = 4
    conformanceVersion VkConformanceVersion <>
VkPhysicalDeviceDriverProperties ends

VkPhysicalDeviceShaderAtomicInt64Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderBufferInt64Atomics, type = VkBool32, offset = 16, size = 4
    shaderBufferInt64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedInt64Atomics, type = VkBool32, offset = 20, size = 4
    shaderSharedInt64Atomics VkBool32 <>
VkPhysicalDeviceShaderAtomicInt64Features ends

; TYPEDEF VkPhysicalDeviceShaderAtomicInt64Features = struct VkPhysicalDeviceShaderAtomicInt64Features, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderAtomicInt64Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderBufferInt64Atomics, type = VkBool32, offset = 16, size = 4
    shaderBufferInt64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedInt64Atomics, type = VkBool32, offset = 20, size = 4
    shaderSharedInt64Atomics VkBool32 <>
VkPhysicalDeviceShaderAtomicInt64Features ends

VkPhysicalDeviceShaderFloat16Int8Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderFloat16, type = VkBool32, offset = 16, size = 4
    shaderFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInt8, type = VkBool32, offset = 20, size = 4
    shaderInt8 VkBool32 <>
VkPhysicalDeviceShaderFloat16Int8Features ends

; TYPEDEF VkPhysicalDeviceShaderFloat16Int8Features = struct VkPhysicalDeviceShaderFloat16Int8Features, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderFloat16Int8Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderFloat16, type = VkBool32, offset = 16, size = 4
    shaderFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInt8, type = VkBool32, offset = 20, size = 4
    shaderInt8 VkBool32 <>
VkPhysicalDeviceShaderFloat16Int8Features ends

VkPhysicalDeviceFloatControlsProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = denormBehaviorIndependence, type = VkShaderFloatControlsIndependence, offset = 16, size = 4
    denormBehaviorIndependence VkShaderFloatControlsIndependence <>
;   TypeKind.ELABORATED
;   name = roundingModeIndependence, type = VkShaderFloatControlsIndependence, offset = 20, size = 4
    roundingModeIndependence VkShaderFloatControlsIndependence <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat16, type = VkBool32, offset = 24, size = 4
    shaderSignedZeroInfNanPreserveFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat32, type = VkBool32, offset = 28, size = 4
    shaderSignedZeroInfNanPreserveFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat64, type = VkBool32, offset = 32, size = 4
    shaderSignedZeroInfNanPreserveFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat16, type = VkBool32, offset = 36, size = 4
    shaderDenormPreserveFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat32, type = VkBool32, offset = 40, size = 4
    shaderDenormPreserveFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat64, type = VkBool32, offset = 44, size = 4
    shaderDenormPreserveFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat16, type = VkBool32, offset = 48, size = 4
    shaderDenormFlushToZeroFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat32, type = VkBool32, offset = 52, size = 4
    shaderDenormFlushToZeroFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat64, type = VkBool32, offset = 56, size = 4
    shaderDenormFlushToZeroFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat16, type = VkBool32, offset = 60, size = 4
    shaderRoundingModeRTEFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat32, type = VkBool32, offset = 64, size = 4
    shaderRoundingModeRTEFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat64, type = VkBool32, offset = 68, size = 4
    shaderRoundingModeRTEFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat16, type = VkBool32, offset = 72, size = 4
    shaderRoundingModeRTZFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat32, type = VkBool32, offset = 76, size = 4
    shaderRoundingModeRTZFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat64, type = VkBool32, offset = 80, size = 4
    shaderRoundingModeRTZFloat64 VkBool32 <>
VkPhysicalDeviceFloatControlsProperties ends

; TYPEDEF VkPhysicalDeviceFloatControlsProperties = struct VkPhysicalDeviceFloatControlsProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFloatControlsProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = denormBehaviorIndependence, type = VkShaderFloatControlsIndependence, offset = 16, size = 4
    denormBehaviorIndependence VkShaderFloatControlsIndependence <>
;   TypeKind.ELABORATED
;   name = roundingModeIndependence, type = VkShaderFloatControlsIndependence, offset = 20, size = 4
    roundingModeIndependence VkShaderFloatControlsIndependence <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat16, type = VkBool32, offset = 24, size = 4
    shaderSignedZeroInfNanPreserveFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat32, type = VkBool32, offset = 28, size = 4
    shaderSignedZeroInfNanPreserveFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSignedZeroInfNanPreserveFloat64, type = VkBool32, offset = 32, size = 4
    shaderSignedZeroInfNanPreserveFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat16, type = VkBool32, offset = 36, size = 4
    shaderDenormPreserveFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat32, type = VkBool32, offset = 40, size = 4
    shaderDenormPreserveFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormPreserveFloat64, type = VkBool32, offset = 44, size = 4
    shaderDenormPreserveFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat16, type = VkBool32, offset = 48, size = 4
    shaderDenormFlushToZeroFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat32, type = VkBool32, offset = 52, size = 4
    shaderDenormFlushToZeroFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDenormFlushToZeroFloat64, type = VkBool32, offset = 56, size = 4
    shaderDenormFlushToZeroFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat16, type = VkBool32, offset = 60, size = 4
    shaderRoundingModeRTEFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat32, type = VkBool32, offset = 64, size = 4
    shaderRoundingModeRTEFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTEFloat64, type = VkBool32, offset = 68, size = 4
    shaderRoundingModeRTEFloat64 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat16, type = VkBool32, offset = 72, size = 4
    shaderRoundingModeRTZFloat16 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat32, type = VkBool32, offset = 76, size = 4
    shaderRoundingModeRTZFloat32 VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderRoundingModeRTZFloat64, type = VkBool32, offset = 80, size = 4
    shaderRoundingModeRTZFloat64 VkBool32 <>
VkPhysicalDeviceFloatControlsProperties ends

VkDescriptorSetLayoutBindingFlagsCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = bindingCount, type = uint32_t, offset = 16, size = 4
    bindingCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBindingFlags, type = const VkDescriptorBindingFlags *, offset = 24, size = 8
    pBindingFlags qword ?
VkDescriptorSetLayoutBindingFlagsCreateInfo ends

; TYPEDEF VkDescriptorSetLayoutBindingFlagsCreateInfo = struct VkDescriptorSetLayoutBindingFlagsCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorSetLayoutBindingFlagsCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = bindingCount, type = uint32_t, offset = 16, size = 4
    bindingCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBindingFlags, type = const VkDescriptorBindingFlags *, offset = 24, size = 8
    pBindingFlags qword ?
VkDescriptorSetLayoutBindingFlagsCreateInfo ends

VkPhysicalDeviceDescriptorIndexingFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayDynamicIndexing, type = VkBool32, offset = 16, size = 4
    shaderInputAttachmentArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformTexelBufferArrayDynamicIndexing, type = VkBool32, offset = 20, size = 4
    shaderUniformTexelBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageTexelBufferArrayDynamicIndexing, type = VkBool32, offset = 24, size = 4
    shaderStorageTexelBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformBufferArrayNonUniformIndexing, type = VkBool32, offset = 28, size = 4
    shaderUniformBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSampledImageArrayNonUniformIndexing, type = VkBool32, offset = 32, size = 4
    shaderSampledImageArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageBufferArrayNonUniformIndexing, type = VkBool32, offset = 36, size = 4
    shaderStorageBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageArrayNonUniformIndexing, type = VkBool32, offset = 40, size = 4
    shaderStorageImageArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayNonUniformIndexing, type = VkBool32, offset = 44, size = 4
    shaderInputAttachmentArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformTexelBufferArrayNonUniformIndexing, type = VkBool32, offset = 48, size = 4
    shaderUniformTexelBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageTexelBufferArrayNonUniformIndexing, type = VkBool32, offset = 52, size = 4
    shaderStorageTexelBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUniformBufferUpdateAfterBind, type = VkBool32, offset = 56, size = 4
    descriptorBindingUniformBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingSampledImageUpdateAfterBind, type = VkBool32, offset = 60, size = 4
    descriptorBindingSampledImageUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageImageUpdateAfterBind, type = VkBool32, offset = 64, size = 4
    descriptorBindingStorageImageUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageBufferUpdateAfterBind, type = VkBool32, offset = 68, size = 4
    descriptorBindingStorageBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUniformTexelBufferUpdateAfterBind, type = VkBool32, offset = 72, size = 4
    descriptorBindingUniformTexelBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageTexelBufferUpdateAfterBind, type = VkBool32, offset = 76, size = 4
    descriptorBindingStorageTexelBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUpdateUnusedWhilePending, type = VkBool32, offset = 80, size = 4
    descriptorBindingUpdateUnusedWhilePending VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingPartiallyBound, type = VkBool32, offset = 84, size = 4
    descriptorBindingPartiallyBound VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingVariableDescriptorCount, type = VkBool32, offset = 88, size = 4
    descriptorBindingVariableDescriptorCount VkBool32 <>
;   TypeKind.ELABORATED
;   name = runtimeDescriptorArray, type = VkBool32, offset = 92, size = 4
    runtimeDescriptorArray VkBool32 <>
VkPhysicalDeviceDescriptorIndexingFeatures ends

; TYPEDEF VkPhysicalDeviceDescriptorIndexingFeatures = struct VkPhysicalDeviceDescriptorIndexingFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDescriptorIndexingFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayDynamicIndexing, type = VkBool32, offset = 16, size = 4
    shaderInputAttachmentArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformTexelBufferArrayDynamicIndexing, type = VkBool32, offset = 20, size = 4
    shaderUniformTexelBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageTexelBufferArrayDynamicIndexing, type = VkBool32, offset = 24, size = 4
    shaderStorageTexelBufferArrayDynamicIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformBufferArrayNonUniformIndexing, type = VkBool32, offset = 28, size = 4
    shaderUniformBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSampledImageArrayNonUniformIndexing, type = VkBool32, offset = 32, size = 4
    shaderSampledImageArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageBufferArrayNonUniformIndexing, type = VkBool32, offset = 36, size = 4
    shaderStorageBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageArrayNonUniformIndexing, type = VkBool32, offset = 40, size = 4
    shaderStorageImageArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayNonUniformIndexing, type = VkBool32, offset = 44, size = 4
    shaderInputAttachmentArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderUniformTexelBufferArrayNonUniformIndexing, type = VkBool32, offset = 48, size = 4
    shaderUniformTexelBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageTexelBufferArrayNonUniformIndexing, type = VkBool32, offset = 52, size = 4
    shaderStorageTexelBufferArrayNonUniformIndexing VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUniformBufferUpdateAfterBind, type = VkBool32, offset = 56, size = 4
    descriptorBindingUniformBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingSampledImageUpdateAfterBind, type = VkBool32, offset = 60, size = 4
    descriptorBindingSampledImageUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageImageUpdateAfterBind, type = VkBool32, offset = 64, size = 4
    descriptorBindingStorageImageUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageBufferUpdateAfterBind, type = VkBool32, offset = 68, size = 4
    descriptorBindingStorageBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUniformTexelBufferUpdateAfterBind, type = VkBool32, offset = 72, size = 4
    descriptorBindingUniformTexelBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingStorageTexelBufferUpdateAfterBind, type = VkBool32, offset = 76, size = 4
    descriptorBindingStorageTexelBufferUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingUpdateUnusedWhilePending, type = VkBool32, offset = 80, size = 4
    descriptorBindingUpdateUnusedWhilePending VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingPartiallyBound, type = VkBool32, offset = 84, size = 4
    descriptorBindingPartiallyBound VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingVariableDescriptorCount, type = VkBool32, offset = 88, size = 4
    descriptorBindingVariableDescriptorCount VkBool32 <>
;   TypeKind.ELABORATED
;   name = runtimeDescriptorArray, type = VkBool32, offset = 92, size = 4
    runtimeDescriptorArray VkBool32 <>
VkPhysicalDeviceDescriptorIndexingFeatures ends

VkPhysicalDeviceDescriptorIndexingProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxUpdateAfterBindDescriptorsInAllPools, type = uint32_t, offset = 16, size = 4
    maxUpdateAfterBindDescriptorsInAllPools dword ?
;   TypeKind.ELABORATED
;   name = shaderUniformBufferArrayNonUniformIndexingNative, type = VkBool32, offset = 20, size = 4
    shaderUniformBufferArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSampledImageArrayNonUniformIndexingNative, type = VkBool32, offset = 24, size = 4
    shaderSampledImageArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageBufferArrayNonUniformIndexingNative, type = VkBool32, offset = 28, size = 4
    shaderStorageBufferArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageArrayNonUniformIndexingNative, type = VkBool32, offset = 32, size = 4
    shaderStorageImageArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayNonUniformIndexingNative, type = VkBool32, offset = 36, size = 4
    shaderInputAttachmentArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = robustBufferAccessUpdateAfterBind, type = VkBool32, offset = 40, size = 4
    robustBufferAccessUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = quadDivergentImplicitLod, type = VkBool32, offset = 44, size = 4
    quadDivergentImplicitLod VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindSamplers, type = uint32_t, offset = 48, size = 4
    maxPerStageDescriptorUpdateAfterBindSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindUniformBuffers, type = uint32_t, offset = 52, size = 4
    maxPerStageDescriptorUpdateAfterBindUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindStorageBuffers, type = uint32_t, offset = 56, size = 4
    maxPerStageDescriptorUpdateAfterBindStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindSampledImages, type = uint32_t, offset = 60, size = 4
    maxPerStageDescriptorUpdateAfterBindSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindStorageImages, type = uint32_t, offset = 64, size = 4
    maxPerStageDescriptorUpdateAfterBindStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindInputAttachments, type = uint32_t, offset = 68, size = 4
    maxPerStageDescriptorUpdateAfterBindInputAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageUpdateAfterBindResources, type = uint32_t, offset = 72, size = 4
    maxPerStageUpdateAfterBindResources dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindSamplers, type = uint32_t, offset = 76, size = 4
    maxDescriptorSetUpdateAfterBindSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindUniformBuffers, type = uint32_t, offset = 80, size = 4
    maxDescriptorSetUpdateAfterBindUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindUniformBuffersDynamic, type = uint32_t, offset = 84, size = 4
    maxDescriptorSetUpdateAfterBindUniformBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageBuffers, type = uint32_t, offset = 88, size = 4
    maxDescriptorSetUpdateAfterBindStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageBuffersDynamic, type = uint32_t, offset = 92, size = 4
    maxDescriptorSetUpdateAfterBindStorageBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindSampledImages, type = uint32_t, offset = 96, size = 4
    maxDescriptorSetUpdateAfterBindSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageImages, type = uint32_t, offset = 100, size = 4
    maxDescriptorSetUpdateAfterBindStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindInputAttachments, type = uint32_t, offset = 104, size = 4
    maxDescriptorSetUpdateAfterBindInputAttachments dword ?
VkPhysicalDeviceDescriptorIndexingProperties ends

; TYPEDEF VkPhysicalDeviceDescriptorIndexingProperties = struct VkPhysicalDeviceDescriptorIndexingProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDescriptorIndexingProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxUpdateAfterBindDescriptorsInAllPools, type = uint32_t, offset = 16, size = 4
    maxUpdateAfterBindDescriptorsInAllPools dword ?
;   TypeKind.ELABORATED
;   name = shaderUniformBufferArrayNonUniformIndexingNative, type = VkBool32, offset = 20, size = 4
    shaderUniformBufferArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSampledImageArrayNonUniformIndexingNative, type = VkBool32, offset = 24, size = 4
    shaderSampledImageArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageBufferArrayNonUniformIndexingNative, type = VkBool32, offset = 28, size = 4
    shaderStorageBufferArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderStorageImageArrayNonUniformIndexingNative, type = VkBool32, offset = 32, size = 4
    shaderStorageImageArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderInputAttachmentArrayNonUniformIndexingNative, type = VkBool32, offset = 36, size = 4
    shaderInputAttachmentArrayNonUniformIndexingNative VkBool32 <>
;   TypeKind.ELABORATED
;   name = robustBufferAccessUpdateAfterBind, type = VkBool32, offset = 40, size = 4
    robustBufferAccessUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = quadDivergentImplicitLod, type = VkBool32, offset = 44, size = 4
    quadDivergentImplicitLod VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindSamplers, type = uint32_t, offset = 48, size = 4
    maxPerStageDescriptorUpdateAfterBindSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindUniformBuffers, type = uint32_t, offset = 52, size = 4
    maxPerStageDescriptorUpdateAfterBindUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindStorageBuffers, type = uint32_t, offset = 56, size = 4
    maxPerStageDescriptorUpdateAfterBindStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindSampledImages, type = uint32_t, offset = 60, size = 4
    maxPerStageDescriptorUpdateAfterBindSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindStorageImages, type = uint32_t, offset = 64, size = 4
    maxPerStageDescriptorUpdateAfterBindStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindInputAttachments, type = uint32_t, offset = 68, size = 4
    maxPerStageDescriptorUpdateAfterBindInputAttachments dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageUpdateAfterBindResources, type = uint32_t, offset = 72, size = 4
    maxPerStageUpdateAfterBindResources dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindSamplers, type = uint32_t, offset = 76, size = 4
    maxDescriptorSetUpdateAfterBindSamplers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindUniformBuffers, type = uint32_t, offset = 80, size = 4
    maxDescriptorSetUpdateAfterBindUniformBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindUniformBuffersDynamic, type = uint32_t, offset = 84, size = 4
    maxDescriptorSetUpdateAfterBindUniformBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageBuffers, type = uint32_t, offset = 88, size = 4
    maxDescriptorSetUpdateAfterBindStorageBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageBuffersDynamic, type = uint32_t, offset = 92, size = 4
    maxDescriptorSetUpdateAfterBindStorageBuffersDynamic dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindSampledImages, type = uint32_t, offset = 96, size = 4
    maxDescriptorSetUpdateAfterBindSampledImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindStorageImages, type = uint32_t, offset = 100, size = 4
    maxDescriptorSetUpdateAfterBindStorageImages dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindInputAttachments, type = uint32_t, offset = 104, size = 4
    maxDescriptorSetUpdateAfterBindInputAttachments dword ?
VkPhysicalDeviceDescriptorIndexingProperties ends

VkDescriptorSetVariableDescriptorCountAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorSetCount, type = uint32_t, offset = 16, size = 4
    descriptorSetCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDescriptorCounts, type = const uint32_t *, offset = 24, size = 8
    pDescriptorCounts qword ?
VkDescriptorSetVariableDescriptorCountAllocateInfo ends

; TYPEDEF VkDescriptorSetVariableDescriptorCountAllocateInfo = struct VkDescriptorSetVariableDescriptorCountAllocateInfo, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorSetVariableDescriptorCountAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorSetCount, type = uint32_t, offset = 16, size = 4
    descriptorSetCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDescriptorCounts, type = const uint32_t *, offset = 24, size = 8
    pDescriptorCounts qword ?
VkDescriptorSetVariableDescriptorCountAllocateInfo ends

VkDescriptorSetVariableDescriptorCountLayoutSupport struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxVariableDescriptorCount, type = uint32_t, offset = 16, size = 4
    maxVariableDescriptorCount dword ?
VkDescriptorSetVariableDescriptorCountLayoutSupport ends

; TYPEDEF VkDescriptorSetVariableDescriptorCountLayoutSupport = struct VkDescriptorSetVariableDescriptorCountLayoutSupport, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorSetVariableDescriptorCountLayoutSupport struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxVariableDescriptorCount, type = uint32_t, offset = 16, size = 4
    maxVariableDescriptorCount dword ?
VkDescriptorSetVariableDescriptorCountLayoutSupport ends

VkSubpassDescriptionDepthStencilResolve struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthResolveMode, type = VkResolveModeFlagBits, offset = 16, size = 4
    depthResolveMode VkResolveModeFlagBits <>
;   TypeKind.ELABORATED
;   name = stencilResolveMode, type = VkResolveModeFlagBits, offset = 20, size = 4
    stencilResolveMode VkResolveModeFlagBits <>
;   TypeKind.POINTER
;   name = pDepthStencilResolveAttachment, type = const VkAttachmentReference2 *, offset = 24, size = 8
    pDepthStencilResolveAttachment qword ?
VkSubpassDescriptionDepthStencilResolve ends

; TYPEDEF VkSubpassDescriptionDepthStencilResolve = struct VkSubpassDescriptionDepthStencilResolve, TypeKind.ELABORATED
; remove struct typedef

VkSubpassDescriptionDepthStencilResolve struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthResolveMode, type = VkResolveModeFlagBits, offset = 16, size = 4
    depthResolveMode VkResolveModeFlagBits <>
;   TypeKind.ELABORATED
;   name = stencilResolveMode, type = VkResolveModeFlagBits, offset = 20, size = 4
    stencilResolveMode VkResolveModeFlagBits <>
;   TypeKind.POINTER
;   name = pDepthStencilResolveAttachment, type = const VkAttachmentReference2 *, offset = 24, size = 8
    pDepthStencilResolveAttachment qword ?
VkSubpassDescriptionDepthStencilResolve ends

VkPhysicalDeviceDepthStencilResolveProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportedDepthResolveModes, type = VkResolveModeFlags, offset = 16, size = 4
    supportedDepthResolveModes VkResolveModeFlags <>
;   TypeKind.ELABORATED
;   name = supportedStencilResolveModes, type = VkResolveModeFlags, offset = 20, size = 4
    supportedStencilResolveModes VkResolveModeFlags <>
;   TypeKind.ELABORATED
;   name = independentResolveNone, type = VkBool32, offset = 24, size = 4
    independentResolveNone VkBool32 <>
;   TypeKind.ELABORATED
;   name = independentResolve, type = VkBool32, offset = 28, size = 4
    independentResolve VkBool32 <>
VkPhysicalDeviceDepthStencilResolveProperties ends

; TYPEDEF VkPhysicalDeviceDepthStencilResolveProperties = struct VkPhysicalDeviceDepthStencilResolveProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDepthStencilResolveProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportedDepthResolveModes, type = VkResolveModeFlags, offset = 16, size = 4
    supportedDepthResolveModes VkResolveModeFlags <>
;   TypeKind.ELABORATED
;   name = supportedStencilResolveModes, type = VkResolveModeFlags, offset = 20, size = 4
    supportedStencilResolveModes VkResolveModeFlags <>
;   TypeKind.ELABORATED
;   name = independentResolveNone, type = VkBool32, offset = 24, size = 4
    independentResolveNone VkBool32 <>
;   TypeKind.ELABORATED
;   name = independentResolve, type = VkBool32, offset = 28, size = 4
    independentResolve VkBool32 <>
VkPhysicalDeviceDepthStencilResolveProperties ends

VkPhysicalDeviceScalarBlockLayoutFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = scalarBlockLayout, type = VkBool32, offset = 16, size = 4
    scalarBlockLayout VkBool32 <>
VkPhysicalDeviceScalarBlockLayoutFeatures ends

; TYPEDEF VkPhysicalDeviceScalarBlockLayoutFeatures = struct VkPhysicalDeviceScalarBlockLayoutFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceScalarBlockLayoutFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = scalarBlockLayout, type = VkBool32, offset = 16, size = 4
    scalarBlockLayout VkBool32 <>
VkPhysicalDeviceScalarBlockLayoutFeatures ends

VkImageStencilUsageCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stencilUsage, type = VkImageUsageFlags, offset = 16, size = 4
    stencilUsage VkImageUsageFlags <>
VkImageStencilUsageCreateInfo ends

; TYPEDEF VkImageStencilUsageCreateInfo = struct VkImageStencilUsageCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkImageStencilUsageCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stencilUsage, type = VkImageUsageFlags, offset = 16, size = 4
    stencilUsage VkImageUsageFlags <>
VkImageStencilUsageCreateInfo ends

VkSamplerReductionModeCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = reductionMode, type = VkSamplerReductionMode, offset = 16, size = 4
    reductionMode VkSamplerReductionMode <>
VkSamplerReductionModeCreateInfo ends

; TYPEDEF VkSamplerReductionModeCreateInfo = struct VkSamplerReductionModeCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkSamplerReductionModeCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = reductionMode, type = VkSamplerReductionMode, offset = 16, size = 4
    reductionMode VkSamplerReductionMode <>
VkSamplerReductionModeCreateInfo ends

VkPhysicalDeviceSamplerFilterMinmaxProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = filterMinmaxSingleComponentFormats, type = VkBool32, offset = 16, size = 4
    filterMinmaxSingleComponentFormats VkBool32 <>
;   TypeKind.ELABORATED
;   name = filterMinmaxImageComponentMapping, type = VkBool32, offset = 20, size = 4
    filterMinmaxImageComponentMapping VkBool32 <>
VkPhysicalDeviceSamplerFilterMinmaxProperties ends

; TYPEDEF VkPhysicalDeviceSamplerFilterMinmaxProperties = struct VkPhysicalDeviceSamplerFilterMinmaxProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSamplerFilterMinmaxProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = filterMinmaxSingleComponentFormats, type = VkBool32, offset = 16, size = 4
    filterMinmaxSingleComponentFormats VkBool32 <>
;   TypeKind.ELABORATED
;   name = filterMinmaxImageComponentMapping, type = VkBool32, offset = 20, size = 4
    filterMinmaxImageComponentMapping VkBool32 <>
VkPhysicalDeviceSamplerFilterMinmaxProperties ends

VkPhysicalDeviceVulkanMemoryModelFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vulkanMemoryModel, type = VkBool32, offset = 16, size = 4
    vulkanMemoryModel VkBool32 <>
;   TypeKind.ELABORATED
;   name = vulkanMemoryModelDeviceScope, type = VkBool32, offset = 20, size = 4
    vulkanMemoryModelDeviceScope VkBool32 <>
;   TypeKind.ELABORATED
;   name = vulkanMemoryModelAvailabilityVisibilityChains, type = VkBool32, offset = 24, size = 4
    vulkanMemoryModelAvailabilityVisibilityChains VkBool32 <>
VkPhysicalDeviceVulkanMemoryModelFeatures ends

; TYPEDEF VkPhysicalDeviceVulkanMemoryModelFeatures = struct VkPhysicalDeviceVulkanMemoryModelFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVulkanMemoryModelFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vulkanMemoryModel, type = VkBool32, offset = 16, size = 4
    vulkanMemoryModel VkBool32 <>
;   TypeKind.ELABORATED
;   name = vulkanMemoryModelDeviceScope, type = VkBool32, offset = 20, size = 4
    vulkanMemoryModelDeviceScope VkBool32 <>
;   TypeKind.ELABORATED
;   name = vulkanMemoryModelAvailabilityVisibilityChains, type = VkBool32, offset = 24, size = 4
    vulkanMemoryModelAvailabilityVisibilityChains VkBool32 <>
VkPhysicalDeviceVulkanMemoryModelFeatures ends

VkPhysicalDeviceImagelessFramebufferFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imagelessFramebuffer, type = VkBool32, offset = 16, size = 4
    imagelessFramebuffer VkBool32 <>
VkPhysicalDeviceImagelessFramebufferFeatures ends

; TYPEDEF VkPhysicalDeviceImagelessFramebufferFeatures = struct VkPhysicalDeviceImagelessFramebufferFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImagelessFramebufferFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imagelessFramebuffer, type = VkBool32, offset = 16, size = 4
    imagelessFramebuffer VkBool32 <>
VkPhysicalDeviceImagelessFramebufferFeatures ends

VkFramebufferAttachmentImageInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkImageCreateFlags, offset = 16, size = 4
    flags dword ?
;   TypeKind.ELABORATED
;   name = usage, type = VkImageUsageFlags, offset = 20, size = 4
    usage VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 24, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 28, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 32, size = 4
    layerCount dword ?
;   TypeKind.ELABORATED
;   name = viewFormatCount, type = uint32_t, offset = 36, size = 4
    viewFormatCount dword ?
;   TypeKind.POINTER
;   name = pViewFormats, type = const VkFormat *, offset = 40, size = 8
    pViewFormats qword ?
VkFramebufferAttachmentImageInfo ends

; TYPEDEF VkFramebufferAttachmentImageInfo = struct VkFramebufferAttachmentImageInfo, TypeKind.ELABORATED
; remove struct typedef

VkFramebufferAttachmentImageInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkImageCreateFlags, offset = 16, size = 4
    flags dword ?
;   TypeKind.ELABORATED
;   name = usage, type = VkImageUsageFlags, offset = 20, size = 4
    usage VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 24, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 28, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 32, size = 4
    layerCount dword ?
;   TypeKind.ELABORATED
;   name = viewFormatCount, type = uint32_t, offset = 36, size = 4
    viewFormatCount dword ?
;   TypeKind.POINTER
;   name = pViewFormats, type = const VkFormat *, offset = 40, size = 8
    pViewFormats qword ?
VkFramebufferAttachmentImageInfo ends

VkFramebufferAttachmentsCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentImageInfoCount, type = uint32_t, offset = 16, size = 4
    attachmentImageInfoCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAttachmentImageInfos, type = const VkFramebufferAttachmentImageInfo *, offset = 24, size = 8
    pAttachmentImageInfos qword ?
VkFramebufferAttachmentsCreateInfo ends

; TYPEDEF VkFramebufferAttachmentsCreateInfo = struct VkFramebufferAttachmentsCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkFramebufferAttachmentsCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentImageInfoCount, type = uint32_t, offset = 16, size = 4
    attachmentImageInfoCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAttachmentImageInfos, type = const VkFramebufferAttachmentImageInfo *, offset = 24, size = 8
    pAttachmentImageInfos qword ?
VkFramebufferAttachmentsCreateInfo ends

VkRenderPassAttachmentBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 16, size = 4
    attachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAttachments, type = const VkImageView *, offset = 24, size = 8
    pAttachments qword ?
VkRenderPassAttachmentBeginInfo ends

; TYPEDEF VkRenderPassAttachmentBeginInfo = struct VkRenderPassAttachmentBeginInfo, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassAttachmentBeginInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 16, size = 4
    attachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAttachments, type = const VkImageView *, offset = 24, size = 8
    pAttachments qword ?
VkRenderPassAttachmentBeginInfo ends

VkPhysicalDeviceUniformBufferStandardLayoutFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = uniformBufferStandardLayout, type = VkBool32, offset = 16, size = 4
    uniformBufferStandardLayout VkBool32 <>
VkPhysicalDeviceUniformBufferStandardLayoutFeatures ends

; TYPEDEF VkPhysicalDeviceUniformBufferStandardLayoutFeatures = struct VkPhysicalDeviceUniformBufferStandardLayoutFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceUniformBufferStandardLayoutFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = uniformBufferStandardLayout, type = VkBool32, offset = 16, size = 4
    uniformBufferStandardLayout VkBool32 <>
VkPhysicalDeviceUniformBufferStandardLayoutFeatures ends

VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSubgroupExtendedTypes, type = VkBool32, offset = 16, size = 4
    shaderSubgroupExtendedTypes VkBool32 <>
VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures ends

; TYPEDEF VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures = struct VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSubgroupExtendedTypes, type = VkBool32, offset = 16, size = 4
    shaderSubgroupExtendedTypes VkBool32 <>
VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures ends

VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = separateDepthStencilLayouts, type = VkBool32, offset = 16, size = 4
    separateDepthStencilLayouts VkBool32 <>
VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures ends

; TYPEDEF VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures = struct VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = separateDepthStencilLayouts, type = VkBool32, offset = 16, size = 4
    separateDepthStencilLayouts VkBool32 <>
VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures ends

VkAttachmentReferenceStencilLayout struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stencilLayout, type = VkImageLayout, offset = 16, size = 4
    stencilLayout VkImageLayout <>
VkAttachmentReferenceStencilLayout ends

; TYPEDEF VkAttachmentReferenceStencilLayout = struct VkAttachmentReferenceStencilLayout, TypeKind.ELABORATED
; remove struct typedef

VkAttachmentReferenceStencilLayout struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stencilLayout, type = VkImageLayout, offset = 16, size = 4
    stencilLayout VkImageLayout <>
VkAttachmentReferenceStencilLayout ends

VkAttachmentDescriptionStencilLayout struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stencilInitialLayout, type = VkImageLayout, offset = 16, size = 4
    stencilInitialLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = stencilFinalLayout, type = VkImageLayout, offset = 20, size = 4
    stencilFinalLayout VkImageLayout <>
VkAttachmentDescriptionStencilLayout ends

; TYPEDEF VkAttachmentDescriptionStencilLayout = struct VkAttachmentDescriptionStencilLayout, TypeKind.ELABORATED
; remove struct typedef

VkAttachmentDescriptionStencilLayout struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stencilInitialLayout, type = VkImageLayout, offset = 16, size = 4
    stencilInitialLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = stencilFinalLayout, type = VkImageLayout, offset = 20, size = 4
    stencilFinalLayout VkImageLayout <>
VkAttachmentDescriptionStencilLayout ends

VkPhysicalDeviceHostQueryResetFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hostQueryReset, type = VkBool32, offset = 16, size = 4
    hostQueryReset VkBool32 <>
VkPhysicalDeviceHostQueryResetFeatures ends

; TYPEDEF VkPhysicalDeviceHostQueryResetFeatures = struct VkPhysicalDeviceHostQueryResetFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceHostQueryResetFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hostQueryReset, type = VkBool32, offset = 16, size = 4
    hostQueryReset VkBool32 <>
VkPhysicalDeviceHostQueryResetFeatures ends

VkPhysicalDeviceTimelineSemaphoreFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = timelineSemaphore, type = VkBool32, offset = 16, size = 4
    timelineSemaphore VkBool32 <>
VkPhysicalDeviceTimelineSemaphoreFeatures ends

; TYPEDEF VkPhysicalDeviceTimelineSemaphoreFeatures = struct VkPhysicalDeviceTimelineSemaphoreFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceTimelineSemaphoreFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = timelineSemaphore, type = VkBool32, offset = 16, size = 4
    timelineSemaphore VkBool32 <>
VkPhysicalDeviceTimelineSemaphoreFeatures ends

VkPhysicalDeviceTimelineSemaphoreProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxTimelineSemaphoreValueDifference, type = uint64_t, offset = 16, size = 8
    maxTimelineSemaphoreValueDifference qword ?
VkPhysicalDeviceTimelineSemaphoreProperties ends

; TYPEDEF VkPhysicalDeviceTimelineSemaphoreProperties = struct VkPhysicalDeviceTimelineSemaphoreProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceTimelineSemaphoreProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxTimelineSemaphoreValueDifference, type = uint64_t, offset = 16, size = 8
    maxTimelineSemaphoreValueDifference qword ?
VkPhysicalDeviceTimelineSemaphoreProperties ends

VkSemaphoreTypeCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = semaphoreType, type = VkSemaphoreType, offset = 16, size = 4
    semaphoreType VkSemaphoreType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = initialValue, type = uint64_t, offset = 24, size = 8
    initialValue qword ?
VkSemaphoreTypeCreateInfo ends

; TYPEDEF VkSemaphoreTypeCreateInfo = struct VkSemaphoreTypeCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkSemaphoreTypeCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = semaphoreType, type = VkSemaphoreType, offset = 16, size = 4
    semaphoreType VkSemaphoreType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = initialValue, type = uint64_t, offset = 24, size = 8
    initialValue qword ?
VkSemaphoreTypeCreateInfo ends

VkTimelineSemaphoreSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = waitSemaphoreValueCount, type = uint32_t, offset = 16, size = 4
    waitSemaphoreValueCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pWaitSemaphoreValues, type = const uint64_t *, offset = 24, size = 8
    pWaitSemaphoreValues qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphoreValueCount, type = uint32_t, offset = 32, size = 4
    signalSemaphoreValueCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSignalSemaphoreValues, type = const uint64_t *, offset = 40, size = 8
    pSignalSemaphoreValues qword ?
VkTimelineSemaphoreSubmitInfo ends

; TYPEDEF VkTimelineSemaphoreSubmitInfo = struct VkTimelineSemaphoreSubmitInfo, TypeKind.ELABORATED
; remove struct typedef

VkTimelineSemaphoreSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = waitSemaphoreValueCount, type = uint32_t, offset = 16, size = 4
    waitSemaphoreValueCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pWaitSemaphoreValues, type = const uint64_t *, offset = 24, size = 8
    pWaitSemaphoreValues qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphoreValueCount, type = uint32_t, offset = 32, size = 4
    signalSemaphoreValueCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSignalSemaphoreValues, type = const uint64_t *, offset = 40, size = 8
    pSignalSemaphoreValues qword ?
VkTimelineSemaphoreSubmitInfo ends

VkSemaphoreWaitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSemaphoreWaitFlags, offset = 16, size = 4
    flags VkSemaphoreWaitFlags <>
;   TypeKind.ELABORATED
;   name = semaphoreCount, type = uint32_t, offset = 20, size = 4
    semaphoreCount dword ?
;   TypeKind.POINTER
;   name = pSemaphores, type = const VkSemaphore *, offset = 24, size = 8
    pSemaphores qword ?
;   TypeKind.POINTER
;   name = pValues, type = const uint64_t *, offset = 32, size = 8
    pValues qword ?
VkSemaphoreWaitInfo ends

; TYPEDEF VkSemaphoreWaitInfo = struct VkSemaphoreWaitInfo, TypeKind.ELABORATED
; remove struct typedef

VkSemaphoreWaitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSemaphoreWaitFlags, offset = 16, size = 4
    flags VkSemaphoreWaitFlags <>
;   TypeKind.ELABORATED
;   name = semaphoreCount, type = uint32_t, offset = 20, size = 4
    semaphoreCount dword ?
;   TypeKind.POINTER
;   name = pSemaphores, type = const VkSemaphore *, offset = 24, size = 8
    pSemaphores qword ?
;   TypeKind.POINTER
;   name = pValues, type = const uint64_t *, offset = 32, size = 8
    pValues qword ?
VkSemaphoreWaitInfo ends

VkSemaphoreSignalInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = semaphore, type = VkSemaphore, offset = 16, size = 8
    semaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = value, type = uint64_t, offset = 24, size = 8
    value qword ?
VkSemaphoreSignalInfo ends

; TYPEDEF VkSemaphoreSignalInfo = struct VkSemaphoreSignalInfo, TypeKind.ELABORATED
; remove struct typedef

VkSemaphoreSignalInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = semaphore, type = VkSemaphore, offset = 16, size = 8
    semaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = value, type = uint64_t, offset = 24, size = 8
    value qword ?
VkSemaphoreSignalInfo ends

VkPhysicalDeviceBufferDeviceAddressFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = bufferDeviceAddress, type = VkBool32, offset = 16, size = 4
    bufferDeviceAddress VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressCaptureReplay, type = VkBool32, offset = 20, size = 4
    bufferDeviceAddressCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressMultiDevice, type = VkBool32, offset = 24, size = 4
    bufferDeviceAddressMultiDevice VkBool32 <>
VkPhysicalDeviceBufferDeviceAddressFeatures ends

; TYPEDEF VkPhysicalDeviceBufferDeviceAddressFeatures = struct VkPhysicalDeviceBufferDeviceAddressFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceBufferDeviceAddressFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = bufferDeviceAddress, type = VkBool32, offset = 16, size = 4
    bufferDeviceAddress VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressCaptureReplay, type = VkBool32, offset = 20, size = 4
    bufferDeviceAddressCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressMultiDevice, type = VkBool32, offset = 24, size = 4
    bufferDeviceAddressMultiDevice VkBool32 <>
VkPhysicalDeviceBufferDeviceAddressFeatures ends

VkBufferDeviceAddressInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
VkBufferDeviceAddressInfo ends

; TYPEDEF VkBufferDeviceAddressInfo = struct VkBufferDeviceAddressInfo, TypeKind.ELABORATED
; remove struct typedef

VkBufferDeviceAddressInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
VkBufferDeviceAddressInfo ends

VkBufferOpaqueCaptureAddressCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = opaqueCaptureAddress, type = uint64_t, offset = 16, size = 8
    opaqueCaptureAddress qword ?
VkBufferOpaqueCaptureAddressCreateInfo ends

; TYPEDEF VkBufferOpaqueCaptureAddressCreateInfo = struct VkBufferOpaqueCaptureAddressCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkBufferOpaqueCaptureAddressCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = opaqueCaptureAddress, type = uint64_t, offset = 16, size = 8
    opaqueCaptureAddress qword ?
VkBufferOpaqueCaptureAddressCreateInfo ends

VkMemoryOpaqueCaptureAddressAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = opaqueCaptureAddress, type = uint64_t, offset = 16, size = 8
    opaqueCaptureAddress qword ?
VkMemoryOpaqueCaptureAddressAllocateInfo ends

; TYPEDEF VkMemoryOpaqueCaptureAddressAllocateInfo = struct VkMemoryOpaqueCaptureAddressAllocateInfo, TypeKind.ELABORATED
; remove struct typedef

VkMemoryOpaqueCaptureAddressAllocateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = opaqueCaptureAddress, type = uint64_t, offset = 16, size = 8
    opaqueCaptureAddress qword ?
VkMemoryOpaqueCaptureAddressAllocateInfo ends

VkDeviceMemoryOpaqueCaptureAddressInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 16, size = 8
    memory VkDeviceMemory <>
VkDeviceMemoryOpaqueCaptureAddressInfo ends

; TYPEDEF VkDeviceMemoryOpaqueCaptureAddressInfo = struct VkDeviceMemoryOpaqueCaptureAddressInfo, TypeKind.ELABORATED
; remove struct typedef

VkDeviceMemoryOpaqueCaptureAddressInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 16, size = 8
    memory VkDeviceMemory <>
VkDeviceMemoryOpaqueCaptureAddressInfo ends

; TYPEDEF PFN_vkCmdDrawIndirectCount = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawIndirectCount typedef qword

; TYPEDEF PFN_vkCmdDrawIndexedIndirectCount = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawIndexedIndirectCount typedef qword

; TYPEDEF PFN_vkCreateRenderPass2 = VkResult (*)(VkDevice, const VkRenderPassCreateInfo2 *, const VkAllocationCallbacks *, VkRenderPass *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateRenderPass2 typedef qword

; TYPEDEF PFN_vkCmdBeginRenderPass2 = void (*)(VkCommandBuffer, const VkRenderPassBeginInfo *, const VkSubpassBeginInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBeginRenderPass2 typedef qword

; TYPEDEF PFN_vkCmdNextSubpass2 = void (*)(VkCommandBuffer, const VkSubpassBeginInfo *, const VkSubpassEndInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdNextSubpass2 typedef qword

; TYPEDEF PFN_vkCmdEndRenderPass2 = void (*)(VkCommandBuffer, const VkSubpassEndInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEndRenderPass2 typedef qword

; TYPEDEF PFN_vkResetQueryPool = void (*)(VkDevice, VkQueryPool, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkResetQueryPool typedef qword

; TYPEDEF PFN_vkGetSemaphoreCounterValue = VkResult (*)(VkDevice, VkSemaphore, uint64_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetSemaphoreCounterValue typedef qword

; TYPEDEF PFN_vkWaitSemaphores = VkResult (*)(VkDevice, const VkSemaphoreWaitInfo *, uint64_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkWaitSemaphores typedef qword

; TYPEDEF PFN_vkSignalSemaphore = VkResult (*)(VkDevice, const VkSemaphoreSignalInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSignalSemaphore typedef qword

; TYPEDEF PFN_vkGetBufferDeviceAddress = VkDeviceAddress (*)(VkDevice, const VkBufferDeviceAddressInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetBufferDeviceAddress typedef qword

; TYPEDEF PFN_vkGetBufferOpaqueCaptureAddress = uint64_t (*)(VkDevice, const VkBufferDeviceAddressInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetBufferOpaqueCaptureAddress typedef qword

; TYPEDEF PFN_vkGetDeviceMemoryOpaqueCaptureAddress = uint64_t (*)(VkDevice, const VkDeviceMemoryOpaqueCaptureAddressInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceMemoryOpaqueCaptureAddress typedef qword

; void vkCmdDrawIndirectCount(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride)
vkCmdDrawIndirectCount qword ?

; void vkCmdDrawIndexedIndirectCount(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride)
vkCmdDrawIndexedIndirectCount qword ?

; VkResult vkCreateRenderPass2(VkDevice device, const VkRenderPassCreateInfo2 * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkRenderPass * pRenderPass)
vkCreateRenderPass2 qword ?

; void vkCmdBeginRenderPass2(VkCommandBuffer commandBuffer, const VkRenderPassBeginInfo * pRenderPassBegin, const VkSubpassBeginInfo * pSubpassBeginInfo)
vkCmdBeginRenderPass2 qword ?

; void vkCmdNextSubpass2(VkCommandBuffer commandBuffer, const VkSubpassBeginInfo * pSubpassBeginInfo, const VkSubpassEndInfo * pSubpassEndInfo)
vkCmdNextSubpass2 qword ?

; void vkCmdEndRenderPass2(VkCommandBuffer commandBuffer, const VkSubpassEndInfo * pSubpassEndInfo)
vkCmdEndRenderPass2 qword ?

; void vkResetQueryPool(VkDevice device, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount)
vkResetQueryPool qword ?

; VkResult vkGetSemaphoreCounterValue(VkDevice device, VkSemaphore semaphore, uint64_t * pValue)
vkGetSemaphoreCounterValue qword ?

; VkResult vkWaitSemaphores(VkDevice device, const VkSemaphoreWaitInfo * pWaitInfo, uint64_t timeout)
vkWaitSemaphores qword ?

; VkResult vkSignalSemaphore(VkDevice device, const VkSemaphoreSignalInfo * pSignalInfo)
vkSignalSemaphore qword ?

; VkDeviceAddress vkGetBufferDeviceAddress(VkDevice device, const VkBufferDeviceAddressInfo * pInfo)
vkGetBufferDeviceAddress qword ?

; uint64_t vkGetBufferOpaqueCaptureAddress(VkDevice device, const VkBufferDeviceAddressInfo * pInfo)
vkGetBufferOpaqueCaptureAddress qword ?

; uint64_t vkGetDeviceMemoryOpaqueCaptureAddress(VkDevice device, const VkDeviceMemoryOpaqueCaptureAddressInfo * pInfo)
vkGetDeviceMemoryOpaqueCaptureAddress qword ?

; TYPEDEF VkFlags64 = uint64_t, TypeKind.ELABORATED
VkFlags64 typedef qword

; TYPEDEF VkPrivateDataSlot = struct VkPrivateDataSlot_T *, TypeKind.POINTER
VkPrivateDataSlot typedef qword

; enum VkPipelineCreationFeedbackFlagBits {
    VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT equ 1
    VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT equ 2
    VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT equ 4
    VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT equ 1
    VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT equ 2
    VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT equ 4
    VK_PIPELINE_CREATION_FEEDBACK_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineCreationFeedbackFlagBits = enum VkPipelineCreationFeedbackFlagBits, TypeKind.ELABORATED
VkPipelineCreationFeedbackFlagBits typedef dword

; enum VkPipelineCreationFeedbackFlagBits {
    VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT equ 1
    VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT equ 2
    VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT equ 4
    VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT equ 1
    VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT equ 2
    VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT equ 4
    VK_PIPELINE_CREATION_FEEDBACK_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkPipelineCreationFeedbackFlags = VkFlags, TypeKind.ELABORATED
VkPipelineCreationFeedbackFlags typedef dword

; enum VkToolPurposeFlagBits {
    VK_TOOL_PURPOSE_VALIDATION_BIT equ 1
    VK_TOOL_PURPOSE_PROFILING_BIT equ 2
    VK_TOOL_PURPOSE_TRACING_BIT equ 4
    VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT equ 8
    VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT equ 16
    VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT equ 32
    VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT equ 64
    VK_TOOL_PURPOSE_VALIDATION_BIT_EXT equ 1
    VK_TOOL_PURPOSE_PROFILING_BIT_EXT equ 2
    VK_TOOL_PURPOSE_TRACING_BIT_EXT equ 4
    VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT equ 8
    VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT equ 16
    VK_TOOL_PURPOSE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkToolPurposeFlagBits = enum VkToolPurposeFlagBits, TypeKind.ELABORATED
VkToolPurposeFlagBits typedef dword

; enum VkToolPurposeFlagBits {
    VK_TOOL_PURPOSE_VALIDATION_BIT equ 1
    VK_TOOL_PURPOSE_PROFILING_BIT equ 2
    VK_TOOL_PURPOSE_TRACING_BIT equ 4
    VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT equ 8
    VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT equ 16
    VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT equ 32
    VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT equ 64
    VK_TOOL_PURPOSE_VALIDATION_BIT_EXT equ 1
    VK_TOOL_PURPOSE_PROFILING_BIT_EXT equ 2
    VK_TOOL_PURPOSE_TRACING_BIT_EXT equ 4
    VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT equ 8
    VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT equ 16
    VK_TOOL_PURPOSE_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkToolPurposeFlags = VkFlags, TypeKind.ELABORATED
VkToolPurposeFlags typedef dword

; TYPEDEF VkPrivateDataSlotCreateFlags = VkFlags, TypeKind.ELABORATED
VkPrivateDataSlotCreateFlags typedef dword

; TYPEDEF VkPipelineStageFlags2 = VkFlags64, TypeKind.ELABORATED
VkPipelineStageFlags2 typedef dword

; TYPEDEF VkPipelineStageFlagBits2 = VkFlags64, TypeKind.ELABORATED
VkPipelineStageFlagBits2 typedef dword

; TYPEDEF VkAccessFlags2 = VkFlags64, TypeKind.ELABORATED
VkAccessFlags2 typedef dword

; TYPEDEF VkAccessFlagBits2 = VkFlags64, TypeKind.ELABORATED
VkAccessFlagBits2 typedef dword

; enum VkSubmitFlagBits {
    VK_SUBMIT_PROTECTED_BIT equ 1
    VK_SUBMIT_PROTECTED_BIT_KHR equ 1
    VK_SUBMIT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSubmitFlagBits = enum VkSubmitFlagBits, TypeKind.ELABORATED
VkSubmitFlagBits typedef dword

; enum VkSubmitFlagBits {
    VK_SUBMIT_PROTECTED_BIT equ 1
    VK_SUBMIT_PROTECTED_BIT_KHR equ 1
    VK_SUBMIT_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkSubmitFlags = VkFlags, TypeKind.ELABORATED
VkSubmitFlags typedef dword

; enum VkRenderingFlagBits {
    VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT equ 1
    VK_RENDERING_SUSPENDING_BIT equ 2
    VK_RENDERING_RESUMING_BIT equ 4
    VK_RENDERING_CONTENTS_INLINE_BIT_EXT equ 16
    VK_RENDERING_ENABLE_LEGACY_DITHERING_BIT_EXT equ 8
    VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR equ 1
    VK_RENDERING_SUSPENDING_BIT_KHR equ 2
    VK_RENDERING_RESUMING_BIT_KHR equ 4
    VK_RENDERING_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkRenderingFlagBits = enum VkRenderingFlagBits, TypeKind.ELABORATED
VkRenderingFlagBits typedef dword

; enum VkRenderingFlagBits {
    VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT equ 1
    VK_RENDERING_SUSPENDING_BIT equ 2
    VK_RENDERING_RESUMING_BIT equ 4
    VK_RENDERING_CONTENTS_INLINE_BIT_EXT equ 16
    VK_RENDERING_ENABLE_LEGACY_DITHERING_BIT_EXT equ 8
    VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR equ 1
    VK_RENDERING_SUSPENDING_BIT_KHR equ 2
    VK_RENDERING_RESUMING_BIT_KHR equ 4
    VK_RENDERING_FLAG_BITS_MAX_ENUM equ 2147483647
; }

; TYPEDEF VkRenderingFlags = VkFlags, TypeKind.ELABORATED
VkRenderingFlags typedef dword

; TYPEDEF VkFormatFeatureFlags2 = VkFlags64, TypeKind.ELABORATED
VkFormatFeatureFlags2 typedef dword

; TYPEDEF VkFormatFeatureFlagBits2 = VkFlags64, TypeKind.ELABORATED
VkFormatFeatureFlagBits2 typedef dword

VkPhysicalDeviceVulkan13Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = robustImageAccess, type = VkBool32, offset = 16, size = 4
    robustImageAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = inlineUniformBlock, type = VkBool32, offset = 20, size = 4
    inlineUniformBlock VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingInlineUniformBlockUpdateAfterBind, type = VkBool32, offset = 24, size = 4
    descriptorBindingInlineUniformBlockUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = pipelineCreationCacheControl, type = VkBool32, offset = 28, size = 4
    pipelineCreationCacheControl VkBool32 <>
;   TypeKind.ELABORATED
;   name = privateData, type = VkBool32, offset = 32, size = 4
    privateData VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDemoteToHelperInvocation, type = VkBool32, offset = 36, size = 4
    shaderDemoteToHelperInvocation VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTerminateInvocation, type = VkBool32, offset = 40, size = 4
    shaderTerminateInvocation VkBool32 <>
;   TypeKind.ELABORATED
;   name = subgroupSizeControl, type = VkBool32, offset = 44, size = 4
    subgroupSizeControl VkBool32 <>
;   TypeKind.ELABORATED
;   name = computeFullSubgroups, type = VkBool32, offset = 48, size = 4
    computeFullSubgroups VkBool32 <>
;   TypeKind.ELABORATED
;   name = synchronization2, type = VkBool32, offset = 52, size = 4
    synchronization2 VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureCompressionASTC_HDR, type = VkBool32, offset = 56, size = 4
    textureCompressionASTC_HDR VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderZeroInitializeWorkgroupMemory, type = VkBool32, offset = 60, size = 4
    shaderZeroInitializeWorkgroupMemory VkBool32 <>
;   TypeKind.ELABORATED
;   name = dynamicRendering, type = VkBool32, offset = 64, size = 4
    dynamicRendering VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderIntegerDotProduct, type = VkBool32, offset = 68, size = 4
    shaderIntegerDotProduct VkBool32 <>
;   TypeKind.ELABORATED
;   name = maintenance4, type = VkBool32, offset = 72, size = 4
    maintenance4 VkBool32 <>
VkPhysicalDeviceVulkan13Features ends

; TYPEDEF VkPhysicalDeviceVulkan13Features = struct VkPhysicalDeviceVulkan13Features, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVulkan13Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = robustImageAccess, type = VkBool32, offset = 16, size = 4
    robustImageAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = inlineUniformBlock, type = VkBool32, offset = 20, size = 4
    inlineUniformBlock VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingInlineUniformBlockUpdateAfterBind, type = VkBool32, offset = 24, size = 4
    descriptorBindingInlineUniformBlockUpdateAfterBind VkBool32 <>
;   TypeKind.ELABORATED
;   name = pipelineCreationCacheControl, type = VkBool32, offset = 28, size = 4
    pipelineCreationCacheControl VkBool32 <>
;   TypeKind.ELABORATED
;   name = privateData, type = VkBool32, offset = 32, size = 4
    privateData VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDemoteToHelperInvocation, type = VkBool32, offset = 36, size = 4
    shaderDemoteToHelperInvocation VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTerminateInvocation, type = VkBool32, offset = 40, size = 4
    shaderTerminateInvocation VkBool32 <>
;   TypeKind.ELABORATED
;   name = subgroupSizeControl, type = VkBool32, offset = 44, size = 4
    subgroupSizeControl VkBool32 <>
;   TypeKind.ELABORATED
;   name = computeFullSubgroups, type = VkBool32, offset = 48, size = 4
    computeFullSubgroups VkBool32 <>
;   TypeKind.ELABORATED
;   name = synchronization2, type = VkBool32, offset = 52, size = 4
    synchronization2 VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureCompressionASTC_HDR, type = VkBool32, offset = 56, size = 4
    textureCompressionASTC_HDR VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderZeroInitializeWorkgroupMemory, type = VkBool32, offset = 60, size = 4
    shaderZeroInitializeWorkgroupMemory VkBool32 <>
;   TypeKind.ELABORATED
;   name = dynamicRendering, type = VkBool32, offset = 64, size = 4
    dynamicRendering VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderIntegerDotProduct, type = VkBool32, offset = 68, size = 4
    shaderIntegerDotProduct VkBool32 <>
;   TypeKind.ELABORATED
;   name = maintenance4, type = VkBool32, offset = 72, size = 4
    maintenance4 VkBool32 <>
VkPhysicalDeviceVulkan13Features ends

VkPhysicalDeviceVulkan13Properties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minSubgroupSize, type = uint32_t, offset = 16, size = 4
    minSubgroupSize dword ?
;   TypeKind.ELABORATED
;   name = maxSubgroupSize, type = uint32_t, offset = 20, size = 4
    maxSubgroupSize dword ?
;   TypeKind.ELABORATED
;   name = maxComputeWorkgroupSubgroups, type = uint32_t, offset = 24, size = 4
    maxComputeWorkgroupSubgroups dword ?
;   TypeKind.ELABORATED
;   name = requiredSubgroupSizeStages, type = VkShaderStageFlags, offset = 28, size = 4
    requiredSubgroupSizeStages VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = maxInlineUniformBlockSize, type = uint32_t, offset = 32, size = 4
    maxInlineUniformBlockSize dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorInlineUniformBlocks, type = uint32_t, offset = 36, size = 4
    maxPerStageDescriptorInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks, type = uint32_t, offset = 40, size = 4
    maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetInlineUniformBlocks, type = uint32_t, offset = 44, size = 4
    maxDescriptorSetInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindInlineUniformBlocks, type = uint32_t, offset = 48, size = 4
    maxDescriptorSetUpdateAfterBindInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxInlineUniformTotalSize, type = uint32_t, offset = 52, size = 4
    maxInlineUniformTotalSize dword ?
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitUnsignedAccelerated, type = VkBool32, offset = 56, size = 4
    integerDotProduct8BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitSignedAccelerated, type = VkBool32, offset = 60, size = 4
    integerDotProduct8BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitMixedSignednessAccelerated, type = VkBool32, offset = 64, size = 4
    integerDotProduct8BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedUnsignedAccelerated, type = VkBool32, offset = 68, size = 4
    integerDotProduct4x8BitPackedUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedSignedAccelerated, type = VkBool32, offset = 72, size = 4
    integerDotProduct4x8BitPackedSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedMixedSignednessAccelerated, type = VkBool32, offset = 76, size = 4
    integerDotProduct4x8BitPackedMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitUnsignedAccelerated, type = VkBool32, offset = 80, size = 4
    integerDotProduct16BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitSignedAccelerated, type = VkBool32, offset = 84, size = 4
    integerDotProduct16BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitMixedSignednessAccelerated, type = VkBool32, offset = 88, size = 4
    integerDotProduct16BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitUnsignedAccelerated, type = VkBool32, offset = 92, size = 4
    integerDotProduct32BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitSignedAccelerated, type = VkBool32, offset = 96, size = 4
    integerDotProduct32BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitMixedSignednessAccelerated, type = VkBool32, offset = 100, size = 4
    integerDotProduct32BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitUnsignedAccelerated, type = VkBool32, offset = 104, size = 4
    integerDotProduct64BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitSignedAccelerated, type = VkBool32, offset = 108, size = 4
    integerDotProduct64BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitMixedSignednessAccelerated, type = VkBool32, offset = 112, size = 4
    integerDotProduct64BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitUnsignedAccelerated, type = VkBool32, offset = 116, size = 4
    integerDotProductAccumulatingSaturating8BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitSignedAccelerated, type = VkBool32, offset = 120, size = 4
    integerDotProductAccumulatingSaturating8BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated, type = VkBool32, offset = 124, size = 4
    integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated, type = VkBool32, offset = 128, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated, type = VkBool32, offset = 132, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated, type = VkBool32, offset = 136, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitUnsignedAccelerated, type = VkBool32, offset = 140, size = 4
    integerDotProductAccumulatingSaturating16BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitSignedAccelerated, type = VkBool32, offset = 144, size = 4
    integerDotProductAccumulatingSaturating16BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated, type = VkBool32, offset = 148, size = 4
    integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitUnsignedAccelerated, type = VkBool32, offset = 152, size = 4
    integerDotProductAccumulatingSaturating32BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitSignedAccelerated, type = VkBool32, offset = 156, size = 4
    integerDotProductAccumulatingSaturating32BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated, type = VkBool32, offset = 160, size = 4
    integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitUnsignedAccelerated, type = VkBool32, offset = 164, size = 4
    integerDotProductAccumulatingSaturating64BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitSignedAccelerated, type = VkBool32, offset = 168, size = 4
    integerDotProductAccumulatingSaturating64BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated, type = VkBool32, offset = 172, size = 4
    integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = storageTexelBufferOffsetAlignmentBytes, type = VkDeviceSize, offset = 176, size = 8
    storageTexelBufferOffsetAlignmentBytes VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = storageTexelBufferOffsetSingleTexelAlignment, type = VkBool32, offset = 184, size = 4
    storageTexelBufferOffsetSingleTexelAlignment VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = uniformTexelBufferOffsetAlignmentBytes, type = VkDeviceSize, offset = 192, size = 8
    uniformTexelBufferOffsetAlignmentBytes VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = uniformTexelBufferOffsetSingleTexelAlignment, type = VkBool32, offset = 200, size = 4
    uniformTexelBufferOffsetSingleTexelAlignment VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = maxBufferSize, type = VkDeviceSize, offset = 208, size = 8
    maxBufferSize VkDeviceSize <>
VkPhysicalDeviceVulkan13Properties ends

; TYPEDEF VkPhysicalDeviceVulkan13Properties = struct VkPhysicalDeviceVulkan13Properties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVulkan13Properties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minSubgroupSize, type = uint32_t, offset = 16, size = 4
    minSubgroupSize dword ?
;   TypeKind.ELABORATED
;   name = maxSubgroupSize, type = uint32_t, offset = 20, size = 4
    maxSubgroupSize dword ?
;   TypeKind.ELABORATED
;   name = maxComputeWorkgroupSubgroups, type = uint32_t, offset = 24, size = 4
    maxComputeWorkgroupSubgroups dword ?
;   TypeKind.ELABORATED
;   name = requiredSubgroupSizeStages, type = VkShaderStageFlags, offset = 28, size = 4
    requiredSubgroupSizeStages VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = maxInlineUniformBlockSize, type = uint32_t, offset = 32, size = 4
    maxInlineUniformBlockSize dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorInlineUniformBlocks, type = uint32_t, offset = 36, size = 4
    maxPerStageDescriptorInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks, type = uint32_t, offset = 40, size = 4
    maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetInlineUniformBlocks, type = uint32_t, offset = 44, size = 4
    maxDescriptorSetInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindInlineUniformBlocks, type = uint32_t, offset = 48, size = 4
    maxDescriptorSetUpdateAfterBindInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxInlineUniformTotalSize, type = uint32_t, offset = 52, size = 4
    maxInlineUniformTotalSize dword ?
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitUnsignedAccelerated, type = VkBool32, offset = 56, size = 4
    integerDotProduct8BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitSignedAccelerated, type = VkBool32, offset = 60, size = 4
    integerDotProduct8BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitMixedSignednessAccelerated, type = VkBool32, offset = 64, size = 4
    integerDotProduct8BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedUnsignedAccelerated, type = VkBool32, offset = 68, size = 4
    integerDotProduct4x8BitPackedUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedSignedAccelerated, type = VkBool32, offset = 72, size = 4
    integerDotProduct4x8BitPackedSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedMixedSignednessAccelerated, type = VkBool32, offset = 76, size = 4
    integerDotProduct4x8BitPackedMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitUnsignedAccelerated, type = VkBool32, offset = 80, size = 4
    integerDotProduct16BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitSignedAccelerated, type = VkBool32, offset = 84, size = 4
    integerDotProduct16BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitMixedSignednessAccelerated, type = VkBool32, offset = 88, size = 4
    integerDotProduct16BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitUnsignedAccelerated, type = VkBool32, offset = 92, size = 4
    integerDotProduct32BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitSignedAccelerated, type = VkBool32, offset = 96, size = 4
    integerDotProduct32BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitMixedSignednessAccelerated, type = VkBool32, offset = 100, size = 4
    integerDotProduct32BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitUnsignedAccelerated, type = VkBool32, offset = 104, size = 4
    integerDotProduct64BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitSignedAccelerated, type = VkBool32, offset = 108, size = 4
    integerDotProduct64BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitMixedSignednessAccelerated, type = VkBool32, offset = 112, size = 4
    integerDotProduct64BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitUnsignedAccelerated, type = VkBool32, offset = 116, size = 4
    integerDotProductAccumulatingSaturating8BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitSignedAccelerated, type = VkBool32, offset = 120, size = 4
    integerDotProductAccumulatingSaturating8BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated, type = VkBool32, offset = 124, size = 4
    integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated, type = VkBool32, offset = 128, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated, type = VkBool32, offset = 132, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated, type = VkBool32, offset = 136, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitUnsignedAccelerated, type = VkBool32, offset = 140, size = 4
    integerDotProductAccumulatingSaturating16BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitSignedAccelerated, type = VkBool32, offset = 144, size = 4
    integerDotProductAccumulatingSaturating16BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated, type = VkBool32, offset = 148, size = 4
    integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitUnsignedAccelerated, type = VkBool32, offset = 152, size = 4
    integerDotProductAccumulatingSaturating32BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitSignedAccelerated, type = VkBool32, offset = 156, size = 4
    integerDotProductAccumulatingSaturating32BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated, type = VkBool32, offset = 160, size = 4
    integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitUnsignedAccelerated, type = VkBool32, offset = 164, size = 4
    integerDotProductAccumulatingSaturating64BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitSignedAccelerated, type = VkBool32, offset = 168, size = 4
    integerDotProductAccumulatingSaturating64BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated, type = VkBool32, offset = 172, size = 4
    integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = storageTexelBufferOffsetAlignmentBytes, type = VkDeviceSize, offset = 176, size = 8
    storageTexelBufferOffsetAlignmentBytes VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = storageTexelBufferOffsetSingleTexelAlignment, type = VkBool32, offset = 184, size = 4
    storageTexelBufferOffsetSingleTexelAlignment VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = uniformTexelBufferOffsetAlignmentBytes, type = VkDeviceSize, offset = 192, size = 8
    uniformTexelBufferOffsetAlignmentBytes VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = uniformTexelBufferOffsetSingleTexelAlignment, type = VkBool32, offset = 200, size = 4
    uniformTexelBufferOffsetSingleTexelAlignment VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = maxBufferSize, type = VkDeviceSize, offset = 208, size = 8
    maxBufferSize VkDeviceSize <>
VkPhysicalDeviceVulkan13Properties ends

VkPipelineCreationFeedback struct
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreationFeedbackFlags, offset = 0, size = 4
    flags VkPipelineCreationFeedbackFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = duration, type = uint64_t, offset = 8, size = 8
    duration qword ?
VkPipelineCreationFeedback ends

; TYPEDEF VkPipelineCreationFeedback = struct VkPipelineCreationFeedback, TypeKind.ELABORATED
; remove struct typedef

VkPipelineCreationFeedback struct
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreationFeedbackFlags, offset = 0, size = 4
    flags VkPipelineCreationFeedbackFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = duration, type = uint64_t, offset = 8, size = 8
    duration qword ?
VkPipelineCreationFeedback ends

VkPipelineCreationFeedbackCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pPipelineCreationFeedback, type = VkPipelineCreationFeedback *, offset = 16, size = 8
    pPipelineCreationFeedback qword ?
;   TypeKind.ELABORATED
;   name = pipelineStageCreationFeedbackCount, type = uint32_t, offset = 24, size = 4
    pipelineStageCreationFeedbackCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPipelineStageCreationFeedbacks, type = VkPipelineCreationFeedback *, offset = 32, size = 8
    pPipelineStageCreationFeedbacks qword ?
VkPipelineCreationFeedbackCreateInfo ends

; TYPEDEF VkPipelineCreationFeedbackCreateInfo = struct VkPipelineCreationFeedbackCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineCreationFeedbackCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pPipelineCreationFeedback, type = VkPipelineCreationFeedback *, offset = 16, size = 8
    pPipelineCreationFeedback qword ?
;   TypeKind.ELABORATED
;   name = pipelineStageCreationFeedbackCount, type = uint32_t, offset = 24, size = 4
    pipelineStageCreationFeedbackCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPipelineStageCreationFeedbacks, type = VkPipelineCreationFeedback *, offset = 32, size = 8
    pPipelineStageCreationFeedbacks qword ?
VkPipelineCreationFeedbackCreateInfo ends

VkPhysicalDeviceShaderTerminateInvocationFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderTerminateInvocation, type = VkBool32, offset = 16, size = 4
    shaderTerminateInvocation VkBool32 <>
VkPhysicalDeviceShaderTerminateInvocationFeatures ends

; TYPEDEF VkPhysicalDeviceShaderTerminateInvocationFeatures = struct VkPhysicalDeviceShaderTerminateInvocationFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderTerminateInvocationFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderTerminateInvocation, type = VkBool32, offset = 16, size = 4
    shaderTerminateInvocation VkBool32 <>
VkPhysicalDeviceShaderTerminateInvocationFeatures ends

VkPhysicalDeviceToolProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = name, type = char[256], offset = 16, size = 256
    name byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = version, type = char[256], offset = 272, size = 256
    version byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = purposes, type = VkToolPurposeFlags, offset = 528, size = 4
    purposes VkToolPurposeFlags <>
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 532, size = 256
    description byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = layer, type = char[256], offset = 788, size = 256
    layer byte 256 dup(?)
VkPhysicalDeviceToolProperties ends

; TYPEDEF VkPhysicalDeviceToolProperties = struct VkPhysicalDeviceToolProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceToolProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = name, type = char[256], offset = 16, size = 256
    name byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = version, type = char[256], offset = 272, size = 256
    version byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = purposes, type = VkToolPurposeFlags, offset = 528, size = 4
    purposes VkToolPurposeFlags <>
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 532, size = 256
    description byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = layer, type = char[256], offset = 788, size = 256
    layer byte 256 dup(?)
VkPhysicalDeviceToolProperties ends

VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderDemoteToHelperInvocation, type = VkBool32, offset = 16, size = 4
    shaderDemoteToHelperInvocation VkBool32 <>
VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures ends

; TYPEDEF VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures = struct VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderDemoteToHelperInvocation, type = VkBool32, offset = 16, size = 4
    shaderDemoteToHelperInvocation VkBool32 <>
VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures ends

VkPhysicalDevicePrivateDataFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = privateData, type = VkBool32, offset = 16, size = 4
    privateData VkBool32 <>
VkPhysicalDevicePrivateDataFeatures ends

; TYPEDEF VkPhysicalDevicePrivateDataFeatures = struct VkPhysicalDevicePrivateDataFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePrivateDataFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = privateData, type = VkBool32, offset = 16, size = 4
    privateData VkBool32 <>
VkPhysicalDevicePrivateDataFeatures ends

VkDevicePrivateDataCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = privateDataSlotRequestCount, type = uint32_t, offset = 16, size = 4
    privateDataSlotRequestCount dword ?
VkDevicePrivateDataCreateInfo ends

; TYPEDEF VkDevicePrivateDataCreateInfo = struct VkDevicePrivateDataCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkDevicePrivateDataCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = privateDataSlotRequestCount, type = uint32_t, offset = 16, size = 4
    privateDataSlotRequestCount dword ?
VkDevicePrivateDataCreateInfo ends

VkPrivateDataSlotCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPrivateDataSlotCreateFlags, offset = 16, size = 4
    flags VkPrivateDataSlotCreateFlags <>
VkPrivateDataSlotCreateInfo ends

; TYPEDEF VkPrivateDataSlotCreateInfo = struct VkPrivateDataSlotCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPrivateDataSlotCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPrivateDataSlotCreateFlags, offset = 16, size = 4
    flags VkPrivateDataSlotCreateFlags <>
VkPrivateDataSlotCreateInfo ends

VkPhysicalDevicePipelineCreationCacheControlFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineCreationCacheControl, type = VkBool32, offset = 16, size = 4
    pipelineCreationCacheControl VkBool32 <>
VkPhysicalDevicePipelineCreationCacheControlFeatures ends

; TYPEDEF VkPhysicalDevicePipelineCreationCacheControlFeatures = struct VkPhysicalDevicePipelineCreationCacheControlFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePipelineCreationCacheControlFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineCreationCacheControl, type = VkBool32, offset = 16, size = 4
    pipelineCreationCacheControl VkBool32 <>
VkPhysicalDevicePipelineCreationCacheControlFeatures ends

VkMemoryBarrier2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcStageMask, type = VkPipelineStageFlags2, offset = 16, size = 8
    srcStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags2, offset = 24, size = 8
    srcAccessMask VkAccessFlags2 <>
;   TypeKind.ELABORATED
;   name = dstStageMask, type = VkPipelineStageFlags2, offset = 32, size = 8
    dstStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags2, offset = 40, size = 8
    dstAccessMask VkAccessFlags2 <>
VkMemoryBarrier2 ends

; TYPEDEF VkMemoryBarrier2 = struct VkMemoryBarrier2, TypeKind.ELABORATED
; remove struct typedef

VkMemoryBarrier2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcStageMask, type = VkPipelineStageFlags2, offset = 16, size = 8
    srcStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags2, offset = 24, size = 8
    srcAccessMask VkAccessFlags2 <>
;   TypeKind.ELABORATED
;   name = dstStageMask, type = VkPipelineStageFlags2, offset = 32, size = 8
    dstStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags2, offset = 40, size = 8
    dstAccessMask VkAccessFlags2 <>
VkMemoryBarrier2 ends

VkBufferMemoryBarrier2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcStageMask, type = VkPipelineStageFlags2, offset = 16, size = 8
    srcStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags2, offset = 24, size = 8
    srcAccessMask VkAccessFlags2 <>
;   TypeKind.ELABORATED
;   name = dstStageMask, type = VkPipelineStageFlags2, offset = 32, size = 8
    dstStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags2, offset = 40, size = 8
    dstAccessMask VkAccessFlags2 <>
;   TypeKind.ELABORATED
;   name = srcQueueFamilyIndex, type = uint32_t, offset = 48, size = 4
    srcQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = dstQueueFamilyIndex, type = uint32_t, offset = 52, size = 4
    dstQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 56, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 64, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 72, size = 8
    _size VkDeviceSize <>
VkBufferMemoryBarrier2 ends

; TYPEDEF VkBufferMemoryBarrier2 = struct VkBufferMemoryBarrier2, TypeKind.ELABORATED
; remove struct typedef

VkBufferMemoryBarrier2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcStageMask, type = VkPipelineStageFlags2, offset = 16, size = 8
    srcStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags2, offset = 24, size = 8
    srcAccessMask VkAccessFlags2 <>
;   TypeKind.ELABORATED
;   name = dstStageMask, type = VkPipelineStageFlags2, offset = 32, size = 8
    dstStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags2, offset = 40, size = 8
    dstAccessMask VkAccessFlags2 <>
;   TypeKind.ELABORATED
;   name = srcQueueFamilyIndex, type = uint32_t, offset = 48, size = 4
    srcQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = dstQueueFamilyIndex, type = uint32_t, offset = 52, size = 4
    dstQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 56, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 64, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 72, size = 8
    _size VkDeviceSize <>
VkBufferMemoryBarrier2 ends

VkImageMemoryBarrier2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcStageMask, type = VkPipelineStageFlags2, offset = 16, size = 8
    srcStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags2, offset = 24, size = 8
    srcAccessMask VkAccessFlags2 <>
;   TypeKind.ELABORATED
;   name = dstStageMask, type = VkPipelineStageFlags2, offset = 32, size = 8
    dstStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags2, offset = 40, size = 8
    dstAccessMask VkAccessFlags2 <>
;   TypeKind.ELABORATED
;   name = oldLayout, type = VkImageLayout, offset = 48, size = 4
    oldLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = newLayout, type = VkImageLayout, offset = 52, size = 4
    newLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = srcQueueFamilyIndex, type = uint32_t, offset = 56, size = 4
    srcQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = dstQueueFamilyIndex, type = uint32_t, offset = 60, size = 4
    dstQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 64, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = subresourceRange, type = VkImageSubresourceRange, offset = 72, size = 20
    subresourceRange VkImageSubresourceRange <>
VkImageMemoryBarrier2 ends

; TYPEDEF VkImageMemoryBarrier2 = struct VkImageMemoryBarrier2, TypeKind.ELABORATED
; remove struct typedef

VkImageMemoryBarrier2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcStageMask, type = VkPipelineStageFlags2, offset = 16, size = 8
    srcStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = srcAccessMask, type = VkAccessFlags2, offset = 24, size = 8
    srcAccessMask VkAccessFlags2 <>
;   TypeKind.ELABORATED
;   name = dstStageMask, type = VkPipelineStageFlags2, offset = 32, size = 8
    dstStageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = dstAccessMask, type = VkAccessFlags2, offset = 40, size = 8
    dstAccessMask VkAccessFlags2 <>
;   TypeKind.ELABORATED
;   name = oldLayout, type = VkImageLayout, offset = 48, size = 4
    oldLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = newLayout, type = VkImageLayout, offset = 52, size = 4
    newLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = srcQueueFamilyIndex, type = uint32_t, offset = 56, size = 4
    srcQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = dstQueueFamilyIndex, type = uint32_t, offset = 60, size = 4
    dstQueueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 64, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = subresourceRange, type = VkImageSubresourceRange, offset = 72, size = 20
    subresourceRange VkImageSubresourceRange <>
VkImageMemoryBarrier2 ends

VkDependencyInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dependencyFlags, type = VkDependencyFlags, offset = 16, size = 4
    dependencyFlags VkDependencyFlags <>
;   TypeKind.ELABORATED
;   name = memoryBarrierCount, type = uint32_t, offset = 20, size = 4
    memoryBarrierCount dword ?
;   TypeKind.POINTER
;   name = pMemoryBarriers, type = const VkMemoryBarrier2 *, offset = 24, size = 8
    pMemoryBarriers qword ?
;   TypeKind.ELABORATED
;   name = bufferMemoryBarrierCount, type = uint32_t, offset = 32, size = 4
    bufferMemoryBarrierCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBufferMemoryBarriers, type = const VkBufferMemoryBarrier2 *, offset = 40, size = 8
    pBufferMemoryBarriers qword ?
;   TypeKind.ELABORATED
;   name = imageMemoryBarrierCount, type = uint32_t, offset = 48, size = 4
    imageMemoryBarrierCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pImageMemoryBarriers, type = const VkImageMemoryBarrier2 *, offset = 56, size = 8
    pImageMemoryBarriers qword ?
VkDependencyInfo ends

; TYPEDEF VkDependencyInfo = struct VkDependencyInfo, TypeKind.ELABORATED
; remove struct typedef

VkDependencyInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dependencyFlags, type = VkDependencyFlags, offset = 16, size = 4
    dependencyFlags VkDependencyFlags <>
;   TypeKind.ELABORATED
;   name = memoryBarrierCount, type = uint32_t, offset = 20, size = 4
    memoryBarrierCount dword ?
;   TypeKind.POINTER
;   name = pMemoryBarriers, type = const VkMemoryBarrier2 *, offset = 24, size = 8
    pMemoryBarriers qword ?
;   TypeKind.ELABORATED
;   name = bufferMemoryBarrierCount, type = uint32_t, offset = 32, size = 4
    bufferMemoryBarrierCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBufferMemoryBarriers, type = const VkBufferMemoryBarrier2 *, offset = 40, size = 8
    pBufferMemoryBarriers qword ?
;   TypeKind.ELABORATED
;   name = imageMemoryBarrierCount, type = uint32_t, offset = 48, size = 4
    imageMemoryBarrierCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pImageMemoryBarriers, type = const VkImageMemoryBarrier2 *, offset = 56, size = 8
    pImageMemoryBarriers qword ?
VkDependencyInfo ends

VkSemaphoreSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = semaphore, type = VkSemaphore, offset = 16, size = 8
    semaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = value, type = uint64_t, offset = 24, size = 8
    value qword ?
;   TypeKind.ELABORATED
;   name = stageMask, type = VkPipelineStageFlags2, offset = 32, size = 8
    stageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = deviceIndex, type = uint32_t, offset = 40, size = 4
    deviceIndex dword ?
VkSemaphoreSubmitInfo ends

; TYPEDEF VkSemaphoreSubmitInfo = struct VkSemaphoreSubmitInfo, TypeKind.ELABORATED
; remove struct typedef

VkSemaphoreSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = semaphore, type = VkSemaphore, offset = 16, size = 8
    semaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = value, type = uint64_t, offset = 24, size = 8
    value qword ?
;   TypeKind.ELABORATED
;   name = stageMask, type = VkPipelineStageFlags2, offset = 32, size = 8
    stageMask VkPipelineStageFlags2 <>
;   TypeKind.ELABORATED
;   name = deviceIndex, type = uint32_t, offset = 40, size = 4
    deviceIndex dword ?
VkSemaphoreSubmitInfo ends

VkCommandBufferSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = commandBuffer, type = VkCommandBuffer, offset = 16, size = 8
    commandBuffer VkCommandBuffer <>
;   TypeKind.ELABORATED
;   name = deviceMask, type = uint32_t, offset = 24, size = 4
    deviceMask dword ?
VkCommandBufferSubmitInfo ends

; TYPEDEF VkCommandBufferSubmitInfo = struct VkCommandBufferSubmitInfo, TypeKind.ELABORATED
; remove struct typedef

VkCommandBufferSubmitInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = commandBuffer, type = VkCommandBuffer, offset = 16, size = 8
    commandBuffer VkCommandBuffer <>
;   TypeKind.ELABORATED
;   name = deviceMask, type = uint32_t, offset = 24, size = 4
    deviceMask dword ?
VkCommandBufferSubmitInfo ends

VkSubmitInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSubmitFlags, offset = 16, size = 4
    flags VkSubmitFlags <>
;   TypeKind.ELABORATED
;   name = waitSemaphoreInfoCount, type = uint32_t, offset = 20, size = 4
    waitSemaphoreInfoCount dword ?
;   TypeKind.POINTER
;   name = pWaitSemaphoreInfos, type = const VkSemaphoreSubmitInfo *, offset = 24, size = 8
    pWaitSemaphoreInfos qword ?
;   TypeKind.ELABORATED
;   name = commandBufferInfoCount, type = uint32_t, offset = 32, size = 4
    commandBufferInfoCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCommandBufferInfos, type = const VkCommandBufferSubmitInfo *, offset = 40, size = 8
    pCommandBufferInfos qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphoreInfoCount, type = uint32_t, offset = 48, size = 4
    signalSemaphoreInfoCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSignalSemaphoreInfos, type = const VkSemaphoreSubmitInfo *, offset = 56, size = 8
    pSignalSemaphoreInfos qword ?
VkSubmitInfo2 ends

; TYPEDEF VkSubmitInfo2 = struct VkSubmitInfo2, TypeKind.ELABORATED
; remove struct typedef

VkSubmitInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSubmitFlags, offset = 16, size = 4
    flags VkSubmitFlags <>
;   TypeKind.ELABORATED
;   name = waitSemaphoreInfoCount, type = uint32_t, offset = 20, size = 4
    waitSemaphoreInfoCount dword ?
;   TypeKind.POINTER
;   name = pWaitSemaphoreInfos, type = const VkSemaphoreSubmitInfo *, offset = 24, size = 8
    pWaitSemaphoreInfos qword ?
;   TypeKind.ELABORATED
;   name = commandBufferInfoCount, type = uint32_t, offset = 32, size = 4
    commandBufferInfoCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCommandBufferInfos, type = const VkCommandBufferSubmitInfo *, offset = 40, size = 8
    pCommandBufferInfos qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphoreInfoCount, type = uint32_t, offset = 48, size = 4
    signalSemaphoreInfoCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSignalSemaphoreInfos, type = const VkSemaphoreSubmitInfo *, offset = 56, size = 8
    pSignalSemaphoreInfos qword ?
VkSubmitInfo2 ends

VkPhysicalDeviceSynchronization2Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = synchronization2, type = VkBool32, offset = 16, size = 4
    synchronization2 VkBool32 <>
VkPhysicalDeviceSynchronization2Features ends

; TYPEDEF VkPhysicalDeviceSynchronization2Features = struct VkPhysicalDeviceSynchronization2Features, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSynchronization2Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = synchronization2, type = VkBool32, offset = 16, size = 4
    synchronization2 VkBool32 <>
VkPhysicalDeviceSynchronization2Features ends

VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderZeroInitializeWorkgroupMemory, type = VkBool32, offset = 16, size = 4
    shaderZeroInitializeWorkgroupMemory VkBool32 <>
VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures ends

; TYPEDEF VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures = struct VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderZeroInitializeWorkgroupMemory, type = VkBool32, offset = 16, size = 4
    shaderZeroInitializeWorkgroupMemory VkBool32 <>
VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures ends

VkPhysicalDeviceImageRobustnessFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = robustImageAccess, type = VkBool32, offset = 16, size = 4
    robustImageAccess VkBool32 <>
VkPhysicalDeviceImageRobustnessFeatures ends

; TYPEDEF VkPhysicalDeviceImageRobustnessFeatures = struct VkPhysicalDeviceImageRobustnessFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageRobustnessFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = robustImageAccess, type = VkBool32, offset = 16, size = 4
    robustImageAccess VkBool32 <>
VkPhysicalDeviceImageRobustnessFeatures ends

VkBufferCopy2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkDeviceSize, offset = 16, size = 8
    srcOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkDeviceSize, offset = 24, size = 8
    dstOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 32, size = 8
    _size VkDeviceSize <>
VkBufferCopy2 ends

; TYPEDEF VkBufferCopy2 = struct VkBufferCopy2, TypeKind.ELABORATED
; remove struct typedef

VkBufferCopy2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkDeviceSize, offset = 16, size = 8
    srcOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkDeviceSize, offset = 24, size = 8
    dstOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 32, size = 8
    _size VkDeviceSize <>
VkBufferCopy2 ends

VkCopyBufferInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcBuffer, type = VkBuffer, offset = 16, size = 8
    srcBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = dstBuffer, type = VkBuffer, offset = 24, size = 8
    dstBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 32, size = 4
    regionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pRegions, type = const VkBufferCopy2 *, offset = 40, size = 8
    pRegions qword ?
VkCopyBufferInfo2 ends

; TYPEDEF VkCopyBufferInfo2 = struct VkCopyBufferInfo2, TypeKind.ELABORATED
; remove struct typedef

VkCopyBufferInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcBuffer, type = VkBuffer, offset = 16, size = 8
    srcBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = dstBuffer, type = VkBuffer, offset = 24, size = 8
    dstBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 32, size = 4
    regionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pRegions, type = const VkBufferCopy2 *, offset = 40, size = 8
    pRegions qword ?
VkCopyBufferInfo2 ends

VkImageCopy2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 16, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkOffset3D, offset = 32, size = 12
    srcOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 44, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkOffset3D, offset = 60, size = 12
    dstOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 72, size = 12
    extent VkExtent3D <>
VkImageCopy2 ends

; TYPEDEF VkImageCopy2 = struct VkImageCopy2, TypeKind.ELABORATED
; remove struct typedef

VkImageCopy2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 16, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkOffset3D, offset = 32, size = 12
    srcOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 44, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkOffset3D, offset = 60, size = 12
    dstOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 72, size = 12
    extent VkExtent3D <>
VkImageCopy2 ends

VkCopyImageInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 16, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 24, size = 4
    srcImageLayout VkImageLayout <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 32, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 40, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 44, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkImageCopy2 *, offset = 48, size = 8
    pRegions qword ?
VkCopyImageInfo2 ends

; TYPEDEF VkCopyImageInfo2 = struct VkCopyImageInfo2, TypeKind.ELABORATED
; remove struct typedef

VkCopyImageInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 16, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 24, size = 4
    srcImageLayout VkImageLayout <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 32, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 40, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 44, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkImageCopy2 *, offset = 48, size = 8
    pRegions qword ?
VkCopyImageInfo2 ends

VkBufferImageCopy2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = bufferOffset, type = VkDeviceSize, offset = 16, size = 8
    bufferOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = bufferRowLength, type = uint32_t, offset = 24, size = 4
    bufferRowLength dword ?
;   TypeKind.ELABORATED
;   name = bufferImageHeight, type = uint32_t, offset = 28, size = 4
    bufferImageHeight dword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresourceLayers, offset = 32, size = 16
    imageSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = imageOffset, type = VkOffset3D, offset = 48, size = 12
    imageOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent3D, offset = 60, size = 12
    imageExtent VkExtent3D <>
VkBufferImageCopy2 ends

; TYPEDEF VkBufferImageCopy2 = struct VkBufferImageCopy2, TypeKind.ELABORATED
; remove struct typedef

VkBufferImageCopy2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = bufferOffset, type = VkDeviceSize, offset = 16, size = 8
    bufferOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = bufferRowLength, type = uint32_t, offset = 24, size = 4
    bufferRowLength dword ?
;   TypeKind.ELABORATED
;   name = bufferImageHeight, type = uint32_t, offset = 28, size = 4
    bufferImageHeight dword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresourceLayers, offset = 32, size = 16
    imageSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = imageOffset, type = VkOffset3D, offset = 48, size = 12
    imageOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent3D, offset = 60, size = 12
    imageExtent VkExtent3D <>
VkBufferImageCopy2 ends

VkCopyBufferToImageInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcBuffer, type = VkBuffer, offset = 16, size = 8
    srcBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 24, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 32, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 36, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkBufferImageCopy2 *, offset = 40, size = 8
    pRegions qword ?
VkCopyBufferToImageInfo2 ends

; TYPEDEF VkCopyBufferToImageInfo2 = struct VkCopyBufferToImageInfo2, TypeKind.ELABORATED
; remove struct typedef

VkCopyBufferToImageInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcBuffer, type = VkBuffer, offset = 16, size = 8
    srcBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 24, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 32, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 36, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkBufferImageCopy2 *, offset = 40, size = 8
    pRegions qword ?
VkCopyBufferToImageInfo2 ends

VkCopyImageToBufferInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 16, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 24, size = 4
    srcImageLayout VkImageLayout <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstBuffer, type = VkBuffer, offset = 32, size = 8
    dstBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 40, size = 4
    regionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pRegions, type = const VkBufferImageCopy2 *, offset = 48, size = 8
    pRegions qword ?
VkCopyImageToBufferInfo2 ends

; TYPEDEF VkCopyImageToBufferInfo2 = struct VkCopyImageToBufferInfo2, TypeKind.ELABORATED
; remove struct typedef

VkCopyImageToBufferInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 16, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 24, size = 4
    srcImageLayout VkImageLayout <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstBuffer, type = VkBuffer, offset = 32, size = 8
    dstBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 40, size = 4
    regionCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pRegions, type = const VkBufferImageCopy2 *, offset = 48, size = 8
    pRegions qword ?
VkCopyImageToBufferInfo2 ends

VkImageBlit2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 16, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.CONSTANTARRAY
;   name = srcOffsets, type = VkOffset3D[2], offset = 32, size = 24
    srcOffsets VkOffset3D 2 dup(<>)
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 56, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.CONSTANTARRAY
;   name = dstOffsets, type = VkOffset3D[2], offset = 72, size = 24
    dstOffsets VkOffset3D 2 dup(<>)
VkImageBlit2 ends

; TYPEDEF VkImageBlit2 = struct VkImageBlit2, TypeKind.ELABORATED
; remove struct typedef

VkImageBlit2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 16, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.CONSTANTARRAY
;   name = srcOffsets, type = VkOffset3D[2], offset = 32, size = 24
    srcOffsets VkOffset3D 2 dup(<>)
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 56, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.CONSTANTARRAY
;   name = dstOffsets, type = VkOffset3D[2], offset = 72, size = 24
    dstOffsets VkOffset3D 2 dup(<>)
VkImageBlit2 ends

VkBlitImageInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 16, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 24, size = 4
    srcImageLayout VkImageLayout <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 32, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 40, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 44, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkImageBlit2 *, offset = 48, size = 8
    pRegions qword ?
;   TypeKind.ELABORATED
;   name = filter, type = VkFilter, offset = 56, size = 4
    filter VkFilter <>
VkBlitImageInfo2 ends

; TYPEDEF VkBlitImageInfo2 = struct VkBlitImageInfo2, TypeKind.ELABORATED
; remove struct typedef

VkBlitImageInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 16, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 24, size = 4
    srcImageLayout VkImageLayout <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 32, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 40, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 44, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkImageBlit2 *, offset = 48, size = 8
    pRegions qword ?
;   TypeKind.ELABORATED
;   name = filter, type = VkFilter, offset = 56, size = 4
    filter VkFilter <>
VkBlitImageInfo2 ends

VkImageResolve2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 16, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkOffset3D, offset = 32, size = 12
    srcOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 44, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkOffset3D, offset = 60, size = 12
    dstOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 72, size = 12
    extent VkExtent3D <>
VkImageResolve2 ends

; TYPEDEF VkImageResolve2 = struct VkImageResolve2, TypeKind.ELABORATED
; remove struct typedef

VkImageResolve2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcSubresource, type = VkImageSubresourceLayers, offset = 16, size = 16
    srcSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = srcOffset, type = VkOffset3D, offset = 32, size = 12
    srcOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = dstSubresource, type = VkImageSubresourceLayers, offset = 44, size = 16
    dstSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = dstOffset, type = VkOffset3D, offset = 60, size = 12
    dstOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent3D, offset = 72, size = 12
    extent VkExtent3D <>
VkImageResolve2 ends

VkResolveImageInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 16, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 24, size = 4
    srcImageLayout VkImageLayout <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 32, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 40, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 44, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkImageResolve2 *, offset = 48, size = 8
    pRegions qword ?
VkResolveImageInfo2 ends

; TYPEDEF VkResolveImageInfo2 = struct VkResolveImageInfo2, TypeKind.ELABORATED
; remove struct typedef

VkResolveImageInfo2 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 16, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 24, size = 4
    srcImageLayout VkImageLayout <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 32, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 40, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 44, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkImageResolve2 *, offset = 48, size = 8
    pRegions qword ?
VkResolveImageInfo2 ends

VkPhysicalDeviceSubgroupSizeControlFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subgroupSizeControl, type = VkBool32, offset = 16, size = 4
    subgroupSizeControl VkBool32 <>
;   TypeKind.ELABORATED
;   name = computeFullSubgroups, type = VkBool32, offset = 20, size = 4
    computeFullSubgroups VkBool32 <>
VkPhysicalDeviceSubgroupSizeControlFeatures ends

; TYPEDEF VkPhysicalDeviceSubgroupSizeControlFeatures = struct VkPhysicalDeviceSubgroupSizeControlFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSubgroupSizeControlFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subgroupSizeControl, type = VkBool32, offset = 16, size = 4
    subgroupSizeControl VkBool32 <>
;   TypeKind.ELABORATED
;   name = computeFullSubgroups, type = VkBool32, offset = 20, size = 4
    computeFullSubgroups VkBool32 <>
VkPhysicalDeviceSubgroupSizeControlFeatures ends

VkPhysicalDeviceSubgroupSizeControlProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minSubgroupSize, type = uint32_t, offset = 16, size = 4
    minSubgroupSize dword ?
;   TypeKind.ELABORATED
;   name = maxSubgroupSize, type = uint32_t, offset = 20, size = 4
    maxSubgroupSize dword ?
;   TypeKind.ELABORATED
;   name = maxComputeWorkgroupSubgroups, type = uint32_t, offset = 24, size = 4
    maxComputeWorkgroupSubgroups dword ?
;   TypeKind.ELABORATED
;   name = requiredSubgroupSizeStages, type = VkShaderStageFlags, offset = 28, size = 4
    requiredSubgroupSizeStages VkShaderStageFlags <>
VkPhysicalDeviceSubgroupSizeControlProperties ends

; TYPEDEF VkPhysicalDeviceSubgroupSizeControlProperties = struct VkPhysicalDeviceSubgroupSizeControlProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSubgroupSizeControlProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minSubgroupSize, type = uint32_t, offset = 16, size = 4
    minSubgroupSize dword ?
;   TypeKind.ELABORATED
;   name = maxSubgroupSize, type = uint32_t, offset = 20, size = 4
    maxSubgroupSize dword ?
;   TypeKind.ELABORATED
;   name = maxComputeWorkgroupSubgroups, type = uint32_t, offset = 24, size = 4
    maxComputeWorkgroupSubgroups dword ?
;   TypeKind.ELABORATED
;   name = requiredSubgroupSizeStages, type = VkShaderStageFlags, offset = 28, size = 4
    requiredSubgroupSizeStages VkShaderStageFlags <>
VkPhysicalDeviceSubgroupSizeControlProperties ends

VkPipelineShaderStageRequiredSubgroupSizeCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = requiredSubgroupSize, type = uint32_t, offset = 16, size = 4
    requiredSubgroupSize dword ?
VkPipelineShaderStageRequiredSubgroupSizeCreateInfo ends

; TYPEDEF VkPipelineShaderStageRequiredSubgroupSizeCreateInfo = struct VkPipelineShaderStageRequiredSubgroupSizeCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineShaderStageRequiredSubgroupSizeCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = requiredSubgroupSize, type = uint32_t, offset = 16, size = 4
    requiredSubgroupSize dword ?
VkPipelineShaderStageRequiredSubgroupSizeCreateInfo ends

VkPhysicalDeviceInlineUniformBlockFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = inlineUniformBlock, type = VkBool32, offset = 16, size = 4
    inlineUniformBlock VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingInlineUniformBlockUpdateAfterBind, type = VkBool32, offset = 20, size = 4
    descriptorBindingInlineUniformBlockUpdateAfterBind VkBool32 <>
VkPhysicalDeviceInlineUniformBlockFeatures ends

; TYPEDEF VkPhysicalDeviceInlineUniformBlockFeatures = struct VkPhysicalDeviceInlineUniformBlockFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceInlineUniformBlockFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = inlineUniformBlock, type = VkBool32, offset = 16, size = 4
    inlineUniformBlock VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingInlineUniformBlockUpdateAfterBind, type = VkBool32, offset = 20, size = 4
    descriptorBindingInlineUniformBlockUpdateAfterBind VkBool32 <>
VkPhysicalDeviceInlineUniformBlockFeatures ends

VkPhysicalDeviceInlineUniformBlockProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxInlineUniformBlockSize, type = uint32_t, offset = 16, size = 4
    maxInlineUniformBlockSize dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorInlineUniformBlocks, type = uint32_t, offset = 20, size = 4
    maxPerStageDescriptorInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks, type = uint32_t, offset = 24, size = 4
    maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetInlineUniformBlocks, type = uint32_t, offset = 28, size = 4
    maxDescriptorSetInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindInlineUniformBlocks, type = uint32_t, offset = 32, size = 4
    maxDescriptorSetUpdateAfterBindInlineUniformBlocks dword ?
VkPhysicalDeviceInlineUniformBlockProperties ends

; TYPEDEF VkPhysicalDeviceInlineUniformBlockProperties = struct VkPhysicalDeviceInlineUniformBlockProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceInlineUniformBlockProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxInlineUniformBlockSize, type = uint32_t, offset = 16, size = 4
    maxInlineUniformBlockSize dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorInlineUniformBlocks, type = uint32_t, offset = 20, size = 4
    maxPerStageDescriptorInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks, type = uint32_t, offset = 24, size = 4
    maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetInlineUniformBlocks, type = uint32_t, offset = 28, size = 4
    maxDescriptorSetInlineUniformBlocks dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindInlineUniformBlocks, type = uint32_t, offset = 32, size = 4
    maxDescriptorSetUpdateAfterBindInlineUniformBlocks dword ?
VkPhysicalDeviceInlineUniformBlockProperties ends

VkWriteDescriptorSetInlineUniformBlock struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dataSize, type = uint32_t, offset = 16, size = 4
    dataSize dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pData, type = const void *, offset = 24, size = 8
    pData qword ?
VkWriteDescriptorSetInlineUniformBlock ends

; TYPEDEF VkWriteDescriptorSetInlineUniformBlock = struct VkWriteDescriptorSetInlineUniformBlock, TypeKind.ELABORATED
; remove struct typedef

VkWriteDescriptorSetInlineUniformBlock struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dataSize, type = uint32_t, offset = 16, size = 4
    dataSize dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pData, type = const void *, offset = 24, size = 8
    pData qword ?
VkWriteDescriptorSetInlineUniformBlock ends

VkDescriptorPoolInlineUniformBlockCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxInlineUniformBlockBindings, type = uint32_t, offset = 16, size = 4
    maxInlineUniformBlockBindings dword ?
VkDescriptorPoolInlineUniformBlockCreateInfo ends

; TYPEDEF VkDescriptorPoolInlineUniformBlockCreateInfo = struct VkDescriptorPoolInlineUniformBlockCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorPoolInlineUniformBlockCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxInlineUniformBlockBindings, type = uint32_t, offset = 16, size = 4
    maxInlineUniformBlockBindings dword ?
VkDescriptorPoolInlineUniformBlockCreateInfo ends

VkPhysicalDeviceTextureCompressionASTCHDRFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = textureCompressionASTC_HDR, type = VkBool32, offset = 16, size = 4
    textureCompressionASTC_HDR VkBool32 <>
VkPhysicalDeviceTextureCompressionASTCHDRFeatures ends

; TYPEDEF VkPhysicalDeviceTextureCompressionASTCHDRFeatures = struct VkPhysicalDeviceTextureCompressionASTCHDRFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceTextureCompressionASTCHDRFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = textureCompressionASTC_HDR, type = VkBool32, offset = 16, size = 4
    textureCompressionASTC_HDR VkBool32 <>
VkPhysicalDeviceTextureCompressionASTCHDRFeatures ends

VkRenderingAttachmentInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 16, size = 8
    imageView VkImageView <>
;   TypeKind.ELABORATED
;   name = imageLayout, type = VkImageLayout, offset = 24, size = 4
    imageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = resolveMode, type = VkResolveModeFlagBits, offset = 28, size = 4
    resolveMode VkResolveModeFlagBits <>
;   TypeKind.ELABORATED
;   name = resolveImageView, type = VkImageView, offset = 32, size = 8
    resolveImageView VkImageView <>
;   TypeKind.ELABORATED
;   name = resolveImageLayout, type = VkImageLayout, offset = 40, size = 4
    resolveImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = loadOp, type = VkAttachmentLoadOp, offset = 44, size = 4
    loadOp VkAttachmentLoadOp <>
;   TypeKind.ELABORATED
;   name = storeOp, type = VkAttachmentStoreOp, offset = 48, size = 4
    storeOp VkAttachmentStoreOp <>
;   TypeKind.ELABORATED
;   name = clearValue, type = VkClearValue, offset = 52, size = 16
    clearValue VkClearValue <>
VkRenderingAttachmentInfo ends

; TYPEDEF VkRenderingAttachmentInfo = struct VkRenderingAttachmentInfo, TypeKind.ELABORATED
; remove struct typedef

VkRenderingAttachmentInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 16, size = 8
    imageView VkImageView <>
;   TypeKind.ELABORATED
;   name = imageLayout, type = VkImageLayout, offset = 24, size = 4
    imageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = resolveMode, type = VkResolveModeFlagBits, offset = 28, size = 4
    resolveMode VkResolveModeFlagBits <>
;   TypeKind.ELABORATED
;   name = resolveImageView, type = VkImageView, offset = 32, size = 8
    resolveImageView VkImageView <>
;   TypeKind.ELABORATED
;   name = resolveImageLayout, type = VkImageLayout, offset = 40, size = 4
    resolveImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = loadOp, type = VkAttachmentLoadOp, offset = 44, size = 4
    loadOp VkAttachmentLoadOp <>
;   TypeKind.ELABORATED
;   name = storeOp, type = VkAttachmentStoreOp, offset = 48, size = 4
    storeOp VkAttachmentStoreOp <>
;   TypeKind.ELABORATED
;   name = clearValue, type = VkClearValue, offset = 52, size = 16
    clearValue VkClearValue <>
VkRenderingAttachmentInfo ends

VkRenderingInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkRenderingFlags, offset = 16, size = 4
    flags VkRenderingFlags <>
;   TypeKind.ELABORATED
;   name = renderArea, type = VkRect2D, offset = 20, size = 16
    renderArea VkRect2D <>
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 36, size = 4
    layerCount dword ?
;   TypeKind.ELABORATED
;   name = viewMask, type = uint32_t, offset = 40, size = 4
    viewMask dword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 44, size = 4
    colorAttachmentCount dword ?
;   TypeKind.POINTER
;   name = pColorAttachments, type = const VkRenderingAttachmentInfo *, offset = 48, size = 8
    pColorAttachments qword ?
;   TypeKind.POINTER
;   name = pDepthAttachment, type = const VkRenderingAttachmentInfo *, offset = 56, size = 8
    pDepthAttachment qword ?
;   TypeKind.POINTER
;   name = pStencilAttachment, type = const VkRenderingAttachmentInfo *, offset = 64, size = 8
    pStencilAttachment qword ?
VkRenderingInfo ends

; TYPEDEF VkRenderingInfo = struct VkRenderingInfo, TypeKind.ELABORATED
; remove struct typedef

VkRenderingInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkRenderingFlags, offset = 16, size = 4
    flags VkRenderingFlags <>
;   TypeKind.ELABORATED
;   name = renderArea, type = VkRect2D, offset = 20, size = 16
    renderArea VkRect2D <>
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 36, size = 4
    layerCount dword ?
;   TypeKind.ELABORATED
;   name = viewMask, type = uint32_t, offset = 40, size = 4
    viewMask dword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 44, size = 4
    colorAttachmentCount dword ?
;   TypeKind.POINTER
;   name = pColorAttachments, type = const VkRenderingAttachmentInfo *, offset = 48, size = 8
    pColorAttachments qword ?
;   TypeKind.POINTER
;   name = pDepthAttachment, type = const VkRenderingAttachmentInfo *, offset = 56, size = 8
    pDepthAttachment qword ?
;   TypeKind.POINTER
;   name = pStencilAttachment, type = const VkRenderingAttachmentInfo *, offset = 64, size = 8
    pStencilAttachment qword ?
VkRenderingInfo ends

VkPipelineRenderingCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = viewMask, type = uint32_t, offset = 16, size = 4
    viewMask dword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 20, size = 4
    colorAttachmentCount dword ?
;   TypeKind.POINTER
;   name = pColorAttachmentFormats, type = const VkFormat *, offset = 24, size = 8
    pColorAttachmentFormats qword ?
;   TypeKind.ELABORATED
;   name = depthAttachmentFormat, type = VkFormat, offset = 32, size = 4
    depthAttachmentFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = stencilAttachmentFormat, type = VkFormat, offset = 36, size = 4
    stencilAttachmentFormat VkFormat <>
VkPipelineRenderingCreateInfo ends

; TYPEDEF VkPipelineRenderingCreateInfo = struct VkPipelineRenderingCreateInfo, TypeKind.ELABORATED
; remove struct typedef

VkPipelineRenderingCreateInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = viewMask, type = uint32_t, offset = 16, size = 4
    viewMask dword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 20, size = 4
    colorAttachmentCount dword ?
;   TypeKind.POINTER
;   name = pColorAttachmentFormats, type = const VkFormat *, offset = 24, size = 8
    pColorAttachmentFormats qword ?
;   TypeKind.ELABORATED
;   name = depthAttachmentFormat, type = VkFormat, offset = 32, size = 4
    depthAttachmentFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = stencilAttachmentFormat, type = VkFormat, offset = 36, size = 4
    stencilAttachmentFormat VkFormat <>
VkPipelineRenderingCreateInfo ends

VkPhysicalDeviceDynamicRenderingFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dynamicRendering, type = VkBool32, offset = 16, size = 4
    dynamicRendering VkBool32 <>
VkPhysicalDeviceDynamicRenderingFeatures ends

; TYPEDEF VkPhysicalDeviceDynamicRenderingFeatures = struct VkPhysicalDeviceDynamicRenderingFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDynamicRenderingFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dynamicRendering, type = VkBool32, offset = 16, size = 4
    dynamicRendering VkBool32 <>
VkPhysicalDeviceDynamicRenderingFeatures ends

VkCommandBufferInheritanceRenderingInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkRenderingFlags, offset = 16, size = 4
    flags VkRenderingFlags <>
;   TypeKind.ELABORATED
;   name = viewMask, type = uint32_t, offset = 20, size = 4
    viewMask dword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 24, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachmentFormats, type = const VkFormat *, offset = 32, size = 8
    pColorAttachmentFormats qword ?
;   TypeKind.ELABORATED
;   name = depthAttachmentFormat, type = VkFormat, offset = 40, size = 4
    depthAttachmentFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = stencilAttachmentFormat, type = VkFormat, offset = 44, size = 4
    stencilAttachmentFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = rasterizationSamples, type = VkSampleCountFlagBits, offset = 48, size = 4
    rasterizationSamples VkSampleCountFlagBits <>
VkCommandBufferInheritanceRenderingInfo ends

; TYPEDEF VkCommandBufferInheritanceRenderingInfo = struct VkCommandBufferInheritanceRenderingInfo, TypeKind.ELABORATED
; remove struct typedef

VkCommandBufferInheritanceRenderingInfo struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkRenderingFlags, offset = 16, size = 4
    flags VkRenderingFlags <>
;   TypeKind.ELABORATED
;   name = viewMask, type = uint32_t, offset = 20, size = 4
    viewMask dword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 24, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachmentFormats, type = const VkFormat *, offset = 32, size = 8
    pColorAttachmentFormats qword ?
;   TypeKind.ELABORATED
;   name = depthAttachmentFormat, type = VkFormat, offset = 40, size = 4
    depthAttachmentFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = stencilAttachmentFormat, type = VkFormat, offset = 44, size = 4
    stencilAttachmentFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = rasterizationSamples, type = VkSampleCountFlagBits, offset = 48, size = 4
    rasterizationSamples VkSampleCountFlagBits <>
VkCommandBufferInheritanceRenderingInfo ends

VkPhysicalDeviceShaderIntegerDotProductFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderIntegerDotProduct, type = VkBool32, offset = 16, size = 4
    shaderIntegerDotProduct VkBool32 <>
VkPhysicalDeviceShaderIntegerDotProductFeatures ends

; TYPEDEF VkPhysicalDeviceShaderIntegerDotProductFeatures = struct VkPhysicalDeviceShaderIntegerDotProductFeatures, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderIntegerDotProductFeatures struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderIntegerDotProduct, type = VkBool32, offset = 16, size = 4
    shaderIntegerDotProduct VkBool32 <>
VkPhysicalDeviceShaderIntegerDotProductFeatures ends

VkPhysicalDeviceShaderIntegerDotProductProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitUnsignedAccelerated, type = VkBool32, offset = 16, size = 4
    integerDotProduct8BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitSignedAccelerated, type = VkBool32, offset = 20, size = 4
    integerDotProduct8BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitMixedSignednessAccelerated, type = VkBool32, offset = 24, size = 4
    integerDotProduct8BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedUnsignedAccelerated, type = VkBool32, offset = 28, size = 4
    integerDotProduct4x8BitPackedUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedSignedAccelerated, type = VkBool32, offset = 32, size = 4
    integerDotProduct4x8BitPackedSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedMixedSignednessAccelerated, type = VkBool32, offset = 36, size = 4
    integerDotProduct4x8BitPackedMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitUnsignedAccelerated, type = VkBool32, offset = 40, size = 4
    integerDotProduct16BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitSignedAccelerated, type = VkBool32, offset = 44, size = 4
    integerDotProduct16BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitMixedSignednessAccelerated, type = VkBool32, offset = 48, size = 4
    integerDotProduct16BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitUnsignedAccelerated, type = VkBool32, offset = 52, size = 4
    integerDotProduct32BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitSignedAccelerated, type = VkBool32, offset = 56, size = 4
    integerDotProduct32BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitMixedSignednessAccelerated, type = VkBool32, offset = 60, size = 4
    integerDotProduct32BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitUnsignedAccelerated, type = VkBool32, offset = 64, size = 4
    integerDotProduct64BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitSignedAccelerated, type = VkBool32, offset = 68, size = 4
    integerDotProduct64BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitMixedSignednessAccelerated, type = VkBool32, offset = 72, size = 4
    integerDotProduct64BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitUnsignedAccelerated, type = VkBool32, offset = 76, size = 4
    integerDotProductAccumulatingSaturating8BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitSignedAccelerated, type = VkBool32, offset = 80, size = 4
    integerDotProductAccumulatingSaturating8BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated, type = VkBool32, offset = 84, size = 4
    integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated, type = VkBool32, offset = 88, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated, type = VkBool32, offset = 92, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated, type = VkBool32, offset = 96, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitUnsignedAccelerated, type = VkBool32, offset = 100, size = 4
    integerDotProductAccumulatingSaturating16BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitSignedAccelerated, type = VkBool32, offset = 104, size = 4
    integerDotProductAccumulatingSaturating16BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated, type = VkBool32, offset = 108, size = 4
    integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitUnsignedAccelerated, type = VkBool32, offset = 112, size = 4
    integerDotProductAccumulatingSaturating32BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitSignedAccelerated, type = VkBool32, offset = 116, size = 4
    integerDotProductAccumulatingSaturating32BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated, type = VkBool32, offset = 120, size = 4
    integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitUnsignedAccelerated, type = VkBool32, offset = 124, size = 4
    integerDotProductAccumulatingSaturating64BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitSignedAccelerated, type = VkBool32, offset = 128, size = 4
    integerDotProductAccumulatingSaturating64BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated, type = VkBool32, offset = 132, size = 4
    integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated VkBool32 <>
VkPhysicalDeviceShaderIntegerDotProductProperties ends

; TYPEDEF VkPhysicalDeviceShaderIntegerDotProductProperties = struct VkPhysicalDeviceShaderIntegerDotProductProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderIntegerDotProductProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitUnsignedAccelerated, type = VkBool32, offset = 16, size = 4
    integerDotProduct8BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitSignedAccelerated, type = VkBool32, offset = 20, size = 4
    integerDotProduct8BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct8BitMixedSignednessAccelerated, type = VkBool32, offset = 24, size = 4
    integerDotProduct8BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedUnsignedAccelerated, type = VkBool32, offset = 28, size = 4
    integerDotProduct4x8BitPackedUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedSignedAccelerated, type = VkBool32, offset = 32, size = 4
    integerDotProduct4x8BitPackedSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct4x8BitPackedMixedSignednessAccelerated, type = VkBool32, offset = 36, size = 4
    integerDotProduct4x8BitPackedMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitUnsignedAccelerated, type = VkBool32, offset = 40, size = 4
    integerDotProduct16BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitSignedAccelerated, type = VkBool32, offset = 44, size = 4
    integerDotProduct16BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct16BitMixedSignednessAccelerated, type = VkBool32, offset = 48, size = 4
    integerDotProduct16BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitUnsignedAccelerated, type = VkBool32, offset = 52, size = 4
    integerDotProduct32BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitSignedAccelerated, type = VkBool32, offset = 56, size = 4
    integerDotProduct32BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct32BitMixedSignednessAccelerated, type = VkBool32, offset = 60, size = 4
    integerDotProduct32BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitUnsignedAccelerated, type = VkBool32, offset = 64, size = 4
    integerDotProduct64BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitSignedAccelerated, type = VkBool32, offset = 68, size = 4
    integerDotProduct64BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProduct64BitMixedSignednessAccelerated, type = VkBool32, offset = 72, size = 4
    integerDotProduct64BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitUnsignedAccelerated, type = VkBool32, offset = 76, size = 4
    integerDotProductAccumulatingSaturating8BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitSignedAccelerated, type = VkBool32, offset = 80, size = 4
    integerDotProductAccumulatingSaturating8BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated, type = VkBool32, offset = 84, size = 4
    integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated, type = VkBool32, offset = 88, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated, type = VkBool32, offset = 92, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated, type = VkBool32, offset = 96, size = 4
    integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitUnsignedAccelerated, type = VkBool32, offset = 100, size = 4
    integerDotProductAccumulatingSaturating16BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitSignedAccelerated, type = VkBool32, offset = 104, size = 4
    integerDotProductAccumulatingSaturating16BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated, type = VkBool32, offset = 108, size = 4
    integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitUnsignedAccelerated, type = VkBool32, offset = 112, size = 4
    integerDotProductAccumulatingSaturating32BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitSignedAccelerated, type = VkBool32, offset = 116, size = 4
    integerDotProductAccumulatingSaturating32BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated, type = VkBool32, offset = 120, size = 4
    integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitUnsignedAccelerated, type = VkBool32, offset = 124, size = 4
    integerDotProductAccumulatingSaturating64BitUnsignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitSignedAccelerated, type = VkBool32, offset = 128, size = 4
    integerDotProductAccumulatingSaturating64BitSignedAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated, type = VkBool32, offset = 132, size = 4
    integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated VkBool32 <>
VkPhysicalDeviceShaderIntegerDotProductProperties ends

VkPhysicalDeviceTexelBufferAlignmentProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = storageTexelBufferOffsetAlignmentBytes, type = VkDeviceSize, offset = 16, size = 8
    storageTexelBufferOffsetAlignmentBytes VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = storageTexelBufferOffsetSingleTexelAlignment, type = VkBool32, offset = 24, size = 4
    storageTexelBufferOffsetSingleTexelAlignment VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = uniformTexelBufferOffsetAlignmentBytes, type = VkDeviceSize, offset = 32, size = 8
    uniformTexelBufferOffsetAlignmentBytes VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = uniformTexelBufferOffsetSingleTexelAlignment, type = VkBool32, offset = 40, size = 4
    uniformTexelBufferOffsetSingleTexelAlignment VkBool32 <>
VkPhysicalDeviceTexelBufferAlignmentProperties ends

; TYPEDEF VkPhysicalDeviceTexelBufferAlignmentProperties = struct VkPhysicalDeviceTexelBufferAlignmentProperties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceTexelBufferAlignmentProperties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = storageTexelBufferOffsetAlignmentBytes, type = VkDeviceSize, offset = 16, size = 8
    storageTexelBufferOffsetAlignmentBytes VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = storageTexelBufferOffsetSingleTexelAlignment, type = VkBool32, offset = 24, size = 4
    storageTexelBufferOffsetSingleTexelAlignment VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = uniformTexelBufferOffsetAlignmentBytes, type = VkDeviceSize, offset = 32, size = 8
    uniformTexelBufferOffsetAlignmentBytes VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = uniformTexelBufferOffsetSingleTexelAlignment, type = VkBool32, offset = 40, size = 4
    uniformTexelBufferOffsetSingleTexelAlignment VkBool32 <>
VkPhysicalDeviceTexelBufferAlignmentProperties ends

VkFormatProperties3 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = linearTilingFeatures, type = VkFormatFeatureFlags2, offset = 16, size = 8
    linearTilingFeatures VkFormatFeatureFlags2 <>
;   TypeKind.ELABORATED
;   name = optimalTilingFeatures, type = VkFormatFeatureFlags2, offset = 24, size = 8
    optimalTilingFeatures VkFormatFeatureFlags2 <>
;   TypeKind.ELABORATED
;   name = bufferFeatures, type = VkFormatFeatureFlags2, offset = 32, size = 8
    bufferFeatures VkFormatFeatureFlags2 <>
VkFormatProperties3 ends

; TYPEDEF VkFormatProperties3 = struct VkFormatProperties3, TypeKind.ELABORATED
; remove struct typedef

VkFormatProperties3 struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = linearTilingFeatures, type = VkFormatFeatureFlags2, offset = 16, size = 8
    linearTilingFeatures VkFormatFeatureFlags2 <>
;   TypeKind.ELABORATED
;   name = optimalTilingFeatures, type = VkFormatFeatureFlags2, offset = 24, size = 8
    optimalTilingFeatures VkFormatFeatureFlags2 <>
;   TypeKind.ELABORATED
;   name = bufferFeatures, type = VkFormatFeatureFlags2, offset = 32, size = 8
    bufferFeatures VkFormatFeatureFlags2 <>
VkFormatProperties3 ends

VkPhysicalDeviceMaintenance4Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maintenance4, type = VkBool32, offset = 16, size = 4
    maintenance4 VkBool32 <>
VkPhysicalDeviceMaintenance4Features ends

; TYPEDEF VkPhysicalDeviceMaintenance4Features = struct VkPhysicalDeviceMaintenance4Features, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMaintenance4Features struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maintenance4, type = VkBool32, offset = 16, size = 4
    maintenance4 VkBool32 <>
VkPhysicalDeviceMaintenance4Features ends

VkPhysicalDeviceMaintenance4Properties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxBufferSize, type = VkDeviceSize, offset = 16, size = 8
    maxBufferSize VkDeviceSize <>
VkPhysicalDeviceMaintenance4Properties ends

; TYPEDEF VkPhysicalDeviceMaintenance4Properties = struct VkPhysicalDeviceMaintenance4Properties, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMaintenance4Properties struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxBufferSize, type = VkDeviceSize, offset = 16, size = 8
    maxBufferSize VkDeviceSize <>
VkPhysicalDeviceMaintenance4Properties ends

VkDeviceBufferMemoryRequirements struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pCreateInfo, type = const VkBufferCreateInfo *, offset = 16, size = 8
    pCreateInfo qword ?
VkDeviceBufferMemoryRequirements ends

; TYPEDEF VkDeviceBufferMemoryRequirements = struct VkDeviceBufferMemoryRequirements, TypeKind.ELABORATED
; remove struct typedef

VkDeviceBufferMemoryRequirements struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pCreateInfo, type = const VkBufferCreateInfo *, offset = 16, size = 8
    pCreateInfo qword ?
VkDeviceBufferMemoryRequirements ends

VkDeviceImageMemoryRequirements struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pCreateInfo, type = const VkImageCreateInfo *, offset = 16, size = 8
    pCreateInfo qword ?
;   TypeKind.ELABORATED
;   name = planeAspect, type = VkImageAspectFlagBits, offset = 24, size = 4
    planeAspect VkImageAspectFlagBits <>
VkDeviceImageMemoryRequirements ends

; TYPEDEF VkDeviceImageMemoryRequirements = struct VkDeviceImageMemoryRequirements, TypeKind.ELABORATED
; remove struct typedef

VkDeviceImageMemoryRequirements struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pCreateInfo, type = const VkImageCreateInfo *, offset = 16, size = 8
    pCreateInfo qword ?
;   TypeKind.ELABORATED
;   name = planeAspect, type = VkImageAspectFlagBits, offset = 24, size = 4
    planeAspect VkImageAspectFlagBits <>
VkDeviceImageMemoryRequirements ends

; TYPEDEF PFN_vkGetPhysicalDeviceToolProperties = VkResult (*)(VkPhysicalDevice, uint32_t *, VkPhysicalDeviceToolProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceToolProperties typedef qword

; TYPEDEF PFN_vkCreatePrivateDataSlot = VkResult (*)(VkDevice, const VkPrivateDataSlotCreateInfo *, const VkAllocationCallbacks *, VkPrivateDataSlot *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreatePrivateDataSlot typedef qword

; TYPEDEF PFN_vkDestroyPrivateDataSlot = void (*)(VkDevice, VkPrivateDataSlot, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyPrivateDataSlot typedef qword

; TYPEDEF PFN_vkSetPrivateData = VkResult (*)(VkDevice, VkObjectType, uint64_t, VkPrivateDataSlot, uint64_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSetPrivateData typedef qword

; TYPEDEF PFN_vkGetPrivateData = void (*)(VkDevice, VkObjectType, uint64_t, VkPrivateDataSlot, uint64_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPrivateData typedef qword

; TYPEDEF PFN_vkCmdSetEvent2 = void (*)(VkCommandBuffer, VkEvent, const VkDependencyInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetEvent2 typedef qword

; TYPEDEF PFN_vkCmdResetEvent2 = void (*)(VkCommandBuffer, VkEvent, VkPipelineStageFlags2) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdResetEvent2 typedef qword

; TYPEDEF PFN_vkCmdWaitEvents2 = void (*)(VkCommandBuffer, uint32_t, const VkEvent *, const VkDependencyInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdWaitEvents2 typedef qword

; TYPEDEF PFN_vkCmdPipelineBarrier2 = void (*)(VkCommandBuffer, const VkDependencyInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdPipelineBarrier2 typedef qword

; TYPEDEF PFN_vkCmdWriteTimestamp2 = void (*)(VkCommandBuffer, VkPipelineStageFlags2, VkQueryPool, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdWriteTimestamp2 typedef qword

; TYPEDEF PFN_vkQueueSubmit2 = VkResult (*)(VkQueue, uint32_t, const VkSubmitInfo2 *, VkFence) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkQueueSubmit2 typedef qword

; TYPEDEF PFN_vkCmdCopyBuffer2 = void (*)(VkCommandBuffer, const VkCopyBufferInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyBuffer2 typedef qword

; TYPEDEF PFN_vkCmdCopyImage2 = void (*)(VkCommandBuffer, const VkCopyImageInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyImage2 typedef qword

; TYPEDEF PFN_vkCmdCopyBufferToImage2 = void (*)(VkCommandBuffer, const VkCopyBufferToImageInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyBufferToImage2 typedef qword

; TYPEDEF PFN_vkCmdCopyImageToBuffer2 = void (*)(VkCommandBuffer, const VkCopyImageToBufferInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyImageToBuffer2 typedef qword

; TYPEDEF PFN_vkCmdBlitImage2 = void (*)(VkCommandBuffer, const VkBlitImageInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBlitImage2 typedef qword

; TYPEDEF PFN_vkCmdResolveImage2 = void (*)(VkCommandBuffer, const VkResolveImageInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdResolveImage2 typedef qword

; TYPEDEF PFN_vkCmdBeginRendering = void (*)(VkCommandBuffer, const VkRenderingInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBeginRendering typedef qword

; TYPEDEF PFN_vkCmdEndRendering = void (*)(VkCommandBuffer) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEndRendering typedef qword

; TYPEDEF PFN_vkCmdSetCullMode = void (*)(VkCommandBuffer, VkCullModeFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetCullMode typedef qword

; TYPEDEF PFN_vkCmdSetFrontFace = void (*)(VkCommandBuffer, VkFrontFace) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetFrontFace typedef qword

; TYPEDEF PFN_vkCmdSetPrimitiveTopology = void (*)(VkCommandBuffer, VkPrimitiveTopology) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetPrimitiveTopology typedef qword

; TYPEDEF PFN_vkCmdSetViewportWithCount = void (*)(VkCommandBuffer, uint32_t, const VkViewport *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetViewportWithCount typedef qword

; TYPEDEF PFN_vkCmdSetScissorWithCount = void (*)(VkCommandBuffer, uint32_t, const VkRect2D *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetScissorWithCount typedef qword

; TYPEDEF PFN_vkCmdBindVertexBuffers2 = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkBuffer *, const VkDeviceSize *, const VkDeviceSize *, const VkDeviceSize *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindVertexBuffers2 typedef qword

; TYPEDEF PFN_vkCmdSetDepthTestEnable = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthTestEnable typedef qword

; TYPEDEF PFN_vkCmdSetDepthWriteEnable = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthWriteEnable typedef qword

; TYPEDEF PFN_vkCmdSetDepthCompareOp = void (*)(VkCommandBuffer, VkCompareOp) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthCompareOp typedef qword

; TYPEDEF PFN_vkCmdSetDepthBoundsTestEnable = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthBoundsTestEnable typedef qword

; TYPEDEF PFN_vkCmdSetStencilTestEnable = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetStencilTestEnable typedef qword

; TYPEDEF PFN_vkCmdSetStencilOp = void (*)(VkCommandBuffer, VkStencilFaceFlags, VkStencilOp, VkStencilOp, VkStencilOp, VkCompareOp) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetStencilOp typedef qword

; TYPEDEF PFN_vkCmdSetRasterizerDiscardEnable = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetRasterizerDiscardEnable typedef qword

; TYPEDEF PFN_vkCmdSetDepthBiasEnable = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthBiasEnable typedef qword

; TYPEDEF PFN_vkCmdSetPrimitiveRestartEnable = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetPrimitiveRestartEnable typedef qword

; TYPEDEF PFN_vkGetDeviceBufferMemoryRequirements = void (*)(VkDevice, const VkDeviceBufferMemoryRequirements *, VkMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceBufferMemoryRequirements typedef qword

; TYPEDEF PFN_vkGetDeviceImageMemoryRequirements = void (*)(VkDevice, const VkDeviceImageMemoryRequirements *, VkMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceImageMemoryRequirements typedef qword

; TYPEDEF PFN_vkGetDeviceImageSparseMemoryRequirements = void (*)(VkDevice, const VkDeviceImageMemoryRequirements *, uint32_t *, VkSparseImageMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceImageSparseMemoryRequirements typedef qword

; VkResult vkGetPhysicalDeviceToolProperties(VkPhysicalDevice physicalDevice, uint32_t * pToolCount, VkPhysicalDeviceToolProperties * pToolProperties)
vkGetPhysicalDeviceToolProperties qword ?

; VkResult vkCreatePrivateDataSlot(VkDevice device, const VkPrivateDataSlotCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkPrivateDataSlot * pPrivateDataSlot)
vkCreatePrivateDataSlot qword ?

; void vkDestroyPrivateDataSlot(VkDevice device, VkPrivateDataSlot privateDataSlot, const VkAllocationCallbacks * pAllocator)
vkDestroyPrivateDataSlot qword ?

; VkResult vkSetPrivateData(VkDevice device, VkObjectType objectType, uint64_t objectHandle, VkPrivateDataSlot privateDataSlot, uint64_t data)
vkSetPrivateData qword ?

; void vkGetPrivateData(VkDevice device, VkObjectType objectType, uint64_t objectHandle, VkPrivateDataSlot privateDataSlot, uint64_t * pData)
vkGetPrivateData qword ?

; void vkCmdSetEvent2(VkCommandBuffer commandBuffer, VkEvent event, const VkDependencyInfo * pDependencyInfo)
vkCmdSetEvent2 qword ?

; void vkCmdResetEvent2(VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags2 stageMask)
vkCmdResetEvent2 qword ?

; void vkCmdWaitEvents2(VkCommandBuffer commandBuffer, uint32_t eventCount, const VkEvent * pEvents, const VkDependencyInfo * pDependencyInfos)
vkCmdWaitEvents2 qword ?

; void vkCmdPipelineBarrier2(VkCommandBuffer commandBuffer, const VkDependencyInfo * pDependencyInfo)
vkCmdPipelineBarrier2 qword ?

; void vkCmdWriteTimestamp2(VkCommandBuffer commandBuffer, VkPipelineStageFlags2 stage, VkQueryPool queryPool, uint32_t query)
vkCmdWriteTimestamp2 qword ?

; VkResult vkQueueSubmit2(VkQueue queue, uint32_t submitCount, const VkSubmitInfo2 * pSubmits, VkFence fence)
vkQueueSubmit2 qword ?

; void vkCmdCopyBuffer2(VkCommandBuffer commandBuffer, const VkCopyBufferInfo2 * pCopyBufferInfo)
vkCmdCopyBuffer2 qword ?

; void vkCmdCopyImage2(VkCommandBuffer commandBuffer, const VkCopyImageInfo2 * pCopyImageInfo)
vkCmdCopyImage2 qword ?

; void vkCmdCopyBufferToImage2(VkCommandBuffer commandBuffer, const VkCopyBufferToImageInfo2 * pCopyBufferToImageInfo)
vkCmdCopyBufferToImage2 qword ?

; void vkCmdCopyImageToBuffer2(VkCommandBuffer commandBuffer, const VkCopyImageToBufferInfo2 * pCopyImageToBufferInfo)
vkCmdCopyImageToBuffer2 qword ?

; void vkCmdBlitImage2(VkCommandBuffer commandBuffer, const VkBlitImageInfo2 * pBlitImageInfo)
vkCmdBlitImage2 qword ?

; void vkCmdResolveImage2(VkCommandBuffer commandBuffer, const VkResolveImageInfo2 * pResolveImageInfo)
vkCmdResolveImage2 qword ?

; void vkCmdBeginRendering(VkCommandBuffer commandBuffer, const VkRenderingInfo * pRenderingInfo)
vkCmdBeginRendering qword ?

; void vkCmdEndRendering(VkCommandBuffer commandBuffer)
vkCmdEndRendering qword ?

; void vkCmdSetCullMode(VkCommandBuffer commandBuffer, VkCullModeFlags cullMode)
vkCmdSetCullMode qword ?

; void vkCmdSetFrontFace(VkCommandBuffer commandBuffer, VkFrontFace frontFace)
vkCmdSetFrontFace qword ?

; void vkCmdSetPrimitiveTopology(VkCommandBuffer commandBuffer, VkPrimitiveTopology primitiveTopology)
vkCmdSetPrimitiveTopology qword ?

; void vkCmdSetViewportWithCount(VkCommandBuffer commandBuffer, uint32_t viewportCount, const VkViewport * pViewports)
vkCmdSetViewportWithCount qword ?

; void vkCmdSetScissorWithCount(VkCommandBuffer commandBuffer, uint32_t scissorCount, const VkRect2D * pScissors)
vkCmdSetScissorWithCount qword ?

; void vkCmdBindVertexBuffers2(VkCommandBuffer commandBuffer, uint32_t firstBinding, uint32_t bindingCount, const VkBuffer * pBuffers, const VkDeviceSize * pOffsets, const VkDeviceSize * pSizes, const VkDeviceSize * pStrides)
vkCmdBindVertexBuffers2 qword ?

; void vkCmdSetDepthTestEnable(VkCommandBuffer commandBuffer, VkBool32 depthTestEnable)
vkCmdSetDepthTestEnable qword ?

; void vkCmdSetDepthWriteEnable(VkCommandBuffer commandBuffer, VkBool32 depthWriteEnable)
vkCmdSetDepthWriteEnable qword ?

; void vkCmdSetDepthCompareOp(VkCommandBuffer commandBuffer, VkCompareOp depthCompareOp)
vkCmdSetDepthCompareOp qword ?

; void vkCmdSetDepthBoundsTestEnable(VkCommandBuffer commandBuffer, VkBool32 depthBoundsTestEnable)
vkCmdSetDepthBoundsTestEnable qword ?

; void vkCmdSetStencilTestEnable(VkCommandBuffer commandBuffer, VkBool32 stencilTestEnable)
vkCmdSetStencilTestEnable qword ?

; void vkCmdSetStencilOp(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, VkStencilOp failOp, VkStencilOp passOp, VkStencilOp depthFailOp, VkCompareOp compareOp)
vkCmdSetStencilOp qword ?

; void vkCmdSetRasterizerDiscardEnable(VkCommandBuffer commandBuffer, VkBool32 rasterizerDiscardEnable)
vkCmdSetRasterizerDiscardEnable qword ?

; void vkCmdSetDepthBiasEnable(VkCommandBuffer commandBuffer, VkBool32 depthBiasEnable)
vkCmdSetDepthBiasEnable qword ?

; void vkCmdSetPrimitiveRestartEnable(VkCommandBuffer commandBuffer, VkBool32 primitiveRestartEnable)
vkCmdSetPrimitiveRestartEnable qword ?

; void vkGetDeviceBufferMemoryRequirements(VkDevice device, const VkDeviceBufferMemoryRequirements * pInfo, VkMemoryRequirements2 * pMemoryRequirements)
vkGetDeviceBufferMemoryRequirements qword ?

; void vkGetDeviceImageMemoryRequirements(VkDevice device, const VkDeviceImageMemoryRequirements * pInfo, VkMemoryRequirements2 * pMemoryRequirements)
vkGetDeviceImageMemoryRequirements qword ?

; void vkGetDeviceImageSparseMemoryRequirements(VkDevice device, const VkDeviceImageMemoryRequirements * pInfo, uint32_t * pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements2 * pSparseMemoryRequirements)
vkGetDeviceImageSparseMemoryRequirements qword ?

; TYPEDEF VkSurfaceKHR = struct VkSurfaceKHR_T *, TypeKind.POINTER
VkSurfaceKHR typedef qword

; enum VkPresentModeKHR {
    VK_PRESENT_MODE_IMMEDIATE_KHR equ 0
    VK_PRESENT_MODE_MAILBOX_KHR equ 1
    VK_PRESENT_MODE_FIFO_KHR equ 2
    VK_PRESENT_MODE_FIFO_RELAXED_KHR equ 3
    VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR equ 1000111000
    VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR equ 1000111001
    VK_PRESENT_MODE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkPresentModeKHR = enum VkPresentModeKHR, TypeKind.ELABORATED
VkPresentModeKHR typedef dword

; enum VkPresentModeKHR {
    VK_PRESENT_MODE_IMMEDIATE_KHR equ 0
    VK_PRESENT_MODE_MAILBOX_KHR equ 1
    VK_PRESENT_MODE_FIFO_KHR equ 2
    VK_PRESENT_MODE_FIFO_RELAXED_KHR equ 3
    VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR equ 1000111000
    VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR equ 1000111001
    VK_PRESENT_MODE_MAX_ENUM_KHR equ 2147483647
; }

; enum VkColorSpaceKHR {
    VK_COLOR_SPACE_SRGB_NONLINEAR_KHR equ 0
    VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT equ 1000104001
    VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT equ 1000104002
    VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT equ 1000104003
    VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT equ 1000104004
    VK_COLOR_SPACE_BT709_LINEAR_EXT equ 1000104005
    VK_COLOR_SPACE_BT709_NONLINEAR_EXT equ 1000104006
    VK_COLOR_SPACE_BT2020_LINEAR_EXT equ 1000104007
    VK_COLOR_SPACE_HDR10_ST2084_EXT equ 1000104008
    VK_COLOR_SPACE_DOLBYVISION_EXT equ 1000104009
    VK_COLOR_SPACE_HDR10_HLG_EXT equ 1000104010
    VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT equ 1000104011
    VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT equ 1000104012
    VK_COLOR_SPACE_PASS_THROUGH_EXT equ 1000104013
    VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT equ 1000104014
    VK_COLOR_SPACE_DISPLAY_NATIVE_AMD equ 1000213000
    VK_COLORSPACE_SRGB_NONLINEAR_KHR equ 0
    VK_COLOR_SPACE_DCI_P3_LINEAR_EXT equ 1000104003
    VK_COLOR_SPACE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkColorSpaceKHR = enum VkColorSpaceKHR, TypeKind.ELABORATED
VkColorSpaceKHR typedef dword

; enum VkColorSpaceKHR {
    VK_COLOR_SPACE_SRGB_NONLINEAR_KHR equ 0
    VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT equ 1000104001
    VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT equ 1000104002
    VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT equ 1000104003
    VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT equ 1000104004
    VK_COLOR_SPACE_BT709_LINEAR_EXT equ 1000104005
    VK_COLOR_SPACE_BT709_NONLINEAR_EXT equ 1000104006
    VK_COLOR_SPACE_BT2020_LINEAR_EXT equ 1000104007
    VK_COLOR_SPACE_HDR10_ST2084_EXT equ 1000104008
    VK_COLOR_SPACE_DOLBYVISION_EXT equ 1000104009
    VK_COLOR_SPACE_HDR10_HLG_EXT equ 1000104010
    VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT equ 1000104011
    VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT equ 1000104012
    VK_COLOR_SPACE_PASS_THROUGH_EXT equ 1000104013
    VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT equ 1000104014
    VK_COLOR_SPACE_DISPLAY_NATIVE_AMD equ 1000213000
    VK_COLORSPACE_SRGB_NONLINEAR_KHR equ 0
    VK_COLOR_SPACE_DCI_P3_LINEAR_EXT equ 1000104003
    VK_COLOR_SPACE_MAX_ENUM_KHR equ 2147483647
; }

; enum VkSurfaceTransformFlagBitsKHR {
    VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR equ 1
    VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR equ 2
    VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR equ 4
    VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR equ 8
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR equ 16
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR equ 32
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR equ 64
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR equ 128
    VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR equ 256
    VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkSurfaceTransformFlagBitsKHR = enum VkSurfaceTransformFlagBitsKHR, TypeKind.ELABORATED
VkSurfaceTransformFlagBitsKHR typedef dword

; enum VkSurfaceTransformFlagBitsKHR {
    VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR equ 1
    VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR equ 2
    VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR equ 4
    VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR equ 8
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR equ 16
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR equ 32
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR equ 64
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR equ 128
    VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR equ 256
    VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; enum VkCompositeAlphaFlagBitsKHR {
    VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR equ 1
    VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR equ 2
    VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR equ 4
    VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR equ 8
    VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkCompositeAlphaFlagBitsKHR = enum VkCompositeAlphaFlagBitsKHR, TypeKind.ELABORATED
VkCompositeAlphaFlagBitsKHR typedef dword

; enum VkCompositeAlphaFlagBitsKHR {
    VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR equ 1
    VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR equ 2
    VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR equ 4
    VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR equ 8
    VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkCompositeAlphaFlagsKHR = VkFlags, TypeKind.ELABORATED
VkCompositeAlphaFlagsKHR typedef dword

; TYPEDEF VkSurfaceTransformFlagsKHR = VkFlags, TypeKind.ELABORATED
VkSurfaceTransformFlagsKHR typedef dword

VkSurfaceCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = minImageCount, type = uint32_t, offset = 0, size = 4
    minImageCount dword ?
;   TypeKind.ELABORATED
;   name = maxImageCount, type = uint32_t, offset = 4, size = 4
    maxImageCount dword ?
;   TypeKind.ELABORATED
;   name = currentExtent, type = VkExtent2D, offset = 8, size = 8
    currentExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = minImageExtent, type = VkExtent2D, offset = 16, size = 8
    minImageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxImageExtent, type = VkExtent2D, offset = 24, size = 8
    maxImageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxImageArrayLayers, type = uint32_t, offset = 32, size = 4
    maxImageArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = supportedTransforms, type = VkSurfaceTransformFlagsKHR, offset = 36, size = 4
    supportedTransforms VkSurfaceTransformFlagsKHR <>
;   TypeKind.ELABORATED
;   name = currentTransform, type = VkSurfaceTransformFlagBitsKHR, offset = 40, size = 4
    currentTransform VkSurfaceTransformFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = supportedCompositeAlpha, type = VkCompositeAlphaFlagsKHR, offset = 44, size = 4
    supportedCompositeAlpha VkCompositeAlphaFlagsKHR <>
;   TypeKind.ELABORATED
;   name = supportedUsageFlags, type = VkImageUsageFlags, offset = 48, size = 4
    supportedUsageFlags VkImageUsageFlags <>
VkSurfaceCapabilitiesKHR ends

; TYPEDEF VkSurfaceCapabilitiesKHR = struct VkSurfaceCapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkSurfaceCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = minImageCount, type = uint32_t, offset = 0, size = 4
    minImageCount dword ?
;   TypeKind.ELABORATED
;   name = maxImageCount, type = uint32_t, offset = 4, size = 4
    maxImageCount dword ?
;   TypeKind.ELABORATED
;   name = currentExtent, type = VkExtent2D, offset = 8, size = 8
    currentExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = minImageExtent, type = VkExtent2D, offset = 16, size = 8
    minImageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxImageExtent, type = VkExtent2D, offset = 24, size = 8
    maxImageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxImageArrayLayers, type = uint32_t, offset = 32, size = 4
    maxImageArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = supportedTransforms, type = VkSurfaceTransformFlagsKHR, offset = 36, size = 4
    supportedTransforms VkSurfaceTransformFlagsKHR <>
;   TypeKind.ELABORATED
;   name = currentTransform, type = VkSurfaceTransformFlagBitsKHR, offset = 40, size = 4
    currentTransform VkSurfaceTransformFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = supportedCompositeAlpha, type = VkCompositeAlphaFlagsKHR, offset = 44, size = 4
    supportedCompositeAlpha VkCompositeAlphaFlagsKHR <>
;   TypeKind.ELABORATED
;   name = supportedUsageFlags, type = VkImageUsageFlags, offset = 48, size = 4
    supportedUsageFlags VkImageUsageFlags <>
VkSurfaceCapabilitiesKHR ends

VkSurfaceFormatKHR struct
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 0, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = colorSpace, type = VkColorSpaceKHR, offset = 4, size = 4
    colorSpace VkColorSpaceKHR <>
VkSurfaceFormatKHR ends

; TYPEDEF VkSurfaceFormatKHR = struct VkSurfaceFormatKHR, TypeKind.ELABORATED
; remove struct typedef

VkSurfaceFormatKHR struct
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 0, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = colorSpace, type = VkColorSpaceKHR, offset = 4, size = 4
    colorSpace VkColorSpaceKHR <>
VkSurfaceFormatKHR ends

; TYPEDEF PFN_vkDestroySurfaceKHR = void (*)(VkInstance, VkSurfaceKHR, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroySurfaceKHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceSurfaceSupportKHR = VkResult (*)(VkPhysicalDevice, uint32_t, VkSurfaceKHR, VkBool32 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceSurfaceSupportKHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR = VkResult (*)(VkPhysicalDevice, VkSurfaceKHR, VkSurfaceCapabilitiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceSurfaceFormatsKHR = VkResult (*)(VkPhysicalDevice, VkSurfaceKHR, uint32_t *, VkSurfaceFormatKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceSurfaceFormatsKHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceSurfacePresentModesKHR = VkResult (*)(VkPhysicalDevice, VkSurfaceKHR, uint32_t *, VkPresentModeKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceSurfacePresentModesKHR typedef qword

; void vkDestroySurfaceKHR(VkInstance instance, VkSurfaceKHR surface, const VkAllocationCallbacks * pAllocator)
vkDestroySurfaceKHR qword ?

; VkResult vkGetPhysicalDeviceSurfaceSupportKHR(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, VkSurfaceKHR surface, VkBool32 * pSupported)
vkGetPhysicalDeviceSurfaceSupportKHR qword ?

; VkResult vkGetPhysicalDeviceSurfaceCapabilitiesKHR(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, VkSurfaceCapabilitiesKHR * pSurfaceCapabilities)
vkGetPhysicalDeviceSurfaceCapabilitiesKHR qword ?

; VkResult vkGetPhysicalDeviceSurfaceFormatsKHR(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, uint32_t * pSurfaceFormatCount, VkSurfaceFormatKHR * pSurfaceFormats)
vkGetPhysicalDeviceSurfaceFormatsKHR qword ?

; VkResult vkGetPhysicalDeviceSurfacePresentModesKHR(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, uint32_t * pPresentModeCount, VkPresentModeKHR * pPresentModes)
vkGetPhysicalDeviceSurfacePresentModesKHR qword ?

; TYPEDEF VkSwapchainKHR = struct VkSwapchainKHR_T *, TypeKind.POINTER
VkSwapchainKHR typedef qword

; enum VkSwapchainCreateFlagBitsKHR {
    VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR equ 1
    VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR equ 2
    VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR equ 4
    VK_SWAPCHAIN_CREATE_DEFERRED_MEMORY_ALLOCATION_BIT_EXT equ 8
    VK_SWAPCHAIN_CREATE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkSwapchainCreateFlagBitsKHR = enum VkSwapchainCreateFlagBitsKHR, TypeKind.ELABORATED
VkSwapchainCreateFlagBitsKHR typedef dword

; enum VkSwapchainCreateFlagBitsKHR {
    VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR equ 1
    VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR equ 2
    VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR equ 4
    VK_SWAPCHAIN_CREATE_DEFERRED_MEMORY_ALLOCATION_BIT_EXT equ 8
    VK_SWAPCHAIN_CREATE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkSwapchainCreateFlagsKHR = VkFlags, TypeKind.ELABORATED
VkSwapchainCreateFlagsKHR typedef dword

; enum VkDeviceGroupPresentModeFlagBitsKHR {
    VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR equ 1
    VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR equ 2
    VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR equ 4
    VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR equ 8
    VK_DEVICE_GROUP_PRESENT_MODE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkDeviceGroupPresentModeFlagBitsKHR = enum VkDeviceGroupPresentModeFlagBitsKHR, TypeKind.ELABORATED
VkDeviceGroupPresentModeFlagBitsKHR typedef dword

; enum VkDeviceGroupPresentModeFlagBitsKHR {
    VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR equ 1
    VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR equ 2
    VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR equ 4
    VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR equ 8
    VK_DEVICE_GROUP_PRESENT_MODE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkDeviceGroupPresentModeFlagsKHR = VkFlags, TypeKind.ELABORATED
VkDeviceGroupPresentModeFlagsKHR typedef dword

VkSwapchainCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSwapchainCreateFlagsKHR, offset = 16, size = 4
    flags VkSwapchainCreateFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = surface, type = VkSurfaceKHR, offset = 24, size = 8
    surface VkSurfaceKHR <>
;   TypeKind.ELABORATED
;   name = minImageCount, type = uint32_t, offset = 32, size = 4
    minImageCount dword ?
;   TypeKind.ELABORATED
;   name = imageFormat, type = VkFormat, offset = 36, size = 4
    imageFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = imageColorSpace, type = VkColorSpaceKHR, offset = 40, size = 4
    imageColorSpace VkColorSpaceKHR <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent2D, offset = 44, size = 8
    imageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = imageArrayLayers, type = uint32_t, offset = 52, size = 4
    imageArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = imageUsage, type = VkImageUsageFlags, offset = 56, size = 4
    imageUsage VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = imageSharingMode, type = VkSharingMode, offset = 60, size = 4
    imageSharingMode VkSharingMode <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndexCount, type = uint32_t, offset = 64, size = 4
    queueFamilyIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pQueueFamilyIndices, type = const uint32_t *, offset = 72, size = 8
    pQueueFamilyIndices qword ?
;   TypeKind.ELABORATED
;   name = preTransform, type = VkSurfaceTransformFlagBitsKHR, offset = 80, size = 4
    preTransform VkSurfaceTransformFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = compositeAlpha, type = VkCompositeAlphaFlagBitsKHR, offset = 84, size = 4
    compositeAlpha VkCompositeAlphaFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = presentMode, type = VkPresentModeKHR, offset = 88, size = 4
    presentMode VkPresentModeKHR <>
;   TypeKind.ELABORATED
;   name = clipped, type = VkBool32, offset = 92, size = 4
    clipped VkBool32 <>
;   TypeKind.ELABORATED
;   name = oldSwapchain, type = VkSwapchainKHR, offset = 96, size = 8
    oldSwapchain VkSwapchainKHR <>
VkSwapchainCreateInfoKHR ends

; TYPEDEF VkSwapchainCreateInfoKHR = struct VkSwapchainCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkSwapchainCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkSwapchainCreateFlagsKHR, offset = 16, size = 4
    flags VkSwapchainCreateFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = surface, type = VkSurfaceKHR, offset = 24, size = 8
    surface VkSurfaceKHR <>
;   TypeKind.ELABORATED
;   name = minImageCount, type = uint32_t, offset = 32, size = 4
    minImageCount dword ?
;   TypeKind.ELABORATED
;   name = imageFormat, type = VkFormat, offset = 36, size = 4
    imageFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = imageColorSpace, type = VkColorSpaceKHR, offset = 40, size = 4
    imageColorSpace VkColorSpaceKHR <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent2D, offset = 44, size = 8
    imageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = imageArrayLayers, type = uint32_t, offset = 52, size = 4
    imageArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = imageUsage, type = VkImageUsageFlags, offset = 56, size = 4
    imageUsage VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = imageSharingMode, type = VkSharingMode, offset = 60, size = 4
    imageSharingMode VkSharingMode <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndexCount, type = uint32_t, offset = 64, size = 4
    queueFamilyIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pQueueFamilyIndices, type = const uint32_t *, offset = 72, size = 8
    pQueueFamilyIndices qword ?
;   TypeKind.ELABORATED
;   name = preTransform, type = VkSurfaceTransformFlagBitsKHR, offset = 80, size = 4
    preTransform VkSurfaceTransformFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = compositeAlpha, type = VkCompositeAlphaFlagBitsKHR, offset = 84, size = 4
    compositeAlpha VkCompositeAlphaFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = presentMode, type = VkPresentModeKHR, offset = 88, size = 4
    presentMode VkPresentModeKHR <>
;   TypeKind.ELABORATED
;   name = clipped, type = VkBool32, offset = 92, size = 4
    clipped VkBool32 <>
;   TypeKind.ELABORATED
;   name = oldSwapchain, type = VkSwapchainKHR, offset = 96, size = 8
    oldSwapchain VkSwapchainKHR <>
VkSwapchainCreateInfoKHR ends

VkPresentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = waitSemaphoreCount, type = uint32_t, offset = 16, size = 4
    waitSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pWaitSemaphores, type = const VkSemaphore *, offset = 24, size = 8
    pWaitSemaphores qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 32, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSwapchains, type = const VkSwapchainKHR *, offset = 40, size = 8
    pSwapchains qword ?
;   TypeKind.POINTER
;   name = pImageIndices, type = const uint32_t *, offset = 48, size = 8
    pImageIndices qword ?
;   TypeKind.POINTER
;   name = pResults, type = VkResult *, offset = 56, size = 8
    pResults qword ?
VkPresentInfoKHR ends

; TYPEDEF VkPresentInfoKHR = struct VkPresentInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPresentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = waitSemaphoreCount, type = uint32_t, offset = 16, size = 4
    waitSemaphoreCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pWaitSemaphores, type = const VkSemaphore *, offset = 24, size = 8
    pWaitSemaphores qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 32, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSwapchains, type = const VkSwapchainKHR *, offset = 40, size = 8
    pSwapchains qword ?
;   TypeKind.POINTER
;   name = pImageIndices, type = const uint32_t *, offset = 48, size = 8
    pImageIndices qword ?
;   TypeKind.POINTER
;   name = pResults, type = VkResult *, offset = 56, size = 8
    pResults qword ?
VkPresentInfoKHR ends

VkImageSwapchainCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchain, type = VkSwapchainKHR, offset = 16, size = 8
    swapchain VkSwapchainKHR <>
VkImageSwapchainCreateInfoKHR ends

; TYPEDEF VkImageSwapchainCreateInfoKHR = struct VkImageSwapchainCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkImageSwapchainCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchain, type = VkSwapchainKHR, offset = 16, size = 8
    swapchain VkSwapchainKHR <>
VkImageSwapchainCreateInfoKHR ends

VkBindImageMemorySwapchainInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchain, type = VkSwapchainKHR, offset = 16, size = 8
    swapchain VkSwapchainKHR <>
;   TypeKind.ELABORATED
;   name = imageIndex, type = uint32_t, offset = 24, size = 4
    imageIndex dword ?
VkBindImageMemorySwapchainInfoKHR ends

; TYPEDEF VkBindImageMemorySwapchainInfoKHR = struct VkBindImageMemorySwapchainInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkBindImageMemorySwapchainInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchain, type = VkSwapchainKHR, offset = 16, size = 8
    swapchain VkSwapchainKHR <>
;   TypeKind.ELABORATED
;   name = imageIndex, type = uint32_t, offset = 24, size = 4
    imageIndex dword ?
VkBindImageMemorySwapchainInfoKHR ends

VkAcquireNextImageInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchain, type = VkSwapchainKHR, offset = 16, size = 8
    swapchain VkSwapchainKHR <>
;   TypeKind.ELABORATED
;   name = timeout, type = uint64_t, offset = 24, size = 8
    timeout qword ?
;   TypeKind.ELABORATED
;   name = semaphore, type = VkSemaphore, offset = 32, size = 8
    semaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = fence, type = VkFence, offset = 40, size = 8
    fence VkFence <>
;   TypeKind.ELABORATED
;   name = deviceMask, type = uint32_t, offset = 48, size = 4
    deviceMask dword ?
VkAcquireNextImageInfoKHR ends

; TYPEDEF VkAcquireNextImageInfoKHR = struct VkAcquireNextImageInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkAcquireNextImageInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchain, type = VkSwapchainKHR, offset = 16, size = 8
    swapchain VkSwapchainKHR <>
;   TypeKind.ELABORATED
;   name = timeout, type = uint64_t, offset = 24, size = 8
    timeout qword ?
;   TypeKind.ELABORATED
;   name = semaphore, type = VkSemaphore, offset = 32, size = 8
    semaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = fence, type = VkFence, offset = 40, size = 8
    fence VkFence <>
;   TypeKind.ELABORATED
;   name = deviceMask, type = uint32_t, offset = 48, size = 4
    deviceMask dword ?
VkAcquireNextImageInfoKHR ends

VkDeviceGroupPresentCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = presentMask, type = uint32_t[32], offset = 16, size = 128
    presentMask dword 32 dup(?)
;   TypeKind.ELABORATED
;   name = modes, type = VkDeviceGroupPresentModeFlagsKHR, offset = 144, size = 4
    modes VkDeviceGroupPresentModeFlagsKHR <>
VkDeviceGroupPresentCapabilitiesKHR ends

; TYPEDEF VkDeviceGroupPresentCapabilitiesKHR = struct VkDeviceGroupPresentCapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkDeviceGroupPresentCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = presentMask, type = uint32_t[32], offset = 16, size = 128
    presentMask dword 32 dup(?)
;   TypeKind.ELABORATED
;   name = modes, type = VkDeviceGroupPresentModeFlagsKHR, offset = 144, size = 4
    modes VkDeviceGroupPresentModeFlagsKHR <>
VkDeviceGroupPresentCapabilitiesKHR ends

VkDeviceGroupPresentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDeviceMasks, type = const uint32_t *, offset = 24, size = 8
    pDeviceMasks qword ?
;   TypeKind.ELABORATED
;   name = mode, type = VkDeviceGroupPresentModeFlagBitsKHR, offset = 32, size = 4
    mode VkDeviceGroupPresentModeFlagBitsKHR <>
VkDeviceGroupPresentInfoKHR ends

; TYPEDEF VkDeviceGroupPresentInfoKHR = struct VkDeviceGroupPresentInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkDeviceGroupPresentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDeviceMasks, type = const uint32_t *, offset = 24, size = 8
    pDeviceMasks qword ?
;   TypeKind.ELABORATED
;   name = mode, type = VkDeviceGroupPresentModeFlagBitsKHR, offset = 32, size = 4
    mode VkDeviceGroupPresentModeFlagBitsKHR <>
VkDeviceGroupPresentInfoKHR ends

VkDeviceGroupSwapchainCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = modes, type = VkDeviceGroupPresentModeFlagsKHR, offset = 16, size = 4
    modes VkDeviceGroupPresentModeFlagsKHR <>
VkDeviceGroupSwapchainCreateInfoKHR ends

; TYPEDEF VkDeviceGroupSwapchainCreateInfoKHR = struct VkDeviceGroupSwapchainCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkDeviceGroupSwapchainCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = modes, type = VkDeviceGroupPresentModeFlagsKHR, offset = 16, size = 4
    modes VkDeviceGroupPresentModeFlagsKHR <>
VkDeviceGroupSwapchainCreateInfoKHR ends

; TYPEDEF PFN_vkCreateSwapchainKHR = VkResult (*)(VkDevice, const VkSwapchainCreateInfoKHR *, const VkAllocationCallbacks *, VkSwapchainKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateSwapchainKHR typedef qword

; TYPEDEF PFN_vkDestroySwapchainKHR = void (*)(VkDevice, VkSwapchainKHR, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroySwapchainKHR typedef qword

; TYPEDEF PFN_vkGetSwapchainImagesKHR = VkResult (*)(VkDevice, VkSwapchainKHR, uint32_t *, VkImage *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetSwapchainImagesKHR typedef qword

; TYPEDEF PFN_vkAcquireNextImageKHR = VkResult (*)(VkDevice, VkSwapchainKHR, uint64_t, VkSemaphore, VkFence, uint32_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkAcquireNextImageKHR typedef qword

; TYPEDEF PFN_vkQueuePresentKHR = VkResult (*)(VkQueue, const VkPresentInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkQueuePresentKHR typedef qword

; TYPEDEF PFN_vkGetDeviceGroupPresentCapabilitiesKHR = VkResult (*)(VkDevice, VkDeviceGroupPresentCapabilitiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceGroupPresentCapabilitiesKHR typedef qword

; TYPEDEF PFN_vkGetDeviceGroupSurfacePresentModesKHR = VkResult (*)(VkDevice, VkSurfaceKHR, VkDeviceGroupPresentModeFlagsKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceGroupSurfacePresentModesKHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDevicePresentRectanglesKHR = VkResult (*)(VkPhysicalDevice, VkSurfaceKHR, uint32_t *, VkRect2D *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDevicePresentRectanglesKHR typedef qword

; TYPEDEF PFN_vkAcquireNextImage2KHR = VkResult (*)(VkDevice, const VkAcquireNextImageInfoKHR *, uint32_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkAcquireNextImage2KHR typedef qword

; VkResult vkCreateSwapchainKHR(VkDevice device, const VkSwapchainCreateInfoKHR * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkSwapchainKHR * pSwapchain)
vkCreateSwapchainKHR qword ?

; void vkDestroySwapchainKHR(VkDevice device, VkSwapchainKHR swapchain, const VkAllocationCallbacks * pAllocator)
vkDestroySwapchainKHR qword ?

; VkResult vkGetSwapchainImagesKHR(VkDevice device, VkSwapchainKHR swapchain, uint32_t * pSwapchainImageCount, VkImage * pSwapchainImages)
vkGetSwapchainImagesKHR qword ?

; VkResult vkAcquireNextImageKHR(VkDevice device, VkSwapchainKHR swapchain, uint64_t timeout, VkSemaphore semaphore, VkFence fence, uint32_t * pImageIndex)
vkAcquireNextImageKHR qword ?

; VkResult vkQueuePresentKHR(VkQueue queue, const VkPresentInfoKHR * pPresentInfo)
vkQueuePresentKHR qword ?

; VkResult vkGetDeviceGroupPresentCapabilitiesKHR(VkDevice device, VkDeviceGroupPresentCapabilitiesKHR * pDeviceGroupPresentCapabilities)
vkGetDeviceGroupPresentCapabilitiesKHR qword ?

; VkResult vkGetDeviceGroupSurfacePresentModesKHR(VkDevice device, VkSurfaceKHR surface, VkDeviceGroupPresentModeFlagsKHR * pModes)
vkGetDeviceGroupSurfacePresentModesKHR qword ?

; VkResult vkGetPhysicalDevicePresentRectanglesKHR(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, uint32_t * pRectCount, VkRect2D * pRects)
vkGetPhysicalDevicePresentRectanglesKHR qword ?

; VkResult vkAcquireNextImage2KHR(VkDevice device, const VkAcquireNextImageInfoKHR * pAcquireInfo, uint32_t * pImageIndex)
vkAcquireNextImage2KHR qword ?

; TYPEDEF VkDisplayKHR = struct VkDisplayKHR_T *, TypeKind.POINTER
VkDisplayKHR typedef qword

; TYPEDEF VkDisplayModeKHR = struct VkDisplayModeKHR_T *, TypeKind.POINTER
VkDisplayModeKHR typedef qword

; TYPEDEF VkDisplayModeCreateFlagsKHR = VkFlags, TypeKind.ELABORATED
VkDisplayModeCreateFlagsKHR typedef dword

; enum VkDisplayPlaneAlphaFlagBitsKHR {
    VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR equ 1
    VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR equ 2
    VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR equ 4
    VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR equ 8
    VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkDisplayPlaneAlphaFlagBitsKHR = enum VkDisplayPlaneAlphaFlagBitsKHR, TypeKind.ELABORATED
VkDisplayPlaneAlphaFlagBitsKHR typedef dword

; enum VkDisplayPlaneAlphaFlagBitsKHR {
    VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR equ 1
    VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR equ 2
    VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR equ 4
    VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR equ 8
    VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkDisplayPlaneAlphaFlagsKHR = VkFlags, TypeKind.ELABORATED
VkDisplayPlaneAlphaFlagsKHR typedef dword

; TYPEDEF VkDisplaySurfaceCreateFlagsKHR = VkFlags, TypeKind.ELABORATED
VkDisplaySurfaceCreateFlagsKHR typedef dword

VkDisplayModeParametersKHR struct
;   TypeKind.ELABORATED
;   name = visibleRegion, type = VkExtent2D, offset = 0, size = 8
    visibleRegion VkExtent2D <>
;   TypeKind.ELABORATED
;   name = refreshRate, type = uint32_t, offset = 8, size = 4
    refreshRate dword ?
VkDisplayModeParametersKHR ends

; TYPEDEF VkDisplayModeParametersKHR = struct VkDisplayModeParametersKHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayModeParametersKHR struct
;   TypeKind.ELABORATED
;   name = visibleRegion, type = VkExtent2D, offset = 0, size = 8
    visibleRegion VkExtent2D <>
;   TypeKind.ELABORATED
;   name = refreshRate, type = uint32_t, offset = 8, size = 4
    refreshRate dword ?
VkDisplayModeParametersKHR ends

VkDisplayModeCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDisplayModeCreateFlagsKHR, offset = 16, size = 4
    flags VkDisplayModeCreateFlagsKHR <>
;   TypeKind.ELABORATED
;   name = parameters, type = VkDisplayModeParametersKHR, offset = 20, size = 12
    parameters VkDisplayModeParametersKHR <>
VkDisplayModeCreateInfoKHR ends

; TYPEDEF VkDisplayModeCreateInfoKHR = struct VkDisplayModeCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayModeCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDisplayModeCreateFlagsKHR, offset = 16, size = 4
    flags VkDisplayModeCreateFlagsKHR <>
;   TypeKind.ELABORATED
;   name = parameters, type = VkDisplayModeParametersKHR, offset = 20, size = 12
    parameters VkDisplayModeParametersKHR <>
VkDisplayModeCreateInfoKHR ends

VkDisplayModePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = displayMode, type = VkDisplayModeKHR, offset = 0, size = 8
    displayMode VkDisplayModeKHR <>
;   TypeKind.ELABORATED
;   name = parameters, type = VkDisplayModeParametersKHR, offset = 8, size = 12
    parameters VkDisplayModeParametersKHR <>
VkDisplayModePropertiesKHR ends

; TYPEDEF VkDisplayModePropertiesKHR = struct VkDisplayModePropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayModePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = displayMode, type = VkDisplayModeKHR, offset = 0, size = 8
    displayMode VkDisplayModeKHR <>
;   TypeKind.ELABORATED
;   name = parameters, type = VkDisplayModeParametersKHR, offset = 8, size = 12
    parameters VkDisplayModeParametersKHR <>
VkDisplayModePropertiesKHR ends

VkDisplayPlaneCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = supportedAlpha, type = VkDisplayPlaneAlphaFlagsKHR, offset = 0, size = 4
    supportedAlpha VkDisplayPlaneAlphaFlagsKHR <>
;   TypeKind.ELABORATED
;   name = minSrcPosition, type = VkOffset2D, offset = 4, size = 8
    minSrcPosition VkOffset2D <>
;   TypeKind.ELABORATED
;   name = maxSrcPosition, type = VkOffset2D, offset = 12, size = 8
    maxSrcPosition VkOffset2D <>
;   TypeKind.ELABORATED
;   name = minSrcExtent, type = VkExtent2D, offset = 20, size = 8
    minSrcExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxSrcExtent, type = VkExtent2D, offset = 28, size = 8
    maxSrcExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = minDstPosition, type = VkOffset2D, offset = 36, size = 8
    minDstPosition VkOffset2D <>
;   TypeKind.ELABORATED
;   name = maxDstPosition, type = VkOffset2D, offset = 44, size = 8
    maxDstPosition VkOffset2D <>
;   TypeKind.ELABORATED
;   name = minDstExtent, type = VkExtent2D, offset = 52, size = 8
    minDstExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxDstExtent, type = VkExtent2D, offset = 60, size = 8
    maxDstExtent VkExtent2D <>
VkDisplayPlaneCapabilitiesKHR ends

; TYPEDEF VkDisplayPlaneCapabilitiesKHR = struct VkDisplayPlaneCapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayPlaneCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = supportedAlpha, type = VkDisplayPlaneAlphaFlagsKHR, offset = 0, size = 4
    supportedAlpha VkDisplayPlaneAlphaFlagsKHR <>
;   TypeKind.ELABORATED
;   name = minSrcPosition, type = VkOffset2D, offset = 4, size = 8
    minSrcPosition VkOffset2D <>
;   TypeKind.ELABORATED
;   name = maxSrcPosition, type = VkOffset2D, offset = 12, size = 8
    maxSrcPosition VkOffset2D <>
;   TypeKind.ELABORATED
;   name = minSrcExtent, type = VkExtent2D, offset = 20, size = 8
    minSrcExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxSrcExtent, type = VkExtent2D, offset = 28, size = 8
    maxSrcExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = minDstPosition, type = VkOffset2D, offset = 36, size = 8
    minDstPosition VkOffset2D <>
;   TypeKind.ELABORATED
;   name = maxDstPosition, type = VkOffset2D, offset = 44, size = 8
    maxDstPosition VkOffset2D <>
;   TypeKind.ELABORATED
;   name = minDstExtent, type = VkExtent2D, offset = 52, size = 8
    minDstExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxDstExtent, type = VkExtent2D, offset = 60, size = 8
    maxDstExtent VkExtent2D <>
VkDisplayPlaneCapabilitiesKHR ends

VkDisplayPlanePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = currentDisplay, type = VkDisplayKHR, offset = 0, size = 8
    currentDisplay VkDisplayKHR <>
;   TypeKind.ELABORATED
;   name = currentStackIndex, type = uint32_t, offset = 8, size = 4
    currentStackIndex dword ?
VkDisplayPlanePropertiesKHR ends

; TYPEDEF VkDisplayPlanePropertiesKHR = struct VkDisplayPlanePropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayPlanePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = currentDisplay, type = VkDisplayKHR, offset = 0, size = 8
    currentDisplay VkDisplayKHR <>
;   TypeKind.ELABORATED
;   name = currentStackIndex, type = uint32_t, offset = 8, size = 4
    currentStackIndex dword ?
VkDisplayPlanePropertiesKHR ends

VkDisplayPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = display, type = VkDisplayKHR, offset = 0, size = 8
    display VkDisplayKHR <>
;   TypeKind.POINTER
;   name = displayName, type = const char *, offset = 8, size = 8
    displayName qword ?
;   TypeKind.ELABORATED
;   name = physicalDimensions, type = VkExtent2D, offset = 16, size = 8
    physicalDimensions VkExtent2D <>
;   TypeKind.ELABORATED
;   name = physicalResolution, type = VkExtent2D, offset = 24, size = 8
    physicalResolution VkExtent2D <>
;   TypeKind.ELABORATED
;   name = supportedTransforms, type = VkSurfaceTransformFlagsKHR, offset = 32, size = 4
    supportedTransforms VkSurfaceTransformFlagsKHR <>
;   TypeKind.ELABORATED
;   name = planeReorderPossible, type = VkBool32, offset = 36, size = 4
    planeReorderPossible VkBool32 <>
;   TypeKind.ELABORATED
;   name = persistentContent, type = VkBool32, offset = 40, size = 4
    persistentContent VkBool32 <>
VkDisplayPropertiesKHR ends

; TYPEDEF VkDisplayPropertiesKHR = struct VkDisplayPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = display, type = VkDisplayKHR, offset = 0, size = 8
    display VkDisplayKHR <>
;   TypeKind.POINTER
;   name = displayName, type = const char *, offset = 8, size = 8
    displayName qword ?
;   TypeKind.ELABORATED
;   name = physicalDimensions, type = VkExtent2D, offset = 16, size = 8
    physicalDimensions VkExtent2D <>
;   TypeKind.ELABORATED
;   name = physicalResolution, type = VkExtent2D, offset = 24, size = 8
    physicalResolution VkExtent2D <>
;   TypeKind.ELABORATED
;   name = supportedTransforms, type = VkSurfaceTransformFlagsKHR, offset = 32, size = 4
    supportedTransforms VkSurfaceTransformFlagsKHR <>
;   TypeKind.ELABORATED
;   name = planeReorderPossible, type = VkBool32, offset = 36, size = 4
    planeReorderPossible VkBool32 <>
;   TypeKind.ELABORATED
;   name = persistentContent, type = VkBool32, offset = 40, size = 4
    persistentContent VkBool32 <>
VkDisplayPropertiesKHR ends

VkDisplaySurfaceCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDisplaySurfaceCreateFlagsKHR, offset = 16, size = 4
    flags VkDisplaySurfaceCreateFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = displayMode, type = VkDisplayModeKHR, offset = 24, size = 8
    displayMode VkDisplayModeKHR <>
;   TypeKind.ELABORATED
;   name = planeIndex, type = uint32_t, offset = 32, size = 4
    planeIndex dword ?
;   TypeKind.ELABORATED
;   name = planeStackIndex, type = uint32_t, offset = 36, size = 4
    planeStackIndex dword ?
;   TypeKind.ELABORATED
;   name = transform, type = VkSurfaceTransformFlagBitsKHR, offset = 40, size = 4
    transform VkSurfaceTransformFlagBitsKHR <>
;   TypeKind.FLOAT
;   name = globalAlpha, type = float, offset = 44, size = 4
    globalAlpha real4 ?
;   TypeKind.ELABORATED
;   name = alphaMode, type = VkDisplayPlaneAlphaFlagBitsKHR, offset = 48, size = 4
    alphaMode VkDisplayPlaneAlphaFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent2D, offset = 52, size = 8
    imageExtent VkExtent2D <>
VkDisplaySurfaceCreateInfoKHR ends

; TYPEDEF VkDisplaySurfaceCreateInfoKHR = struct VkDisplaySurfaceCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplaySurfaceCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDisplaySurfaceCreateFlagsKHR, offset = 16, size = 4
    flags VkDisplaySurfaceCreateFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = displayMode, type = VkDisplayModeKHR, offset = 24, size = 8
    displayMode VkDisplayModeKHR <>
;   TypeKind.ELABORATED
;   name = planeIndex, type = uint32_t, offset = 32, size = 4
    planeIndex dword ?
;   TypeKind.ELABORATED
;   name = planeStackIndex, type = uint32_t, offset = 36, size = 4
    planeStackIndex dword ?
;   TypeKind.ELABORATED
;   name = transform, type = VkSurfaceTransformFlagBitsKHR, offset = 40, size = 4
    transform VkSurfaceTransformFlagBitsKHR <>
;   TypeKind.FLOAT
;   name = globalAlpha, type = float, offset = 44, size = 4
    globalAlpha real4 ?
;   TypeKind.ELABORATED
;   name = alphaMode, type = VkDisplayPlaneAlphaFlagBitsKHR, offset = 48, size = 4
    alphaMode VkDisplayPlaneAlphaFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent2D, offset = 52, size = 8
    imageExtent VkExtent2D <>
VkDisplaySurfaceCreateInfoKHR ends

; TYPEDEF PFN_vkGetPhysicalDeviceDisplayPropertiesKHR = VkResult (*)(VkPhysicalDevice, uint32_t *, VkDisplayPropertiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceDisplayPropertiesKHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR = VkResult (*)(VkPhysicalDevice, uint32_t *, VkDisplayPlanePropertiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR typedef qword

; TYPEDEF PFN_vkGetDisplayPlaneSupportedDisplaysKHR = VkResult (*)(VkPhysicalDevice, uint32_t, uint32_t *, VkDisplayKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDisplayPlaneSupportedDisplaysKHR typedef qword

; TYPEDEF PFN_vkGetDisplayModePropertiesKHR = VkResult (*)(VkPhysicalDevice, VkDisplayKHR, uint32_t *, VkDisplayModePropertiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDisplayModePropertiesKHR typedef qword

; TYPEDEF PFN_vkCreateDisplayModeKHR = VkResult (*)(VkPhysicalDevice, VkDisplayKHR, const VkDisplayModeCreateInfoKHR *, const VkAllocationCallbacks *, VkDisplayModeKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateDisplayModeKHR typedef qword

; TYPEDEF PFN_vkGetDisplayPlaneCapabilitiesKHR = VkResult (*)(VkPhysicalDevice, VkDisplayModeKHR, uint32_t, VkDisplayPlaneCapabilitiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDisplayPlaneCapabilitiesKHR typedef qword

; TYPEDEF PFN_vkCreateDisplayPlaneSurfaceKHR = VkResult (*)(VkInstance, const VkDisplaySurfaceCreateInfoKHR *, const VkAllocationCallbacks *, VkSurfaceKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateDisplayPlaneSurfaceKHR typedef qword

; VkResult vkGetPhysicalDeviceDisplayPropertiesKHR(VkPhysicalDevice physicalDevice, uint32_t * pPropertyCount, VkDisplayPropertiesKHR * pProperties)
vkGetPhysicalDeviceDisplayPropertiesKHR qword ?

; VkResult vkGetPhysicalDeviceDisplayPlanePropertiesKHR(VkPhysicalDevice physicalDevice, uint32_t * pPropertyCount, VkDisplayPlanePropertiesKHR * pProperties)
vkGetPhysicalDeviceDisplayPlanePropertiesKHR qword ?

; VkResult vkGetDisplayPlaneSupportedDisplaysKHR(VkPhysicalDevice physicalDevice, uint32_t planeIndex, uint32_t * pDisplayCount, VkDisplayKHR * pDisplays)
vkGetDisplayPlaneSupportedDisplaysKHR qword ?

; VkResult vkGetDisplayModePropertiesKHR(VkPhysicalDevice physicalDevice, VkDisplayKHR display, uint32_t * pPropertyCount, VkDisplayModePropertiesKHR * pProperties)
vkGetDisplayModePropertiesKHR qword ?

; VkResult vkCreateDisplayModeKHR(VkPhysicalDevice physicalDevice, VkDisplayKHR display, const VkDisplayModeCreateInfoKHR * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkDisplayModeKHR * pMode)
vkCreateDisplayModeKHR qword ?

; VkResult vkGetDisplayPlaneCapabilitiesKHR(VkPhysicalDevice physicalDevice, VkDisplayModeKHR mode, uint32_t planeIndex, VkDisplayPlaneCapabilitiesKHR * pCapabilities)
vkGetDisplayPlaneCapabilitiesKHR qword ?

; VkResult vkCreateDisplayPlaneSurfaceKHR(VkInstance instance, const VkDisplaySurfaceCreateInfoKHR * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkSurfaceKHR * pSurface)
vkCreateDisplayPlaneSurfaceKHR qword ?

VkDisplayPresentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcRect, type = VkRect2D, offset = 16, size = 16
    srcRect VkRect2D <>
;   TypeKind.ELABORATED
;   name = dstRect, type = VkRect2D, offset = 32, size = 16
    dstRect VkRect2D <>
;   TypeKind.ELABORATED
;   name = persistent, type = VkBool32, offset = 48, size = 4
    persistent VkBool32 <>
VkDisplayPresentInfoKHR ends

; TYPEDEF VkDisplayPresentInfoKHR = struct VkDisplayPresentInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayPresentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcRect, type = VkRect2D, offset = 16, size = 16
    srcRect VkRect2D <>
;   TypeKind.ELABORATED
;   name = dstRect, type = VkRect2D, offset = 32, size = 16
    dstRect VkRect2D <>
;   TypeKind.ELABORATED
;   name = persistent, type = VkBool32, offset = 48, size = 4
    persistent VkBool32 <>
VkDisplayPresentInfoKHR ends

; TYPEDEF PFN_vkCreateSharedSwapchainsKHR = VkResult (*)(VkDevice, uint32_t, const VkSwapchainCreateInfoKHR *, const VkAllocationCallbacks *, VkSwapchainKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateSharedSwapchainsKHR typedef qword

; VkResult vkCreateSharedSwapchainsKHR(VkDevice device, uint32_t swapchainCount, const VkSwapchainCreateInfoKHR * pCreateInfos, const VkAllocationCallbacks * pAllocator, VkSwapchainKHR * pSwapchains)
vkCreateSharedSwapchainsKHR qword ?

; TYPEDEF VkVideoSessionKHR = struct VkVideoSessionKHR_T *, TypeKind.POINTER
VkVideoSessionKHR typedef qword

; TYPEDEF VkVideoSessionParametersKHR = struct VkVideoSessionParametersKHR_T *, TypeKind.POINTER
VkVideoSessionParametersKHR typedef qword

; enum VkQueryResultStatusKHR {
    VK_QUERY_RESULT_STATUS_ERROR_KHR equ -1
    VK_QUERY_RESULT_STATUS_NOT_READY_KHR equ 0
    VK_QUERY_RESULT_STATUS_COMPLETE_KHR equ 1
    VK_QUERY_RESULT_STATUS_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_KHR equ -1000299000
    VK_QUERY_RESULT_STATUS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkQueryResultStatusKHR = enum VkQueryResultStatusKHR, TypeKind.ELABORATED
VkQueryResultStatusKHR typedef dword

; enum VkQueryResultStatusKHR {
    VK_QUERY_RESULT_STATUS_ERROR_KHR equ -1
    VK_QUERY_RESULT_STATUS_NOT_READY_KHR equ 0
    VK_QUERY_RESULT_STATUS_COMPLETE_KHR equ 1
    VK_QUERY_RESULT_STATUS_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_KHR equ -1000299000
    VK_QUERY_RESULT_STATUS_MAX_ENUM_KHR equ 2147483647
; }

; enum VkVideoCodecOperationFlagBitsKHR {
    VK_VIDEO_CODEC_OPERATION_NONE_KHR equ 0
    VK_VIDEO_CODEC_OPERATION_ENCODE_H264_BIT_KHR equ 65536
    VK_VIDEO_CODEC_OPERATION_ENCODE_H265_BIT_KHR equ 131072
    VK_VIDEO_CODEC_OPERATION_DECODE_H264_BIT_KHR equ 1
    VK_VIDEO_CODEC_OPERATION_DECODE_H265_BIT_KHR equ 2
    VK_VIDEO_CODEC_OPERATION_DECODE_AV1_BIT_KHR equ 4
    VK_VIDEO_CODEC_OPERATION_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoCodecOperationFlagBitsKHR = enum VkVideoCodecOperationFlagBitsKHR, TypeKind.ELABORATED
VkVideoCodecOperationFlagBitsKHR typedef dword

; enum VkVideoCodecOperationFlagBitsKHR {
    VK_VIDEO_CODEC_OPERATION_NONE_KHR equ 0
    VK_VIDEO_CODEC_OPERATION_ENCODE_H264_BIT_KHR equ 65536
    VK_VIDEO_CODEC_OPERATION_ENCODE_H265_BIT_KHR equ 131072
    VK_VIDEO_CODEC_OPERATION_DECODE_H264_BIT_KHR equ 1
    VK_VIDEO_CODEC_OPERATION_DECODE_H265_BIT_KHR equ 2
    VK_VIDEO_CODEC_OPERATION_DECODE_AV1_BIT_KHR equ 4
    VK_VIDEO_CODEC_OPERATION_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoCodecOperationFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoCodecOperationFlagsKHR typedef dword

; enum VkVideoChromaSubsamplingFlagBitsKHR {
    VK_VIDEO_CHROMA_SUBSAMPLING_INVALID_KHR equ 0
    VK_VIDEO_CHROMA_SUBSAMPLING_MONOCHROME_BIT_KHR equ 1
    VK_VIDEO_CHROMA_SUBSAMPLING_420_BIT_KHR equ 2
    VK_VIDEO_CHROMA_SUBSAMPLING_422_BIT_KHR equ 4
    VK_VIDEO_CHROMA_SUBSAMPLING_444_BIT_KHR equ 8
    VK_VIDEO_CHROMA_SUBSAMPLING_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoChromaSubsamplingFlagBitsKHR = enum VkVideoChromaSubsamplingFlagBitsKHR, TypeKind.ELABORATED
VkVideoChromaSubsamplingFlagBitsKHR typedef dword

; enum VkVideoChromaSubsamplingFlagBitsKHR {
    VK_VIDEO_CHROMA_SUBSAMPLING_INVALID_KHR equ 0
    VK_VIDEO_CHROMA_SUBSAMPLING_MONOCHROME_BIT_KHR equ 1
    VK_VIDEO_CHROMA_SUBSAMPLING_420_BIT_KHR equ 2
    VK_VIDEO_CHROMA_SUBSAMPLING_422_BIT_KHR equ 4
    VK_VIDEO_CHROMA_SUBSAMPLING_444_BIT_KHR equ 8
    VK_VIDEO_CHROMA_SUBSAMPLING_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoChromaSubsamplingFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoChromaSubsamplingFlagsKHR typedef dword

; enum VkVideoComponentBitDepthFlagBitsKHR {
    VK_VIDEO_COMPONENT_BIT_DEPTH_INVALID_KHR equ 0
    VK_VIDEO_COMPONENT_BIT_DEPTH_8_BIT_KHR equ 1
    VK_VIDEO_COMPONENT_BIT_DEPTH_10_BIT_KHR equ 4
    VK_VIDEO_COMPONENT_BIT_DEPTH_12_BIT_KHR equ 16
    VK_VIDEO_COMPONENT_BIT_DEPTH_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoComponentBitDepthFlagBitsKHR = enum VkVideoComponentBitDepthFlagBitsKHR, TypeKind.ELABORATED
VkVideoComponentBitDepthFlagBitsKHR typedef dword

; enum VkVideoComponentBitDepthFlagBitsKHR {
    VK_VIDEO_COMPONENT_BIT_DEPTH_INVALID_KHR equ 0
    VK_VIDEO_COMPONENT_BIT_DEPTH_8_BIT_KHR equ 1
    VK_VIDEO_COMPONENT_BIT_DEPTH_10_BIT_KHR equ 4
    VK_VIDEO_COMPONENT_BIT_DEPTH_12_BIT_KHR equ 16
    VK_VIDEO_COMPONENT_BIT_DEPTH_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoComponentBitDepthFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoComponentBitDepthFlagsKHR typedef dword

; enum VkVideoCapabilityFlagBitsKHR {
    VK_VIDEO_CAPABILITY_PROTECTED_CONTENT_BIT_KHR equ 1
    VK_VIDEO_CAPABILITY_SEPARATE_REFERENCE_IMAGES_BIT_KHR equ 2
    VK_VIDEO_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoCapabilityFlagBitsKHR = enum VkVideoCapabilityFlagBitsKHR, TypeKind.ELABORATED
VkVideoCapabilityFlagBitsKHR typedef dword

; enum VkVideoCapabilityFlagBitsKHR {
    VK_VIDEO_CAPABILITY_PROTECTED_CONTENT_BIT_KHR equ 1
    VK_VIDEO_CAPABILITY_SEPARATE_REFERENCE_IMAGES_BIT_KHR equ 2
    VK_VIDEO_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoCapabilityFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoCapabilityFlagsKHR typedef dword

; enum VkVideoSessionCreateFlagBitsKHR {
    VK_VIDEO_SESSION_CREATE_PROTECTED_CONTENT_BIT_KHR equ 1
    VK_VIDEO_SESSION_CREATE_ALLOW_ENCODE_PARAMETER_OPTIMIZATIONS_BIT_KHR equ 2
    VK_VIDEO_SESSION_CREATE_INLINE_QUERIES_BIT_KHR equ 4
    VK_VIDEO_SESSION_CREATE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoSessionCreateFlagBitsKHR = enum VkVideoSessionCreateFlagBitsKHR, TypeKind.ELABORATED
VkVideoSessionCreateFlagBitsKHR typedef dword

; enum VkVideoSessionCreateFlagBitsKHR {
    VK_VIDEO_SESSION_CREATE_PROTECTED_CONTENT_BIT_KHR equ 1
    VK_VIDEO_SESSION_CREATE_ALLOW_ENCODE_PARAMETER_OPTIMIZATIONS_BIT_KHR equ 2
    VK_VIDEO_SESSION_CREATE_INLINE_QUERIES_BIT_KHR equ 4
    VK_VIDEO_SESSION_CREATE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoSessionCreateFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoSessionCreateFlagsKHR typedef dword

; TYPEDEF VkVideoSessionParametersCreateFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoSessionParametersCreateFlagsKHR typedef dword

; TYPEDEF VkVideoBeginCodingFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoBeginCodingFlagsKHR typedef dword

; TYPEDEF VkVideoEndCodingFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEndCodingFlagsKHR typedef dword

; enum VkVideoCodingControlFlagBitsKHR {
    VK_VIDEO_CODING_CONTROL_RESET_BIT_KHR equ 1
    VK_VIDEO_CODING_CONTROL_ENCODE_RATE_CONTROL_BIT_KHR equ 2
    VK_VIDEO_CODING_CONTROL_ENCODE_QUALITY_LEVEL_BIT_KHR equ 4
    VK_VIDEO_CODING_CONTROL_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoCodingControlFlagBitsKHR = enum VkVideoCodingControlFlagBitsKHR, TypeKind.ELABORATED
VkVideoCodingControlFlagBitsKHR typedef dword

; enum VkVideoCodingControlFlagBitsKHR {
    VK_VIDEO_CODING_CONTROL_RESET_BIT_KHR equ 1
    VK_VIDEO_CODING_CONTROL_ENCODE_RATE_CONTROL_BIT_KHR equ 2
    VK_VIDEO_CODING_CONTROL_ENCODE_QUALITY_LEVEL_BIT_KHR equ 4
    VK_VIDEO_CODING_CONTROL_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoCodingControlFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoCodingControlFlagsKHR typedef dword

VkQueueFamilyQueryResultStatusPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queryResultStatusSupport, type = VkBool32, offset = 16, size = 4
    queryResultStatusSupport VkBool32 <>
VkQueueFamilyQueryResultStatusPropertiesKHR ends

; TYPEDEF VkQueueFamilyQueryResultStatusPropertiesKHR = struct VkQueueFamilyQueryResultStatusPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkQueueFamilyQueryResultStatusPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queryResultStatusSupport, type = VkBool32, offset = 16, size = 4
    queryResultStatusSupport VkBool32 <>
VkQueueFamilyQueryResultStatusPropertiesKHR ends

VkQueueFamilyVideoPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoCodecOperations, type = VkVideoCodecOperationFlagsKHR, offset = 16, size = 4
    videoCodecOperations VkVideoCodecOperationFlagsKHR <>
VkQueueFamilyVideoPropertiesKHR ends

; TYPEDEF VkQueueFamilyVideoPropertiesKHR = struct VkQueueFamilyVideoPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkQueueFamilyVideoPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoCodecOperations, type = VkVideoCodecOperationFlagsKHR, offset = 16, size = 4
    videoCodecOperations VkVideoCodecOperationFlagsKHR <>
VkQueueFamilyVideoPropertiesKHR ends

VkVideoProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoCodecOperation, type = VkVideoCodecOperationFlagBitsKHR, offset = 16, size = 4
    videoCodecOperation VkVideoCodecOperationFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = chromaSubsampling, type = VkVideoChromaSubsamplingFlagsKHR, offset = 20, size = 4
    chromaSubsampling VkVideoChromaSubsamplingFlagsKHR <>
;   TypeKind.ELABORATED
;   name = lumaBitDepth, type = VkVideoComponentBitDepthFlagsKHR, offset = 24, size = 4
    lumaBitDepth VkVideoComponentBitDepthFlagsKHR <>
;   TypeKind.ELABORATED
;   name = chromaBitDepth, type = VkVideoComponentBitDepthFlagsKHR, offset = 28, size = 4
    chromaBitDepth VkVideoComponentBitDepthFlagsKHR <>
VkVideoProfileInfoKHR ends

; TYPEDEF VkVideoProfileInfoKHR = struct VkVideoProfileInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoCodecOperation, type = VkVideoCodecOperationFlagBitsKHR, offset = 16, size = 4
    videoCodecOperation VkVideoCodecOperationFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = chromaSubsampling, type = VkVideoChromaSubsamplingFlagsKHR, offset = 20, size = 4
    chromaSubsampling VkVideoChromaSubsamplingFlagsKHR <>
;   TypeKind.ELABORATED
;   name = lumaBitDepth, type = VkVideoComponentBitDepthFlagsKHR, offset = 24, size = 4
    lumaBitDepth VkVideoComponentBitDepthFlagsKHR <>
;   TypeKind.ELABORATED
;   name = chromaBitDepth, type = VkVideoComponentBitDepthFlagsKHR, offset = 28, size = 4
    chromaBitDepth VkVideoComponentBitDepthFlagsKHR <>
VkVideoProfileInfoKHR ends

VkVideoProfileListInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = profileCount, type = uint32_t, offset = 16, size = 4
    profileCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pProfiles, type = const VkVideoProfileInfoKHR *, offset = 24, size = 8
    pProfiles qword ?
VkVideoProfileListInfoKHR ends

; TYPEDEF VkVideoProfileListInfoKHR = struct VkVideoProfileListInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoProfileListInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = profileCount, type = uint32_t, offset = 16, size = 4
    profileCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pProfiles, type = const VkVideoProfileInfoKHR *, offset = 24, size = 8
    pProfiles qword ?
VkVideoProfileListInfoKHR ends

VkVideoCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoCapabilityFlagsKHR, offset = 16, size = 4
    flags VkVideoCapabilityFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = minBitstreamBufferOffsetAlignment, type = VkDeviceSize, offset = 24, size = 8
    minBitstreamBufferOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = minBitstreamBufferSizeAlignment, type = VkDeviceSize, offset = 32, size = 8
    minBitstreamBufferSizeAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = pictureAccessGranularity, type = VkExtent2D, offset = 40, size = 8
    pictureAccessGranularity VkExtent2D <>
;   TypeKind.ELABORATED
;   name = minCodedExtent, type = VkExtent2D, offset = 48, size = 8
    minCodedExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxCodedExtent, type = VkExtent2D, offset = 56, size = 8
    maxCodedExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxDpbSlots, type = uint32_t, offset = 64, size = 4
    maxDpbSlots dword ?
;   TypeKind.ELABORATED
;   name = maxActiveReferencePictures, type = uint32_t, offset = 68, size = 4
    maxActiveReferencePictures dword ?
;   TypeKind.ELABORATED
;   name = stdHeaderVersion, type = VkExtensionProperties, offset = 72, size = 260
    stdHeaderVersion VkExtensionProperties <>
VkVideoCapabilitiesKHR ends

; TYPEDEF VkVideoCapabilitiesKHR = struct VkVideoCapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoCapabilityFlagsKHR, offset = 16, size = 4
    flags VkVideoCapabilityFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = minBitstreamBufferOffsetAlignment, type = VkDeviceSize, offset = 24, size = 8
    minBitstreamBufferOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = minBitstreamBufferSizeAlignment, type = VkDeviceSize, offset = 32, size = 8
    minBitstreamBufferSizeAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = pictureAccessGranularity, type = VkExtent2D, offset = 40, size = 8
    pictureAccessGranularity VkExtent2D <>
;   TypeKind.ELABORATED
;   name = minCodedExtent, type = VkExtent2D, offset = 48, size = 8
    minCodedExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxCodedExtent, type = VkExtent2D, offset = 56, size = 8
    maxCodedExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxDpbSlots, type = uint32_t, offset = 64, size = 4
    maxDpbSlots dword ?
;   TypeKind.ELABORATED
;   name = maxActiveReferencePictures, type = uint32_t, offset = 68, size = 4
    maxActiveReferencePictures dword ?
;   TypeKind.ELABORATED
;   name = stdHeaderVersion, type = VkExtensionProperties, offset = 72, size = 260
    stdHeaderVersion VkExtensionProperties <>
VkVideoCapabilitiesKHR ends

VkPhysicalDeviceVideoFormatInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageUsage, type = VkImageUsageFlags, offset = 16, size = 4
    imageUsage VkImageUsageFlags <>
VkPhysicalDeviceVideoFormatInfoKHR ends

; TYPEDEF VkPhysicalDeviceVideoFormatInfoKHR = struct VkPhysicalDeviceVideoFormatInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVideoFormatInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageUsage, type = VkImageUsageFlags, offset = 16, size = 4
    imageUsage VkImageUsageFlags <>
VkPhysicalDeviceVideoFormatInfoKHR ends

VkVideoFormatPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 16, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = componentMapping, type = VkComponentMapping, offset = 20, size = 16
    componentMapping VkComponentMapping <>
;   TypeKind.ELABORATED
;   name = imageCreateFlags, type = VkImageCreateFlags, offset = 36, size = 4
    imageCreateFlags dword ?
;   TypeKind.ELABORATED
;   name = imageType, type = VkImageType, offset = 40, size = 4
    imageType VkImageType <>
;   TypeKind.ELABORATED
;   name = imageTiling, type = VkImageTiling, offset = 44, size = 4
    imageTiling VkImageTiling <>
;   TypeKind.ELABORATED
;   name = imageUsageFlags, type = VkImageUsageFlags, offset = 48, size = 4
    imageUsageFlags VkImageUsageFlags <>
VkVideoFormatPropertiesKHR ends

; TYPEDEF VkVideoFormatPropertiesKHR = struct VkVideoFormatPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoFormatPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 16, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = componentMapping, type = VkComponentMapping, offset = 20, size = 16
    componentMapping VkComponentMapping <>
;   TypeKind.ELABORATED
;   name = imageCreateFlags, type = VkImageCreateFlags, offset = 36, size = 4
    imageCreateFlags dword ?
;   TypeKind.ELABORATED
;   name = imageType, type = VkImageType, offset = 40, size = 4
    imageType VkImageType <>
;   TypeKind.ELABORATED
;   name = imageTiling, type = VkImageTiling, offset = 44, size = 4
    imageTiling VkImageTiling <>
;   TypeKind.ELABORATED
;   name = imageUsageFlags, type = VkImageUsageFlags, offset = 48, size = 4
    imageUsageFlags VkImageUsageFlags <>
VkVideoFormatPropertiesKHR ends

VkVideoPictureResourceInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = codedOffset, type = VkOffset2D, offset = 16, size = 8
    codedOffset VkOffset2D <>
;   TypeKind.ELABORATED
;   name = codedExtent, type = VkExtent2D, offset = 24, size = 8
    codedExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = baseArrayLayer, type = uint32_t, offset = 32, size = 4
    baseArrayLayer dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = imageViewBinding, type = VkImageView, offset = 40, size = 8
    imageViewBinding VkImageView <>
VkVideoPictureResourceInfoKHR ends

; TYPEDEF VkVideoPictureResourceInfoKHR = struct VkVideoPictureResourceInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoPictureResourceInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = codedOffset, type = VkOffset2D, offset = 16, size = 8
    codedOffset VkOffset2D <>
;   TypeKind.ELABORATED
;   name = codedExtent, type = VkExtent2D, offset = 24, size = 8
    codedExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = baseArrayLayer, type = uint32_t, offset = 32, size = 4
    baseArrayLayer dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = imageViewBinding, type = VkImageView, offset = 40, size = 8
    imageViewBinding VkImageView <>
VkVideoPictureResourceInfoKHR ends

VkVideoReferenceSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = slotIndex, type = int32_t, offset = 16, size = 4
    slotIndex sdword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPictureResource, type = const VkVideoPictureResourceInfoKHR *, offset = 24, size = 8
    pPictureResource qword ?
VkVideoReferenceSlotInfoKHR ends

; TYPEDEF VkVideoReferenceSlotInfoKHR = struct VkVideoReferenceSlotInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoReferenceSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = slotIndex, type = int32_t, offset = 16, size = 4
    slotIndex sdword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPictureResource, type = const VkVideoPictureResourceInfoKHR *, offset = 24, size = 8
    pPictureResource qword ?
VkVideoReferenceSlotInfoKHR ends

VkVideoSessionMemoryRequirementsKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryBindIndex, type = uint32_t, offset = 16, size = 4
    memoryBindIndex dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = memoryRequirements, type = VkMemoryRequirements, offset = 24, size = 24
    memoryRequirements VkMemoryRequirements <>
VkVideoSessionMemoryRequirementsKHR ends

; TYPEDEF VkVideoSessionMemoryRequirementsKHR = struct VkVideoSessionMemoryRequirementsKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoSessionMemoryRequirementsKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryBindIndex, type = uint32_t, offset = 16, size = 4
    memoryBindIndex dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = memoryRequirements, type = VkMemoryRequirements, offset = 24, size = 24
    memoryRequirements VkMemoryRequirements <>
VkVideoSessionMemoryRequirementsKHR ends

VkBindVideoSessionMemoryInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryBindIndex, type = uint32_t, offset = 16, size = 4
    memoryBindIndex dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 32, size = 8
    memoryOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = memorySize, type = VkDeviceSize, offset = 40, size = 8
    memorySize VkDeviceSize <>
VkBindVideoSessionMemoryInfoKHR ends

; TYPEDEF VkBindVideoSessionMemoryInfoKHR = struct VkBindVideoSessionMemoryInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkBindVideoSessionMemoryInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryBindIndex, type = uint32_t, offset = 16, size = 4
    memoryBindIndex dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 32, size = 8
    memoryOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = memorySize, type = VkDeviceSize, offset = 40, size = 8
    memorySize VkDeviceSize <>
VkBindVideoSessionMemoryInfoKHR ends

VkVideoSessionCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queueFamilyIndex, type = uint32_t, offset = 16, size = 4
    queueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoSessionCreateFlagsKHR, offset = 20, size = 4
    flags VkVideoSessionCreateFlagsKHR <>
;   TypeKind.POINTER
;   name = pVideoProfile, type = const VkVideoProfileInfoKHR *, offset = 24, size = 8
    pVideoProfile qword ?
;   TypeKind.ELABORATED
;   name = pictureFormat, type = VkFormat, offset = 32, size = 4
    pictureFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = maxCodedExtent, type = VkExtent2D, offset = 36, size = 8
    maxCodedExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = referencePictureFormat, type = VkFormat, offset = 44, size = 4
    referencePictureFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = maxDpbSlots, type = uint32_t, offset = 48, size = 4
    maxDpbSlots dword ?
;   TypeKind.ELABORATED
;   name = maxActiveReferencePictures, type = uint32_t, offset = 52, size = 4
    maxActiveReferencePictures dword ?
;   TypeKind.POINTER
;   name = pStdHeaderVersion, type = const VkExtensionProperties *, offset = 56, size = 8
    pStdHeaderVersion qword ?
VkVideoSessionCreateInfoKHR ends

; TYPEDEF VkVideoSessionCreateInfoKHR = struct VkVideoSessionCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoSessionCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queueFamilyIndex, type = uint32_t, offset = 16, size = 4
    queueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoSessionCreateFlagsKHR, offset = 20, size = 4
    flags VkVideoSessionCreateFlagsKHR <>
;   TypeKind.POINTER
;   name = pVideoProfile, type = const VkVideoProfileInfoKHR *, offset = 24, size = 8
    pVideoProfile qword ?
;   TypeKind.ELABORATED
;   name = pictureFormat, type = VkFormat, offset = 32, size = 4
    pictureFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = maxCodedExtent, type = VkExtent2D, offset = 36, size = 8
    maxCodedExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = referencePictureFormat, type = VkFormat, offset = 44, size = 4
    referencePictureFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = maxDpbSlots, type = uint32_t, offset = 48, size = 4
    maxDpbSlots dword ?
;   TypeKind.ELABORATED
;   name = maxActiveReferencePictures, type = uint32_t, offset = 52, size = 4
    maxActiveReferencePictures dword ?
;   TypeKind.POINTER
;   name = pStdHeaderVersion, type = const VkExtensionProperties *, offset = 56, size = 8
    pStdHeaderVersion qword ?
VkVideoSessionCreateInfoKHR ends

VkVideoSessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoSessionParametersCreateFlagsKHR, offset = 16, size = 4
    flags VkVideoSessionParametersCreateFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = videoSessionParametersTemplate, type = VkVideoSessionParametersKHR, offset = 24, size = 8
    videoSessionParametersTemplate VkVideoSessionParametersKHR <>
;   TypeKind.ELABORATED
;   name = videoSession, type = VkVideoSessionKHR, offset = 32, size = 8
    videoSession VkVideoSessionKHR <>
VkVideoSessionParametersCreateInfoKHR ends

; TYPEDEF VkVideoSessionParametersCreateInfoKHR = struct VkVideoSessionParametersCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoSessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoSessionParametersCreateFlagsKHR, offset = 16, size = 4
    flags VkVideoSessionParametersCreateFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = videoSessionParametersTemplate, type = VkVideoSessionParametersKHR, offset = 24, size = 8
    videoSessionParametersTemplate VkVideoSessionParametersKHR <>
;   TypeKind.ELABORATED
;   name = videoSession, type = VkVideoSessionKHR, offset = 32, size = 8
    videoSession VkVideoSessionKHR <>
VkVideoSessionParametersCreateInfoKHR ends

VkVideoSessionParametersUpdateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = updateSequenceCount, type = uint32_t, offset = 16, size = 4
    updateSequenceCount dword ?
VkVideoSessionParametersUpdateInfoKHR ends

; TYPEDEF VkVideoSessionParametersUpdateInfoKHR = struct VkVideoSessionParametersUpdateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoSessionParametersUpdateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = updateSequenceCount, type = uint32_t, offset = 16, size = 4
    updateSequenceCount dword ?
VkVideoSessionParametersUpdateInfoKHR ends

VkVideoBeginCodingInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoBeginCodingFlagsKHR, offset = 16, size = 4
    flags VkVideoBeginCodingFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = videoSession, type = VkVideoSessionKHR, offset = 24, size = 8
    videoSession VkVideoSessionKHR <>
;   TypeKind.ELABORATED
;   name = videoSessionParameters, type = VkVideoSessionParametersKHR, offset = 32, size = 8
    videoSessionParameters VkVideoSessionParametersKHR <>
;   TypeKind.ELABORATED
;   name = referenceSlotCount, type = uint32_t, offset = 40, size = 4
    referenceSlotCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pReferenceSlots, type = const VkVideoReferenceSlotInfoKHR *, offset = 48, size = 8
    pReferenceSlots qword ?
VkVideoBeginCodingInfoKHR ends

; TYPEDEF VkVideoBeginCodingInfoKHR = struct VkVideoBeginCodingInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoBeginCodingInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoBeginCodingFlagsKHR, offset = 16, size = 4
    flags VkVideoBeginCodingFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = videoSession, type = VkVideoSessionKHR, offset = 24, size = 8
    videoSession VkVideoSessionKHR <>
;   TypeKind.ELABORATED
;   name = videoSessionParameters, type = VkVideoSessionParametersKHR, offset = 32, size = 8
    videoSessionParameters VkVideoSessionParametersKHR <>
;   TypeKind.ELABORATED
;   name = referenceSlotCount, type = uint32_t, offset = 40, size = 4
    referenceSlotCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pReferenceSlots, type = const VkVideoReferenceSlotInfoKHR *, offset = 48, size = 8
    pReferenceSlots qword ?
VkVideoBeginCodingInfoKHR ends

VkVideoEndCodingInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEndCodingFlagsKHR, offset = 16, size = 4
    flags VkVideoEndCodingFlagsKHR <>
VkVideoEndCodingInfoKHR ends

; TYPEDEF VkVideoEndCodingInfoKHR = struct VkVideoEndCodingInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEndCodingInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEndCodingFlagsKHR, offset = 16, size = 4
    flags VkVideoEndCodingFlagsKHR <>
VkVideoEndCodingInfoKHR ends

VkVideoCodingControlInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoCodingControlFlagsKHR, offset = 16, size = 4
    flags VkVideoCodingControlFlagsKHR <>
VkVideoCodingControlInfoKHR ends

; TYPEDEF VkVideoCodingControlInfoKHR = struct VkVideoCodingControlInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoCodingControlInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoCodingControlFlagsKHR, offset = 16, size = 4
    flags VkVideoCodingControlFlagsKHR <>
VkVideoCodingControlInfoKHR ends

; TYPEDEF PFN_vkGetPhysicalDeviceVideoCapabilitiesKHR = VkResult (*)(VkPhysicalDevice, const VkVideoProfileInfoKHR *, VkVideoCapabilitiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceVideoCapabilitiesKHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceVideoFormatPropertiesKHR = VkResult (*)(VkPhysicalDevice, const VkPhysicalDeviceVideoFormatInfoKHR *, uint32_t *, VkVideoFormatPropertiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceVideoFormatPropertiesKHR typedef qword

; TYPEDEF PFN_vkCreateVideoSessionKHR = VkResult (*)(VkDevice, const VkVideoSessionCreateInfoKHR *, const VkAllocationCallbacks *, VkVideoSessionKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateVideoSessionKHR typedef qword

; TYPEDEF PFN_vkDestroyVideoSessionKHR = void (*)(VkDevice, VkVideoSessionKHR, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyVideoSessionKHR typedef qword

; TYPEDEF PFN_vkGetVideoSessionMemoryRequirementsKHR = VkResult (*)(VkDevice, VkVideoSessionKHR, uint32_t *, VkVideoSessionMemoryRequirementsKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetVideoSessionMemoryRequirementsKHR typedef qword

; TYPEDEF PFN_vkBindVideoSessionMemoryKHR = VkResult (*)(VkDevice, VkVideoSessionKHR, uint32_t, const VkBindVideoSessionMemoryInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBindVideoSessionMemoryKHR typedef qword

; TYPEDEF PFN_vkCreateVideoSessionParametersKHR = VkResult (*)(VkDevice, const VkVideoSessionParametersCreateInfoKHR *, const VkAllocationCallbacks *, VkVideoSessionParametersKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateVideoSessionParametersKHR typedef qword

; TYPEDEF PFN_vkUpdateVideoSessionParametersKHR = VkResult (*)(VkDevice, VkVideoSessionParametersKHR, const VkVideoSessionParametersUpdateInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkUpdateVideoSessionParametersKHR typedef qword

; TYPEDEF PFN_vkDestroyVideoSessionParametersKHR = void (*)(VkDevice, VkVideoSessionParametersKHR, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyVideoSessionParametersKHR typedef qword

; TYPEDEF PFN_vkCmdBeginVideoCodingKHR = void (*)(VkCommandBuffer, const VkVideoBeginCodingInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBeginVideoCodingKHR typedef qword

; TYPEDEF PFN_vkCmdEndVideoCodingKHR = void (*)(VkCommandBuffer, const VkVideoEndCodingInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEndVideoCodingKHR typedef qword

; TYPEDEF PFN_vkCmdControlVideoCodingKHR = void (*)(VkCommandBuffer, const VkVideoCodingControlInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdControlVideoCodingKHR typedef qword

; VkResult vkGetPhysicalDeviceVideoCapabilitiesKHR(VkPhysicalDevice physicalDevice, const VkVideoProfileInfoKHR * pVideoProfile, VkVideoCapabilitiesKHR * pCapabilities)
vkGetPhysicalDeviceVideoCapabilitiesKHR qword ?

; VkResult vkGetPhysicalDeviceVideoFormatPropertiesKHR(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceVideoFormatInfoKHR * pVideoFormatInfo, uint32_t * pVideoFormatPropertyCount, VkVideoFormatPropertiesKHR * pVideoFormatProperties)
vkGetPhysicalDeviceVideoFormatPropertiesKHR qword ?

; VkResult vkCreateVideoSessionKHR(VkDevice device, const VkVideoSessionCreateInfoKHR * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkVideoSessionKHR * pVideoSession)
vkCreateVideoSessionKHR qword ?

; void vkDestroyVideoSessionKHR(VkDevice device, VkVideoSessionKHR videoSession, const VkAllocationCallbacks * pAllocator)
vkDestroyVideoSessionKHR qword ?

; VkResult vkGetVideoSessionMemoryRequirementsKHR(VkDevice device, VkVideoSessionKHR videoSession, uint32_t * pMemoryRequirementsCount, VkVideoSessionMemoryRequirementsKHR * pMemoryRequirements)
vkGetVideoSessionMemoryRequirementsKHR qword ?

; VkResult vkBindVideoSessionMemoryKHR(VkDevice device, VkVideoSessionKHR videoSession, uint32_t bindSessionMemoryInfoCount, const VkBindVideoSessionMemoryInfoKHR * pBindSessionMemoryInfos)
vkBindVideoSessionMemoryKHR qword ?

; VkResult vkCreateVideoSessionParametersKHR(VkDevice device, const VkVideoSessionParametersCreateInfoKHR * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkVideoSessionParametersKHR * pVideoSessionParameters)
vkCreateVideoSessionParametersKHR qword ?

; VkResult vkUpdateVideoSessionParametersKHR(VkDevice device, VkVideoSessionParametersKHR videoSessionParameters, const VkVideoSessionParametersUpdateInfoKHR * pUpdateInfo)
vkUpdateVideoSessionParametersKHR qword ?

; void vkDestroyVideoSessionParametersKHR(VkDevice device, VkVideoSessionParametersKHR videoSessionParameters, const VkAllocationCallbacks * pAllocator)
vkDestroyVideoSessionParametersKHR qword ?

; void vkCmdBeginVideoCodingKHR(VkCommandBuffer commandBuffer, const VkVideoBeginCodingInfoKHR * pBeginInfo)
vkCmdBeginVideoCodingKHR qword ?

; void vkCmdEndVideoCodingKHR(VkCommandBuffer commandBuffer, const VkVideoEndCodingInfoKHR * pEndCodingInfo)
vkCmdEndVideoCodingKHR qword ?

; void vkCmdControlVideoCodingKHR(VkCommandBuffer commandBuffer, const VkVideoCodingControlInfoKHR * pCodingControlInfo)
vkCmdControlVideoCodingKHR qword ?

; enum VkVideoDecodeCapabilityFlagBitsKHR {
    VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_COINCIDE_BIT_KHR equ 1
    VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_DISTINCT_BIT_KHR equ 2
    VK_VIDEO_DECODE_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoDecodeCapabilityFlagBitsKHR = enum VkVideoDecodeCapabilityFlagBitsKHR, TypeKind.ELABORATED
VkVideoDecodeCapabilityFlagBitsKHR typedef dword

; enum VkVideoDecodeCapabilityFlagBitsKHR {
    VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_COINCIDE_BIT_KHR equ 1
    VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_DISTINCT_BIT_KHR equ 2
    VK_VIDEO_DECODE_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoDecodeCapabilityFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoDecodeCapabilityFlagsKHR typedef dword

; enum VkVideoDecodeUsageFlagBitsKHR {
    VK_VIDEO_DECODE_USAGE_DEFAULT_KHR equ 0
    VK_VIDEO_DECODE_USAGE_TRANSCODING_BIT_KHR equ 1
    VK_VIDEO_DECODE_USAGE_OFFLINE_BIT_KHR equ 2
    VK_VIDEO_DECODE_USAGE_STREAMING_BIT_KHR equ 4
    VK_VIDEO_DECODE_USAGE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoDecodeUsageFlagBitsKHR = enum VkVideoDecodeUsageFlagBitsKHR, TypeKind.ELABORATED
VkVideoDecodeUsageFlagBitsKHR typedef dword

; enum VkVideoDecodeUsageFlagBitsKHR {
    VK_VIDEO_DECODE_USAGE_DEFAULT_KHR equ 0
    VK_VIDEO_DECODE_USAGE_TRANSCODING_BIT_KHR equ 1
    VK_VIDEO_DECODE_USAGE_OFFLINE_BIT_KHR equ 2
    VK_VIDEO_DECODE_USAGE_STREAMING_BIT_KHR equ 4
    VK_VIDEO_DECODE_USAGE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoDecodeUsageFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoDecodeUsageFlagsKHR typedef dword

; TYPEDEF VkVideoDecodeFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoDecodeFlagsKHR typedef dword

VkVideoDecodeCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoDecodeCapabilityFlagsKHR, offset = 16, size = 4
    flags VkVideoDecodeCapabilityFlagsKHR <>
VkVideoDecodeCapabilitiesKHR ends

; TYPEDEF VkVideoDecodeCapabilitiesKHR = struct VkVideoDecodeCapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoDecodeCapabilityFlagsKHR, offset = 16, size = 4
    flags VkVideoDecodeCapabilityFlagsKHR <>
VkVideoDecodeCapabilitiesKHR ends

VkVideoDecodeUsageInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoUsageHints, type = VkVideoDecodeUsageFlagsKHR, offset = 16, size = 4
    videoUsageHints VkVideoDecodeUsageFlagsKHR <>
VkVideoDecodeUsageInfoKHR ends

; TYPEDEF VkVideoDecodeUsageInfoKHR = struct VkVideoDecodeUsageInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeUsageInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoUsageHints, type = VkVideoDecodeUsageFlagsKHR, offset = 16, size = 4
    videoUsageHints VkVideoDecodeUsageFlagsKHR <>
VkVideoDecodeUsageInfoKHR ends

VkVideoDecodeInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoDecodeFlagsKHR, offset = 16, size = 4
    flags VkVideoDecodeFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = srcBuffer, type = VkBuffer, offset = 24, size = 8
    srcBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = srcBufferOffset, type = VkDeviceSize, offset = 32, size = 8
    srcBufferOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = srcBufferRange, type = VkDeviceSize, offset = 40, size = 8
    srcBufferRange VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = dstPictureResource, type = VkVideoPictureResourceInfoKHR, offset = 48, size = 48
    dstPictureResource VkVideoPictureResourceInfoKHR <>
;   TypeKind.POINTER
;   name = pSetupReferenceSlot, type = const VkVideoReferenceSlotInfoKHR *, offset = 96, size = 8
    pSetupReferenceSlot qword ?
;   TypeKind.ELABORATED
;   name = referenceSlotCount, type = uint32_t, offset = 104, size = 4
    referenceSlotCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pReferenceSlots, type = const VkVideoReferenceSlotInfoKHR *, offset = 112, size = 8
    pReferenceSlots qword ?
VkVideoDecodeInfoKHR ends

; TYPEDEF VkVideoDecodeInfoKHR = struct VkVideoDecodeInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoDecodeFlagsKHR, offset = 16, size = 4
    flags VkVideoDecodeFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = srcBuffer, type = VkBuffer, offset = 24, size = 8
    srcBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = srcBufferOffset, type = VkDeviceSize, offset = 32, size = 8
    srcBufferOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = srcBufferRange, type = VkDeviceSize, offset = 40, size = 8
    srcBufferRange VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = dstPictureResource, type = VkVideoPictureResourceInfoKHR, offset = 48, size = 48
    dstPictureResource VkVideoPictureResourceInfoKHR <>
;   TypeKind.POINTER
;   name = pSetupReferenceSlot, type = const VkVideoReferenceSlotInfoKHR *, offset = 96, size = 8
    pSetupReferenceSlot qword ?
;   TypeKind.ELABORATED
;   name = referenceSlotCount, type = uint32_t, offset = 104, size = 4
    referenceSlotCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pReferenceSlots, type = const VkVideoReferenceSlotInfoKHR *, offset = 112, size = 8
    pReferenceSlots qword ?
VkVideoDecodeInfoKHR ends

; TYPEDEF PFN_vkCmdDecodeVideoKHR = void (*)(VkCommandBuffer, const VkVideoDecodeInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDecodeVideoKHR typedef qword

; void vkCmdDecodeVideoKHR(VkCommandBuffer commandBuffer, const VkVideoDecodeInfoKHR * pDecodeInfo)
vkCmdDecodeVideoKHR qword ?

; enum VkVideoEncodeH264CapabilityFlagBitsKHR {
    VK_VIDEO_ENCODE_H264_CAPABILITY_HRD_COMPLIANCE_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H264_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H264_CAPABILITY_ROW_UNALIGNED_SLICE_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H264_CAPABILITY_DIFFERENT_SLICE_TYPE_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR equ 32
    VK_VIDEO_ENCODE_H264_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR equ 64
    VK_VIDEO_ENCODE_H264_CAPABILITY_PER_SLICE_CONSTANT_QP_BIT_KHR equ 128
    VK_VIDEO_ENCODE_H264_CAPABILITY_GENERATE_PREFIX_NALU_BIT_KHR equ 256
    VK_VIDEO_ENCODE_H264_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH264CapabilityFlagBitsKHR = enum VkVideoEncodeH264CapabilityFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeH264CapabilityFlagBitsKHR typedef dword

; enum VkVideoEncodeH264CapabilityFlagBitsKHR {
    VK_VIDEO_ENCODE_H264_CAPABILITY_HRD_COMPLIANCE_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H264_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H264_CAPABILITY_ROW_UNALIGNED_SLICE_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H264_CAPABILITY_DIFFERENT_SLICE_TYPE_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR equ 32
    VK_VIDEO_ENCODE_H264_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR equ 64
    VK_VIDEO_ENCODE_H264_CAPABILITY_PER_SLICE_CONSTANT_QP_BIT_KHR equ 128
    VK_VIDEO_ENCODE_H264_CAPABILITY_GENERATE_PREFIX_NALU_BIT_KHR equ 256
    VK_VIDEO_ENCODE_H264_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH264CapabilityFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeH264CapabilityFlagsKHR typedef dword

; enum VkVideoEncodeH264StdFlagBitsKHR {
    VK_VIDEO_ENCODE_H264_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H264_STD_QPPRIME_Y_ZERO_TRANSFORM_BYPASS_FLAG_SET_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H264_STD_SCALING_MATRIX_PRESENT_FLAG_SET_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H264_STD_CHROMA_QP_INDEX_OFFSET_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H264_STD_SECOND_CHROMA_QP_INDEX_OFFSET_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H264_STD_PIC_INIT_QP_MINUS26_BIT_KHR equ 32
    VK_VIDEO_ENCODE_H264_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR equ 64
    VK_VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_EXPLICIT_BIT_KHR equ 128
    VK_VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_IMPLICIT_BIT_KHR equ 256
    VK_VIDEO_ENCODE_H264_STD_TRANSFORM_8X8_MODE_FLAG_SET_BIT_KHR equ 512
    VK_VIDEO_ENCODE_H264_STD_DIRECT_SPATIAL_MV_PRED_FLAG_UNSET_BIT_KHR equ 1024
    VK_VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_UNSET_BIT_KHR equ 2048
    VK_VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_SET_BIT_KHR equ 4096
    VK_VIDEO_ENCODE_H264_STD_DIRECT_8X8_INFERENCE_FLAG_UNSET_BIT_KHR equ 8192
    VK_VIDEO_ENCODE_H264_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR equ 16384
    VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_DISABLED_BIT_KHR equ 32768
    VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_ENABLED_BIT_KHR equ 65536
    VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_PARTIAL_BIT_KHR equ 131072
    VK_VIDEO_ENCODE_H264_STD_SLICE_QP_DELTA_BIT_KHR equ 524288
    VK_VIDEO_ENCODE_H264_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR equ 1048576
    VK_VIDEO_ENCODE_H264_STD_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH264StdFlagBitsKHR = enum VkVideoEncodeH264StdFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeH264StdFlagBitsKHR typedef dword

; enum VkVideoEncodeH264StdFlagBitsKHR {
    VK_VIDEO_ENCODE_H264_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H264_STD_QPPRIME_Y_ZERO_TRANSFORM_BYPASS_FLAG_SET_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H264_STD_SCALING_MATRIX_PRESENT_FLAG_SET_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H264_STD_CHROMA_QP_INDEX_OFFSET_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H264_STD_SECOND_CHROMA_QP_INDEX_OFFSET_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H264_STD_PIC_INIT_QP_MINUS26_BIT_KHR equ 32
    VK_VIDEO_ENCODE_H264_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR equ 64
    VK_VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_EXPLICIT_BIT_KHR equ 128
    VK_VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_IMPLICIT_BIT_KHR equ 256
    VK_VIDEO_ENCODE_H264_STD_TRANSFORM_8X8_MODE_FLAG_SET_BIT_KHR equ 512
    VK_VIDEO_ENCODE_H264_STD_DIRECT_SPATIAL_MV_PRED_FLAG_UNSET_BIT_KHR equ 1024
    VK_VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_UNSET_BIT_KHR equ 2048
    VK_VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_SET_BIT_KHR equ 4096
    VK_VIDEO_ENCODE_H264_STD_DIRECT_8X8_INFERENCE_FLAG_UNSET_BIT_KHR equ 8192
    VK_VIDEO_ENCODE_H264_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR equ 16384
    VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_DISABLED_BIT_KHR equ 32768
    VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_ENABLED_BIT_KHR equ 65536
    VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_PARTIAL_BIT_KHR equ 131072
    VK_VIDEO_ENCODE_H264_STD_SLICE_QP_DELTA_BIT_KHR equ 524288
    VK_VIDEO_ENCODE_H264_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR equ 1048576
    VK_VIDEO_ENCODE_H264_STD_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH264StdFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeH264StdFlagsKHR typedef dword

; enum VkVideoEncodeH264RateControlFlagBitsKHR {
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_REGULAR_GOP_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_TEMPORAL_LAYER_PATTERN_DYADIC_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH264RateControlFlagBitsKHR = enum VkVideoEncodeH264RateControlFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeH264RateControlFlagBitsKHR typedef dword

; enum VkVideoEncodeH264RateControlFlagBitsKHR {
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_REGULAR_GOP_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_TEMPORAL_LAYER_PATTERN_DYADIC_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H264_RATE_CONTROL_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH264RateControlFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeH264RateControlFlagsKHR typedef dword

VkVideoEncodeH264CapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeH264CapabilityFlagsKHR, offset = -1, size = 4
    flags VkVideoEncodeH264CapabilityFlagsKHR <>
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
;   TypeKind.ELABORATED
;   name = maxSliceCount, type = uint32_t, offset = -1, size = 4
    maxSliceCount dword ?
;   TypeKind.ELABORATED
;   name = maxPPictureL0ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxPPictureL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxBPictureL0ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxBPictureL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxL1ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxL1ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxTemporalLayerCount, type = uint32_t, offset = -1, size = 4
    maxTemporalLayerCount dword ?
;   TypeKind.ELABORATED
;   name = expectDyadicTemporalLayerPattern, type = VkBool32, offset = -1, size = 4
    expectDyadicTemporalLayerPattern VkBool32 <>
;   TypeKind.ELABORATED
;   name = minQp, type = int32_t, offset = -1, size = 4
    minQp sdword ?
;   TypeKind.ELABORATED
;   name = maxQp, type = int32_t, offset = -1, size = 4
    maxQp sdword ?
;   TypeKind.ELABORATED
;   name = prefersGopRemainingFrames, type = VkBool32, offset = -1, size = 4
    prefersGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = requiresGopRemainingFrames, type = VkBool32, offset = -1, size = 4
    requiresGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = stdSyntaxFlags, type = VkVideoEncodeH264StdFlagsKHR, offset = -1, size = 4
    stdSyntaxFlags VkVideoEncodeH264StdFlagsKHR <>
VkVideoEncodeH264CapabilitiesKHR ends

; TYPEDEF VkVideoEncodeH264CapabilitiesKHR = struct VkVideoEncodeH264CapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264CapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeH264CapabilityFlagsKHR, offset = -1, size = 4
    flags VkVideoEncodeH264CapabilityFlagsKHR <>
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
;   TypeKind.ELABORATED
;   name = maxSliceCount, type = uint32_t, offset = -1, size = 4
    maxSliceCount dword ?
;   TypeKind.ELABORATED
;   name = maxPPictureL0ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxPPictureL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxBPictureL0ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxBPictureL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxL1ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxL1ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxTemporalLayerCount, type = uint32_t, offset = -1, size = 4
    maxTemporalLayerCount dword ?
;   TypeKind.ELABORATED
;   name = expectDyadicTemporalLayerPattern, type = VkBool32, offset = -1, size = 4
    expectDyadicTemporalLayerPattern VkBool32 <>
;   TypeKind.ELABORATED
;   name = minQp, type = int32_t, offset = -1, size = 4
    minQp sdword ?
;   TypeKind.ELABORATED
;   name = maxQp, type = int32_t, offset = -1, size = 4
    maxQp sdword ?
;   TypeKind.ELABORATED
;   name = prefersGopRemainingFrames, type = VkBool32, offset = -1, size = 4
    prefersGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = requiresGopRemainingFrames, type = VkBool32, offset = -1, size = 4
    requiresGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = stdSyntaxFlags, type = VkVideoEncodeH264StdFlagsKHR, offset = -1, size = 4
    stdSyntaxFlags VkVideoEncodeH264StdFlagsKHR <>
VkVideoEncodeH264CapabilitiesKHR ends

VkVideoEncodeH264QpKHR struct
;   TypeKind.ELABORATED
;   name = qpI, type = int32_t, offset = 0, size = 4
    qpI sdword ?
;   TypeKind.ELABORATED
;   name = qpP, type = int32_t, offset = 4, size = 4
    qpP sdword ?
;   TypeKind.ELABORATED
;   name = qpB, type = int32_t, offset = 8, size = 4
    qpB sdword ?
VkVideoEncodeH264QpKHR ends

; TYPEDEF VkVideoEncodeH264QpKHR = struct VkVideoEncodeH264QpKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264QpKHR struct
;   TypeKind.ELABORATED
;   name = qpI, type = int32_t, offset = 0, size = 4
    qpI sdword ?
;   TypeKind.ELABORATED
;   name = qpP, type = int32_t, offset = 4, size = 4
    qpP sdword ?
;   TypeKind.ELABORATED
;   name = qpB, type = int32_t, offset = 8, size = 4
    qpB sdword ?
VkVideoEncodeH264QpKHR ends

VkVideoEncodeH264QualityLevelPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = preferredRateControlFlags, type = VkVideoEncodeH264RateControlFlagsKHR, offset = 16, size = 4
    preferredRateControlFlags VkVideoEncodeH264RateControlFlagsKHR <>
;   TypeKind.ELABORATED
;   name = preferredGopFrameCount, type = uint32_t, offset = 20, size = 4
    preferredGopFrameCount dword ?
;   TypeKind.ELABORATED
;   name = preferredIdrPeriod, type = uint32_t, offset = 24, size = 4
    preferredIdrPeriod dword ?
;   TypeKind.ELABORATED
;   name = preferredConsecutiveBFrameCount, type = uint32_t, offset = 28, size = 4
    preferredConsecutiveBFrameCount dword ?
;   TypeKind.ELABORATED
;   name = preferredTemporalLayerCount, type = uint32_t, offset = 32, size = 4
    preferredTemporalLayerCount dword ?
;   TypeKind.ELABORATED
;   name = preferredConstantQp, type = VkVideoEncodeH264QpKHR, offset = 36, size = 12
    preferredConstantQp VkVideoEncodeH264QpKHR <>
;   TypeKind.ELABORATED
;   name = preferredMaxL0ReferenceCount, type = uint32_t, offset = 48, size = 4
    preferredMaxL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = preferredMaxL1ReferenceCount, type = uint32_t, offset = 52, size = 4
    preferredMaxL1ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = preferredStdEntropyCodingModeFlag, type = VkBool32, offset = 56, size = 4
    preferredStdEntropyCodingModeFlag VkBool32 <>
VkVideoEncodeH264QualityLevelPropertiesKHR ends

; TYPEDEF VkVideoEncodeH264QualityLevelPropertiesKHR = struct VkVideoEncodeH264QualityLevelPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264QualityLevelPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = preferredRateControlFlags, type = VkVideoEncodeH264RateControlFlagsKHR, offset = 16, size = 4
    preferredRateControlFlags VkVideoEncodeH264RateControlFlagsKHR <>
;   TypeKind.ELABORATED
;   name = preferredGopFrameCount, type = uint32_t, offset = 20, size = 4
    preferredGopFrameCount dword ?
;   TypeKind.ELABORATED
;   name = preferredIdrPeriod, type = uint32_t, offset = 24, size = 4
    preferredIdrPeriod dword ?
;   TypeKind.ELABORATED
;   name = preferredConsecutiveBFrameCount, type = uint32_t, offset = 28, size = 4
    preferredConsecutiveBFrameCount dword ?
;   TypeKind.ELABORATED
;   name = preferredTemporalLayerCount, type = uint32_t, offset = 32, size = 4
    preferredTemporalLayerCount dword ?
;   TypeKind.ELABORATED
;   name = preferredConstantQp, type = VkVideoEncodeH264QpKHR, offset = 36, size = 12
    preferredConstantQp VkVideoEncodeH264QpKHR <>
;   TypeKind.ELABORATED
;   name = preferredMaxL0ReferenceCount, type = uint32_t, offset = 48, size = 4
    preferredMaxL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = preferredMaxL1ReferenceCount, type = uint32_t, offset = 52, size = 4
    preferredMaxL1ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = preferredStdEntropyCodingModeFlag, type = VkBool32, offset = 56, size = 4
    preferredStdEntropyCodingModeFlag VkBool32 <>
VkVideoEncodeH264QualityLevelPropertiesKHR ends

VkVideoEncodeH264SessionCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useMaxLevelIdc, type = VkBool32, offset = -1, size = 4
    useMaxLevelIdc VkBool32 <>
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
VkVideoEncodeH264SessionCreateInfoKHR ends

; TYPEDEF VkVideoEncodeH264SessionCreateInfoKHR = struct VkVideoEncodeH264SessionCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264SessionCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useMaxLevelIdc, type = VkBool32, offset = -1, size = 4
    useMaxLevelIdc VkBool32 <>
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
VkVideoEncodeH264SessionCreateInfoKHR ends

VkVideoEncodeH264SessionParametersAddInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stdSPSCount, type = uint32_t, offset = -1, size = 4
    stdSPSCount dword ?
;   TypeKind.POINTER
;   name = pStdSPSs, type = const int *, offset = -1, size = 8
    pStdSPSs qword ?
;   TypeKind.ELABORATED
;   name = stdPPSCount, type = uint32_t, offset = -1, size = 4
    stdPPSCount dword ?
;   TypeKind.POINTER
;   name = pStdPPSs, type = const int *, offset = -1, size = 8
    pStdPPSs qword ?
VkVideoEncodeH264SessionParametersAddInfoKHR ends

; TYPEDEF VkVideoEncodeH264SessionParametersAddInfoKHR = struct VkVideoEncodeH264SessionParametersAddInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264SessionParametersAddInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stdSPSCount, type = uint32_t, offset = -1, size = 4
    stdSPSCount dword ?
;   TypeKind.POINTER
;   name = pStdSPSs, type = const int *, offset = -1, size = 8
    pStdSPSs qword ?
;   TypeKind.ELABORATED
;   name = stdPPSCount, type = uint32_t, offset = -1, size = 4
    stdPPSCount dword ?
;   TypeKind.POINTER
;   name = pStdPPSs, type = const int *, offset = -1, size = 8
    pStdPPSs qword ?
VkVideoEncodeH264SessionParametersAddInfoKHR ends

VkVideoEncodeH264SessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxStdSPSCount, type = uint32_t, offset = 16, size = 4
    maxStdSPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdPPSCount, type = uint32_t, offset = 20, size = 4
    maxStdPPSCount dword ?
;   TypeKind.POINTER
;   name = pParametersAddInfo, type = const VkVideoEncodeH264SessionParametersAddInfoKHR *, offset = 24, size = 8
    pParametersAddInfo qword ?
VkVideoEncodeH264SessionParametersCreateInfoKHR ends

; TYPEDEF VkVideoEncodeH264SessionParametersCreateInfoKHR = struct VkVideoEncodeH264SessionParametersCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264SessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxStdSPSCount, type = uint32_t, offset = 16, size = 4
    maxStdSPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdPPSCount, type = uint32_t, offset = 20, size = 4
    maxStdPPSCount dword ?
;   TypeKind.POINTER
;   name = pParametersAddInfo, type = const VkVideoEncodeH264SessionParametersAddInfoKHR *, offset = 24, size = 8
    pParametersAddInfo qword ?
VkVideoEncodeH264SessionParametersCreateInfoKHR ends

VkVideoEncodeH264SessionParametersGetInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = writeStdSPS, type = VkBool32, offset = 16, size = 4
    writeStdSPS VkBool32 <>
;   TypeKind.ELABORATED
;   name = writeStdPPS, type = VkBool32, offset = 20, size = 4
    writeStdPPS VkBool32 <>
;   TypeKind.ELABORATED
;   name = stdSPSId, type = uint32_t, offset = 24, size = 4
    stdSPSId dword ?
;   TypeKind.ELABORATED
;   name = stdPPSId, type = uint32_t, offset = 28, size = 4
    stdPPSId dword ?
VkVideoEncodeH264SessionParametersGetInfoKHR ends

; TYPEDEF VkVideoEncodeH264SessionParametersGetInfoKHR = struct VkVideoEncodeH264SessionParametersGetInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264SessionParametersGetInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = writeStdSPS, type = VkBool32, offset = 16, size = 4
    writeStdSPS VkBool32 <>
;   TypeKind.ELABORATED
;   name = writeStdPPS, type = VkBool32, offset = 20, size = 4
    writeStdPPS VkBool32 <>
;   TypeKind.ELABORATED
;   name = stdSPSId, type = uint32_t, offset = 24, size = 4
    stdSPSId dword ?
;   TypeKind.ELABORATED
;   name = stdPPSId, type = uint32_t, offset = 28, size = 4
    stdPPSId dword ?
VkVideoEncodeH264SessionParametersGetInfoKHR ends

VkVideoEncodeH264SessionParametersFeedbackInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hasStdSPSOverrides, type = VkBool32, offset = 16, size = 4
    hasStdSPSOverrides VkBool32 <>
;   TypeKind.ELABORATED
;   name = hasStdPPSOverrides, type = VkBool32, offset = 20, size = 4
    hasStdPPSOverrides VkBool32 <>
VkVideoEncodeH264SessionParametersFeedbackInfoKHR ends

; TYPEDEF VkVideoEncodeH264SessionParametersFeedbackInfoKHR = struct VkVideoEncodeH264SessionParametersFeedbackInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264SessionParametersFeedbackInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hasStdSPSOverrides, type = VkBool32, offset = 16, size = 4
    hasStdSPSOverrides VkBool32 <>
;   TypeKind.ELABORATED
;   name = hasStdPPSOverrides, type = VkBool32, offset = 20, size = 4
    hasStdPPSOverrides VkBool32 <>
VkVideoEncodeH264SessionParametersFeedbackInfoKHR ends

VkVideoEncodeH264NaluSliceInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = constantQp, type = int32_t, offset = -1, size = 4
    constantQp sdword ?
;   TypeKind.POINTER
;   name = pStdSliceHeader, type = const int *, offset = -1, size = 8
    pStdSliceHeader qword ?
VkVideoEncodeH264NaluSliceInfoKHR ends

; TYPEDEF VkVideoEncodeH264NaluSliceInfoKHR = struct VkVideoEncodeH264NaluSliceInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264NaluSliceInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = constantQp, type = int32_t, offset = -1, size = 4
    constantQp sdword ?
;   TypeKind.POINTER
;   name = pStdSliceHeader, type = const int *, offset = -1, size = 8
    pStdSliceHeader qword ?
VkVideoEncodeH264NaluSliceInfoKHR ends

VkVideoEncodeH264PictureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = naluSliceEntryCount, type = uint32_t, offset = -1, size = 4
    naluSliceEntryCount dword ?
;   TypeKind.POINTER
;   name = pNaluSliceEntries, type = const VkVideoEncodeH264NaluSliceInfoKHR *, offset = -1, size = 8
    pNaluSliceEntries qword ?
;   TypeKind.POINTER
;   name = pStdPictureInfo, type = const int *, offset = -1, size = 8
    pStdPictureInfo qword ?
;   TypeKind.ELABORATED
;   name = generatePrefixNalu, type = VkBool32, offset = -1, size = 4
    generatePrefixNalu VkBool32 <>
VkVideoEncodeH264PictureInfoKHR ends

; TYPEDEF VkVideoEncodeH264PictureInfoKHR = struct VkVideoEncodeH264PictureInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264PictureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = naluSliceEntryCount, type = uint32_t, offset = -1, size = 4
    naluSliceEntryCount dword ?
;   TypeKind.POINTER
;   name = pNaluSliceEntries, type = const VkVideoEncodeH264NaluSliceInfoKHR *, offset = -1, size = 8
    pNaluSliceEntries qword ?
;   TypeKind.POINTER
;   name = pStdPictureInfo, type = const int *, offset = -1, size = 8
    pStdPictureInfo qword ?
;   TypeKind.ELABORATED
;   name = generatePrefixNalu, type = VkBool32, offset = -1, size = 4
    generatePrefixNalu VkBool32 <>
VkVideoEncodeH264PictureInfoKHR ends

VkVideoEncodeH264DpbSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdReferenceInfo, type = const int *, offset = -1, size = 8
    pStdReferenceInfo qword ?
VkVideoEncodeH264DpbSlotInfoKHR ends

; TYPEDEF VkVideoEncodeH264DpbSlotInfoKHR = struct VkVideoEncodeH264DpbSlotInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264DpbSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdReferenceInfo, type = const int *, offset = -1, size = 8
    pStdReferenceInfo qword ?
VkVideoEncodeH264DpbSlotInfoKHR ends

VkVideoEncodeH264ProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = stdProfileIdc, type = int, offset = -1, size = 4
    stdProfileIdc sdword ?
VkVideoEncodeH264ProfileInfoKHR ends

; TYPEDEF VkVideoEncodeH264ProfileInfoKHR = struct VkVideoEncodeH264ProfileInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264ProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = stdProfileIdc, type = int, offset = -1, size = 4
    stdProfileIdc sdword ?
VkVideoEncodeH264ProfileInfoKHR ends

VkVideoEncodeH264RateControlInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeH264RateControlFlagsKHR, offset = 16, size = 4
    flags VkVideoEncodeH264RateControlFlagsKHR <>
;   TypeKind.ELABORATED
;   name = gopFrameCount, type = uint32_t, offset = 20, size = 4
    gopFrameCount dword ?
;   TypeKind.ELABORATED
;   name = idrPeriod, type = uint32_t, offset = 24, size = 4
    idrPeriod dword ?
;   TypeKind.ELABORATED
;   name = consecutiveBFrameCount, type = uint32_t, offset = 28, size = 4
    consecutiveBFrameCount dword ?
;   TypeKind.ELABORATED
;   name = temporalLayerCount, type = uint32_t, offset = 32, size = 4
    temporalLayerCount dword ?
VkVideoEncodeH264RateControlInfoKHR ends

; TYPEDEF VkVideoEncodeH264RateControlInfoKHR = struct VkVideoEncodeH264RateControlInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264RateControlInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeH264RateControlFlagsKHR, offset = 16, size = 4
    flags VkVideoEncodeH264RateControlFlagsKHR <>
;   TypeKind.ELABORATED
;   name = gopFrameCount, type = uint32_t, offset = 20, size = 4
    gopFrameCount dword ?
;   TypeKind.ELABORATED
;   name = idrPeriod, type = uint32_t, offset = 24, size = 4
    idrPeriod dword ?
;   TypeKind.ELABORATED
;   name = consecutiveBFrameCount, type = uint32_t, offset = 28, size = 4
    consecutiveBFrameCount dword ?
;   TypeKind.ELABORATED
;   name = temporalLayerCount, type = uint32_t, offset = 32, size = 4
    temporalLayerCount dword ?
VkVideoEncodeH264RateControlInfoKHR ends

VkVideoEncodeH264FrameSizeKHR struct
;   TypeKind.ELABORATED
;   name = frameISize, type = uint32_t, offset = 0, size = 4
    frameISize dword ?
;   TypeKind.ELABORATED
;   name = framePSize, type = uint32_t, offset = 4, size = 4
    framePSize dword ?
;   TypeKind.ELABORATED
;   name = frameBSize, type = uint32_t, offset = 8, size = 4
    frameBSize dword ?
VkVideoEncodeH264FrameSizeKHR ends

; TYPEDEF VkVideoEncodeH264FrameSizeKHR = struct VkVideoEncodeH264FrameSizeKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264FrameSizeKHR struct
;   TypeKind.ELABORATED
;   name = frameISize, type = uint32_t, offset = 0, size = 4
    frameISize dword ?
;   TypeKind.ELABORATED
;   name = framePSize, type = uint32_t, offset = 4, size = 4
    framePSize dword ?
;   TypeKind.ELABORATED
;   name = frameBSize, type = uint32_t, offset = 8, size = 4
    frameBSize dword ?
VkVideoEncodeH264FrameSizeKHR ends

VkVideoEncodeH264RateControlLayerInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useMinQp, type = VkBool32, offset = 16, size = 4
    useMinQp VkBool32 <>
;   TypeKind.ELABORATED
;   name = minQp, type = VkVideoEncodeH264QpKHR, offset = 20, size = 12
    minQp VkVideoEncodeH264QpKHR <>
;   TypeKind.ELABORATED
;   name = useMaxQp, type = VkBool32, offset = 32, size = 4
    useMaxQp VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxQp, type = VkVideoEncodeH264QpKHR, offset = 36, size = 12
    maxQp VkVideoEncodeH264QpKHR <>
;   TypeKind.ELABORATED
;   name = useMaxFrameSize, type = VkBool32, offset = 48, size = 4
    useMaxFrameSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxFrameSize, type = VkVideoEncodeH264FrameSizeKHR, offset = 52, size = 12
    maxFrameSize VkVideoEncodeH264FrameSizeKHR <>
VkVideoEncodeH264RateControlLayerInfoKHR ends

; TYPEDEF VkVideoEncodeH264RateControlLayerInfoKHR = struct VkVideoEncodeH264RateControlLayerInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264RateControlLayerInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useMinQp, type = VkBool32, offset = 16, size = 4
    useMinQp VkBool32 <>
;   TypeKind.ELABORATED
;   name = minQp, type = VkVideoEncodeH264QpKHR, offset = 20, size = 12
    minQp VkVideoEncodeH264QpKHR <>
;   TypeKind.ELABORATED
;   name = useMaxQp, type = VkBool32, offset = 32, size = 4
    useMaxQp VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxQp, type = VkVideoEncodeH264QpKHR, offset = 36, size = 12
    maxQp VkVideoEncodeH264QpKHR <>
;   TypeKind.ELABORATED
;   name = useMaxFrameSize, type = VkBool32, offset = 48, size = 4
    useMaxFrameSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxFrameSize, type = VkVideoEncodeH264FrameSizeKHR, offset = 52, size = 12
    maxFrameSize VkVideoEncodeH264FrameSizeKHR <>
VkVideoEncodeH264RateControlLayerInfoKHR ends

VkVideoEncodeH264GopRemainingFrameInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useGopRemainingFrames, type = VkBool32, offset = 16, size = 4
    useGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = gopRemainingI, type = uint32_t, offset = 20, size = 4
    gopRemainingI dword ?
;   TypeKind.ELABORATED
;   name = gopRemainingP, type = uint32_t, offset = 24, size = 4
    gopRemainingP dword ?
;   TypeKind.ELABORATED
;   name = gopRemainingB, type = uint32_t, offset = 28, size = 4
    gopRemainingB dword ?
VkVideoEncodeH264GopRemainingFrameInfoKHR ends

; TYPEDEF VkVideoEncodeH264GopRemainingFrameInfoKHR = struct VkVideoEncodeH264GopRemainingFrameInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH264GopRemainingFrameInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useGopRemainingFrames, type = VkBool32, offset = 16, size = 4
    useGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = gopRemainingI, type = uint32_t, offset = 20, size = 4
    gopRemainingI dword ?
;   TypeKind.ELABORATED
;   name = gopRemainingP, type = uint32_t, offset = 24, size = 4
    gopRemainingP dword ?
;   TypeKind.ELABORATED
;   name = gopRemainingB, type = uint32_t, offset = 28, size = 4
    gopRemainingB dword ?
VkVideoEncodeH264GopRemainingFrameInfoKHR ends

; enum VkVideoEncodeH265CapabilityFlagBitsKHR {
    VK_VIDEO_ENCODE_H265_CAPABILITY_HRD_COMPLIANCE_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H265_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H265_CAPABILITY_ROW_UNALIGNED_SLICE_SEGMENT_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H265_CAPABILITY_DIFFERENT_SLICE_SEGMENT_TYPE_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR equ 32
    VK_VIDEO_ENCODE_H265_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR equ 64
    VK_VIDEO_ENCODE_H265_CAPABILITY_PER_SLICE_SEGMENT_CONSTANT_QP_BIT_KHR equ 128
    VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_TILES_PER_SLICE_SEGMENT_BIT_KHR equ 256
    VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_SLICE_SEGMENTS_PER_TILE_BIT_KHR equ 512
    VK_VIDEO_ENCODE_H265_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH265CapabilityFlagBitsKHR = enum VkVideoEncodeH265CapabilityFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeH265CapabilityFlagBitsKHR typedef dword

; enum VkVideoEncodeH265CapabilityFlagBitsKHR {
    VK_VIDEO_ENCODE_H265_CAPABILITY_HRD_COMPLIANCE_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H265_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H265_CAPABILITY_ROW_UNALIGNED_SLICE_SEGMENT_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H265_CAPABILITY_DIFFERENT_SLICE_SEGMENT_TYPE_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR equ 32
    VK_VIDEO_ENCODE_H265_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR equ 64
    VK_VIDEO_ENCODE_H265_CAPABILITY_PER_SLICE_SEGMENT_CONSTANT_QP_BIT_KHR equ 128
    VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_TILES_PER_SLICE_SEGMENT_BIT_KHR equ 256
    VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_SLICE_SEGMENTS_PER_TILE_BIT_KHR equ 512
    VK_VIDEO_ENCODE_H265_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH265CapabilityFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeH265CapabilityFlagsKHR typedef dword

; enum VkVideoEncodeH265StdFlagBitsKHR {
    VK_VIDEO_ENCODE_H265_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H265_STD_SAMPLE_ADAPTIVE_OFFSET_ENABLED_FLAG_SET_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H265_STD_SCALING_LIST_DATA_PRESENT_FLAG_SET_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H265_STD_PCM_ENABLED_FLAG_SET_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H265_STD_SPS_TEMPORAL_MVP_ENABLED_FLAG_SET_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H265_STD_INIT_QP_MINUS26_BIT_KHR equ 32
    VK_VIDEO_ENCODE_H265_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR equ 64
    VK_VIDEO_ENCODE_H265_STD_WEIGHTED_BIPRED_FLAG_SET_BIT_KHR equ 128
    VK_VIDEO_ENCODE_H265_STD_LOG2_PARALLEL_MERGE_LEVEL_MINUS2_BIT_KHR equ 256
    VK_VIDEO_ENCODE_H265_STD_SIGN_DATA_HIDING_ENABLED_FLAG_SET_BIT_KHR equ 512
    VK_VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_SET_BIT_KHR equ 1024
    VK_VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_UNSET_BIT_KHR equ 2048
    VK_VIDEO_ENCODE_H265_STD_PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT_FLAG_SET_BIT_KHR equ 4096
    VK_VIDEO_ENCODE_H265_STD_TRANSQUANT_BYPASS_ENABLED_FLAG_SET_BIT_KHR equ 8192
    VK_VIDEO_ENCODE_H265_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR equ 16384
    VK_VIDEO_ENCODE_H265_STD_ENTROPY_CODING_SYNC_ENABLED_FLAG_SET_BIT_KHR equ 32768
    VK_VIDEO_ENCODE_H265_STD_DEBLOCKING_FILTER_OVERRIDE_ENABLED_FLAG_SET_BIT_KHR equ 65536
    VK_VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENTS_ENABLED_FLAG_SET_BIT_KHR equ 131072
    VK_VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENT_FLAG_SET_BIT_KHR equ 262144
    VK_VIDEO_ENCODE_H265_STD_SLICE_QP_DELTA_BIT_KHR equ 524288
    VK_VIDEO_ENCODE_H265_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR equ 1048576
    VK_VIDEO_ENCODE_H265_STD_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH265StdFlagBitsKHR = enum VkVideoEncodeH265StdFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeH265StdFlagBitsKHR typedef dword

; enum VkVideoEncodeH265StdFlagBitsKHR {
    VK_VIDEO_ENCODE_H265_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H265_STD_SAMPLE_ADAPTIVE_OFFSET_ENABLED_FLAG_SET_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H265_STD_SCALING_LIST_DATA_PRESENT_FLAG_SET_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H265_STD_PCM_ENABLED_FLAG_SET_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H265_STD_SPS_TEMPORAL_MVP_ENABLED_FLAG_SET_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H265_STD_INIT_QP_MINUS26_BIT_KHR equ 32
    VK_VIDEO_ENCODE_H265_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR equ 64
    VK_VIDEO_ENCODE_H265_STD_WEIGHTED_BIPRED_FLAG_SET_BIT_KHR equ 128
    VK_VIDEO_ENCODE_H265_STD_LOG2_PARALLEL_MERGE_LEVEL_MINUS2_BIT_KHR equ 256
    VK_VIDEO_ENCODE_H265_STD_SIGN_DATA_HIDING_ENABLED_FLAG_SET_BIT_KHR equ 512
    VK_VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_SET_BIT_KHR equ 1024
    VK_VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_UNSET_BIT_KHR equ 2048
    VK_VIDEO_ENCODE_H265_STD_PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT_FLAG_SET_BIT_KHR equ 4096
    VK_VIDEO_ENCODE_H265_STD_TRANSQUANT_BYPASS_ENABLED_FLAG_SET_BIT_KHR equ 8192
    VK_VIDEO_ENCODE_H265_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR equ 16384
    VK_VIDEO_ENCODE_H265_STD_ENTROPY_CODING_SYNC_ENABLED_FLAG_SET_BIT_KHR equ 32768
    VK_VIDEO_ENCODE_H265_STD_DEBLOCKING_FILTER_OVERRIDE_ENABLED_FLAG_SET_BIT_KHR equ 65536
    VK_VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENTS_ENABLED_FLAG_SET_BIT_KHR equ 131072
    VK_VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENT_FLAG_SET_BIT_KHR equ 262144
    VK_VIDEO_ENCODE_H265_STD_SLICE_QP_DELTA_BIT_KHR equ 524288
    VK_VIDEO_ENCODE_H265_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR equ 1048576
    VK_VIDEO_ENCODE_H265_STD_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH265StdFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeH265StdFlagsKHR typedef dword

; enum VkVideoEncodeH265CtbSizeFlagBitsKHR {
    VK_VIDEO_ENCODE_H265_CTB_SIZE_16_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H265_CTB_SIZE_32_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H265_CTB_SIZE_64_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H265_CTB_SIZE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH265CtbSizeFlagBitsKHR = enum VkVideoEncodeH265CtbSizeFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeH265CtbSizeFlagBitsKHR typedef dword

; enum VkVideoEncodeH265CtbSizeFlagBitsKHR {
    VK_VIDEO_ENCODE_H265_CTB_SIZE_16_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H265_CTB_SIZE_32_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H265_CTB_SIZE_64_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H265_CTB_SIZE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH265CtbSizeFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeH265CtbSizeFlagsKHR typedef dword

; enum VkVideoEncodeH265TransformBlockSizeFlagBitsKHR {
    VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_4_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_8_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_16_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_32_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH265TransformBlockSizeFlagBitsKHR = enum VkVideoEncodeH265TransformBlockSizeFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeH265TransformBlockSizeFlagBitsKHR typedef dword

; enum VkVideoEncodeH265TransformBlockSizeFlagBitsKHR {
    VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_4_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_8_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_16_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_32_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH265TransformBlockSizeFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeH265TransformBlockSizeFlagsKHR typedef dword

; enum VkVideoEncodeH265RateControlFlagBitsKHR {
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_REGULAR_GOP_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_TEMPORAL_SUB_LAYER_PATTERN_DYADIC_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH265RateControlFlagBitsKHR = enum VkVideoEncodeH265RateControlFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeH265RateControlFlagBitsKHR typedef dword

; enum VkVideoEncodeH265RateControlFlagBitsKHR {
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR equ 1
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_REGULAR_GOP_BIT_KHR equ 2
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR equ 4
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR equ 8
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_TEMPORAL_SUB_LAYER_PATTERN_DYADIC_BIT_KHR equ 16
    VK_VIDEO_ENCODE_H265_RATE_CONTROL_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeH265RateControlFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeH265RateControlFlagsKHR typedef dword

VkVideoEncodeH265CapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeH265CapabilityFlagsKHR, offset = -1, size = 4
    flags VkVideoEncodeH265CapabilityFlagsKHR <>
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
;   TypeKind.ELABORATED
;   name = maxSliceSegmentCount, type = uint32_t, offset = -1, size = 4
    maxSliceSegmentCount dword ?
;   TypeKind.ELABORATED
;   name = maxTiles, type = VkExtent2D, offset = -1, size = 8
    maxTiles VkExtent2D <>
;   TypeKind.ELABORATED
;   name = ctbSizes, type = VkVideoEncodeH265CtbSizeFlagsKHR, offset = -1, size = 4
    ctbSizes VkVideoEncodeH265CtbSizeFlagsKHR <>
;   TypeKind.ELABORATED
;   name = transformBlockSizes, type = VkVideoEncodeH265TransformBlockSizeFlagsKHR, offset = -1, size = 4
    transformBlockSizes VkVideoEncodeH265TransformBlockSizeFlagsKHR <>
;   TypeKind.ELABORATED
;   name = maxPPictureL0ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxPPictureL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxBPictureL0ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxBPictureL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxL1ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxL1ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxSubLayerCount, type = uint32_t, offset = -1, size = 4
    maxSubLayerCount dword ?
;   TypeKind.ELABORATED
;   name = expectDyadicTemporalSubLayerPattern, type = VkBool32, offset = -1, size = 4
    expectDyadicTemporalSubLayerPattern VkBool32 <>
;   TypeKind.ELABORATED
;   name = minQp, type = int32_t, offset = -1, size = 4
    minQp sdword ?
;   TypeKind.ELABORATED
;   name = maxQp, type = int32_t, offset = -1, size = 4
    maxQp sdword ?
;   TypeKind.ELABORATED
;   name = prefersGopRemainingFrames, type = VkBool32, offset = -1, size = 4
    prefersGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = requiresGopRemainingFrames, type = VkBool32, offset = -1, size = 4
    requiresGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = stdSyntaxFlags, type = VkVideoEncodeH265StdFlagsKHR, offset = -1, size = 4
    stdSyntaxFlags VkVideoEncodeH265StdFlagsKHR <>
VkVideoEncodeH265CapabilitiesKHR ends

; TYPEDEF VkVideoEncodeH265CapabilitiesKHR = struct VkVideoEncodeH265CapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265CapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeH265CapabilityFlagsKHR, offset = -1, size = 4
    flags VkVideoEncodeH265CapabilityFlagsKHR <>
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
;   TypeKind.ELABORATED
;   name = maxSliceSegmentCount, type = uint32_t, offset = -1, size = 4
    maxSliceSegmentCount dword ?
;   TypeKind.ELABORATED
;   name = maxTiles, type = VkExtent2D, offset = -1, size = 8
    maxTiles VkExtent2D <>
;   TypeKind.ELABORATED
;   name = ctbSizes, type = VkVideoEncodeH265CtbSizeFlagsKHR, offset = -1, size = 4
    ctbSizes VkVideoEncodeH265CtbSizeFlagsKHR <>
;   TypeKind.ELABORATED
;   name = transformBlockSizes, type = VkVideoEncodeH265TransformBlockSizeFlagsKHR, offset = -1, size = 4
    transformBlockSizes VkVideoEncodeH265TransformBlockSizeFlagsKHR <>
;   TypeKind.ELABORATED
;   name = maxPPictureL0ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxPPictureL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxBPictureL0ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxBPictureL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxL1ReferenceCount, type = uint32_t, offset = -1, size = 4
    maxL1ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxSubLayerCount, type = uint32_t, offset = -1, size = 4
    maxSubLayerCount dword ?
;   TypeKind.ELABORATED
;   name = expectDyadicTemporalSubLayerPattern, type = VkBool32, offset = -1, size = 4
    expectDyadicTemporalSubLayerPattern VkBool32 <>
;   TypeKind.ELABORATED
;   name = minQp, type = int32_t, offset = -1, size = 4
    minQp sdword ?
;   TypeKind.ELABORATED
;   name = maxQp, type = int32_t, offset = -1, size = 4
    maxQp sdword ?
;   TypeKind.ELABORATED
;   name = prefersGopRemainingFrames, type = VkBool32, offset = -1, size = 4
    prefersGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = requiresGopRemainingFrames, type = VkBool32, offset = -1, size = 4
    requiresGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = stdSyntaxFlags, type = VkVideoEncodeH265StdFlagsKHR, offset = -1, size = 4
    stdSyntaxFlags VkVideoEncodeH265StdFlagsKHR <>
VkVideoEncodeH265CapabilitiesKHR ends

VkVideoEncodeH265SessionCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useMaxLevelIdc, type = VkBool32, offset = -1, size = 4
    useMaxLevelIdc VkBool32 <>
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
VkVideoEncodeH265SessionCreateInfoKHR ends

; TYPEDEF VkVideoEncodeH265SessionCreateInfoKHR = struct VkVideoEncodeH265SessionCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265SessionCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useMaxLevelIdc, type = VkBool32, offset = -1, size = 4
    useMaxLevelIdc VkBool32 <>
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
VkVideoEncodeH265SessionCreateInfoKHR ends

VkVideoEncodeH265QpKHR struct
;   TypeKind.ELABORATED
;   name = qpI, type = int32_t, offset = 0, size = 4
    qpI sdword ?
;   TypeKind.ELABORATED
;   name = qpP, type = int32_t, offset = 4, size = 4
    qpP sdword ?
;   TypeKind.ELABORATED
;   name = qpB, type = int32_t, offset = 8, size = 4
    qpB sdword ?
VkVideoEncodeH265QpKHR ends

; TYPEDEF VkVideoEncodeH265QpKHR = struct VkVideoEncodeH265QpKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265QpKHR struct
;   TypeKind.ELABORATED
;   name = qpI, type = int32_t, offset = 0, size = 4
    qpI sdword ?
;   TypeKind.ELABORATED
;   name = qpP, type = int32_t, offset = 4, size = 4
    qpP sdword ?
;   TypeKind.ELABORATED
;   name = qpB, type = int32_t, offset = 8, size = 4
    qpB sdword ?
VkVideoEncodeH265QpKHR ends

VkVideoEncodeH265QualityLevelPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = preferredRateControlFlags, type = VkVideoEncodeH265RateControlFlagsKHR, offset = 16, size = 4
    preferredRateControlFlags VkVideoEncodeH265RateControlFlagsKHR <>
;   TypeKind.ELABORATED
;   name = preferredGopFrameCount, type = uint32_t, offset = 20, size = 4
    preferredGopFrameCount dword ?
;   TypeKind.ELABORATED
;   name = preferredIdrPeriod, type = uint32_t, offset = 24, size = 4
    preferredIdrPeriod dword ?
;   TypeKind.ELABORATED
;   name = preferredConsecutiveBFrameCount, type = uint32_t, offset = 28, size = 4
    preferredConsecutiveBFrameCount dword ?
;   TypeKind.ELABORATED
;   name = preferredSubLayerCount, type = uint32_t, offset = 32, size = 4
    preferredSubLayerCount dword ?
;   TypeKind.ELABORATED
;   name = preferredConstantQp, type = VkVideoEncodeH265QpKHR, offset = 36, size = 12
    preferredConstantQp VkVideoEncodeH265QpKHR <>
;   TypeKind.ELABORATED
;   name = preferredMaxL0ReferenceCount, type = uint32_t, offset = 48, size = 4
    preferredMaxL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = preferredMaxL1ReferenceCount, type = uint32_t, offset = 52, size = 4
    preferredMaxL1ReferenceCount dword ?
VkVideoEncodeH265QualityLevelPropertiesKHR ends

; TYPEDEF VkVideoEncodeH265QualityLevelPropertiesKHR = struct VkVideoEncodeH265QualityLevelPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265QualityLevelPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = preferredRateControlFlags, type = VkVideoEncodeH265RateControlFlagsKHR, offset = 16, size = 4
    preferredRateControlFlags VkVideoEncodeH265RateControlFlagsKHR <>
;   TypeKind.ELABORATED
;   name = preferredGopFrameCount, type = uint32_t, offset = 20, size = 4
    preferredGopFrameCount dword ?
;   TypeKind.ELABORATED
;   name = preferredIdrPeriod, type = uint32_t, offset = 24, size = 4
    preferredIdrPeriod dword ?
;   TypeKind.ELABORATED
;   name = preferredConsecutiveBFrameCount, type = uint32_t, offset = 28, size = 4
    preferredConsecutiveBFrameCount dword ?
;   TypeKind.ELABORATED
;   name = preferredSubLayerCount, type = uint32_t, offset = 32, size = 4
    preferredSubLayerCount dword ?
;   TypeKind.ELABORATED
;   name = preferredConstantQp, type = VkVideoEncodeH265QpKHR, offset = 36, size = 12
    preferredConstantQp VkVideoEncodeH265QpKHR <>
;   TypeKind.ELABORATED
;   name = preferredMaxL0ReferenceCount, type = uint32_t, offset = 48, size = 4
    preferredMaxL0ReferenceCount dword ?
;   TypeKind.ELABORATED
;   name = preferredMaxL1ReferenceCount, type = uint32_t, offset = 52, size = 4
    preferredMaxL1ReferenceCount dword ?
VkVideoEncodeH265QualityLevelPropertiesKHR ends

VkVideoEncodeH265SessionParametersAddInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stdVPSCount, type = uint32_t, offset = -1, size = 4
    stdVPSCount dword ?
;   TypeKind.POINTER
;   name = pStdVPSs, type = const int *, offset = -1, size = 8
    pStdVPSs qword ?
;   TypeKind.ELABORATED
;   name = stdSPSCount, type = uint32_t, offset = -1, size = 4
    stdSPSCount dword ?
;   TypeKind.POINTER
;   name = pStdSPSs, type = const int *, offset = -1, size = 8
    pStdSPSs qword ?
;   TypeKind.ELABORATED
;   name = stdPPSCount, type = uint32_t, offset = -1, size = 4
    stdPPSCount dword ?
;   TypeKind.POINTER
;   name = pStdPPSs, type = const int *, offset = -1, size = 8
    pStdPPSs qword ?
VkVideoEncodeH265SessionParametersAddInfoKHR ends

; TYPEDEF VkVideoEncodeH265SessionParametersAddInfoKHR = struct VkVideoEncodeH265SessionParametersAddInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265SessionParametersAddInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stdVPSCount, type = uint32_t, offset = -1, size = 4
    stdVPSCount dword ?
;   TypeKind.POINTER
;   name = pStdVPSs, type = const int *, offset = -1, size = 8
    pStdVPSs qword ?
;   TypeKind.ELABORATED
;   name = stdSPSCount, type = uint32_t, offset = -1, size = 4
    stdSPSCount dword ?
;   TypeKind.POINTER
;   name = pStdSPSs, type = const int *, offset = -1, size = 8
    pStdSPSs qword ?
;   TypeKind.ELABORATED
;   name = stdPPSCount, type = uint32_t, offset = -1, size = 4
    stdPPSCount dword ?
;   TypeKind.POINTER
;   name = pStdPPSs, type = const int *, offset = -1, size = 8
    pStdPPSs qword ?
VkVideoEncodeH265SessionParametersAddInfoKHR ends

VkVideoEncodeH265SessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxStdVPSCount, type = uint32_t, offset = 16, size = 4
    maxStdVPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdSPSCount, type = uint32_t, offset = 20, size = 4
    maxStdSPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdPPSCount, type = uint32_t, offset = 24, size = 4
    maxStdPPSCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pParametersAddInfo, type = const VkVideoEncodeH265SessionParametersAddInfoKHR *, offset = 32, size = 8
    pParametersAddInfo qword ?
VkVideoEncodeH265SessionParametersCreateInfoKHR ends

; TYPEDEF VkVideoEncodeH265SessionParametersCreateInfoKHR = struct VkVideoEncodeH265SessionParametersCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265SessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxStdVPSCount, type = uint32_t, offset = 16, size = 4
    maxStdVPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdSPSCount, type = uint32_t, offset = 20, size = 4
    maxStdSPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdPPSCount, type = uint32_t, offset = 24, size = 4
    maxStdPPSCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pParametersAddInfo, type = const VkVideoEncodeH265SessionParametersAddInfoKHR *, offset = 32, size = 8
    pParametersAddInfo qword ?
VkVideoEncodeH265SessionParametersCreateInfoKHR ends

VkVideoEncodeH265SessionParametersGetInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = writeStdVPS, type = VkBool32, offset = 16, size = 4
    writeStdVPS VkBool32 <>
;   TypeKind.ELABORATED
;   name = writeStdSPS, type = VkBool32, offset = 20, size = 4
    writeStdSPS VkBool32 <>
;   TypeKind.ELABORATED
;   name = writeStdPPS, type = VkBool32, offset = 24, size = 4
    writeStdPPS VkBool32 <>
;   TypeKind.ELABORATED
;   name = stdVPSId, type = uint32_t, offset = 28, size = 4
    stdVPSId dword ?
;   TypeKind.ELABORATED
;   name = stdSPSId, type = uint32_t, offset = 32, size = 4
    stdSPSId dword ?
;   TypeKind.ELABORATED
;   name = stdPPSId, type = uint32_t, offset = 36, size = 4
    stdPPSId dword ?
VkVideoEncodeH265SessionParametersGetInfoKHR ends

; TYPEDEF VkVideoEncodeH265SessionParametersGetInfoKHR = struct VkVideoEncodeH265SessionParametersGetInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265SessionParametersGetInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = writeStdVPS, type = VkBool32, offset = 16, size = 4
    writeStdVPS VkBool32 <>
;   TypeKind.ELABORATED
;   name = writeStdSPS, type = VkBool32, offset = 20, size = 4
    writeStdSPS VkBool32 <>
;   TypeKind.ELABORATED
;   name = writeStdPPS, type = VkBool32, offset = 24, size = 4
    writeStdPPS VkBool32 <>
;   TypeKind.ELABORATED
;   name = stdVPSId, type = uint32_t, offset = 28, size = 4
    stdVPSId dword ?
;   TypeKind.ELABORATED
;   name = stdSPSId, type = uint32_t, offset = 32, size = 4
    stdSPSId dword ?
;   TypeKind.ELABORATED
;   name = stdPPSId, type = uint32_t, offset = 36, size = 4
    stdPPSId dword ?
VkVideoEncodeH265SessionParametersGetInfoKHR ends

VkVideoEncodeH265SessionParametersFeedbackInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hasStdVPSOverrides, type = VkBool32, offset = 16, size = 4
    hasStdVPSOverrides VkBool32 <>
;   TypeKind.ELABORATED
;   name = hasStdSPSOverrides, type = VkBool32, offset = 20, size = 4
    hasStdSPSOverrides VkBool32 <>
;   TypeKind.ELABORATED
;   name = hasStdPPSOverrides, type = VkBool32, offset = 24, size = 4
    hasStdPPSOverrides VkBool32 <>
VkVideoEncodeH265SessionParametersFeedbackInfoKHR ends

; TYPEDEF VkVideoEncodeH265SessionParametersFeedbackInfoKHR = struct VkVideoEncodeH265SessionParametersFeedbackInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265SessionParametersFeedbackInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hasStdVPSOverrides, type = VkBool32, offset = 16, size = 4
    hasStdVPSOverrides VkBool32 <>
;   TypeKind.ELABORATED
;   name = hasStdSPSOverrides, type = VkBool32, offset = 20, size = 4
    hasStdSPSOverrides VkBool32 <>
;   TypeKind.ELABORATED
;   name = hasStdPPSOverrides, type = VkBool32, offset = 24, size = 4
    hasStdPPSOverrides VkBool32 <>
VkVideoEncodeH265SessionParametersFeedbackInfoKHR ends

VkVideoEncodeH265NaluSliceSegmentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = constantQp, type = int32_t, offset = -1, size = 4
    constantQp sdword ?
;   TypeKind.POINTER
;   name = pStdSliceSegmentHeader, type = const int *, offset = -1, size = 8
    pStdSliceSegmentHeader qword ?
VkVideoEncodeH265NaluSliceSegmentInfoKHR ends

; TYPEDEF VkVideoEncodeH265NaluSliceSegmentInfoKHR = struct VkVideoEncodeH265NaluSliceSegmentInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265NaluSliceSegmentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = constantQp, type = int32_t, offset = -1, size = 4
    constantQp sdword ?
;   TypeKind.POINTER
;   name = pStdSliceSegmentHeader, type = const int *, offset = -1, size = 8
    pStdSliceSegmentHeader qword ?
VkVideoEncodeH265NaluSliceSegmentInfoKHR ends

VkVideoEncodeH265PictureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = naluSliceSegmentEntryCount, type = uint32_t, offset = -1, size = 4
    naluSliceSegmentEntryCount dword ?
;   TypeKind.POINTER
;   name = pNaluSliceSegmentEntries, type = const VkVideoEncodeH265NaluSliceSegmentInfoKHR *, offset = -1, size = 8
    pNaluSliceSegmentEntries qword ?
;   TypeKind.POINTER
;   name = pStdPictureInfo, type = const int *, offset = -1, size = 8
    pStdPictureInfo qword ?
VkVideoEncodeH265PictureInfoKHR ends

; TYPEDEF VkVideoEncodeH265PictureInfoKHR = struct VkVideoEncodeH265PictureInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265PictureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = naluSliceSegmentEntryCount, type = uint32_t, offset = -1, size = 4
    naluSliceSegmentEntryCount dword ?
;   TypeKind.POINTER
;   name = pNaluSliceSegmentEntries, type = const VkVideoEncodeH265NaluSliceSegmentInfoKHR *, offset = -1, size = 8
    pNaluSliceSegmentEntries qword ?
;   TypeKind.POINTER
;   name = pStdPictureInfo, type = const int *, offset = -1, size = 8
    pStdPictureInfo qword ?
VkVideoEncodeH265PictureInfoKHR ends

VkVideoEncodeH265DpbSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdReferenceInfo, type = const int *, offset = -1, size = 8
    pStdReferenceInfo qword ?
VkVideoEncodeH265DpbSlotInfoKHR ends

; TYPEDEF VkVideoEncodeH265DpbSlotInfoKHR = struct VkVideoEncodeH265DpbSlotInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265DpbSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdReferenceInfo, type = const int *, offset = -1, size = 8
    pStdReferenceInfo qword ?
VkVideoEncodeH265DpbSlotInfoKHR ends

VkVideoEncodeH265ProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = stdProfileIdc, type = int, offset = -1, size = 4
    stdProfileIdc sdword ?
VkVideoEncodeH265ProfileInfoKHR ends

; TYPEDEF VkVideoEncodeH265ProfileInfoKHR = struct VkVideoEncodeH265ProfileInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265ProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = stdProfileIdc, type = int, offset = -1, size = 4
    stdProfileIdc sdword ?
VkVideoEncodeH265ProfileInfoKHR ends

VkVideoEncodeH265RateControlInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeH265RateControlFlagsKHR, offset = 16, size = 4
    flags VkVideoEncodeH265RateControlFlagsKHR <>
;   TypeKind.ELABORATED
;   name = gopFrameCount, type = uint32_t, offset = 20, size = 4
    gopFrameCount dword ?
;   TypeKind.ELABORATED
;   name = idrPeriod, type = uint32_t, offset = 24, size = 4
    idrPeriod dword ?
;   TypeKind.ELABORATED
;   name = consecutiveBFrameCount, type = uint32_t, offset = 28, size = 4
    consecutiveBFrameCount dword ?
;   TypeKind.ELABORATED
;   name = subLayerCount, type = uint32_t, offset = 32, size = 4
    subLayerCount dword ?
VkVideoEncodeH265RateControlInfoKHR ends

; TYPEDEF VkVideoEncodeH265RateControlInfoKHR = struct VkVideoEncodeH265RateControlInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265RateControlInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeH265RateControlFlagsKHR, offset = 16, size = 4
    flags VkVideoEncodeH265RateControlFlagsKHR <>
;   TypeKind.ELABORATED
;   name = gopFrameCount, type = uint32_t, offset = 20, size = 4
    gopFrameCount dword ?
;   TypeKind.ELABORATED
;   name = idrPeriod, type = uint32_t, offset = 24, size = 4
    idrPeriod dword ?
;   TypeKind.ELABORATED
;   name = consecutiveBFrameCount, type = uint32_t, offset = 28, size = 4
    consecutiveBFrameCount dword ?
;   TypeKind.ELABORATED
;   name = subLayerCount, type = uint32_t, offset = 32, size = 4
    subLayerCount dword ?
VkVideoEncodeH265RateControlInfoKHR ends

VkVideoEncodeH265FrameSizeKHR struct
;   TypeKind.ELABORATED
;   name = frameISize, type = uint32_t, offset = 0, size = 4
    frameISize dword ?
;   TypeKind.ELABORATED
;   name = framePSize, type = uint32_t, offset = 4, size = 4
    framePSize dword ?
;   TypeKind.ELABORATED
;   name = frameBSize, type = uint32_t, offset = 8, size = 4
    frameBSize dword ?
VkVideoEncodeH265FrameSizeKHR ends

; TYPEDEF VkVideoEncodeH265FrameSizeKHR = struct VkVideoEncodeH265FrameSizeKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265FrameSizeKHR struct
;   TypeKind.ELABORATED
;   name = frameISize, type = uint32_t, offset = 0, size = 4
    frameISize dword ?
;   TypeKind.ELABORATED
;   name = framePSize, type = uint32_t, offset = 4, size = 4
    framePSize dword ?
;   TypeKind.ELABORATED
;   name = frameBSize, type = uint32_t, offset = 8, size = 4
    frameBSize dword ?
VkVideoEncodeH265FrameSizeKHR ends

VkVideoEncodeH265RateControlLayerInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useMinQp, type = VkBool32, offset = 16, size = 4
    useMinQp VkBool32 <>
;   TypeKind.ELABORATED
;   name = minQp, type = VkVideoEncodeH265QpKHR, offset = 20, size = 12
    minQp VkVideoEncodeH265QpKHR <>
;   TypeKind.ELABORATED
;   name = useMaxQp, type = VkBool32, offset = 32, size = 4
    useMaxQp VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxQp, type = VkVideoEncodeH265QpKHR, offset = 36, size = 12
    maxQp VkVideoEncodeH265QpKHR <>
;   TypeKind.ELABORATED
;   name = useMaxFrameSize, type = VkBool32, offset = 48, size = 4
    useMaxFrameSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxFrameSize, type = VkVideoEncodeH265FrameSizeKHR, offset = 52, size = 12
    maxFrameSize VkVideoEncodeH265FrameSizeKHR <>
VkVideoEncodeH265RateControlLayerInfoKHR ends

; TYPEDEF VkVideoEncodeH265RateControlLayerInfoKHR = struct VkVideoEncodeH265RateControlLayerInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265RateControlLayerInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useMinQp, type = VkBool32, offset = 16, size = 4
    useMinQp VkBool32 <>
;   TypeKind.ELABORATED
;   name = minQp, type = VkVideoEncodeH265QpKHR, offset = 20, size = 12
    minQp VkVideoEncodeH265QpKHR <>
;   TypeKind.ELABORATED
;   name = useMaxQp, type = VkBool32, offset = 32, size = 4
    useMaxQp VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxQp, type = VkVideoEncodeH265QpKHR, offset = 36, size = 12
    maxQp VkVideoEncodeH265QpKHR <>
;   TypeKind.ELABORATED
;   name = useMaxFrameSize, type = VkBool32, offset = 48, size = 4
    useMaxFrameSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxFrameSize, type = VkVideoEncodeH265FrameSizeKHR, offset = 52, size = 12
    maxFrameSize VkVideoEncodeH265FrameSizeKHR <>
VkVideoEncodeH265RateControlLayerInfoKHR ends

VkVideoEncodeH265GopRemainingFrameInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useGopRemainingFrames, type = VkBool32, offset = 16, size = 4
    useGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = gopRemainingI, type = uint32_t, offset = 20, size = 4
    gopRemainingI dword ?
;   TypeKind.ELABORATED
;   name = gopRemainingP, type = uint32_t, offset = 24, size = 4
    gopRemainingP dword ?
;   TypeKind.ELABORATED
;   name = gopRemainingB, type = uint32_t, offset = 28, size = 4
    gopRemainingB dword ?
VkVideoEncodeH265GopRemainingFrameInfoKHR ends

; TYPEDEF VkVideoEncodeH265GopRemainingFrameInfoKHR = struct VkVideoEncodeH265GopRemainingFrameInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeH265GopRemainingFrameInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = useGopRemainingFrames, type = VkBool32, offset = 16, size = 4
    useGopRemainingFrames VkBool32 <>
;   TypeKind.ELABORATED
;   name = gopRemainingI, type = uint32_t, offset = 20, size = 4
    gopRemainingI dword ?
;   TypeKind.ELABORATED
;   name = gopRemainingP, type = uint32_t, offset = 24, size = 4
    gopRemainingP dword ?
;   TypeKind.ELABORATED
;   name = gopRemainingB, type = uint32_t, offset = 28, size = 4
    gopRemainingB dword ?
VkVideoEncodeH265GopRemainingFrameInfoKHR ends

; enum VkVideoDecodeH264PictureLayoutFlagBitsKHR {
    VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_PROGRESSIVE_KHR equ 0
    VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_INTERLEAVED_LINES_BIT_KHR equ 1
    VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_SEPARATE_PLANES_BIT_KHR equ 2
    VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoDecodeH264PictureLayoutFlagBitsKHR = enum VkVideoDecodeH264PictureLayoutFlagBitsKHR, TypeKind.ELABORATED
VkVideoDecodeH264PictureLayoutFlagBitsKHR typedef dword

; enum VkVideoDecodeH264PictureLayoutFlagBitsKHR {
    VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_PROGRESSIVE_KHR equ 0
    VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_INTERLEAVED_LINES_BIT_KHR equ 1
    VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_SEPARATE_PLANES_BIT_KHR equ 2
    VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoDecodeH264PictureLayoutFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoDecodeH264PictureLayoutFlagsKHR typedef dword

VkVideoDecodeH264ProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = stdProfileIdc, type = int, offset = -1, size = 4
    stdProfileIdc sdword ?
;   TypeKind.ELABORATED
;   name = pictureLayout, type = VkVideoDecodeH264PictureLayoutFlagBitsKHR, offset = -1, size = 4
    pictureLayout VkVideoDecodeH264PictureLayoutFlagBitsKHR <>
VkVideoDecodeH264ProfileInfoKHR ends

; TYPEDEF VkVideoDecodeH264ProfileInfoKHR = struct VkVideoDecodeH264ProfileInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH264ProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = stdProfileIdc, type = int, offset = -1, size = 4
    stdProfileIdc sdword ?
;   TypeKind.ELABORATED
;   name = pictureLayout, type = VkVideoDecodeH264PictureLayoutFlagBitsKHR, offset = -1, size = 4
    pictureLayout VkVideoDecodeH264PictureLayoutFlagBitsKHR <>
VkVideoDecodeH264ProfileInfoKHR ends

VkVideoDecodeH264CapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
;   TypeKind.ELABORATED
;   name = fieldOffsetGranularity, type = VkOffset2D, offset = -1, size = 8
    fieldOffsetGranularity VkOffset2D <>
VkVideoDecodeH264CapabilitiesKHR ends

; TYPEDEF VkVideoDecodeH264CapabilitiesKHR = struct VkVideoDecodeH264CapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH264CapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
;   TypeKind.ELABORATED
;   name = fieldOffsetGranularity, type = VkOffset2D, offset = -1, size = 8
    fieldOffsetGranularity VkOffset2D <>
VkVideoDecodeH264CapabilitiesKHR ends

VkVideoDecodeH264SessionParametersAddInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stdSPSCount, type = uint32_t, offset = -1, size = 4
    stdSPSCount dword ?
;   TypeKind.POINTER
;   name = pStdSPSs, type = const int *, offset = -1, size = 8
    pStdSPSs qword ?
;   TypeKind.ELABORATED
;   name = stdPPSCount, type = uint32_t, offset = -1, size = 4
    stdPPSCount dword ?
;   TypeKind.POINTER
;   name = pStdPPSs, type = const int *, offset = -1, size = 8
    pStdPPSs qword ?
VkVideoDecodeH264SessionParametersAddInfoKHR ends

; TYPEDEF VkVideoDecodeH264SessionParametersAddInfoKHR = struct VkVideoDecodeH264SessionParametersAddInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH264SessionParametersAddInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stdSPSCount, type = uint32_t, offset = -1, size = 4
    stdSPSCount dword ?
;   TypeKind.POINTER
;   name = pStdSPSs, type = const int *, offset = -1, size = 8
    pStdSPSs qword ?
;   TypeKind.ELABORATED
;   name = stdPPSCount, type = uint32_t, offset = -1, size = 4
    stdPPSCount dword ?
;   TypeKind.POINTER
;   name = pStdPPSs, type = const int *, offset = -1, size = 8
    pStdPPSs qword ?
VkVideoDecodeH264SessionParametersAddInfoKHR ends

VkVideoDecodeH264SessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxStdSPSCount, type = uint32_t, offset = 16, size = 4
    maxStdSPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdPPSCount, type = uint32_t, offset = 20, size = 4
    maxStdPPSCount dword ?
;   TypeKind.POINTER
;   name = pParametersAddInfo, type = const VkVideoDecodeH264SessionParametersAddInfoKHR *, offset = 24, size = 8
    pParametersAddInfo qword ?
VkVideoDecodeH264SessionParametersCreateInfoKHR ends

; TYPEDEF VkVideoDecodeH264SessionParametersCreateInfoKHR = struct VkVideoDecodeH264SessionParametersCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH264SessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxStdSPSCount, type = uint32_t, offset = 16, size = 4
    maxStdSPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdPPSCount, type = uint32_t, offset = 20, size = 4
    maxStdPPSCount dword ?
;   TypeKind.POINTER
;   name = pParametersAddInfo, type = const VkVideoDecodeH264SessionParametersAddInfoKHR *, offset = 24, size = 8
    pParametersAddInfo qword ?
VkVideoDecodeH264SessionParametersCreateInfoKHR ends

VkVideoDecodeH264PictureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdPictureInfo, type = const int *, offset = -1, size = 8
    pStdPictureInfo qword ?
;   TypeKind.ELABORATED
;   name = sliceCount, type = uint32_t, offset = -1, size = 4
    sliceCount dword ?
;   TypeKind.POINTER
;   name = pSliceOffsets, type = const uint32_t *, offset = -1, size = 8
    pSliceOffsets qword ?
VkVideoDecodeH264PictureInfoKHR ends

; TYPEDEF VkVideoDecodeH264PictureInfoKHR = struct VkVideoDecodeH264PictureInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH264PictureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdPictureInfo, type = const int *, offset = -1, size = 8
    pStdPictureInfo qword ?
;   TypeKind.ELABORATED
;   name = sliceCount, type = uint32_t, offset = -1, size = 4
    sliceCount dword ?
;   TypeKind.POINTER
;   name = pSliceOffsets, type = const uint32_t *, offset = -1, size = 8
    pSliceOffsets qword ?
VkVideoDecodeH264PictureInfoKHR ends

VkVideoDecodeH264DpbSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdReferenceInfo, type = const int *, offset = -1, size = 8
    pStdReferenceInfo qword ?
VkVideoDecodeH264DpbSlotInfoKHR ends

; TYPEDEF VkVideoDecodeH264DpbSlotInfoKHR = struct VkVideoDecodeH264DpbSlotInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH264DpbSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdReferenceInfo, type = const int *, offset = -1, size = 8
    pStdReferenceInfo qword ?
VkVideoDecodeH264DpbSlotInfoKHR ends

; TYPEDEF VkRenderingFlagsKHR = VkRenderingFlags, TypeKind.ELABORATED

; TYPEDEF VkRenderingFlagBitsKHR = VkRenderingFlagBits, TypeKind.ELABORATED

; TYPEDEF VkRenderingInfoKHR = VkRenderingInfo, TypeKind.ELABORATED

; TYPEDEF VkRenderingAttachmentInfoKHR = VkRenderingAttachmentInfo, TypeKind.ELABORATED

; TYPEDEF VkPipelineRenderingCreateInfoKHR = VkPipelineRenderingCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceDynamicRenderingFeaturesKHR = VkPhysicalDeviceDynamicRenderingFeatures, TypeKind.ELABORATED

; TYPEDEF VkCommandBufferInheritanceRenderingInfoKHR = VkCommandBufferInheritanceRenderingInfo, TypeKind.ELABORATED

VkRenderingFragmentShadingRateAttachmentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 16, size = 8
    imageView VkImageView <>
;   TypeKind.ELABORATED
;   name = imageLayout, type = VkImageLayout, offset = 24, size = 4
    imageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = shadingRateAttachmentTexelSize, type = VkExtent2D, offset = 28, size = 8
    shadingRateAttachmentTexelSize VkExtent2D <>
VkRenderingFragmentShadingRateAttachmentInfoKHR ends

; TYPEDEF VkRenderingFragmentShadingRateAttachmentInfoKHR = struct VkRenderingFragmentShadingRateAttachmentInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkRenderingFragmentShadingRateAttachmentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 16, size = 8
    imageView VkImageView <>
;   TypeKind.ELABORATED
;   name = imageLayout, type = VkImageLayout, offset = 24, size = 4
    imageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = shadingRateAttachmentTexelSize, type = VkExtent2D, offset = 28, size = 8
    shadingRateAttachmentTexelSize VkExtent2D <>
VkRenderingFragmentShadingRateAttachmentInfoKHR ends

VkRenderingFragmentDensityMapAttachmentInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 16, size = 8
    imageView VkImageView <>
;   TypeKind.ELABORATED
;   name = imageLayout, type = VkImageLayout, offset = 24, size = 4
    imageLayout VkImageLayout <>
VkRenderingFragmentDensityMapAttachmentInfoEXT ends

; TYPEDEF VkRenderingFragmentDensityMapAttachmentInfoEXT = struct VkRenderingFragmentDensityMapAttachmentInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkRenderingFragmentDensityMapAttachmentInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 16, size = 8
    imageView VkImageView <>
;   TypeKind.ELABORATED
;   name = imageLayout, type = VkImageLayout, offset = 24, size = 4
    imageLayout VkImageLayout <>
VkRenderingFragmentDensityMapAttachmentInfoEXT ends

VkAttachmentSampleCountInfoAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 16, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachmentSamples, type = const VkSampleCountFlagBits *, offset = 24, size = 8
    pColorAttachmentSamples qword ?
;   TypeKind.ELABORATED
;   name = depthStencilAttachmentSamples, type = VkSampleCountFlagBits, offset = 32, size = 4
    depthStencilAttachmentSamples VkSampleCountFlagBits <>
VkAttachmentSampleCountInfoAMD ends

; TYPEDEF VkAttachmentSampleCountInfoAMD = struct VkAttachmentSampleCountInfoAMD, TypeKind.ELABORATED
; remove struct typedef

VkAttachmentSampleCountInfoAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 16, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachmentSamples, type = const VkSampleCountFlagBits *, offset = 24, size = 8
    pColorAttachmentSamples qword ?
;   TypeKind.ELABORATED
;   name = depthStencilAttachmentSamples, type = VkSampleCountFlagBits, offset = 32, size = 4
    depthStencilAttachmentSamples VkSampleCountFlagBits <>
VkAttachmentSampleCountInfoAMD ends

; TYPEDEF VkAttachmentSampleCountInfoNV = VkAttachmentSampleCountInfoAMD, TypeKind.ELABORATED

VkMultiviewPerViewAttributesInfoNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = perViewAttributes, type = VkBool32, offset = 16, size = 4
    perViewAttributes VkBool32 <>
;   TypeKind.ELABORATED
;   name = perViewAttributesPositionXOnly, type = VkBool32, offset = 20, size = 4
    perViewAttributesPositionXOnly VkBool32 <>
VkMultiviewPerViewAttributesInfoNVX ends

; TYPEDEF VkMultiviewPerViewAttributesInfoNVX = struct VkMultiviewPerViewAttributesInfoNVX, TypeKind.ELABORATED
; remove struct typedef

VkMultiviewPerViewAttributesInfoNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = perViewAttributes, type = VkBool32, offset = 16, size = 4
    perViewAttributes VkBool32 <>
;   TypeKind.ELABORATED
;   name = perViewAttributesPositionXOnly, type = VkBool32, offset = 20, size = 4
    perViewAttributesPositionXOnly VkBool32 <>
VkMultiviewPerViewAttributesInfoNVX ends

; TYPEDEF PFN_vkCmdBeginRenderingKHR = void (*)(VkCommandBuffer, const VkRenderingInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBeginRenderingKHR typedef qword

; TYPEDEF PFN_vkCmdEndRenderingKHR = void (*)(VkCommandBuffer) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEndRenderingKHR typedef qword

; void vkCmdBeginRenderingKHR(VkCommandBuffer commandBuffer, const VkRenderingInfo * pRenderingInfo)
vkCmdBeginRenderingKHR qword ?

; void vkCmdEndRenderingKHR(VkCommandBuffer commandBuffer)
vkCmdEndRenderingKHR qword ?

; TYPEDEF VkRenderPassMultiviewCreateInfoKHR = VkRenderPassMultiviewCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceMultiviewFeaturesKHR = VkPhysicalDeviceMultiviewFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceMultiviewPropertiesKHR = VkPhysicalDeviceMultiviewProperties, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceFeatures2KHR = VkPhysicalDeviceFeatures2, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceProperties2KHR = VkPhysicalDeviceProperties2, TypeKind.ELABORATED

; TYPEDEF VkFormatProperties2KHR = VkFormatProperties2, TypeKind.ELABORATED

; TYPEDEF VkImageFormatProperties2KHR = VkImageFormatProperties2, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceImageFormatInfo2KHR = VkPhysicalDeviceImageFormatInfo2, TypeKind.ELABORATED

; TYPEDEF VkQueueFamilyProperties2KHR = VkQueueFamilyProperties2, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceMemoryProperties2KHR = VkPhysicalDeviceMemoryProperties2, TypeKind.ELABORATED

; TYPEDEF VkSparseImageFormatProperties2KHR = VkSparseImageFormatProperties2, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceSparseImageFormatInfo2KHR = VkPhysicalDeviceSparseImageFormatInfo2, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetPhysicalDeviceFeatures2KHR = void (*)(VkPhysicalDevice, VkPhysicalDeviceFeatures2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceFeatures2KHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceProperties2KHR = void (*)(VkPhysicalDevice, VkPhysicalDeviceProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceProperties2KHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceFormatProperties2KHR = void (*)(VkPhysicalDevice, VkFormat, VkFormatProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceFormatProperties2KHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceImageFormatProperties2KHR = VkResult (*)(VkPhysicalDevice, const VkPhysicalDeviceImageFormatInfo2 *, VkImageFormatProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceImageFormatProperties2KHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR = void (*)(VkPhysicalDevice, uint32_t *, VkQueueFamilyProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceMemoryProperties2KHR = void (*)(VkPhysicalDevice, VkPhysicalDeviceMemoryProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceMemoryProperties2KHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR = void (*)(VkPhysicalDevice, const VkPhysicalDeviceSparseImageFormatInfo2 *, uint32_t *, VkSparseImageFormatProperties2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR typedef qword

; void vkGetPhysicalDeviceFeatures2KHR(VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures2 * pFeatures)
vkGetPhysicalDeviceFeatures2KHR qword ?

; void vkGetPhysicalDeviceProperties2KHR(VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties2 * pProperties)
vkGetPhysicalDeviceProperties2KHR qword ?

; void vkGetPhysicalDeviceFormatProperties2KHR(VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties2 * pFormatProperties)
vkGetPhysicalDeviceFormatProperties2KHR qword ?

; VkResult vkGetPhysicalDeviceImageFormatProperties2KHR(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceImageFormatInfo2 * pImageFormatInfo, VkImageFormatProperties2 * pImageFormatProperties)
vkGetPhysicalDeviceImageFormatProperties2KHR qword ?

; void vkGetPhysicalDeviceQueueFamilyProperties2KHR(VkPhysicalDevice physicalDevice, uint32_t * pQueueFamilyPropertyCount, VkQueueFamilyProperties2 * pQueueFamilyProperties)
vkGetPhysicalDeviceQueueFamilyProperties2KHR qword ?

; void vkGetPhysicalDeviceMemoryProperties2KHR(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties2 * pMemoryProperties)
vkGetPhysicalDeviceMemoryProperties2KHR qword ?

; void vkGetPhysicalDeviceSparseImageFormatProperties2KHR(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceSparseImageFormatInfo2 * pFormatInfo, uint32_t * pPropertyCount, VkSparseImageFormatProperties2 * pProperties)
vkGetPhysicalDeviceSparseImageFormatProperties2KHR qword ?

; TYPEDEF VkPeerMemoryFeatureFlagsKHR = VkPeerMemoryFeatureFlags, TypeKind.ELABORATED

; TYPEDEF VkPeerMemoryFeatureFlagBitsKHR = VkPeerMemoryFeatureFlagBits, TypeKind.ELABORATED

; TYPEDEF VkMemoryAllocateFlagsKHR = VkMemoryAllocateFlags, TypeKind.ELABORATED

; TYPEDEF VkMemoryAllocateFlagBitsKHR = VkMemoryAllocateFlagBits, TypeKind.ELABORATED

; TYPEDEF VkMemoryAllocateFlagsInfoKHR = VkMemoryAllocateFlagsInfo, TypeKind.ELABORATED

; TYPEDEF VkDeviceGroupRenderPassBeginInfoKHR = VkDeviceGroupRenderPassBeginInfo, TypeKind.ELABORATED

; TYPEDEF VkDeviceGroupCommandBufferBeginInfoKHR = VkDeviceGroupCommandBufferBeginInfo, TypeKind.ELABORATED

; TYPEDEF VkDeviceGroupSubmitInfoKHR = VkDeviceGroupSubmitInfo, TypeKind.ELABORATED

; TYPEDEF VkDeviceGroupBindSparseInfoKHR = VkDeviceGroupBindSparseInfo, TypeKind.ELABORATED

; TYPEDEF VkBindBufferMemoryDeviceGroupInfoKHR = VkBindBufferMemoryDeviceGroupInfo, TypeKind.ELABORATED

; TYPEDEF VkBindImageMemoryDeviceGroupInfoKHR = VkBindImageMemoryDeviceGroupInfo, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR = void (*)(VkDevice, uint32_t, uint32_t, uint32_t, VkPeerMemoryFeatureFlags *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR typedef qword

; TYPEDEF PFN_vkCmdSetDeviceMaskKHR = void (*)(VkCommandBuffer, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDeviceMaskKHR typedef qword

; TYPEDEF PFN_vkCmdDispatchBaseKHR = void (*)(VkCommandBuffer, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDispatchBaseKHR typedef qword

; void vkGetDeviceGroupPeerMemoryFeaturesKHR(VkDevice device, uint32_t heapIndex, uint32_t localDeviceIndex, uint32_t remoteDeviceIndex, VkPeerMemoryFeatureFlags * pPeerMemoryFeatures)
vkGetDeviceGroupPeerMemoryFeaturesKHR qword ?

; void vkCmdSetDeviceMaskKHR(VkCommandBuffer commandBuffer, uint32_t deviceMask)
vkCmdSetDeviceMaskKHR qword ?

; void vkCmdDispatchBaseKHR(VkCommandBuffer commandBuffer, uint32_t baseGroupX, uint32_t baseGroupY, uint32_t baseGroupZ, uint32_t groupCountX, uint32_t groupCountY, uint32_t groupCountZ)
vkCmdDispatchBaseKHR qword ?

; TYPEDEF VkCommandPoolTrimFlagsKHR = VkCommandPoolTrimFlags, TypeKind.ELABORATED

; TYPEDEF PFN_vkTrimCommandPoolKHR = void (*)(VkDevice, VkCommandPool, VkCommandPoolTrimFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkTrimCommandPoolKHR typedef qword

; void vkTrimCommandPoolKHR(VkDevice device, VkCommandPool commandPool, VkCommandPoolTrimFlags flags)
vkTrimCommandPoolKHR qword ?

; TYPEDEF VkPhysicalDeviceGroupPropertiesKHR = VkPhysicalDeviceGroupProperties, TypeKind.ELABORATED

; TYPEDEF VkDeviceGroupDeviceCreateInfoKHR = VkDeviceGroupDeviceCreateInfo, TypeKind.ELABORATED

; TYPEDEF PFN_vkEnumeratePhysicalDeviceGroupsKHR = VkResult (*)(VkInstance, uint32_t *, VkPhysicalDeviceGroupProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkEnumeratePhysicalDeviceGroupsKHR typedef qword

; VkResult vkEnumeratePhysicalDeviceGroupsKHR(VkInstance instance, uint32_t * pPhysicalDeviceGroupCount, VkPhysicalDeviceGroupProperties * pPhysicalDeviceGroupProperties)
vkEnumeratePhysicalDeviceGroupsKHR qword ?

; TYPEDEF VkExternalMemoryHandleTypeFlagsKHR = VkExternalMemoryHandleTypeFlags, TypeKind.ELABORATED

; TYPEDEF VkExternalMemoryHandleTypeFlagBitsKHR = VkExternalMemoryHandleTypeFlagBits, TypeKind.ELABORATED

; TYPEDEF VkExternalMemoryFeatureFlagsKHR = VkExternalMemoryFeatureFlags, TypeKind.ELABORATED

; TYPEDEF VkExternalMemoryFeatureFlagBitsKHR = VkExternalMemoryFeatureFlagBits, TypeKind.ELABORATED

; TYPEDEF VkExternalMemoryPropertiesKHR = VkExternalMemoryProperties, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceExternalImageFormatInfoKHR = VkPhysicalDeviceExternalImageFormatInfo, TypeKind.ELABORATED

; TYPEDEF VkExternalImageFormatPropertiesKHR = VkExternalImageFormatProperties, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceExternalBufferInfoKHR = VkPhysicalDeviceExternalBufferInfo, TypeKind.ELABORATED

; TYPEDEF VkExternalBufferPropertiesKHR = VkExternalBufferProperties, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceIDPropertiesKHR = VkPhysicalDeviceIDProperties, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR = void (*)(VkPhysicalDevice, const VkPhysicalDeviceExternalBufferInfo *, VkExternalBufferProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR typedef qword

; void vkGetPhysicalDeviceExternalBufferPropertiesKHR(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceExternalBufferInfo * pExternalBufferInfo, VkExternalBufferProperties * pExternalBufferProperties)
vkGetPhysicalDeviceExternalBufferPropertiesKHR qword ?

; TYPEDEF VkExternalMemoryImageCreateInfoKHR = VkExternalMemoryImageCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkExternalMemoryBufferCreateInfoKHR = VkExternalMemoryBufferCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkExportMemoryAllocateInfoKHR = VkExportMemoryAllocateInfo, TypeKind.ELABORATED

VkImportMemoryFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 16, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
;   TypeKind.INT
;   name = fd, type = int, offset = 20, size = 4
    fd sdword ?
VkImportMemoryFdInfoKHR ends

; TYPEDEF VkImportMemoryFdInfoKHR = struct VkImportMemoryFdInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkImportMemoryFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 16, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
;   TypeKind.INT
;   name = fd, type = int, offset = 20, size = 4
    fd sdword ?
VkImportMemoryFdInfoKHR ends

VkMemoryFdPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryTypeBits, type = uint32_t, offset = 16, size = 4
    memoryTypeBits dword ?
VkMemoryFdPropertiesKHR ends

; TYPEDEF VkMemoryFdPropertiesKHR = struct VkMemoryFdPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkMemoryFdPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryTypeBits, type = uint32_t, offset = 16, size = 4
    memoryTypeBits dword ?
VkMemoryFdPropertiesKHR ends

VkMemoryGetFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 16, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 24, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
VkMemoryGetFdInfoKHR ends

; TYPEDEF VkMemoryGetFdInfoKHR = struct VkMemoryGetFdInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkMemoryGetFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 16, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 24, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
VkMemoryGetFdInfoKHR ends

; TYPEDEF PFN_vkGetMemoryFdKHR = VkResult (*)(VkDevice, const VkMemoryGetFdInfoKHR *, int *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetMemoryFdKHR typedef qword

; TYPEDEF PFN_vkGetMemoryFdPropertiesKHR = VkResult (*)(VkDevice, VkExternalMemoryHandleTypeFlagBits, int, VkMemoryFdPropertiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetMemoryFdPropertiesKHR typedef qword

; VkResult vkGetMemoryFdKHR(VkDevice device, const VkMemoryGetFdInfoKHR * pGetFdInfo, int * pFd)
vkGetMemoryFdKHR qword ?

; VkResult vkGetMemoryFdPropertiesKHR(VkDevice device, VkExternalMemoryHandleTypeFlagBits handleType, int fd, VkMemoryFdPropertiesKHR * pMemoryFdProperties)
vkGetMemoryFdPropertiesKHR qword ?

; TYPEDEF VkExternalSemaphoreHandleTypeFlagsKHR = VkExternalSemaphoreHandleTypeFlags, TypeKind.ELABORATED

; TYPEDEF VkExternalSemaphoreHandleTypeFlagBitsKHR = VkExternalSemaphoreHandleTypeFlagBits, TypeKind.ELABORATED

; TYPEDEF VkExternalSemaphoreFeatureFlagsKHR = VkExternalSemaphoreFeatureFlags, TypeKind.ELABORATED

; TYPEDEF VkExternalSemaphoreFeatureFlagBitsKHR = VkExternalSemaphoreFeatureFlagBits, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceExternalSemaphoreInfoKHR = VkPhysicalDeviceExternalSemaphoreInfo, TypeKind.ELABORATED

; TYPEDEF VkExternalSemaphorePropertiesKHR = VkExternalSemaphoreProperties, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR = void (*)(VkPhysicalDevice, const VkPhysicalDeviceExternalSemaphoreInfo *, VkExternalSemaphoreProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR typedef qword

; void vkGetPhysicalDeviceExternalSemaphorePropertiesKHR(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceExternalSemaphoreInfo * pExternalSemaphoreInfo, VkExternalSemaphoreProperties * pExternalSemaphoreProperties)
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR qword ?

; TYPEDEF VkSemaphoreImportFlagsKHR = VkSemaphoreImportFlags, TypeKind.ELABORATED

; TYPEDEF VkSemaphoreImportFlagBitsKHR = VkSemaphoreImportFlagBits, TypeKind.ELABORATED

; TYPEDEF VkExportSemaphoreCreateInfoKHR = VkExportSemaphoreCreateInfo, TypeKind.ELABORATED

VkImportSemaphoreFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = semaphore, type = VkSemaphore, offset = 16, size = 8
    semaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = flags, type = VkSemaphoreImportFlags, offset = 24, size = 4
    flags VkSemaphoreImportFlags <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalSemaphoreHandleTypeFlagBits, offset = 28, size = 4
    handleType VkExternalSemaphoreHandleTypeFlagBits <>
;   TypeKind.INT
;   name = fd, type = int, offset = 32, size = 4
    fd sdword ?
VkImportSemaphoreFdInfoKHR ends

; TYPEDEF VkImportSemaphoreFdInfoKHR = struct VkImportSemaphoreFdInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkImportSemaphoreFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = semaphore, type = VkSemaphore, offset = 16, size = 8
    semaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = flags, type = VkSemaphoreImportFlags, offset = 24, size = 4
    flags VkSemaphoreImportFlags <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalSemaphoreHandleTypeFlagBits, offset = 28, size = 4
    handleType VkExternalSemaphoreHandleTypeFlagBits <>
;   TypeKind.INT
;   name = fd, type = int, offset = 32, size = 4
    fd sdword ?
VkImportSemaphoreFdInfoKHR ends

VkSemaphoreGetFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = semaphore, type = VkSemaphore, offset = 16, size = 8
    semaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalSemaphoreHandleTypeFlagBits, offset = 24, size = 4
    handleType VkExternalSemaphoreHandleTypeFlagBits <>
VkSemaphoreGetFdInfoKHR ends

; TYPEDEF VkSemaphoreGetFdInfoKHR = struct VkSemaphoreGetFdInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkSemaphoreGetFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = semaphore, type = VkSemaphore, offset = 16, size = 8
    semaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalSemaphoreHandleTypeFlagBits, offset = 24, size = 4
    handleType VkExternalSemaphoreHandleTypeFlagBits <>
VkSemaphoreGetFdInfoKHR ends

; TYPEDEF PFN_vkImportSemaphoreFdKHR = VkResult (*)(VkDevice, const VkImportSemaphoreFdInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkImportSemaphoreFdKHR typedef qword

; TYPEDEF PFN_vkGetSemaphoreFdKHR = VkResult (*)(VkDevice, const VkSemaphoreGetFdInfoKHR *, int *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetSemaphoreFdKHR typedef qword

; VkResult vkImportSemaphoreFdKHR(VkDevice device, const VkImportSemaphoreFdInfoKHR * pImportSemaphoreFdInfo)
vkImportSemaphoreFdKHR qword ?

; VkResult vkGetSemaphoreFdKHR(VkDevice device, const VkSemaphoreGetFdInfoKHR * pGetFdInfo, int * pFd)
vkGetSemaphoreFdKHR qword ?

VkPhysicalDevicePushDescriptorPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxPushDescriptors, type = uint32_t, offset = 16, size = 4
    maxPushDescriptors dword ?
VkPhysicalDevicePushDescriptorPropertiesKHR ends

; TYPEDEF VkPhysicalDevicePushDescriptorPropertiesKHR = struct VkPhysicalDevicePushDescriptorPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePushDescriptorPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxPushDescriptors, type = uint32_t, offset = 16, size = 4
    maxPushDescriptors dword ?
VkPhysicalDevicePushDescriptorPropertiesKHR ends

; TYPEDEF PFN_vkCmdPushDescriptorSetKHR = void (*)(VkCommandBuffer, VkPipelineBindPoint, VkPipelineLayout, uint32_t, uint32_t, const VkWriteDescriptorSet *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdPushDescriptorSetKHR typedef qword

; TYPEDEF PFN_vkCmdPushDescriptorSetWithTemplateKHR = void (*)(VkCommandBuffer, VkDescriptorUpdateTemplate, VkPipelineLayout, uint32_t, const void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdPushDescriptorSetWithTemplateKHR typedef qword

; void vkCmdPushDescriptorSetKHR(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipelineLayout layout, uint32_t set, uint32_t descriptorWriteCount, const VkWriteDescriptorSet * pDescriptorWrites)
vkCmdPushDescriptorSetKHR qword ?

; void vkCmdPushDescriptorSetWithTemplateKHR(VkCommandBuffer commandBuffer, VkDescriptorUpdateTemplate descriptorUpdateTemplate, VkPipelineLayout layout, uint32_t set, const void * pData)
vkCmdPushDescriptorSetWithTemplateKHR qword ?

; TYPEDEF VkPhysicalDeviceShaderFloat16Int8FeaturesKHR = VkPhysicalDeviceShaderFloat16Int8Features, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceFloat16Int8FeaturesKHR = VkPhysicalDeviceShaderFloat16Int8Features, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDevice16BitStorageFeaturesKHR = VkPhysicalDevice16BitStorageFeatures, TypeKind.ELABORATED

VkRectLayerKHR struct
;   TypeKind.ELABORATED
;   name = offset, type = VkOffset2D, offset = 0, size = 8
    _offset VkOffset2D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent2D, offset = 8, size = 8
    extent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = layer, type = uint32_t, offset = 16, size = 4
    layer dword ?
VkRectLayerKHR ends

; TYPEDEF VkRectLayerKHR = struct VkRectLayerKHR, TypeKind.ELABORATED
; remove struct typedef

VkRectLayerKHR struct
;   TypeKind.ELABORATED
;   name = offset, type = VkOffset2D, offset = 0, size = 8
    _offset VkOffset2D <>
;   TypeKind.ELABORATED
;   name = extent, type = VkExtent2D, offset = 8, size = 8
    extent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = layer, type = uint32_t, offset = 16, size = 4
    layer dword ?
VkRectLayerKHR ends

VkPresentRegionKHR struct
;   TypeKind.ELABORATED
;   name = rectangleCount, type = uint32_t, offset = 0, size = 4
    rectangleCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pRectangles, type = const VkRectLayerKHR *, offset = 8, size = 8
    pRectangles qword ?
VkPresentRegionKHR ends

; TYPEDEF VkPresentRegionKHR = struct VkPresentRegionKHR, TypeKind.ELABORATED
; remove struct typedef

VkPresentRegionKHR struct
;   TypeKind.ELABORATED
;   name = rectangleCount, type = uint32_t, offset = 0, size = 4
    rectangleCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pRectangles, type = const VkRectLayerKHR *, offset = 8, size = 8
    pRectangles qword ?
VkPresentRegionKHR ends

VkPresentRegionsKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pRegions, type = const VkPresentRegionKHR *, offset = 24, size = 8
    pRegions qword ?
VkPresentRegionsKHR ends

; TYPEDEF VkPresentRegionsKHR = struct VkPresentRegionsKHR, TypeKind.ELABORATED
; remove struct typedef

VkPresentRegionsKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pRegions, type = const VkPresentRegionKHR *, offset = 24, size = 8
    pRegions qword ?
VkPresentRegionsKHR ends

; TYPEDEF VkDescriptorUpdateTemplateKHR = VkDescriptorUpdateTemplate, TypeKind.ELABORATED

; TYPEDEF VkDescriptorUpdateTemplateTypeKHR = VkDescriptorUpdateTemplateType, TypeKind.ELABORATED

; TYPEDEF VkDescriptorUpdateTemplateCreateFlagsKHR = VkDescriptorUpdateTemplateCreateFlags, TypeKind.ELABORATED

; TYPEDEF VkDescriptorUpdateTemplateEntryKHR = VkDescriptorUpdateTemplateEntry, TypeKind.ELABORATED

; TYPEDEF VkDescriptorUpdateTemplateCreateInfoKHR = VkDescriptorUpdateTemplateCreateInfo, TypeKind.ELABORATED

; TYPEDEF PFN_vkCreateDescriptorUpdateTemplateKHR = VkResult (*)(VkDevice, const VkDescriptorUpdateTemplateCreateInfo *, const VkAllocationCallbacks *, VkDescriptorUpdateTemplate *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateDescriptorUpdateTemplateKHR typedef qword

; TYPEDEF PFN_vkDestroyDescriptorUpdateTemplateKHR = void (*)(VkDevice, VkDescriptorUpdateTemplate, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyDescriptorUpdateTemplateKHR typedef qword

; TYPEDEF PFN_vkUpdateDescriptorSetWithTemplateKHR = void (*)(VkDevice, VkDescriptorSet, VkDescriptorUpdateTemplate, const void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkUpdateDescriptorSetWithTemplateKHR typedef qword

; VkResult vkCreateDescriptorUpdateTemplateKHR(VkDevice device, const VkDescriptorUpdateTemplateCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkDescriptorUpdateTemplate * pDescriptorUpdateTemplate)
vkCreateDescriptorUpdateTemplateKHR qword ?

; void vkDestroyDescriptorUpdateTemplateKHR(VkDevice device, VkDescriptorUpdateTemplate descriptorUpdateTemplate, const VkAllocationCallbacks * pAllocator)
vkDestroyDescriptorUpdateTemplateKHR qword ?

; void vkUpdateDescriptorSetWithTemplateKHR(VkDevice device, VkDescriptorSet descriptorSet, VkDescriptorUpdateTemplate descriptorUpdateTemplate, const void * pData)
vkUpdateDescriptorSetWithTemplateKHR qword ?

; TYPEDEF VkPhysicalDeviceImagelessFramebufferFeaturesKHR = VkPhysicalDeviceImagelessFramebufferFeatures, TypeKind.ELABORATED

; TYPEDEF VkFramebufferAttachmentsCreateInfoKHR = VkFramebufferAttachmentsCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkFramebufferAttachmentImageInfoKHR = VkFramebufferAttachmentImageInfo, TypeKind.ELABORATED

; TYPEDEF VkRenderPassAttachmentBeginInfoKHR = VkRenderPassAttachmentBeginInfo, TypeKind.ELABORATED

; TYPEDEF VkRenderPassCreateInfo2KHR = VkRenderPassCreateInfo2, TypeKind.ELABORATED

; TYPEDEF VkAttachmentDescription2KHR = VkAttachmentDescription2, TypeKind.ELABORATED

; TYPEDEF VkAttachmentReference2KHR = VkAttachmentReference2, TypeKind.ELABORATED

; TYPEDEF VkSubpassDescription2KHR = VkSubpassDescription2, TypeKind.ELABORATED

; TYPEDEF VkSubpassDependency2KHR = VkSubpassDependency2, TypeKind.ELABORATED

; TYPEDEF VkSubpassBeginInfoKHR = VkSubpassBeginInfo, TypeKind.ELABORATED

; TYPEDEF VkSubpassEndInfoKHR = VkSubpassEndInfo, TypeKind.ELABORATED

; TYPEDEF PFN_vkCreateRenderPass2KHR = VkResult (*)(VkDevice, const VkRenderPassCreateInfo2 *, const VkAllocationCallbacks *, VkRenderPass *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateRenderPass2KHR typedef qword

; TYPEDEF PFN_vkCmdBeginRenderPass2KHR = void (*)(VkCommandBuffer, const VkRenderPassBeginInfo *, const VkSubpassBeginInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBeginRenderPass2KHR typedef qword

; TYPEDEF PFN_vkCmdNextSubpass2KHR = void (*)(VkCommandBuffer, const VkSubpassBeginInfo *, const VkSubpassEndInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdNextSubpass2KHR typedef qword

; TYPEDEF PFN_vkCmdEndRenderPass2KHR = void (*)(VkCommandBuffer, const VkSubpassEndInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEndRenderPass2KHR typedef qword

; VkResult vkCreateRenderPass2KHR(VkDevice device, const VkRenderPassCreateInfo2 * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkRenderPass * pRenderPass)
vkCreateRenderPass2KHR qword ?

; void vkCmdBeginRenderPass2KHR(VkCommandBuffer commandBuffer, const VkRenderPassBeginInfo * pRenderPassBegin, const VkSubpassBeginInfo * pSubpassBeginInfo)
vkCmdBeginRenderPass2KHR qword ?

; void vkCmdNextSubpass2KHR(VkCommandBuffer commandBuffer, const VkSubpassBeginInfo * pSubpassBeginInfo, const VkSubpassEndInfo * pSubpassEndInfo)
vkCmdNextSubpass2KHR qword ?

; void vkCmdEndRenderPass2KHR(VkCommandBuffer commandBuffer, const VkSubpassEndInfo * pSubpassEndInfo)
vkCmdEndRenderPass2KHR qword ?

VkSharedPresentSurfaceCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sharedPresentSupportedUsageFlags, type = VkImageUsageFlags, offset = 16, size = 4
    sharedPresentSupportedUsageFlags VkImageUsageFlags <>
VkSharedPresentSurfaceCapabilitiesKHR ends

; TYPEDEF VkSharedPresentSurfaceCapabilitiesKHR = struct VkSharedPresentSurfaceCapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkSharedPresentSurfaceCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sharedPresentSupportedUsageFlags, type = VkImageUsageFlags, offset = 16, size = 4
    sharedPresentSupportedUsageFlags VkImageUsageFlags <>
VkSharedPresentSurfaceCapabilitiesKHR ends

; TYPEDEF PFN_vkGetSwapchainStatusKHR = VkResult (*)(VkDevice, VkSwapchainKHR) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetSwapchainStatusKHR typedef qword

; VkResult vkGetSwapchainStatusKHR(VkDevice device, VkSwapchainKHR swapchain)
vkGetSwapchainStatusKHR qword ?

; TYPEDEF VkExternalFenceHandleTypeFlagsKHR = VkExternalFenceHandleTypeFlags, TypeKind.ELABORATED

; TYPEDEF VkExternalFenceHandleTypeFlagBitsKHR = VkExternalFenceHandleTypeFlagBits, TypeKind.ELABORATED

; TYPEDEF VkExternalFenceFeatureFlagsKHR = VkExternalFenceFeatureFlags, TypeKind.ELABORATED

; TYPEDEF VkExternalFenceFeatureFlagBitsKHR = VkExternalFenceFeatureFlagBits, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceExternalFenceInfoKHR = VkPhysicalDeviceExternalFenceInfo, TypeKind.ELABORATED

; TYPEDEF VkExternalFencePropertiesKHR = VkExternalFenceProperties, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR = void (*)(VkPhysicalDevice, const VkPhysicalDeviceExternalFenceInfo *, VkExternalFenceProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR typedef qword

; void vkGetPhysicalDeviceExternalFencePropertiesKHR(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceExternalFenceInfo * pExternalFenceInfo, VkExternalFenceProperties * pExternalFenceProperties)
vkGetPhysicalDeviceExternalFencePropertiesKHR qword ?

; TYPEDEF VkFenceImportFlagsKHR = VkFenceImportFlags, TypeKind.ELABORATED

; TYPEDEF VkFenceImportFlagBitsKHR = VkFenceImportFlagBits, TypeKind.ELABORATED

; TYPEDEF VkExportFenceCreateInfoKHR = VkExportFenceCreateInfo, TypeKind.ELABORATED

VkImportFenceFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fence, type = VkFence, offset = 16, size = 8
    fence VkFence <>
;   TypeKind.ELABORATED
;   name = flags, type = VkFenceImportFlags, offset = 24, size = 4
    flags VkFenceImportFlags <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalFenceHandleTypeFlagBits, offset = 28, size = 4
    handleType VkExternalFenceHandleTypeFlagBits <>
;   TypeKind.INT
;   name = fd, type = int, offset = 32, size = 4
    fd sdword ?
VkImportFenceFdInfoKHR ends

; TYPEDEF VkImportFenceFdInfoKHR = struct VkImportFenceFdInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkImportFenceFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fence, type = VkFence, offset = 16, size = 8
    fence VkFence <>
;   TypeKind.ELABORATED
;   name = flags, type = VkFenceImportFlags, offset = 24, size = 4
    flags VkFenceImportFlags <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalFenceHandleTypeFlagBits, offset = 28, size = 4
    handleType VkExternalFenceHandleTypeFlagBits <>
;   TypeKind.INT
;   name = fd, type = int, offset = 32, size = 4
    fd sdword ?
VkImportFenceFdInfoKHR ends

VkFenceGetFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fence, type = VkFence, offset = 16, size = 8
    fence VkFence <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalFenceHandleTypeFlagBits, offset = 24, size = 4
    handleType VkExternalFenceHandleTypeFlagBits <>
VkFenceGetFdInfoKHR ends

; TYPEDEF VkFenceGetFdInfoKHR = struct VkFenceGetFdInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkFenceGetFdInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fence, type = VkFence, offset = 16, size = 8
    fence VkFence <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalFenceHandleTypeFlagBits, offset = 24, size = 4
    handleType VkExternalFenceHandleTypeFlagBits <>
VkFenceGetFdInfoKHR ends

; TYPEDEF PFN_vkImportFenceFdKHR = VkResult (*)(VkDevice, const VkImportFenceFdInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkImportFenceFdKHR typedef qword

; TYPEDEF PFN_vkGetFenceFdKHR = VkResult (*)(VkDevice, const VkFenceGetFdInfoKHR *, int *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetFenceFdKHR typedef qword

; VkResult vkImportFenceFdKHR(VkDevice device, const VkImportFenceFdInfoKHR * pImportFenceFdInfo)
vkImportFenceFdKHR qword ?

; VkResult vkGetFenceFdKHR(VkDevice device, const VkFenceGetFdInfoKHR * pGetFdInfo, int * pFd)
vkGetFenceFdKHR qword ?

; enum VkPerformanceCounterUnitKHR {
    VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR equ 0
    VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR equ 1
    VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR equ 2
    VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR equ 3
    VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR equ 4
    VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR equ 5
    VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR equ 6
    VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR equ 7
    VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR equ 8
    VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR equ 9
    VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR equ 10
    VK_PERFORMANCE_COUNTER_UNIT_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkPerformanceCounterUnitKHR = enum VkPerformanceCounterUnitKHR, TypeKind.ELABORATED
VkPerformanceCounterUnitKHR typedef dword

; enum VkPerformanceCounterUnitKHR {
    VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR equ 0
    VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR equ 1
    VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR equ 2
    VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR equ 3
    VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR equ 4
    VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR equ 5
    VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR equ 6
    VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR equ 7
    VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR equ 8
    VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR equ 9
    VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR equ 10
    VK_PERFORMANCE_COUNTER_UNIT_MAX_ENUM_KHR equ 2147483647
; }

; enum VkPerformanceCounterScopeKHR {
    VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR equ 0
    VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR equ 1
    VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR equ 2
    VK_QUERY_SCOPE_COMMAND_BUFFER_KHR equ 0
    VK_QUERY_SCOPE_RENDER_PASS_KHR equ 1
    VK_QUERY_SCOPE_COMMAND_KHR equ 2
    VK_PERFORMANCE_COUNTER_SCOPE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkPerformanceCounterScopeKHR = enum VkPerformanceCounterScopeKHR, TypeKind.ELABORATED
VkPerformanceCounterScopeKHR typedef dword

; enum VkPerformanceCounterScopeKHR {
    VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR equ 0
    VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR equ 1
    VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR equ 2
    VK_QUERY_SCOPE_COMMAND_BUFFER_KHR equ 0
    VK_QUERY_SCOPE_RENDER_PASS_KHR equ 1
    VK_QUERY_SCOPE_COMMAND_KHR equ 2
    VK_PERFORMANCE_COUNTER_SCOPE_MAX_ENUM_KHR equ 2147483647
; }

; enum VkPerformanceCounterStorageKHR {
    VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR equ 0
    VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR equ 1
    VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR equ 2
    VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR equ 3
    VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR equ 4
    VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR equ 5
    VK_PERFORMANCE_COUNTER_STORAGE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkPerformanceCounterStorageKHR = enum VkPerformanceCounterStorageKHR, TypeKind.ELABORATED
VkPerformanceCounterStorageKHR typedef dword

; enum VkPerformanceCounterStorageKHR {
    VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR equ 0
    VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR equ 1
    VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR equ 2
    VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR equ 3
    VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR equ 4
    VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR equ 5
    VK_PERFORMANCE_COUNTER_STORAGE_MAX_ENUM_KHR equ 2147483647
; }

; enum VkPerformanceCounterDescriptionFlagBitsKHR {
    VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR equ 1
    VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR equ 2
    VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR equ 1
    VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR equ 2
    VK_PERFORMANCE_COUNTER_DESCRIPTION_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkPerformanceCounterDescriptionFlagBitsKHR = enum VkPerformanceCounterDescriptionFlagBitsKHR, TypeKind.ELABORATED
VkPerformanceCounterDescriptionFlagBitsKHR typedef dword

; enum VkPerformanceCounterDescriptionFlagBitsKHR {
    VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR equ 1
    VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR equ 2
    VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR equ 1
    VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR equ 2
    VK_PERFORMANCE_COUNTER_DESCRIPTION_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkPerformanceCounterDescriptionFlagsKHR = VkFlags, TypeKind.ELABORATED
VkPerformanceCounterDescriptionFlagsKHR typedef dword

; enum VkAcquireProfilingLockFlagBitsKHR {
    VK_ACQUIRE_PROFILING_LOCK_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkAcquireProfilingLockFlagBitsKHR = enum VkAcquireProfilingLockFlagBitsKHR, TypeKind.ELABORATED
VkAcquireProfilingLockFlagBitsKHR typedef dword

; enum VkAcquireProfilingLockFlagBitsKHR {
    VK_ACQUIRE_PROFILING_LOCK_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkAcquireProfilingLockFlagsKHR = VkFlags, TypeKind.ELABORATED
VkAcquireProfilingLockFlagsKHR typedef dword

VkPhysicalDevicePerformanceQueryFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = performanceCounterQueryPools, type = VkBool32, offset = 16, size = 4
    performanceCounterQueryPools VkBool32 <>
;   TypeKind.ELABORATED
;   name = performanceCounterMultipleQueryPools, type = VkBool32, offset = 20, size = 4
    performanceCounterMultipleQueryPools VkBool32 <>
VkPhysicalDevicePerformanceQueryFeaturesKHR ends

; TYPEDEF VkPhysicalDevicePerformanceQueryFeaturesKHR = struct VkPhysicalDevicePerformanceQueryFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePerformanceQueryFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = performanceCounterQueryPools, type = VkBool32, offset = 16, size = 4
    performanceCounterQueryPools VkBool32 <>
;   TypeKind.ELABORATED
;   name = performanceCounterMultipleQueryPools, type = VkBool32, offset = 20, size = 4
    performanceCounterMultipleQueryPools VkBool32 <>
VkPhysicalDevicePerformanceQueryFeaturesKHR ends

VkPhysicalDevicePerformanceQueryPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = allowCommandBufferQueryCopies, type = VkBool32, offset = 16, size = 4
    allowCommandBufferQueryCopies VkBool32 <>
VkPhysicalDevicePerformanceQueryPropertiesKHR ends

; TYPEDEF VkPhysicalDevicePerformanceQueryPropertiesKHR = struct VkPhysicalDevicePerformanceQueryPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePerformanceQueryPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = allowCommandBufferQueryCopies, type = VkBool32, offset = 16, size = 4
    allowCommandBufferQueryCopies VkBool32 <>
VkPhysicalDevicePerformanceQueryPropertiesKHR ends

VkPerformanceCounterKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = unit, type = VkPerformanceCounterUnitKHR, offset = 16, size = 4
    unit VkPerformanceCounterUnitKHR <>
;   TypeKind.ELABORATED
;   name = scope, type = VkPerformanceCounterScopeKHR, offset = 20, size = 4
    scope VkPerformanceCounterScopeKHR <>
;   TypeKind.ELABORATED
;   name = storage, type = VkPerformanceCounterStorageKHR, offset = 24, size = 4
    storage VkPerformanceCounterStorageKHR <>
;   TypeKind.CONSTANTARRAY
;   name = uuid, type = uint8_t[16], offset = 28, size = 16
    uuid byte 16 dup(?)
VkPerformanceCounterKHR ends

; TYPEDEF VkPerformanceCounterKHR = struct VkPerformanceCounterKHR, TypeKind.ELABORATED
; remove struct typedef

VkPerformanceCounterKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = unit, type = VkPerformanceCounterUnitKHR, offset = 16, size = 4
    unit VkPerformanceCounterUnitKHR <>
;   TypeKind.ELABORATED
;   name = scope, type = VkPerformanceCounterScopeKHR, offset = 20, size = 4
    scope VkPerformanceCounterScopeKHR <>
;   TypeKind.ELABORATED
;   name = storage, type = VkPerformanceCounterStorageKHR, offset = 24, size = 4
    storage VkPerformanceCounterStorageKHR <>
;   TypeKind.CONSTANTARRAY
;   name = uuid, type = uint8_t[16], offset = 28, size = 16
    uuid byte 16 dup(?)
VkPerformanceCounterKHR ends

VkPerformanceCounterDescriptionKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPerformanceCounterDescriptionFlagsKHR, offset = 16, size = 4
    flags VkPerformanceCounterDescriptionFlagsKHR <>
;   TypeKind.CONSTANTARRAY
;   name = name, type = char[256], offset = 20, size = 256
    name byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = category, type = char[256], offset = 276, size = 256
    category byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 532, size = 256
    description byte 256 dup(?)
VkPerformanceCounterDescriptionKHR ends

; TYPEDEF VkPerformanceCounterDescriptionKHR = struct VkPerformanceCounterDescriptionKHR, TypeKind.ELABORATED
; remove struct typedef

VkPerformanceCounterDescriptionKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPerformanceCounterDescriptionFlagsKHR, offset = 16, size = 4
    flags VkPerformanceCounterDescriptionFlagsKHR <>
;   TypeKind.CONSTANTARRAY
;   name = name, type = char[256], offset = 20, size = 256
    name byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = category, type = char[256], offset = 276, size = 256
    category byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 532, size = 256
    description byte 256 dup(?)
VkPerformanceCounterDescriptionKHR ends

VkQueryPoolPerformanceCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queueFamilyIndex, type = uint32_t, offset = 16, size = 4
    queueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = counterIndexCount, type = uint32_t, offset = 20, size = 4
    counterIndexCount dword ?
;   TypeKind.POINTER
;   name = pCounterIndices, type = const uint32_t *, offset = 24, size = 8
    pCounterIndices qword ?
VkQueryPoolPerformanceCreateInfoKHR ends

; TYPEDEF VkQueryPoolPerformanceCreateInfoKHR = struct VkQueryPoolPerformanceCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkQueryPoolPerformanceCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queueFamilyIndex, type = uint32_t, offset = 16, size = 4
    queueFamilyIndex dword ?
;   TypeKind.ELABORATED
;   name = counterIndexCount, type = uint32_t, offset = 20, size = 4
    counterIndexCount dword ?
;   TypeKind.POINTER
;   name = pCounterIndices, type = const uint32_t *, offset = 24, size = 8
    pCounterIndices qword ?
VkQueryPoolPerformanceCreateInfoKHR ends

; TYPEDEF VkPerformanceCounterResultKHR = union VkPerformanceCounterResultKHR, TypeKind.ELABORATED
; remove union typedef

VkAcquireProfilingLockInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkAcquireProfilingLockFlagsKHR, offset = 16, size = 4
    flags VkAcquireProfilingLockFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = timeout, type = uint64_t, offset = 24, size = 8
    timeout qword ?
VkAcquireProfilingLockInfoKHR ends

; TYPEDEF VkAcquireProfilingLockInfoKHR = struct VkAcquireProfilingLockInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkAcquireProfilingLockInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkAcquireProfilingLockFlagsKHR, offset = 16, size = 4
    flags VkAcquireProfilingLockFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = timeout, type = uint64_t, offset = 24, size = 8
    timeout qword ?
VkAcquireProfilingLockInfoKHR ends

VkPerformanceQuerySubmitInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = counterPassIndex, type = uint32_t, offset = 16, size = 4
    counterPassIndex dword ?
VkPerformanceQuerySubmitInfoKHR ends

; TYPEDEF VkPerformanceQuerySubmitInfoKHR = struct VkPerformanceQuerySubmitInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPerformanceQuerySubmitInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = counterPassIndex, type = uint32_t, offset = 16, size = 4
    counterPassIndex dword ?
VkPerformanceQuerySubmitInfoKHR ends

; TYPEDEF PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = VkResult (*)(VkPhysicalDevice, uint32_t, uint32_t *, VkPerformanceCounterKHR *, VkPerformanceCounterDescriptionKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = void (*)(VkPhysicalDevice, const VkQueryPoolPerformanceCreateInfoKHR *, uint32_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR typedef qword

; TYPEDEF PFN_vkAcquireProfilingLockKHR = VkResult (*)(VkDevice, const VkAcquireProfilingLockInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkAcquireProfilingLockKHR typedef qword

; TYPEDEF PFN_vkReleaseProfilingLockKHR = void (*)(VkDevice) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkReleaseProfilingLockKHR typedef qword

; VkResult vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, uint32_t * pCounterCount, VkPerformanceCounterKHR * pCounters, VkPerformanceCounterDescriptionKHR * pCounterDescriptions)
vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR qword ?

; void vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(VkPhysicalDevice physicalDevice, const VkQueryPoolPerformanceCreateInfoKHR * pPerformanceQueryCreateInfo, uint32_t * pNumPasses)
vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR qword ?

; VkResult vkAcquireProfilingLockKHR(VkDevice device, const VkAcquireProfilingLockInfoKHR * pInfo)
vkAcquireProfilingLockKHR qword ?

; void vkReleaseProfilingLockKHR(VkDevice device)
vkReleaseProfilingLockKHR qword ?

; TYPEDEF VkPointClippingBehaviorKHR = VkPointClippingBehavior, TypeKind.ELABORATED

; TYPEDEF VkTessellationDomainOriginKHR = VkTessellationDomainOrigin, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDevicePointClippingPropertiesKHR = VkPhysicalDevicePointClippingProperties, TypeKind.ELABORATED

; TYPEDEF VkRenderPassInputAttachmentAspectCreateInfoKHR = VkRenderPassInputAttachmentAspectCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkInputAttachmentAspectReferenceKHR = VkInputAttachmentAspectReference, TypeKind.ELABORATED

; TYPEDEF VkImageViewUsageCreateInfoKHR = VkImageViewUsageCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkPipelineTessellationDomainOriginStateCreateInfoKHR = VkPipelineTessellationDomainOriginStateCreateInfo, TypeKind.ELABORATED

VkPhysicalDeviceSurfaceInfo2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = surface, type = VkSurfaceKHR, offset = 16, size = 8
    surface VkSurfaceKHR <>
VkPhysicalDeviceSurfaceInfo2KHR ends

; TYPEDEF VkPhysicalDeviceSurfaceInfo2KHR = struct VkPhysicalDeviceSurfaceInfo2KHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSurfaceInfo2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = surface, type = VkSurfaceKHR, offset = 16, size = 8
    surface VkSurfaceKHR <>
VkPhysicalDeviceSurfaceInfo2KHR ends

VkSurfaceCapabilities2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = surfaceCapabilities, type = VkSurfaceCapabilitiesKHR, offset = 16, size = 52
    surfaceCapabilities VkSurfaceCapabilitiesKHR <>
VkSurfaceCapabilities2KHR ends

; TYPEDEF VkSurfaceCapabilities2KHR = struct VkSurfaceCapabilities2KHR, TypeKind.ELABORATED
; remove struct typedef

VkSurfaceCapabilities2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = surfaceCapabilities, type = VkSurfaceCapabilitiesKHR, offset = 16, size = 52
    surfaceCapabilities VkSurfaceCapabilitiesKHR <>
VkSurfaceCapabilities2KHR ends

VkSurfaceFormat2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = surfaceFormat, type = VkSurfaceFormatKHR, offset = 16, size = 8
    surfaceFormat VkSurfaceFormatKHR <>
VkSurfaceFormat2KHR ends

; TYPEDEF VkSurfaceFormat2KHR = struct VkSurfaceFormat2KHR, TypeKind.ELABORATED
; remove struct typedef

VkSurfaceFormat2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = surfaceFormat, type = VkSurfaceFormatKHR, offset = 16, size = 8
    surfaceFormat VkSurfaceFormatKHR <>
VkSurfaceFormat2KHR ends

; TYPEDEF PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR = VkResult (*)(VkPhysicalDevice, const VkPhysicalDeviceSurfaceInfo2KHR *, VkSurfaceCapabilities2KHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceSurfaceFormats2KHR = VkResult (*)(VkPhysicalDevice, const VkPhysicalDeviceSurfaceInfo2KHR *, uint32_t *, VkSurfaceFormat2KHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceSurfaceFormats2KHR typedef qword

; VkResult vkGetPhysicalDeviceSurfaceCapabilities2KHR(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceSurfaceInfo2KHR * pSurfaceInfo, VkSurfaceCapabilities2KHR * pSurfaceCapabilities)
vkGetPhysicalDeviceSurfaceCapabilities2KHR qword ?

; VkResult vkGetPhysicalDeviceSurfaceFormats2KHR(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceSurfaceInfo2KHR * pSurfaceInfo, uint32_t * pSurfaceFormatCount, VkSurfaceFormat2KHR * pSurfaceFormats)
vkGetPhysicalDeviceSurfaceFormats2KHR qword ?

; TYPEDEF VkPhysicalDeviceVariablePointerFeaturesKHR = VkPhysicalDeviceVariablePointersFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceVariablePointersFeaturesKHR = VkPhysicalDeviceVariablePointersFeatures, TypeKind.ELABORATED

VkDisplayProperties2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = displayProperties, type = VkDisplayPropertiesKHR, offset = 16, size = 48
    displayProperties VkDisplayPropertiesKHR <>
VkDisplayProperties2KHR ends

; TYPEDEF VkDisplayProperties2KHR = struct VkDisplayProperties2KHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayProperties2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = displayProperties, type = VkDisplayPropertiesKHR, offset = 16, size = 48
    displayProperties VkDisplayPropertiesKHR <>
VkDisplayProperties2KHR ends

VkDisplayPlaneProperties2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = displayPlaneProperties, type = VkDisplayPlanePropertiesKHR, offset = 16, size = 16
    displayPlaneProperties VkDisplayPlanePropertiesKHR <>
VkDisplayPlaneProperties2KHR ends

; TYPEDEF VkDisplayPlaneProperties2KHR = struct VkDisplayPlaneProperties2KHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayPlaneProperties2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = displayPlaneProperties, type = VkDisplayPlanePropertiesKHR, offset = 16, size = 16
    displayPlaneProperties VkDisplayPlanePropertiesKHR <>
VkDisplayPlaneProperties2KHR ends

VkDisplayModeProperties2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = displayModeProperties, type = VkDisplayModePropertiesKHR, offset = 16, size = 24
    displayModeProperties VkDisplayModePropertiesKHR <>
VkDisplayModeProperties2KHR ends

; TYPEDEF VkDisplayModeProperties2KHR = struct VkDisplayModeProperties2KHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayModeProperties2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = displayModeProperties, type = VkDisplayModePropertiesKHR, offset = 16, size = 24
    displayModeProperties VkDisplayModePropertiesKHR <>
VkDisplayModeProperties2KHR ends

VkDisplayPlaneInfo2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = mode, type = VkDisplayModeKHR, offset = 16, size = 8
    mode VkDisplayModeKHR <>
;   TypeKind.ELABORATED
;   name = planeIndex, type = uint32_t, offset = 24, size = 4
    planeIndex dword ?
VkDisplayPlaneInfo2KHR ends

; TYPEDEF VkDisplayPlaneInfo2KHR = struct VkDisplayPlaneInfo2KHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayPlaneInfo2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = mode, type = VkDisplayModeKHR, offset = 16, size = 8
    mode VkDisplayModeKHR <>
;   TypeKind.ELABORATED
;   name = planeIndex, type = uint32_t, offset = 24, size = 4
    planeIndex dword ?
VkDisplayPlaneInfo2KHR ends

VkDisplayPlaneCapabilities2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = capabilities, type = VkDisplayPlaneCapabilitiesKHR, offset = 16, size = 68
    capabilities VkDisplayPlaneCapabilitiesKHR <>
VkDisplayPlaneCapabilities2KHR ends

; TYPEDEF VkDisplayPlaneCapabilities2KHR = struct VkDisplayPlaneCapabilities2KHR, TypeKind.ELABORATED
; remove struct typedef

VkDisplayPlaneCapabilities2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = capabilities, type = VkDisplayPlaneCapabilitiesKHR, offset = 16, size = 68
    capabilities VkDisplayPlaneCapabilitiesKHR <>
VkDisplayPlaneCapabilities2KHR ends

; TYPEDEF PFN_vkGetPhysicalDeviceDisplayProperties2KHR = VkResult (*)(VkPhysicalDevice, uint32_t *, VkDisplayProperties2KHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceDisplayProperties2KHR typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR = VkResult (*)(VkPhysicalDevice, uint32_t *, VkDisplayPlaneProperties2KHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR typedef qword

; TYPEDEF PFN_vkGetDisplayModeProperties2KHR = VkResult (*)(VkPhysicalDevice, VkDisplayKHR, uint32_t *, VkDisplayModeProperties2KHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDisplayModeProperties2KHR typedef qword

; TYPEDEF PFN_vkGetDisplayPlaneCapabilities2KHR = VkResult (*)(VkPhysicalDevice, const VkDisplayPlaneInfo2KHR *, VkDisplayPlaneCapabilities2KHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDisplayPlaneCapabilities2KHR typedef qword

; VkResult vkGetPhysicalDeviceDisplayProperties2KHR(VkPhysicalDevice physicalDevice, uint32_t * pPropertyCount, VkDisplayProperties2KHR * pProperties)
vkGetPhysicalDeviceDisplayProperties2KHR qword ?

; VkResult vkGetPhysicalDeviceDisplayPlaneProperties2KHR(VkPhysicalDevice physicalDevice, uint32_t * pPropertyCount, VkDisplayPlaneProperties2KHR * pProperties)
vkGetPhysicalDeviceDisplayPlaneProperties2KHR qword ?

; VkResult vkGetDisplayModeProperties2KHR(VkPhysicalDevice physicalDevice, VkDisplayKHR display, uint32_t * pPropertyCount, VkDisplayModeProperties2KHR * pProperties)
vkGetDisplayModeProperties2KHR qword ?

; VkResult vkGetDisplayPlaneCapabilities2KHR(VkPhysicalDevice physicalDevice, const VkDisplayPlaneInfo2KHR * pDisplayPlaneInfo, VkDisplayPlaneCapabilities2KHR * pCapabilities)
vkGetDisplayPlaneCapabilities2KHR qword ?

; TYPEDEF VkMemoryDedicatedRequirementsKHR = VkMemoryDedicatedRequirements, TypeKind.ELABORATED

; TYPEDEF VkMemoryDedicatedAllocateInfoKHR = VkMemoryDedicatedAllocateInfo, TypeKind.ELABORATED

; TYPEDEF VkBufferMemoryRequirementsInfo2KHR = VkBufferMemoryRequirementsInfo2, TypeKind.ELABORATED

; TYPEDEF VkImageMemoryRequirementsInfo2KHR = VkImageMemoryRequirementsInfo2, TypeKind.ELABORATED

; TYPEDEF VkImageSparseMemoryRequirementsInfo2KHR = VkImageSparseMemoryRequirementsInfo2, TypeKind.ELABORATED

; TYPEDEF VkMemoryRequirements2KHR = VkMemoryRequirements2, TypeKind.ELABORATED

; TYPEDEF VkSparseImageMemoryRequirements2KHR = VkSparseImageMemoryRequirements2, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetImageMemoryRequirements2KHR = void (*)(VkDevice, const VkImageMemoryRequirementsInfo2 *, VkMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageMemoryRequirements2KHR typedef qword

; TYPEDEF PFN_vkGetBufferMemoryRequirements2KHR = void (*)(VkDevice, const VkBufferMemoryRequirementsInfo2 *, VkMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetBufferMemoryRequirements2KHR typedef qword

; TYPEDEF PFN_vkGetImageSparseMemoryRequirements2KHR = void (*)(VkDevice, const VkImageSparseMemoryRequirementsInfo2 *, uint32_t *, VkSparseImageMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageSparseMemoryRequirements2KHR typedef qword

; void vkGetImageMemoryRequirements2KHR(VkDevice device, const VkImageMemoryRequirementsInfo2 * pInfo, VkMemoryRequirements2 * pMemoryRequirements)
vkGetImageMemoryRequirements2KHR qword ?

; void vkGetBufferMemoryRequirements2KHR(VkDevice device, const VkBufferMemoryRequirementsInfo2 * pInfo, VkMemoryRequirements2 * pMemoryRequirements)
vkGetBufferMemoryRequirements2KHR qword ?

; void vkGetImageSparseMemoryRequirements2KHR(VkDevice device, const VkImageSparseMemoryRequirementsInfo2 * pInfo, uint32_t * pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements2 * pSparseMemoryRequirements)
vkGetImageSparseMemoryRequirements2KHR qword ?

; TYPEDEF VkImageFormatListCreateInfoKHR = VkImageFormatListCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkSamplerYcbcrConversionKHR = VkSamplerYcbcrConversion, TypeKind.ELABORATED

; TYPEDEF VkSamplerYcbcrModelConversionKHR = VkSamplerYcbcrModelConversion, TypeKind.ELABORATED

; TYPEDEF VkSamplerYcbcrRangeKHR = VkSamplerYcbcrRange, TypeKind.ELABORATED

; TYPEDEF VkChromaLocationKHR = VkChromaLocation, TypeKind.ELABORATED

; TYPEDEF VkSamplerYcbcrConversionCreateInfoKHR = VkSamplerYcbcrConversionCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkSamplerYcbcrConversionInfoKHR = VkSamplerYcbcrConversionInfo, TypeKind.ELABORATED

; TYPEDEF VkBindImagePlaneMemoryInfoKHR = VkBindImagePlaneMemoryInfo, TypeKind.ELABORATED

; TYPEDEF VkImagePlaneMemoryRequirementsInfoKHR = VkImagePlaneMemoryRequirementsInfo, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR = VkPhysicalDeviceSamplerYcbcrConversionFeatures, TypeKind.ELABORATED

; TYPEDEF VkSamplerYcbcrConversionImageFormatPropertiesKHR = VkSamplerYcbcrConversionImageFormatProperties, TypeKind.ELABORATED

; TYPEDEF PFN_vkCreateSamplerYcbcrConversionKHR = VkResult (*)(VkDevice, const VkSamplerYcbcrConversionCreateInfo *, const VkAllocationCallbacks *, VkSamplerYcbcrConversion *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateSamplerYcbcrConversionKHR typedef qword

; TYPEDEF PFN_vkDestroySamplerYcbcrConversionKHR = void (*)(VkDevice, VkSamplerYcbcrConversion, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroySamplerYcbcrConversionKHR typedef qword

; VkResult vkCreateSamplerYcbcrConversionKHR(VkDevice device, const VkSamplerYcbcrConversionCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkSamplerYcbcrConversion * pYcbcrConversion)
vkCreateSamplerYcbcrConversionKHR qword ?

; void vkDestroySamplerYcbcrConversionKHR(VkDevice device, VkSamplerYcbcrConversion ycbcrConversion, const VkAllocationCallbacks * pAllocator)
vkDestroySamplerYcbcrConversionKHR qword ?

; TYPEDEF VkBindBufferMemoryInfoKHR = VkBindBufferMemoryInfo, TypeKind.ELABORATED

; TYPEDEF VkBindImageMemoryInfoKHR = VkBindImageMemoryInfo, TypeKind.ELABORATED

; TYPEDEF PFN_vkBindBufferMemory2KHR = VkResult (*)(VkDevice, uint32_t, const VkBindBufferMemoryInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBindBufferMemory2KHR typedef qword

; TYPEDEF PFN_vkBindImageMemory2KHR = VkResult (*)(VkDevice, uint32_t, const VkBindImageMemoryInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBindImageMemory2KHR typedef qword

; VkResult vkBindBufferMemory2KHR(VkDevice device, uint32_t bindInfoCount, const VkBindBufferMemoryInfo * pBindInfos)
vkBindBufferMemory2KHR qword ?

; VkResult vkBindImageMemory2KHR(VkDevice device, uint32_t bindInfoCount, const VkBindImageMemoryInfo * pBindInfos)
vkBindImageMemory2KHR qword ?

; TYPEDEF VkPhysicalDeviceMaintenance3PropertiesKHR = VkPhysicalDeviceMaintenance3Properties, TypeKind.ELABORATED

; TYPEDEF VkDescriptorSetLayoutSupportKHR = VkDescriptorSetLayoutSupport, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetDescriptorSetLayoutSupportKHR = void (*)(VkDevice, const VkDescriptorSetLayoutCreateInfo *, VkDescriptorSetLayoutSupport *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDescriptorSetLayoutSupportKHR typedef qword

; void vkGetDescriptorSetLayoutSupportKHR(VkDevice device, const VkDescriptorSetLayoutCreateInfo * pCreateInfo, VkDescriptorSetLayoutSupport * pSupport)
vkGetDescriptorSetLayoutSupportKHR qword ?

; TYPEDEF PFN_vkCmdDrawIndirectCountKHR = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawIndirectCountKHR typedef qword

; TYPEDEF PFN_vkCmdDrawIndexedIndirectCountKHR = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawIndexedIndirectCountKHR typedef qword

; void vkCmdDrawIndirectCountKHR(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride)
vkCmdDrawIndirectCountKHR qword ?

; void vkCmdDrawIndexedIndirectCountKHR(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride)
vkCmdDrawIndexedIndirectCountKHR qword ?

; TYPEDEF VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR = VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDevice8BitStorageFeaturesKHR = VkPhysicalDevice8BitStorageFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceShaderAtomicInt64FeaturesKHR = VkPhysicalDeviceShaderAtomicInt64Features, TypeKind.ELABORATED

VkPhysicalDeviceShaderClockFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSubgroupClock, type = VkBool32, offset = 16, size = 4
    shaderSubgroupClock VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDeviceClock, type = VkBool32, offset = 20, size = 4
    shaderDeviceClock VkBool32 <>
VkPhysicalDeviceShaderClockFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceShaderClockFeaturesKHR = struct VkPhysicalDeviceShaderClockFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderClockFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSubgroupClock, type = VkBool32, offset = 16, size = 4
    shaderSubgroupClock VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderDeviceClock, type = VkBool32, offset = 20, size = 4
    shaderDeviceClock VkBool32 <>
VkPhysicalDeviceShaderClockFeaturesKHR ends

VkVideoDecodeH265ProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = stdProfileIdc, type = int, offset = -1, size = 4
    stdProfileIdc sdword ?
VkVideoDecodeH265ProfileInfoKHR ends

; TYPEDEF VkVideoDecodeH265ProfileInfoKHR = struct VkVideoDecodeH265ProfileInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH265ProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = stdProfileIdc, type = int, offset = -1, size = 4
    stdProfileIdc sdword ?
VkVideoDecodeH265ProfileInfoKHR ends

VkVideoDecodeH265CapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
VkVideoDecodeH265CapabilitiesKHR ends

; TYPEDEF VkVideoDecodeH265CapabilitiesKHR = struct VkVideoDecodeH265CapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH265CapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = maxLevelIdc, type = int, offset = -1, size = 4
    maxLevelIdc sdword ?
VkVideoDecodeH265CapabilitiesKHR ends

VkVideoDecodeH265SessionParametersAddInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stdVPSCount, type = uint32_t, offset = -1, size = 4
    stdVPSCount dword ?
;   TypeKind.POINTER
;   name = pStdVPSs, type = const int *, offset = -1, size = 8
    pStdVPSs qword ?
;   TypeKind.ELABORATED
;   name = stdSPSCount, type = uint32_t, offset = -1, size = 4
    stdSPSCount dword ?
;   TypeKind.POINTER
;   name = pStdSPSs, type = const int *, offset = -1, size = 8
    pStdSPSs qword ?
;   TypeKind.ELABORATED
;   name = stdPPSCount, type = uint32_t, offset = -1, size = 4
    stdPPSCount dword ?
;   TypeKind.POINTER
;   name = pStdPPSs, type = const int *, offset = -1, size = 8
    pStdPPSs qword ?
VkVideoDecodeH265SessionParametersAddInfoKHR ends

; TYPEDEF VkVideoDecodeH265SessionParametersAddInfoKHR = struct VkVideoDecodeH265SessionParametersAddInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH265SessionParametersAddInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stdVPSCount, type = uint32_t, offset = -1, size = 4
    stdVPSCount dword ?
;   TypeKind.POINTER
;   name = pStdVPSs, type = const int *, offset = -1, size = 8
    pStdVPSs qword ?
;   TypeKind.ELABORATED
;   name = stdSPSCount, type = uint32_t, offset = -1, size = 4
    stdSPSCount dword ?
;   TypeKind.POINTER
;   name = pStdSPSs, type = const int *, offset = -1, size = 8
    pStdSPSs qword ?
;   TypeKind.ELABORATED
;   name = stdPPSCount, type = uint32_t, offset = -1, size = 4
    stdPPSCount dword ?
;   TypeKind.POINTER
;   name = pStdPPSs, type = const int *, offset = -1, size = 8
    pStdPPSs qword ?
VkVideoDecodeH265SessionParametersAddInfoKHR ends

VkVideoDecodeH265SessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxStdVPSCount, type = uint32_t, offset = 16, size = 4
    maxStdVPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdSPSCount, type = uint32_t, offset = 20, size = 4
    maxStdSPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdPPSCount, type = uint32_t, offset = 24, size = 4
    maxStdPPSCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pParametersAddInfo, type = const VkVideoDecodeH265SessionParametersAddInfoKHR *, offset = 32, size = 8
    pParametersAddInfo qword ?
VkVideoDecodeH265SessionParametersCreateInfoKHR ends

; TYPEDEF VkVideoDecodeH265SessionParametersCreateInfoKHR = struct VkVideoDecodeH265SessionParametersCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH265SessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxStdVPSCount, type = uint32_t, offset = 16, size = 4
    maxStdVPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdSPSCount, type = uint32_t, offset = 20, size = 4
    maxStdSPSCount dword ?
;   TypeKind.ELABORATED
;   name = maxStdPPSCount, type = uint32_t, offset = 24, size = 4
    maxStdPPSCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pParametersAddInfo, type = const VkVideoDecodeH265SessionParametersAddInfoKHR *, offset = 32, size = 8
    pParametersAddInfo qword ?
VkVideoDecodeH265SessionParametersCreateInfoKHR ends

VkVideoDecodeH265PictureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdPictureInfo, type = const int *, offset = -1, size = 8
    pStdPictureInfo qword ?
;   TypeKind.ELABORATED
;   name = sliceSegmentCount, type = uint32_t, offset = -1, size = 4
    sliceSegmentCount dword ?
;   TypeKind.POINTER
;   name = pSliceSegmentOffsets, type = const uint32_t *, offset = -1, size = 8
    pSliceSegmentOffsets qword ?
VkVideoDecodeH265PictureInfoKHR ends

; TYPEDEF VkVideoDecodeH265PictureInfoKHR = struct VkVideoDecodeH265PictureInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH265PictureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdPictureInfo, type = const int *, offset = -1, size = 8
    pStdPictureInfo qword ?
;   TypeKind.ELABORATED
;   name = sliceSegmentCount, type = uint32_t, offset = -1, size = 4
    sliceSegmentCount dword ?
;   TypeKind.POINTER
;   name = pSliceSegmentOffsets, type = const uint32_t *, offset = -1, size = 8
    pSliceSegmentOffsets qword ?
VkVideoDecodeH265PictureInfoKHR ends

VkVideoDecodeH265DpbSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdReferenceInfo, type = const int *, offset = -1, size = 8
    pStdReferenceInfo qword ?
VkVideoDecodeH265DpbSlotInfoKHR ends

; TYPEDEF VkVideoDecodeH265DpbSlotInfoKHR = struct VkVideoDecodeH265DpbSlotInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeH265DpbSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdReferenceInfo, type = const int *, offset = -1, size = 8
    pStdReferenceInfo qword ?
VkVideoDecodeH265DpbSlotInfoKHR ends

; enum VkQueueGlobalPriorityKHR {
    VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR equ 128
    VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR equ 256
    VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR equ 512
    VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR equ 1024
    VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT equ 128
    VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT equ 256
    VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT equ 512
    VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT equ 1024
    VK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkQueueGlobalPriorityKHR = enum VkQueueGlobalPriorityKHR, TypeKind.ELABORATED
VkQueueGlobalPriorityKHR typedef dword

; enum VkQueueGlobalPriorityKHR {
    VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR equ 128
    VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR equ 256
    VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR equ 512
    VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR equ 1024
    VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT equ 128
    VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT equ 256
    VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT equ 512
    VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT equ 1024
    VK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_KHR equ 2147483647
; }

VkDeviceQueueGlobalPriorityCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = globalPriority, type = VkQueueGlobalPriorityKHR, offset = 16, size = 4
    globalPriority VkQueueGlobalPriorityKHR <>
VkDeviceQueueGlobalPriorityCreateInfoKHR ends

; TYPEDEF VkDeviceQueueGlobalPriorityCreateInfoKHR = struct VkDeviceQueueGlobalPriorityCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkDeviceQueueGlobalPriorityCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = globalPriority, type = VkQueueGlobalPriorityKHR, offset = 16, size = 4
    globalPriority VkQueueGlobalPriorityKHR <>
VkDeviceQueueGlobalPriorityCreateInfoKHR ends

VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = globalPriorityQuery, type = VkBool32, offset = 16, size = 4
    globalPriorityQuery VkBool32 <>
VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR = struct VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = globalPriorityQuery, type = VkBool32, offset = 16, size = 4
    globalPriorityQuery VkBool32 <>
VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR ends

VkQueueFamilyGlobalPriorityPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = priorityCount, type = uint32_t, offset = 16, size = 4
    priorityCount dword ?
;   TypeKind.CONSTANTARRAY
;   name = priorities, type = VkQueueGlobalPriorityKHR[16], offset = 20, size = 64
    priorities VkQueueGlobalPriorityKHR 16 dup(<>)
VkQueueFamilyGlobalPriorityPropertiesKHR ends

; TYPEDEF VkQueueFamilyGlobalPriorityPropertiesKHR = struct VkQueueFamilyGlobalPriorityPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkQueueFamilyGlobalPriorityPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = priorityCount, type = uint32_t, offset = 16, size = 4
    priorityCount dword ?
;   TypeKind.CONSTANTARRAY
;   name = priorities, type = VkQueueGlobalPriorityKHR[16], offset = 20, size = 64
    priorities VkQueueGlobalPriorityKHR 16 dup(<>)
VkQueueFamilyGlobalPriorityPropertiesKHR ends

; TYPEDEF VkDriverIdKHR = VkDriverId, TypeKind.ELABORATED

; TYPEDEF VkConformanceVersionKHR = VkConformanceVersion, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceDriverPropertiesKHR = VkPhysicalDeviceDriverProperties, TypeKind.ELABORATED

; TYPEDEF VkShaderFloatControlsIndependenceKHR = VkShaderFloatControlsIndependence, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceFloatControlsPropertiesKHR = VkPhysicalDeviceFloatControlsProperties, TypeKind.ELABORATED

; TYPEDEF VkResolveModeFlagBitsKHR = VkResolveModeFlagBits, TypeKind.ELABORATED

; TYPEDEF VkResolveModeFlagsKHR = VkResolveModeFlags, TypeKind.ELABORATED

; TYPEDEF VkSubpassDescriptionDepthStencilResolveKHR = VkSubpassDescriptionDepthStencilResolve, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceDepthStencilResolvePropertiesKHR = VkPhysicalDeviceDepthStencilResolveProperties, TypeKind.ELABORATED

; TYPEDEF VkSemaphoreTypeKHR = VkSemaphoreType, TypeKind.ELABORATED

; TYPEDEF VkSemaphoreWaitFlagBitsKHR = VkSemaphoreWaitFlagBits, TypeKind.ELABORATED

; TYPEDEF VkSemaphoreWaitFlagsKHR = VkSemaphoreWaitFlags, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceTimelineSemaphoreFeaturesKHR = VkPhysicalDeviceTimelineSemaphoreFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceTimelineSemaphorePropertiesKHR = VkPhysicalDeviceTimelineSemaphoreProperties, TypeKind.ELABORATED

; TYPEDEF VkSemaphoreTypeCreateInfoKHR = VkSemaphoreTypeCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkTimelineSemaphoreSubmitInfoKHR = VkTimelineSemaphoreSubmitInfo, TypeKind.ELABORATED

; TYPEDEF VkSemaphoreWaitInfoKHR = VkSemaphoreWaitInfo, TypeKind.ELABORATED

; TYPEDEF VkSemaphoreSignalInfoKHR = VkSemaphoreSignalInfo, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetSemaphoreCounterValueKHR = VkResult (*)(VkDevice, VkSemaphore, uint64_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetSemaphoreCounterValueKHR typedef qword

; TYPEDEF PFN_vkWaitSemaphoresKHR = VkResult (*)(VkDevice, const VkSemaphoreWaitInfo *, uint64_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkWaitSemaphoresKHR typedef qword

; TYPEDEF PFN_vkSignalSemaphoreKHR = VkResult (*)(VkDevice, const VkSemaphoreSignalInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSignalSemaphoreKHR typedef qword

; VkResult vkGetSemaphoreCounterValueKHR(VkDevice device, VkSemaphore semaphore, uint64_t * pValue)
vkGetSemaphoreCounterValueKHR qword ?

; VkResult vkWaitSemaphoresKHR(VkDevice device, const VkSemaphoreWaitInfo * pWaitInfo, uint64_t timeout)
vkWaitSemaphoresKHR qword ?

; VkResult vkSignalSemaphoreKHR(VkDevice device, const VkSemaphoreSignalInfo * pSignalInfo)
vkSignalSemaphoreKHR qword ?

; TYPEDEF VkPhysicalDeviceVulkanMemoryModelFeaturesKHR = VkPhysicalDeviceVulkanMemoryModelFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR = VkPhysicalDeviceShaderTerminateInvocationFeatures, TypeKind.ELABORATED

; enum VkFragmentShadingRateCombinerOpKHR {
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR equ 0
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR equ 1
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR equ 2
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR equ 3
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR equ 4
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkFragmentShadingRateCombinerOpKHR = enum VkFragmentShadingRateCombinerOpKHR, TypeKind.ELABORATED
VkFragmentShadingRateCombinerOpKHR typedef dword

; enum VkFragmentShadingRateCombinerOpKHR {
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR equ 0
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR equ 1
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR equ 2
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR equ 3
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR equ 4
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_ENUM_KHR equ 2147483647
; }

VkFragmentShadingRateAttachmentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pFragmentShadingRateAttachment, type = const VkAttachmentReference2 *, offset = 16, size = 8
    pFragmentShadingRateAttachment qword ?
;   TypeKind.ELABORATED
;   name = shadingRateAttachmentTexelSize, type = VkExtent2D, offset = 24, size = 8
    shadingRateAttachmentTexelSize VkExtent2D <>
VkFragmentShadingRateAttachmentInfoKHR ends

; TYPEDEF VkFragmentShadingRateAttachmentInfoKHR = struct VkFragmentShadingRateAttachmentInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkFragmentShadingRateAttachmentInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pFragmentShadingRateAttachment, type = const VkAttachmentReference2 *, offset = 16, size = 8
    pFragmentShadingRateAttachment qword ?
;   TypeKind.ELABORATED
;   name = shadingRateAttachmentTexelSize, type = VkExtent2D, offset = 24, size = 8
    shadingRateAttachmentTexelSize VkExtent2D <>
VkFragmentShadingRateAttachmentInfoKHR ends

VkPipelineFragmentShadingRateStateCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentSize, type = VkExtent2D, offset = 16, size = 8
    fragmentSize VkExtent2D <>
;   TypeKind.CONSTANTARRAY
;   name = combinerOps, type = VkFragmentShadingRateCombinerOpKHR[2], offset = 24, size = 8
    combinerOps VkFragmentShadingRateCombinerOpKHR 2 dup(<>)
VkPipelineFragmentShadingRateStateCreateInfoKHR ends

; TYPEDEF VkPipelineFragmentShadingRateStateCreateInfoKHR = struct VkPipelineFragmentShadingRateStateCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPipelineFragmentShadingRateStateCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentSize, type = VkExtent2D, offset = 16, size = 8
    fragmentSize VkExtent2D <>
;   TypeKind.CONSTANTARRAY
;   name = combinerOps, type = VkFragmentShadingRateCombinerOpKHR[2], offset = 24, size = 8
    combinerOps VkFragmentShadingRateCombinerOpKHR 2 dup(<>)
VkPipelineFragmentShadingRateStateCreateInfoKHR ends

VkPhysicalDeviceFragmentShadingRateFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineFragmentShadingRate, type = VkBool32, offset = 16, size = 4
    pipelineFragmentShadingRate VkBool32 <>
;   TypeKind.ELABORATED
;   name = primitiveFragmentShadingRate, type = VkBool32, offset = 20, size = 4
    primitiveFragmentShadingRate VkBool32 <>
;   TypeKind.ELABORATED
;   name = attachmentFragmentShadingRate, type = VkBool32, offset = 24, size = 4
    attachmentFragmentShadingRate VkBool32 <>
VkPhysicalDeviceFragmentShadingRateFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceFragmentShadingRateFeaturesKHR = struct VkPhysicalDeviceFragmentShadingRateFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentShadingRateFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineFragmentShadingRate, type = VkBool32, offset = 16, size = 4
    pipelineFragmentShadingRate VkBool32 <>
;   TypeKind.ELABORATED
;   name = primitiveFragmentShadingRate, type = VkBool32, offset = 20, size = 4
    primitiveFragmentShadingRate VkBool32 <>
;   TypeKind.ELABORATED
;   name = attachmentFragmentShadingRate, type = VkBool32, offset = 24, size = 4
    attachmentFragmentShadingRate VkBool32 <>
VkPhysicalDeviceFragmentShadingRateFeaturesKHR ends

VkPhysicalDeviceFragmentShadingRatePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minFragmentShadingRateAttachmentTexelSize, type = VkExtent2D, offset = 16, size = 8
    minFragmentShadingRateAttachmentTexelSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxFragmentShadingRateAttachmentTexelSize, type = VkExtent2D, offset = 24, size = 8
    maxFragmentShadingRateAttachmentTexelSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxFragmentShadingRateAttachmentTexelSizeAspectRatio, type = uint32_t, offset = 32, size = 4
    maxFragmentShadingRateAttachmentTexelSizeAspectRatio dword ?
;   TypeKind.ELABORATED
;   name = primitiveFragmentShadingRateWithMultipleViewports, type = VkBool32, offset = 36, size = 4
    primitiveFragmentShadingRateWithMultipleViewports VkBool32 <>
;   TypeKind.ELABORATED
;   name = layeredShadingRateAttachments, type = VkBool32, offset = 40, size = 4
    layeredShadingRateAttachments VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateNonTrivialCombinerOps, type = VkBool32, offset = 44, size = 4
    fragmentShadingRateNonTrivialCombinerOps VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxFragmentSize, type = VkExtent2D, offset = 48, size = 8
    maxFragmentSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxFragmentSizeAspectRatio, type = uint32_t, offset = 56, size = 4
    maxFragmentSizeAspectRatio dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentShadingRateCoverageSamples, type = uint32_t, offset = 60, size = 4
    maxFragmentShadingRateCoverageSamples dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentShadingRateRasterizationSamples, type = VkSampleCountFlagBits, offset = 64, size = 4
    maxFragmentShadingRateRasterizationSamples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithShaderDepthStencilWrites, type = VkBool32, offset = 68, size = 4
    fragmentShadingRateWithShaderDepthStencilWrites VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithSampleMask, type = VkBool32, offset = 72, size = 4
    fragmentShadingRateWithSampleMask VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithShaderSampleMask, type = VkBool32, offset = 76, size = 4
    fragmentShadingRateWithShaderSampleMask VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithConservativeRasterization, type = VkBool32, offset = 80, size = 4
    fragmentShadingRateWithConservativeRasterization VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithFragmentShaderInterlock, type = VkBool32, offset = 84, size = 4
    fragmentShadingRateWithFragmentShaderInterlock VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithCustomSampleLocations, type = VkBool32, offset = 88, size = 4
    fragmentShadingRateWithCustomSampleLocations VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateStrictMultiplyCombiner, type = VkBool32, offset = 92, size = 4
    fragmentShadingRateStrictMultiplyCombiner VkBool32 <>
VkPhysicalDeviceFragmentShadingRatePropertiesKHR ends

; TYPEDEF VkPhysicalDeviceFragmentShadingRatePropertiesKHR = struct VkPhysicalDeviceFragmentShadingRatePropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentShadingRatePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minFragmentShadingRateAttachmentTexelSize, type = VkExtent2D, offset = 16, size = 8
    minFragmentShadingRateAttachmentTexelSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxFragmentShadingRateAttachmentTexelSize, type = VkExtent2D, offset = 24, size = 8
    maxFragmentShadingRateAttachmentTexelSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxFragmentShadingRateAttachmentTexelSizeAspectRatio, type = uint32_t, offset = 32, size = 4
    maxFragmentShadingRateAttachmentTexelSizeAspectRatio dword ?
;   TypeKind.ELABORATED
;   name = primitiveFragmentShadingRateWithMultipleViewports, type = VkBool32, offset = 36, size = 4
    primitiveFragmentShadingRateWithMultipleViewports VkBool32 <>
;   TypeKind.ELABORATED
;   name = layeredShadingRateAttachments, type = VkBool32, offset = 40, size = 4
    layeredShadingRateAttachments VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateNonTrivialCombinerOps, type = VkBool32, offset = 44, size = 4
    fragmentShadingRateNonTrivialCombinerOps VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxFragmentSize, type = VkExtent2D, offset = 48, size = 8
    maxFragmentSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxFragmentSizeAspectRatio, type = uint32_t, offset = 56, size = 4
    maxFragmentSizeAspectRatio dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentShadingRateCoverageSamples, type = uint32_t, offset = 60, size = 4
    maxFragmentShadingRateCoverageSamples dword ?
;   TypeKind.ELABORATED
;   name = maxFragmentShadingRateRasterizationSamples, type = VkSampleCountFlagBits, offset = 64, size = 4
    maxFragmentShadingRateRasterizationSamples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithShaderDepthStencilWrites, type = VkBool32, offset = 68, size = 4
    fragmentShadingRateWithShaderDepthStencilWrites VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithSampleMask, type = VkBool32, offset = 72, size = 4
    fragmentShadingRateWithSampleMask VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithShaderSampleMask, type = VkBool32, offset = 76, size = 4
    fragmentShadingRateWithShaderSampleMask VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithConservativeRasterization, type = VkBool32, offset = 80, size = 4
    fragmentShadingRateWithConservativeRasterization VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithFragmentShaderInterlock, type = VkBool32, offset = 84, size = 4
    fragmentShadingRateWithFragmentShaderInterlock VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateWithCustomSampleLocations, type = VkBool32, offset = 88, size = 4
    fragmentShadingRateWithCustomSampleLocations VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShadingRateStrictMultiplyCombiner, type = VkBool32, offset = 92, size = 4
    fragmentShadingRateStrictMultiplyCombiner VkBool32 <>
VkPhysicalDeviceFragmentShadingRatePropertiesKHR ends

VkPhysicalDeviceFragmentShadingRateKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampleCounts, type = VkSampleCountFlags, offset = 16, size = 4
    sampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = fragmentSize, type = VkExtent2D, offset = 20, size = 8
    fragmentSize VkExtent2D <>
VkPhysicalDeviceFragmentShadingRateKHR ends

; TYPEDEF VkPhysicalDeviceFragmentShadingRateKHR = struct VkPhysicalDeviceFragmentShadingRateKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentShadingRateKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampleCounts, type = VkSampleCountFlags, offset = 16, size = 4
    sampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = fragmentSize, type = VkExtent2D, offset = 20, size = 8
    fragmentSize VkExtent2D <>
VkPhysicalDeviceFragmentShadingRateKHR ends

; TYPEDEF PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR = VkResult (*)(VkPhysicalDevice, uint32_t *, VkPhysicalDeviceFragmentShadingRateKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR typedef qword

; TYPEDEF PFN_vkCmdSetFragmentShadingRateKHR = void (*)(VkCommandBuffer, const VkExtent2D *, const VkFragmentShadingRateCombinerOpKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetFragmentShadingRateKHR typedef qword

; VkResult vkGetPhysicalDeviceFragmentShadingRatesKHR(VkPhysicalDevice physicalDevice, uint32_t * pFragmentShadingRateCount, VkPhysicalDeviceFragmentShadingRateKHR * pFragmentShadingRates)
vkGetPhysicalDeviceFragmentShadingRatesKHR qword ?

; void vkCmdSetFragmentShadingRateKHR(VkCommandBuffer commandBuffer, const VkExtent2D * pFragmentSize, const VkFragmentShadingRateCombinerOpKHR[2] combinerOps)
vkCmdSetFragmentShadingRateKHR qword ?

VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dynamicRenderingLocalRead, type = VkBool32, offset = 16, size = 4
    dynamicRenderingLocalRead VkBool32 <>
VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR = struct VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dynamicRenderingLocalRead, type = VkBool32, offset = 16, size = 4
    dynamicRenderingLocalRead VkBool32 <>
VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR ends

VkRenderingAttachmentLocationInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 16, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachmentLocations, type = const uint32_t *, offset = 24, size = 8
    pColorAttachmentLocations qword ?
VkRenderingAttachmentLocationInfoKHR ends

; TYPEDEF VkRenderingAttachmentLocationInfoKHR = struct VkRenderingAttachmentLocationInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkRenderingAttachmentLocationInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 16, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachmentLocations, type = const uint32_t *, offset = 24, size = 8
    pColorAttachmentLocations qword ?
VkRenderingAttachmentLocationInfoKHR ends

VkRenderingInputAttachmentIndexInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 16, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachmentInputIndices, type = const uint32_t *, offset = 24, size = 8
    pColorAttachmentInputIndices qword ?
;   TypeKind.POINTER
;   name = pDepthInputAttachmentIndex, type = const uint32_t *, offset = 32, size = 8
    pDepthInputAttachmentIndex qword ?
;   TypeKind.POINTER
;   name = pStencilInputAttachmentIndex, type = const uint32_t *, offset = 40, size = 8
    pStencilInputAttachmentIndex qword ?
VkRenderingInputAttachmentIndexInfoKHR ends

; TYPEDEF VkRenderingInputAttachmentIndexInfoKHR = struct VkRenderingInputAttachmentIndexInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkRenderingInputAttachmentIndexInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 16, size = 4
    colorAttachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorAttachmentInputIndices, type = const uint32_t *, offset = 24, size = 8
    pColorAttachmentInputIndices qword ?
;   TypeKind.POINTER
;   name = pDepthInputAttachmentIndex, type = const uint32_t *, offset = 32, size = 8
    pDepthInputAttachmentIndex qword ?
;   TypeKind.POINTER
;   name = pStencilInputAttachmentIndex, type = const uint32_t *, offset = 40, size = 8
    pStencilInputAttachmentIndex qword ?
VkRenderingInputAttachmentIndexInfoKHR ends

; TYPEDEF PFN_vkCmdSetRenderingAttachmentLocationsKHR = void (*)(VkCommandBuffer, const VkRenderingAttachmentLocationInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetRenderingAttachmentLocationsKHR typedef qword

; TYPEDEF PFN_vkCmdSetRenderingInputAttachmentIndicesKHR = void (*)(VkCommandBuffer, const VkRenderingInputAttachmentIndexInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetRenderingInputAttachmentIndicesKHR typedef qword

; void vkCmdSetRenderingAttachmentLocationsKHR(VkCommandBuffer commandBuffer, const VkRenderingAttachmentLocationInfoKHR * pLocationInfo)
vkCmdSetRenderingAttachmentLocationsKHR qword ?

; void vkCmdSetRenderingInputAttachmentIndicesKHR(VkCommandBuffer commandBuffer, const VkRenderingInputAttachmentIndexInfoKHR * pLocationInfo)
vkCmdSetRenderingInputAttachmentIndicesKHR qword ?

VkPhysicalDeviceShaderQuadControlFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderQuadControl, type = VkBool32, offset = 16, size = 4
    shaderQuadControl VkBool32 <>
VkPhysicalDeviceShaderQuadControlFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceShaderQuadControlFeaturesKHR = struct VkPhysicalDeviceShaderQuadControlFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderQuadControlFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderQuadControl, type = VkBool32, offset = 16, size = 4
    shaderQuadControl VkBool32 <>
VkPhysicalDeviceShaderQuadControlFeaturesKHR ends

VkSurfaceProtectedCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportsProtected, type = VkBool32, offset = 16, size = 4
    supportsProtected VkBool32 <>
VkSurfaceProtectedCapabilitiesKHR ends

; TYPEDEF VkSurfaceProtectedCapabilitiesKHR = struct VkSurfaceProtectedCapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkSurfaceProtectedCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportsProtected, type = VkBool32, offset = 16, size = 4
    supportsProtected VkBool32 <>
VkSurfaceProtectedCapabilitiesKHR ends

; TYPEDEF VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR = VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures, TypeKind.ELABORATED

; TYPEDEF VkAttachmentReferenceStencilLayoutKHR = VkAttachmentReferenceStencilLayout, TypeKind.ELABORATED

; TYPEDEF VkAttachmentDescriptionStencilLayoutKHR = VkAttachmentDescriptionStencilLayout, TypeKind.ELABORATED

VkPhysicalDevicePresentWaitFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentWait, type = VkBool32, offset = 16, size = 4
    presentWait VkBool32 <>
VkPhysicalDevicePresentWaitFeaturesKHR ends

; TYPEDEF VkPhysicalDevicePresentWaitFeaturesKHR = struct VkPhysicalDevicePresentWaitFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePresentWaitFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentWait, type = VkBool32, offset = 16, size = 4
    presentWait VkBool32 <>
VkPhysicalDevicePresentWaitFeaturesKHR ends

; TYPEDEF PFN_vkWaitForPresentKHR = VkResult (*)(VkDevice, VkSwapchainKHR, uint64_t, uint64_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkWaitForPresentKHR typedef qword

; VkResult vkWaitForPresentKHR(VkDevice device, VkSwapchainKHR swapchain, uint64_t presentId, uint64_t timeout)
vkWaitForPresentKHR qword ?

; TYPEDEF VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR = VkPhysicalDeviceUniformBufferStandardLayoutFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceBufferDeviceAddressFeaturesKHR = VkPhysicalDeviceBufferDeviceAddressFeatures, TypeKind.ELABORATED

; TYPEDEF VkBufferDeviceAddressInfoKHR = VkBufferDeviceAddressInfo, TypeKind.ELABORATED

; TYPEDEF VkBufferOpaqueCaptureAddressCreateInfoKHR = VkBufferOpaqueCaptureAddressCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkMemoryOpaqueCaptureAddressAllocateInfoKHR = VkMemoryOpaqueCaptureAddressAllocateInfo, TypeKind.ELABORATED

; TYPEDEF VkDeviceMemoryOpaqueCaptureAddressInfoKHR = VkDeviceMemoryOpaqueCaptureAddressInfo, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetBufferDeviceAddressKHR = VkDeviceAddress (*)(VkDevice, const VkBufferDeviceAddressInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetBufferDeviceAddressKHR typedef qword

; TYPEDEF PFN_vkGetBufferOpaqueCaptureAddressKHR = uint64_t (*)(VkDevice, const VkBufferDeviceAddressInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetBufferOpaqueCaptureAddressKHR typedef qword

; TYPEDEF PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR = uint64_t (*)(VkDevice, const VkDeviceMemoryOpaqueCaptureAddressInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR typedef qword

; VkDeviceAddress vkGetBufferDeviceAddressKHR(VkDevice device, const VkBufferDeviceAddressInfo * pInfo)
vkGetBufferDeviceAddressKHR qword ?

; uint64_t vkGetBufferOpaqueCaptureAddressKHR(VkDevice device, const VkBufferDeviceAddressInfo * pInfo)
vkGetBufferOpaqueCaptureAddressKHR qword ?

; uint64_t vkGetDeviceMemoryOpaqueCaptureAddressKHR(VkDevice device, const VkDeviceMemoryOpaqueCaptureAddressInfo * pInfo)
vkGetDeviceMemoryOpaqueCaptureAddressKHR qword ?

; TYPEDEF VkDeferredOperationKHR = struct VkDeferredOperationKHR_T *, TypeKind.POINTER
VkDeferredOperationKHR typedef qword

; TYPEDEF PFN_vkCreateDeferredOperationKHR = VkResult (*)(VkDevice, const VkAllocationCallbacks *, VkDeferredOperationKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateDeferredOperationKHR typedef qword

; TYPEDEF PFN_vkDestroyDeferredOperationKHR = void (*)(VkDevice, VkDeferredOperationKHR, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyDeferredOperationKHR typedef qword

; TYPEDEF PFN_vkGetDeferredOperationMaxConcurrencyKHR = uint32_t (*)(VkDevice, VkDeferredOperationKHR) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeferredOperationMaxConcurrencyKHR typedef qword

; TYPEDEF PFN_vkGetDeferredOperationResultKHR = VkResult (*)(VkDevice, VkDeferredOperationKHR) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeferredOperationResultKHR typedef qword

; TYPEDEF PFN_vkDeferredOperationJoinKHR = VkResult (*)(VkDevice, VkDeferredOperationKHR) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDeferredOperationJoinKHR typedef qword

; VkResult vkCreateDeferredOperationKHR(VkDevice device, const VkAllocationCallbacks * pAllocator, VkDeferredOperationKHR * pDeferredOperation)
vkCreateDeferredOperationKHR qword ?

; void vkDestroyDeferredOperationKHR(VkDevice device, VkDeferredOperationKHR operation, const VkAllocationCallbacks * pAllocator)
vkDestroyDeferredOperationKHR qword ?

; uint32_t vkGetDeferredOperationMaxConcurrencyKHR(VkDevice device, VkDeferredOperationKHR operation)
vkGetDeferredOperationMaxConcurrencyKHR qword ?

; VkResult vkGetDeferredOperationResultKHR(VkDevice device, VkDeferredOperationKHR operation)
vkGetDeferredOperationResultKHR qword ?

; VkResult vkDeferredOperationJoinKHR(VkDevice device, VkDeferredOperationKHR operation)
vkDeferredOperationJoinKHR qword ?

; enum VkPipelineExecutableStatisticFormatKHR {
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR equ 0
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR equ 1
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR equ 2
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR equ 3
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkPipelineExecutableStatisticFormatKHR = enum VkPipelineExecutableStatisticFormatKHR, TypeKind.ELABORATED
VkPipelineExecutableStatisticFormatKHR typedef dword

; enum VkPipelineExecutableStatisticFormatKHR {
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR equ 0
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR equ 1
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR equ 2
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR equ 3
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_MAX_ENUM_KHR equ 2147483647
; }

VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineExecutableInfo, type = VkBool32, offset = 16, size = 4
    pipelineExecutableInfo VkBool32 <>
VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR ends

; TYPEDEF VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR = struct VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineExecutableInfo, type = VkBool32, offset = 16, size = 4
    pipelineExecutableInfo VkBool32 <>
VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR ends

VkPipelineInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipeline, type = VkPipeline, offset = 16, size = 8
    pipeline VkPipeline <>
VkPipelineInfoKHR ends

; TYPEDEF VkPipelineInfoKHR = struct VkPipelineInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPipelineInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipeline, type = VkPipeline, offset = 16, size = 8
    pipeline VkPipeline <>
VkPipelineInfoKHR ends

VkPipelineExecutablePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stages, type = VkShaderStageFlags, offset = 16, size = 4
    stages VkShaderStageFlags <>
;   TypeKind.CONSTANTARRAY
;   name = name, type = char[256], offset = 20, size = 256
    name byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 276, size = 256
    description byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = subgroupSize, type = uint32_t, offset = 532, size = 4
    subgroupSize dword ?
VkPipelineExecutablePropertiesKHR ends

; TYPEDEF VkPipelineExecutablePropertiesKHR = struct VkPipelineExecutablePropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPipelineExecutablePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stages, type = VkShaderStageFlags, offset = 16, size = 4
    stages VkShaderStageFlags <>
;   TypeKind.CONSTANTARRAY
;   name = name, type = char[256], offset = 20, size = 256
    name byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 276, size = 256
    description byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = subgroupSize, type = uint32_t, offset = 532, size = 4
    subgroupSize dword ?
VkPipelineExecutablePropertiesKHR ends

VkPipelineExecutableInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipeline, type = VkPipeline, offset = 16, size = 8
    pipeline VkPipeline <>
;   TypeKind.ELABORATED
;   name = executableIndex, type = uint32_t, offset = 24, size = 4
    executableIndex dword ?
VkPipelineExecutableInfoKHR ends

; TYPEDEF VkPipelineExecutableInfoKHR = struct VkPipelineExecutableInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPipelineExecutableInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipeline, type = VkPipeline, offset = 16, size = 8
    pipeline VkPipeline <>
;   TypeKind.ELABORATED
;   name = executableIndex, type = uint32_t, offset = 24, size = 4
    executableIndex dword ?
VkPipelineExecutableInfoKHR ends

; TYPEDEF VkPipelineExecutableStatisticValueKHR = union VkPipelineExecutableStatisticValueKHR, TypeKind.ELABORATED
; remove union typedef

VkPipelineExecutableStatisticKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = name, type = char[256], offset = 16, size = 256
    name byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 272, size = 256
    description byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = format, type = VkPipelineExecutableStatisticFormatKHR, offset = 528, size = 4
    format VkPipelineExecutableStatisticFormatKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = value, type = VkPipelineExecutableStatisticValueKHR, offset = 536, size = 8
    value VkPipelineExecutableStatisticValueKHR <>
VkPipelineExecutableStatisticKHR ends

; TYPEDEF VkPipelineExecutableStatisticKHR = struct VkPipelineExecutableStatisticKHR, TypeKind.ELABORATED
; remove struct typedef

VkPipelineExecutableStatisticKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = name, type = char[256], offset = 16, size = 256
    name byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 272, size = 256
    description byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = format, type = VkPipelineExecutableStatisticFormatKHR, offset = 528, size = 4
    format VkPipelineExecutableStatisticFormatKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = value, type = VkPipelineExecutableStatisticValueKHR, offset = 536, size = 8
    value VkPipelineExecutableStatisticValueKHR <>
VkPipelineExecutableStatisticKHR ends

VkPipelineExecutableInternalRepresentationKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = name, type = char[256], offset = 16, size = 256
    name byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 272, size = 256
    description byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = isText, type = VkBool32, offset = 528, size = 4
    isText VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dataSize, type = size_t, offset = 536, size = 8
    dataSize qword ?
;   TypeKind.POINTER
;   name = pData, type = void *, offset = 544, size = 8
    pData qword ?
VkPipelineExecutableInternalRepresentationKHR ends

; TYPEDEF VkPipelineExecutableInternalRepresentationKHR = struct VkPipelineExecutableInternalRepresentationKHR, TypeKind.ELABORATED
; remove struct typedef

VkPipelineExecutableInternalRepresentationKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = name, type = char[256], offset = 16, size = 256
    name byte 256 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 272, size = 256
    description byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = isText, type = VkBool32, offset = 528, size = 4
    isText VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dataSize, type = size_t, offset = 536, size = 8
    dataSize qword ?
;   TypeKind.POINTER
;   name = pData, type = void *, offset = 544, size = 8
    pData qword ?
VkPipelineExecutableInternalRepresentationKHR ends

; TYPEDEF PFN_vkGetPipelineExecutablePropertiesKHR = VkResult (*)(VkDevice, const VkPipelineInfoKHR *, uint32_t *, VkPipelineExecutablePropertiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPipelineExecutablePropertiesKHR typedef qword

; TYPEDEF PFN_vkGetPipelineExecutableStatisticsKHR = VkResult (*)(VkDevice, const VkPipelineExecutableInfoKHR *, uint32_t *, VkPipelineExecutableStatisticKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPipelineExecutableStatisticsKHR typedef qword

; TYPEDEF PFN_vkGetPipelineExecutableInternalRepresentationsKHR = VkResult (*)(VkDevice, const VkPipelineExecutableInfoKHR *, uint32_t *, VkPipelineExecutableInternalRepresentationKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPipelineExecutableInternalRepresentationsKHR typedef qword

; VkResult vkGetPipelineExecutablePropertiesKHR(VkDevice device, const VkPipelineInfoKHR * pPipelineInfo, uint32_t * pExecutableCount, VkPipelineExecutablePropertiesKHR * pProperties)
vkGetPipelineExecutablePropertiesKHR qword ?

; VkResult vkGetPipelineExecutableStatisticsKHR(VkDevice device, const VkPipelineExecutableInfoKHR * pExecutableInfo, uint32_t * pStatisticCount, VkPipelineExecutableStatisticKHR * pStatistics)
vkGetPipelineExecutableStatisticsKHR qword ?

; VkResult vkGetPipelineExecutableInternalRepresentationsKHR(VkDevice device, const VkPipelineExecutableInfoKHR * pExecutableInfo, uint32_t * pInternalRepresentationCount, VkPipelineExecutableInternalRepresentationKHR * pInternalRepresentations)
vkGetPipelineExecutableInternalRepresentationsKHR qword ?

; enum VkMemoryUnmapFlagBitsKHR {
    VK_MEMORY_UNMAP_RESERVE_BIT_EXT equ 1
    VK_MEMORY_UNMAP_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkMemoryUnmapFlagBitsKHR = enum VkMemoryUnmapFlagBitsKHR, TypeKind.ELABORATED
VkMemoryUnmapFlagBitsKHR typedef dword

; enum VkMemoryUnmapFlagBitsKHR {
    VK_MEMORY_UNMAP_RESERVE_BIT_EXT equ 1
    VK_MEMORY_UNMAP_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkMemoryUnmapFlagsKHR = VkFlags, TypeKind.ELABORATED
VkMemoryUnmapFlagsKHR typedef dword

VkMemoryMapInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkMemoryMapFlags, offset = 16, size = 4
    flags VkMemoryMapFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 32, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 40, size = 8
    _size VkDeviceSize <>
VkMemoryMapInfoKHR ends

; TYPEDEF VkMemoryMapInfoKHR = struct VkMemoryMapInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkMemoryMapInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkMemoryMapFlags, offset = 16, size = 4
    flags VkMemoryMapFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 32, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 40, size = 8
    _size VkDeviceSize <>
VkMemoryMapInfoKHR ends

VkMemoryUnmapInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkMemoryUnmapFlagsKHR, offset = 16, size = 4
    flags VkMemoryUnmapFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
VkMemoryUnmapInfoKHR ends

; TYPEDEF VkMemoryUnmapInfoKHR = struct VkMemoryUnmapInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkMemoryUnmapInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkMemoryUnmapFlagsKHR, offset = 16, size = 4
    flags VkMemoryUnmapFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
VkMemoryUnmapInfoKHR ends

; TYPEDEF PFN_vkMapMemory2KHR = VkResult (*)(VkDevice, const VkMemoryMapInfoKHR *, void **) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkMapMemory2KHR typedef qword

; TYPEDEF PFN_vkUnmapMemory2KHR = VkResult (*)(VkDevice, const VkMemoryUnmapInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkUnmapMemory2KHR typedef qword

; VkResult vkMapMemory2KHR(VkDevice device, const VkMemoryMapInfoKHR * pMemoryMapInfo, void ** ppData)
vkMapMemory2KHR qword ?

; VkResult vkUnmapMemory2KHR(VkDevice device, const VkMemoryUnmapInfoKHR * pMemoryUnmapInfo)
vkUnmapMemory2KHR qword ?

; TYPEDEF VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR = VkPhysicalDeviceShaderIntegerDotProductFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR = VkPhysicalDeviceShaderIntegerDotProductProperties, TypeKind.ELABORATED

VkPipelineLibraryCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = libraryCount, type = uint32_t, offset = 16, size = 4
    libraryCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pLibraries, type = const VkPipeline *, offset = 24, size = 8
    pLibraries qword ?
VkPipelineLibraryCreateInfoKHR ends

; TYPEDEF VkPipelineLibraryCreateInfoKHR = struct VkPipelineLibraryCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPipelineLibraryCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = libraryCount, type = uint32_t, offset = 16, size = 4
    libraryCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pLibraries, type = const VkPipeline *, offset = 24, size = 8
    pLibraries qword ?
VkPipelineLibraryCreateInfoKHR ends

VkPresentIdKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPresentIds, type = const uint64_t *, offset = 24, size = 8
    pPresentIds qword ?
VkPresentIdKHR ends

; TYPEDEF VkPresentIdKHR = struct VkPresentIdKHR, TypeKind.ELABORATED
; remove struct typedef

VkPresentIdKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPresentIds, type = const uint64_t *, offset = 24, size = 8
    pPresentIds qword ?
VkPresentIdKHR ends

VkPhysicalDevicePresentIdFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentId, type = VkBool32, offset = 16, size = 4
    presentId VkBool32 <>
VkPhysicalDevicePresentIdFeaturesKHR ends

; TYPEDEF VkPhysicalDevicePresentIdFeaturesKHR = struct VkPhysicalDevicePresentIdFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePresentIdFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentId, type = VkBool32, offset = 16, size = 4
    presentId VkBool32 <>
VkPhysicalDevicePresentIdFeaturesKHR ends

; enum VkVideoEncodeTuningModeKHR {
    VK_VIDEO_ENCODE_TUNING_MODE_DEFAULT_KHR equ 0
    VK_VIDEO_ENCODE_TUNING_MODE_HIGH_QUALITY_KHR equ 1
    VK_VIDEO_ENCODE_TUNING_MODE_LOW_LATENCY_KHR equ 2
    VK_VIDEO_ENCODE_TUNING_MODE_ULTRA_LOW_LATENCY_KHR equ 3
    VK_VIDEO_ENCODE_TUNING_MODE_LOSSLESS_KHR equ 4
    VK_VIDEO_ENCODE_TUNING_MODE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeTuningModeKHR = enum VkVideoEncodeTuningModeKHR, TypeKind.ELABORATED
VkVideoEncodeTuningModeKHR typedef dword

; enum VkVideoEncodeTuningModeKHR {
    VK_VIDEO_ENCODE_TUNING_MODE_DEFAULT_KHR equ 0
    VK_VIDEO_ENCODE_TUNING_MODE_HIGH_QUALITY_KHR equ 1
    VK_VIDEO_ENCODE_TUNING_MODE_LOW_LATENCY_KHR equ 2
    VK_VIDEO_ENCODE_TUNING_MODE_ULTRA_LOW_LATENCY_KHR equ 3
    VK_VIDEO_ENCODE_TUNING_MODE_LOSSLESS_KHR equ 4
    VK_VIDEO_ENCODE_TUNING_MODE_MAX_ENUM_KHR equ 2147483647
; }

; enum VkVideoEncodeFlagBitsKHR {
    VK_VIDEO_ENCODE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeFlagBitsKHR = enum VkVideoEncodeFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeFlagBitsKHR typedef dword

; enum VkVideoEncodeFlagBitsKHR {
    VK_VIDEO_ENCODE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeFlagsKHR typedef dword

; enum VkVideoEncodeCapabilityFlagBitsKHR {
    VK_VIDEO_ENCODE_CAPABILITY_PRECEDING_EXTERNALLY_ENCODED_BYTES_BIT_KHR equ 1
    VK_VIDEO_ENCODE_CAPABILITY_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_DETECTION_BIT_KHR equ 2
    VK_VIDEO_ENCODE_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeCapabilityFlagBitsKHR = enum VkVideoEncodeCapabilityFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeCapabilityFlagBitsKHR typedef dword

; enum VkVideoEncodeCapabilityFlagBitsKHR {
    VK_VIDEO_ENCODE_CAPABILITY_PRECEDING_EXTERNALLY_ENCODED_BYTES_BIT_KHR equ 1
    VK_VIDEO_ENCODE_CAPABILITY_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_DETECTION_BIT_KHR equ 2
    VK_VIDEO_ENCODE_CAPABILITY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeCapabilityFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeCapabilityFlagsKHR typedef dword

; enum VkVideoEncodeRateControlModeFlagBitsKHR {
    VK_VIDEO_ENCODE_RATE_CONTROL_MODE_DEFAULT_KHR equ 0
    VK_VIDEO_ENCODE_RATE_CONTROL_MODE_DISABLED_BIT_KHR equ 1
    VK_VIDEO_ENCODE_RATE_CONTROL_MODE_CBR_BIT_KHR equ 2
    VK_VIDEO_ENCODE_RATE_CONTROL_MODE_VBR_BIT_KHR equ 4
    VK_VIDEO_ENCODE_RATE_CONTROL_MODE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeRateControlModeFlagBitsKHR = enum VkVideoEncodeRateControlModeFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeRateControlModeFlagBitsKHR typedef dword

; enum VkVideoEncodeRateControlModeFlagBitsKHR {
    VK_VIDEO_ENCODE_RATE_CONTROL_MODE_DEFAULT_KHR equ 0
    VK_VIDEO_ENCODE_RATE_CONTROL_MODE_DISABLED_BIT_KHR equ 1
    VK_VIDEO_ENCODE_RATE_CONTROL_MODE_CBR_BIT_KHR equ 2
    VK_VIDEO_ENCODE_RATE_CONTROL_MODE_VBR_BIT_KHR equ 4
    VK_VIDEO_ENCODE_RATE_CONTROL_MODE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeRateControlModeFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeRateControlModeFlagsKHR typedef dword

; enum VkVideoEncodeFeedbackFlagBitsKHR {
    VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_BUFFER_OFFSET_BIT_KHR equ 1
    VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_BYTES_WRITTEN_BIT_KHR equ 2
    VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_HAS_OVERRIDES_BIT_KHR equ 4
    VK_VIDEO_ENCODE_FEEDBACK_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeFeedbackFlagBitsKHR = enum VkVideoEncodeFeedbackFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeFeedbackFlagBitsKHR typedef dword

; enum VkVideoEncodeFeedbackFlagBitsKHR {
    VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_BUFFER_OFFSET_BIT_KHR equ 1
    VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_BYTES_WRITTEN_BIT_KHR equ 2
    VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_HAS_OVERRIDES_BIT_KHR equ 4
    VK_VIDEO_ENCODE_FEEDBACK_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeFeedbackFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeFeedbackFlagsKHR typedef dword

; enum VkVideoEncodeUsageFlagBitsKHR {
    VK_VIDEO_ENCODE_USAGE_DEFAULT_KHR equ 0
    VK_VIDEO_ENCODE_USAGE_TRANSCODING_BIT_KHR equ 1
    VK_VIDEO_ENCODE_USAGE_STREAMING_BIT_KHR equ 2
    VK_VIDEO_ENCODE_USAGE_RECORDING_BIT_KHR equ 4
    VK_VIDEO_ENCODE_USAGE_CONFERENCING_BIT_KHR equ 8
    VK_VIDEO_ENCODE_USAGE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeUsageFlagBitsKHR = enum VkVideoEncodeUsageFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeUsageFlagBitsKHR typedef dword

; enum VkVideoEncodeUsageFlagBitsKHR {
    VK_VIDEO_ENCODE_USAGE_DEFAULT_KHR equ 0
    VK_VIDEO_ENCODE_USAGE_TRANSCODING_BIT_KHR equ 1
    VK_VIDEO_ENCODE_USAGE_STREAMING_BIT_KHR equ 2
    VK_VIDEO_ENCODE_USAGE_RECORDING_BIT_KHR equ 4
    VK_VIDEO_ENCODE_USAGE_CONFERENCING_BIT_KHR equ 8
    VK_VIDEO_ENCODE_USAGE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeUsageFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeUsageFlagsKHR typedef dword

; enum VkVideoEncodeContentFlagBitsKHR {
    VK_VIDEO_ENCODE_CONTENT_DEFAULT_KHR equ 0
    VK_VIDEO_ENCODE_CONTENT_CAMERA_BIT_KHR equ 1
    VK_VIDEO_ENCODE_CONTENT_DESKTOP_BIT_KHR equ 2
    VK_VIDEO_ENCODE_CONTENT_RENDERED_BIT_KHR equ 4
    VK_VIDEO_ENCODE_CONTENT_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeContentFlagBitsKHR = enum VkVideoEncodeContentFlagBitsKHR, TypeKind.ELABORATED
VkVideoEncodeContentFlagBitsKHR typedef dword

; enum VkVideoEncodeContentFlagBitsKHR {
    VK_VIDEO_ENCODE_CONTENT_DEFAULT_KHR equ 0
    VK_VIDEO_ENCODE_CONTENT_CAMERA_BIT_KHR equ 1
    VK_VIDEO_ENCODE_CONTENT_DESKTOP_BIT_KHR equ 2
    VK_VIDEO_ENCODE_CONTENT_RENDERED_BIT_KHR equ 4
    VK_VIDEO_ENCODE_CONTENT_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkVideoEncodeContentFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeContentFlagsKHR typedef dword

; TYPEDEF VkVideoEncodeRateControlFlagsKHR = VkFlags, TypeKind.ELABORATED
VkVideoEncodeRateControlFlagsKHR typedef dword

VkVideoEncodeInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeFlagsKHR, offset = 16, size = 4
    flags VkVideoEncodeFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstBuffer, type = VkBuffer, offset = 24, size = 8
    dstBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = dstBufferOffset, type = VkDeviceSize, offset = 32, size = 8
    dstBufferOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = dstBufferRange, type = VkDeviceSize, offset = 40, size = 8
    dstBufferRange VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = srcPictureResource, type = VkVideoPictureResourceInfoKHR, offset = 48, size = 48
    srcPictureResource VkVideoPictureResourceInfoKHR <>
;   TypeKind.POINTER
;   name = pSetupReferenceSlot, type = const VkVideoReferenceSlotInfoKHR *, offset = 96, size = 8
    pSetupReferenceSlot qword ?
;   TypeKind.ELABORATED
;   name = referenceSlotCount, type = uint32_t, offset = 104, size = 4
    referenceSlotCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pReferenceSlots, type = const VkVideoReferenceSlotInfoKHR *, offset = 112, size = 8
    pReferenceSlots qword ?
;   TypeKind.ELABORATED
;   name = precedingExternallyEncodedBytes, type = uint32_t, offset = 120, size = 4
    precedingExternallyEncodedBytes dword ?
VkVideoEncodeInfoKHR ends

; TYPEDEF VkVideoEncodeInfoKHR = struct VkVideoEncodeInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeFlagsKHR, offset = 16, size = 4
    flags VkVideoEncodeFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstBuffer, type = VkBuffer, offset = 24, size = 8
    dstBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = dstBufferOffset, type = VkDeviceSize, offset = 32, size = 8
    dstBufferOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = dstBufferRange, type = VkDeviceSize, offset = 40, size = 8
    dstBufferRange VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = srcPictureResource, type = VkVideoPictureResourceInfoKHR, offset = 48, size = 48
    srcPictureResource VkVideoPictureResourceInfoKHR <>
;   TypeKind.POINTER
;   name = pSetupReferenceSlot, type = const VkVideoReferenceSlotInfoKHR *, offset = 96, size = 8
    pSetupReferenceSlot qword ?
;   TypeKind.ELABORATED
;   name = referenceSlotCount, type = uint32_t, offset = 104, size = 4
    referenceSlotCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pReferenceSlots, type = const VkVideoReferenceSlotInfoKHR *, offset = 112, size = 8
    pReferenceSlots qword ?
;   TypeKind.ELABORATED
;   name = precedingExternallyEncodedBytes, type = uint32_t, offset = 120, size = 4
    precedingExternallyEncodedBytes dword ?
VkVideoEncodeInfoKHR ends

VkVideoEncodeCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeCapabilityFlagsKHR, offset = 16, size = 4
    flags VkVideoEncodeCapabilityFlagsKHR <>
;   TypeKind.ELABORATED
;   name = rateControlModes, type = VkVideoEncodeRateControlModeFlagsKHR, offset = 20, size = 4
    rateControlModes VkVideoEncodeRateControlModeFlagsKHR <>
;   TypeKind.ELABORATED
;   name = maxRateControlLayers, type = uint32_t, offset = 24, size = 4
    maxRateControlLayers dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = maxBitrate, type = uint64_t, offset = 32, size = 8
    maxBitrate qword ?
;   TypeKind.ELABORATED
;   name = maxQualityLevels, type = uint32_t, offset = 40, size = 4
    maxQualityLevels dword ?
;   TypeKind.ELABORATED
;   name = encodeInputPictureGranularity, type = VkExtent2D, offset = 44, size = 8
    encodeInputPictureGranularity VkExtent2D <>
;   TypeKind.ELABORATED
;   name = supportedEncodeFeedbackFlags, type = VkVideoEncodeFeedbackFlagsKHR, offset = 52, size = 4
    supportedEncodeFeedbackFlags VkVideoEncodeFeedbackFlagsKHR <>
VkVideoEncodeCapabilitiesKHR ends

; TYPEDEF VkVideoEncodeCapabilitiesKHR = struct VkVideoEncodeCapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeCapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeCapabilityFlagsKHR, offset = 16, size = 4
    flags VkVideoEncodeCapabilityFlagsKHR <>
;   TypeKind.ELABORATED
;   name = rateControlModes, type = VkVideoEncodeRateControlModeFlagsKHR, offset = 20, size = 4
    rateControlModes VkVideoEncodeRateControlModeFlagsKHR <>
;   TypeKind.ELABORATED
;   name = maxRateControlLayers, type = uint32_t, offset = 24, size = 4
    maxRateControlLayers dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = maxBitrate, type = uint64_t, offset = 32, size = 8
    maxBitrate qword ?
;   TypeKind.ELABORATED
;   name = maxQualityLevels, type = uint32_t, offset = 40, size = 4
    maxQualityLevels dword ?
;   TypeKind.ELABORATED
;   name = encodeInputPictureGranularity, type = VkExtent2D, offset = 44, size = 8
    encodeInputPictureGranularity VkExtent2D <>
;   TypeKind.ELABORATED
;   name = supportedEncodeFeedbackFlags, type = VkVideoEncodeFeedbackFlagsKHR, offset = 52, size = 4
    supportedEncodeFeedbackFlags VkVideoEncodeFeedbackFlagsKHR <>
VkVideoEncodeCapabilitiesKHR ends

VkQueryPoolVideoEncodeFeedbackCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = encodeFeedbackFlags, type = VkVideoEncodeFeedbackFlagsKHR, offset = 16, size = 4
    encodeFeedbackFlags VkVideoEncodeFeedbackFlagsKHR <>
VkQueryPoolVideoEncodeFeedbackCreateInfoKHR ends

; TYPEDEF VkQueryPoolVideoEncodeFeedbackCreateInfoKHR = struct VkQueryPoolVideoEncodeFeedbackCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkQueryPoolVideoEncodeFeedbackCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = encodeFeedbackFlags, type = VkVideoEncodeFeedbackFlagsKHR, offset = 16, size = 4
    encodeFeedbackFlags VkVideoEncodeFeedbackFlagsKHR <>
VkQueryPoolVideoEncodeFeedbackCreateInfoKHR ends

VkVideoEncodeUsageInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoUsageHints, type = VkVideoEncodeUsageFlagsKHR, offset = 16, size = 4
    videoUsageHints VkVideoEncodeUsageFlagsKHR <>
;   TypeKind.ELABORATED
;   name = videoContentHints, type = VkVideoEncodeContentFlagsKHR, offset = 20, size = 4
    videoContentHints VkVideoEncodeContentFlagsKHR <>
;   TypeKind.ELABORATED
;   name = tuningMode, type = VkVideoEncodeTuningModeKHR, offset = 24, size = 4
    tuningMode VkVideoEncodeTuningModeKHR <>
VkVideoEncodeUsageInfoKHR ends

; TYPEDEF VkVideoEncodeUsageInfoKHR = struct VkVideoEncodeUsageInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeUsageInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoUsageHints, type = VkVideoEncodeUsageFlagsKHR, offset = 16, size = 4
    videoUsageHints VkVideoEncodeUsageFlagsKHR <>
;   TypeKind.ELABORATED
;   name = videoContentHints, type = VkVideoEncodeContentFlagsKHR, offset = 20, size = 4
    videoContentHints VkVideoEncodeContentFlagsKHR <>
;   TypeKind.ELABORATED
;   name = tuningMode, type = VkVideoEncodeTuningModeKHR, offset = 24, size = 4
    tuningMode VkVideoEncodeTuningModeKHR <>
VkVideoEncodeUsageInfoKHR ends

VkVideoEncodeRateControlLayerInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = averageBitrate, type = uint64_t, offset = 16, size = 8
    averageBitrate qword ?
;   TypeKind.ELABORATED
;   name = maxBitrate, type = uint64_t, offset = 24, size = 8
    maxBitrate qword ?
;   TypeKind.ELABORATED
;   name = frameRateNumerator, type = uint32_t, offset = 32, size = 4
    frameRateNumerator dword ?
;   TypeKind.ELABORATED
;   name = frameRateDenominator, type = uint32_t, offset = 36, size = 4
    frameRateDenominator dword ?
VkVideoEncodeRateControlLayerInfoKHR ends

; TYPEDEF VkVideoEncodeRateControlLayerInfoKHR = struct VkVideoEncodeRateControlLayerInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeRateControlLayerInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = averageBitrate, type = uint64_t, offset = 16, size = 8
    averageBitrate qword ?
;   TypeKind.ELABORATED
;   name = maxBitrate, type = uint64_t, offset = 24, size = 8
    maxBitrate qword ?
;   TypeKind.ELABORATED
;   name = frameRateNumerator, type = uint32_t, offset = 32, size = 4
    frameRateNumerator dword ?
;   TypeKind.ELABORATED
;   name = frameRateDenominator, type = uint32_t, offset = 36, size = 4
    frameRateDenominator dword ?
VkVideoEncodeRateControlLayerInfoKHR ends

VkVideoEncodeRateControlInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeRateControlFlagsKHR, offset = 16, size = 4
    flags VkVideoEncodeRateControlFlagsKHR <>
;   TypeKind.ELABORATED
;   name = rateControlMode, type = VkVideoEncodeRateControlModeFlagBitsKHR, offset = 20, size = 4
    rateControlMode VkVideoEncodeRateControlModeFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 24, size = 4
    layerCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pLayers, type = const VkVideoEncodeRateControlLayerInfoKHR *, offset = 32, size = 8
    pLayers qword ?
;   TypeKind.ELABORATED
;   name = virtualBufferSizeInMs, type = uint32_t, offset = 40, size = 4
    virtualBufferSizeInMs dword ?
;   TypeKind.ELABORATED
;   name = initialVirtualBufferSizeInMs, type = uint32_t, offset = 44, size = 4
    initialVirtualBufferSizeInMs dword ?
VkVideoEncodeRateControlInfoKHR ends

; TYPEDEF VkVideoEncodeRateControlInfoKHR = struct VkVideoEncodeRateControlInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeRateControlInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkVideoEncodeRateControlFlagsKHR, offset = 16, size = 4
    flags VkVideoEncodeRateControlFlagsKHR <>
;   TypeKind.ELABORATED
;   name = rateControlMode, type = VkVideoEncodeRateControlModeFlagBitsKHR, offset = 20, size = 4
    rateControlMode VkVideoEncodeRateControlModeFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = layerCount, type = uint32_t, offset = 24, size = 4
    layerCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pLayers, type = const VkVideoEncodeRateControlLayerInfoKHR *, offset = 32, size = 8
    pLayers qword ?
;   TypeKind.ELABORATED
;   name = virtualBufferSizeInMs, type = uint32_t, offset = 40, size = 4
    virtualBufferSizeInMs dword ?
;   TypeKind.ELABORATED
;   name = initialVirtualBufferSizeInMs, type = uint32_t, offset = 44, size = 4
    initialVirtualBufferSizeInMs dword ?
VkVideoEncodeRateControlInfoKHR ends

VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pVideoProfile, type = const VkVideoProfileInfoKHR *, offset = 16, size = 8
    pVideoProfile qword ?
;   TypeKind.ELABORATED
;   name = qualityLevel, type = uint32_t, offset = 24, size = 4
    qualityLevel dword ?
VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR ends

; TYPEDEF VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR = struct VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pVideoProfile, type = const VkVideoProfileInfoKHR *, offset = 16, size = 8
    pVideoProfile qword ?
;   TypeKind.ELABORATED
;   name = qualityLevel, type = uint32_t, offset = 24, size = 4
    qualityLevel dword ?
VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR ends

VkVideoEncodeQualityLevelPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = preferredRateControlMode, type = VkVideoEncodeRateControlModeFlagBitsKHR, offset = 16, size = 4
    preferredRateControlMode VkVideoEncodeRateControlModeFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = preferredRateControlLayerCount, type = uint32_t, offset = 20, size = 4
    preferredRateControlLayerCount dword ?
VkVideoEncodeQualityLevelPropertiesKHR ends

; TYPEDEF VkVideoEncodeQualityLevelPropertiesKHR = struct VkVideoEncodeQualityLevelPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeQualityLevelPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = preferredRateControlMode, type = VkVideoEncodeRateControlModeFlagBitsKHR, offset = 16, size = 4
    preferredRateControlMode VkVideoEncodeRateControlModeFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = preferredRateControlLayerCount, type = uint32_t, offset = 20, size = 4
    preferredRateControlLayerCount dword ?
VkVideoEncodeQualityLevelPropertiesKHR ends

VkVideoEncodeQualityLevelInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = qualityLevel, type = uint32_t, offset = 16, size = 4
    qualityLevel dword ?
VkVideoEncodeQualityLevelInfoKHR ends

; TYPEDEF VkVideoEncodeQualityLevelInfoKHR = struct VkVideoEncodeQualityLevelInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeQualityLevelInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = qualityLevel, type = uint32_t, offset = 16, size = 4
    qualityLevel dword ?
VkVideoEncodeQualityLevelInfoKHR ends

VkVideoEncodeSessionParametersGetInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoSessionParameters, type = VkVideoSessionParametersKHR, offset = 16, size = 8
    videoSessionParameters VkVideoSessionParametersKHR <>
VkVideoEncodeSessionParametersGetInfoKHR ends

; TYPEDEF VkVideoEncodeSessionParametersGetInfoKHR = struct VkVideoEncodeSessionParametersGetInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeSessionParametersGetInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoSessionParameters, type = VkVideoSessionParametersKHR, offset = 16, size = 8
    videoSessionParameters VkVideoSessionParametersKHR <>
VkVideoEncodeSessionParametersGetInfoKHR ends

VkVideoEncodeSessionParametersFeedbackInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hasOverrides, type = VkBool32, offset = 16, size = 4
    hasOverrides VkBool32 <>
VkVideoEncodeSessionParametersFeedbackInfoKHR ends

; TYPEDEF VkVideoEncodeSessionParametersFeedbackInfoKHR = struct VkVideoEncodeSessionParametersFeedbackInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoEncodeSessionParametersFeedbackInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hasOverrides, type = VkBool32, offset = 16, size = 4
    hasOverrides VkBool32 <>
VkVideoEncodeSessionParametersFeedbackInfoKHR ends

; TYPEDEF PFN_vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR = VkResult (*)(VkPhysicalDevice, const VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR *, VkVideoEncodeQualityLevelPropertiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR typedef qword

; TYPEDEF PFN_vkGetEncodedVideoSessionParametersKHR = VkResult (*)(VkDevice, const VkVideoEncodeSessionParametersGetInfoKHR *, VkVideoEncodeSessionParametersFeedbackInfoKHR *, size_t *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetEncodedVideoSessionParametersKHR typedef qword

; TYPEDEF PFN_vkCmdEncodeVideoKHR = void (*)(VkCommandBuffer, const VkVideoEncodeInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEncodeVideoKHR typedef qword

; VkResult vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR * pQualityLevelInfo, VkVideoEncodeQualityLevelPropertiesKHR * pQualityLevelProperties)
vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR qword ?

; VkResult vkGetEncodedVideoSessionParametersKHR(VkDevice device, const VkVideoEncodeSessionParametersGetInfoKHR * pVideoSessionParametersInfo, VkVideoEncodeSessionParametersFeedbackInfoKHR * pFeedbackInfo, size_t * pDataSize, void * pData)
vkGetEncodedVideoSessionParametersKHR qword ?

; void vkCmdEncodeVideoKHR(VkCommandBuffer commandBuffer, const VkVideoEncodeInfoKHR * pEncodeInfo)
vkCmdEncodeVideoKHR qword ?

; TYPEDEF VkPipelineStageFlags2KHR = VkPipelineStageFlags2, TypeKind.ELABORATED

; TYPEDEF VkPipelineStageFlagBits2KHR = VkPipelineStageFlagBits2, TypeKind.ELABORATED

; TYPEDEF VkAccessFlags2KHR = VkAccessFlags2, TypeKind.ELABORATED

; TYPEDEF VkAccessFlagBits2KHR = VkAccessFlagBits2, TypeKind.ELABORATED

; TYPEDEF VkSubmitFlagBitsKHR = VkSubmitFlagBits, TypeKind.ELABORATED

; TYPEDEF VkSubmitFlagsKHR = VkSubmitFlags, TypeKind.ELABORATED

; TYPEDEF VkMemoryBarrier2KHR = VkMemoryBarrier2, TypeKind.ELABORATED

; TYPEDEF VkBufferMemoryBarrier2KHR = VkBufferMemoryBarrier2, TypeKind.ELABORATED

; TYPEDEF VkImageMemoryBarrier2KHR = VkImageMemoryBarrier2, TypeKind.ELABORATED

; TYPEDEF VkDependencyInfoKHR = VkDependencyInfo, TypeKind.ELABORATED

; TYPEDEF VkSubmitInfo2KHR = VkSubmitInfo2, TypeKind.ELABORATED

; TYPEDEF VkSemaphoreSubmitInfoKHR = VkSemaphoreSubmitInfo, TypeKind.ELABORATED

; TYPEDEF VkCommandBufferSubmitInfoKHR = VkCommandBufferSubmitInfo, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceSynchronization2FeaturesKHR = VkPhysicalDeviceSynchronization2Features, TypeKind.ELABORATED

VkQueueFamilyCheckpointProperties2NV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = checkpointExecutionStageMask, type = VkPipelineStageFlags2, offset = 16, size = 8
    checkpointExecutionStageMask VkPipelineStageFlags2 <>
VkQueueFamilyCheckpointProperties2NV ends

; TYPEDEF VkQueueFamilyCheckpointProperties2NV = struct VkQueueFamilyCheckpointProperties2NV, TypeKind.ELABORATED
; remove struct typedef

VkQueueFamilyCheckpointProperties2NV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = checkpointExecutionStageMask, type = VkPipelineStageFlags2, offset = 16, size = 8
    checkpointExecutionStageMask VkPipelineStageFlags2 <>
VkQueueFamilyCheckpointProperties2NV ends

VkCheckpointData2NV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stage, type = VkPipelineStageFlags2, offset = 16, size = 8
    stage VkPipelineStageFlags2 <>
;   TypeKind.POINTER
;   name = pCheckpointMarker, type = void *, offset = 24, size = 8
    pCheckpointMarker qword ?
VkCheckpointData2NV ends

; TYPEDEF VkCheckpointData2NV = struct VkCheckpointData2NV, TypeKind.ELABORATED
; remove struct typedef

VkCheckpointData2NV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stage, type = VkPipelineStageFlags2, offset = 16, size = 8
    stage VkPipelineStageFlags2 <>
;   TypeKind.POINTER
;   name = pCheckpointMarker, type = void *, offset = 24, size = 8
    pCheckpointMarker qword ?
VkCheckpointData2NV ends

; TYPEDEF PFN_vkCmdSetEvent2KHR = void (*)(VkCommandBuffer, VkEvent, const VkDependencyInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetEvent2KHR typedef qword

; TYPEDEF PFN_vkCmdResetEvent2KHR = void (*)(VkCommandBuffer, VkEvent, VkPipelineStageFlags2) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdResetEvent2KHR typedef qword

; TYPEDEF PFN_vkCmdWaitEvents2KHR = void (*)(VkCommandBuffer, uint32_t, const VkEvent *, const VkDependencyInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdWaitEvents2KHR typedef qword

; TYPEDEF PFN_vkCmdPipelineBarrier2KHR = void (*)(VkCommandBuffer, const VkDependencyInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdPipelineBarrier2KHR typedef qword

; TYPEDEF PFN_vkCmdWriteTimestamp2KHR = void (*)(VkCommandBuffer, VkPipelineStageFlags2, VkQueryPool, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdWriteTimestamp2KHR typedef qword

; TYPEDEF PFN_vkQueueSubmit2KHR = VkResult (*)(VkQueue, uint32_t, const VkSubmitInfo2 *, VkFence) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkQueueSubmit2KHR typedef qword

; TYPEDEF PFN_vkCmdWriteBufferMarker2AMD = void (*)(VkCommandBuffer, VkPipelineStageFlags2, VkBuffer, VkDeviceSize, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdWriteBufferMarker2AMD typedef qword

; TYPEDEF PFN_vkGetQueueCheckpointData2NV = void (*)(VkQueue, uint32_t *, VkCheckpointData2NV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetQueueCheckpointData2NV typedef qword

; void vkCmdSetEvent2KHR(VkCommandBuffer commandBuffer, VkEvent event, const VkDependencyInfo * pDependencyInfo)
vkCmdSetEvent2KHR qword ?

; void vkCmdResetEvent2KHR(VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags2 stageMask)
vkCmdResetEvent2KHR qword ?

; void vkCmdWaitEvents2KHR(VkCommandBuffer commandBuffer, uint32_t eventCount, const VkEvent * pEvents, const VkDependencyInfo * pDependencyInfos)
vkCmdWaitEvents2KHR qword ?

; void vkCmdPipelineBarrier2KHR(VkCommandBuffer commandBuffer, const VkDependencyInfo * pDependencyInfo)
vkCmdPipelineBarrier2KHR qword ?

; void vkCmdWriteTimestamp2KHR(VkCommandBuffer commandBuffer, VkPipelineStageFlags2 stage, VkQueryPool queryPool, uint32_t query)
vkCmdWriteTimestamp2KHR qword ?

; VkResult vkQueueSubmit2KHR(VkQueue queue, uint32_t submitCount, const VkSubmitInfo2 * pSubmits, VkFence fence)
vkQueueSubmit2KHR qword ?

; void vkCmdWriteBufferMarker2AMD(VkCommandBuffer commandBuffer, VkPipelineStageFlags2 stage, VkBuffer dstBuffer, VkDeviceSize dstOffset, uint32_t marker)
vkCmdWriteBufferMarker2AMD qword ?

; void vkGetQueueCheckpointData2NV(VkQueue queue, uint32_t * pCheckpointDataCount, VkCheckpointData2NV * pCheckpointData)
vkGetQueueCheckpointData2NV qword ?

VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentShaderBarycentric, type = VkBool32, offset = 16, size = 4
    fragmentShaderBarycentric VkBool32 <>
VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR = struct VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentShaderBarycentric, type = VkBool32, offset = 16, size = 4
    fragmentShaderBarycentric VkBool32 <>
VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR ends

VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = triStripVertexOrderIndependentOfProvokingVertex, type = VkBool32, offset = 16, size = 4
    triStripVertexOrderIndependentOfProvokingVertex VkBool32 <>
VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR ends

; TYPEDEF VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR = struct VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = triStripVertexOrderIndependentOfProvokingVertex, type = VkBool32, offset = 16, size = 4
    triStripVertexOrderIndependentOfProvokingVertex VkBool32 <>
VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR ends

VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSubgroupUniformControlFlow, type = VkBool32, offset = 16, size = 4
    shaderSubgroupUniformControlFlow VkBool32 <>
VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR = struct VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSubgroupUniformControlFlow, type = VkBool32, offset = 16, size = 4
    shaderSubgroupUniformControlFlow VkBool32 <>
VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR = VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures, TypeKind.ELABORATED

VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = workgroupMemoryExplicitLayout, type = VkBool32, offset = 16, size = 4
    workgroupMemoryExplicitLayout VkBool32 <>
;   TypeKind.ELABORATED
;   name = workgroupMemoryExplicitLayoutScalarBlockLayout, type = VkBool32, offset = 20, size = 4
    workgroupMemoryExplicitLayoutScalarBlockLayout VkBool32 <>
;   TypeKind.ELABORATED
;   name = workgroupMemoryExplicitLayout8BitAccess, type = VkBool32, offset = 24, size = 4
    workgroupMemoryExplicitLayout8BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = workgroupMemoryExplicitLayout16BitAccess, type = VkBool32, offset = 28, size = 4
    workgroupMemoryExplicitLayout16BitAccess VkBool32 <>
VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR = struct VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = workgroupMemoryExplicitLayout, type = VkBool32, offset = 16, size = 4
    workgroupMemoryExplicitLayout VkBool32 <>
;   TypeKind.ELABORATED
;   name = workgroupMemoryExplicitLayoutScalarBlockLayout, type = VkBool32, offset = 20, size = 4
    workgroupMemoryExplicitLayoutScalarBlockLayout VkBool32 <>
;   TypeKind.ELABORATED
;   name = workgroupMemoryExplicitLayout8BitAccess, type = VkBool32, offset = 24, size = 4
    workgroupMemoryExplicitLayout8BitAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = workgroupMemoryExplicitLayout16BitAccess, type = VkBool32, offset = 28, size = 4
    workgroupMemoryExplicitLayout16BitAccess VkBool32 <>
VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR ends

; TYPEDEF VkCopyBufferInfo2KHR = VkCopyBufferInfo2, TypeKind.ELABORATED

; TYPEDEF VkCopyImageInfo2KHR = VkCopyImageInfo2, TypeKind.ELABORATED

; TYPEDEF VkCopyBufferToImageInfo2KHR = VkCopyBufferToImageInfo2, TypeKind.ELABORATED

; TYPEDEF VkCopyImageToBufferInfo2KHR = VkCopyImageToBufferInfo2, TypeKind.ELABORATED

; TYPEDEF VkBlitImageInfo2KHR = VkBlitImageInfo2, TypeKind.ELABORATED

; TYPEDEF VkResolveImageInfo2KHR = VkResolveImageInfo2, TypeKind.ELABORATED

; TYPEDEF VkBufferCopy2KHR = VkBufferCopy2, TypeKind.ELABORATED

; TYPEDEF VkImageCopy2KHR = VkImageCopy2, TypeKind.ELABORATED

; TYPEDEF VkImageBlit2KHR = VkImageBlit2, TypeKind.ELABORATED

; TYPEDEF VkBufferImageCopy2KHR = VkBufferImageCopy2, TypeKind.ELABORATED

; TYPEDEF VkImageResolve2KHR = VkImageResolve2, TypeKind.ELABORATED

; TYPEDEF PFN_vkCmdCopyBuffer2KHR = void (*)(VkCommandBuffer, const VkCopyBufferInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyBuffer2KHR typedef qword

; TYPEDEF PFN_vkCmdCopyImage2KHR = void (*)(VkCommandBuffer, const VkCopyImageInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyImage2KHR typedef qword

; TYPEDEF PFN_vkCmdCopyBufferToImage2KHR = void (*)(VkCommandBuffer, const VkCopyBufferToImageInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyBufferToImage2KHR typedef qword

; TYPEDEF PFN_vkCmdCopyImageToBuffer2KHR = void (*)(VkCommandBuffer, const VkCopyImageToBufferInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyImageToBuffer2KHR typedef qword

; TYPEDEF PFN_vkCmdBlitImage2KHR = void (*)(VkCommandBuffer, const VkBlitImageInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBlitImage2KHR typedef qword

; TYPEDEF PFN_vkCmdResolveImage2KHR = void (*)(VkCommandBuffer, const VkResolveImageInfo2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdResolveImage2KHR typedef qword

; void vkCmdCopyBuffer2KHR(VkCommandBuffer commandBuffer, const VkCopyBufferInfo2 * pCopyBufferInfo)
vkCmdCopyBuffer2KHR qword ?

; void vkCmdCopyImage2KHR(VkCommandBuffer commandBuffer, const VkCopyImageInfo2 * pCopyImageInfo)
vkCmdCopyImage2KHR qword ?

; void vkCmdCopyBufferToImage2KHR(VkCommandBuffer commandBuffer, const VkCopyBufferToImageInfo2 * pCopyBufferToImageInfo)
vkCmdCopyBufferToImage2KHR qword ?

; void vkCmdCopyImageToBuffer2KHR(VkCommandBuffer commandBuffer, const VkCopyImageToBufferInfo2 * pCopyImageToBufferInfo)
vkCmdCopyImageToBuffer2KHR qword ?

; void vkCmdBlitImage2KHR(VkCommandBuffer commandBuffer, const VkBlitImageInfo2 * pBlitImageInfo)
vkCmdBlitImage2KHR qword ?

; void vkCmdResolveImage2KHR(VkCommandBuffer commandBuffer, const VkResolveImageInfo2 * pResolveImageInfo)
vkCmdResolveImage2KHR qword ?

; TYPEDEF VkFormatFeatureFlags2KHR = VkFormatFeatureFlags2, TypeKind.ELABORATED

; TYPEDEF VkFormatFeatureFlagBits2KHR = VkFormatFeatureFlagBits2, TypeKind.ELABORATED

; TYPEDEF VkFormatProperties3KHR = VkFormatProperties3, TypeKind.ELABORATED

VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingMaintenance1, type = VkBool32, offset = 16, size = 4
    rayTracingMaintenance1 VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTracingPipelineTraceRaysIndirect2, type = VkBool32, offset = 20, size = 4
    rayTracingPipelineTraceRaysIndirect2 VkBool32 <>
VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR ends

; TYPEDEF VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR = struct VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingMaintenance1, type = VkBool32, offset = 16, size = 4
    rayTracingMaintenance1 VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTracingPipelineTraceRaysIndirect2, type = VkBool32, offset = 20, size = 4
    rayTracingPipelineTraceRaysIndirect2 VkBool32 <>
VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR ends

VkTraceRaysIndirectCommand2KHR struct
;   TypeKind.ELABORATED
;   name = raygenShaderRecordAddress, type = VkDeviceAddress, offset = 0, size = 8
    raygenShaderRecordAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = raygenShaderRecordSize, type = VkDeviceSize, offset = 8, size = 8
    raygenShaderRecordSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = missShaderBindingTableAddress, type = VkDeviceAddress, offset = 16, size = 8
    missShaderBindingTableAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = missShaderBindingTableSize, type = VkDeviceSize, offset = 24, size = 8
    missShaderBindingTableSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = missShaderBindingTableStride, type = VkDeviceSize, offset = 32, size = 8
    missShaderBindingTableStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = hitShaderBindingTableAddress, type = VkDeviceAddress, offset = 40, size = 8
    hitShaderBindingTableAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = hitShaderBindingTableSize, type = VkDeviceSize, offset = 48, size = 8
    hitShaderBindingTableSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = hitShaderBindingTableStride, type = VkDeviceSize, offset = 56, size = 8
    hitShaderBindingTableStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = callableShaderBindingTableAddress, type = VkDeviceAddress, offset = 64, size = 8
    callableShaderBindingTableAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = callableShaderBindingTableSize, type = VkDeviceSize, offset = 72, size = 8
    callableShaderBindingTableSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = callableShaderBindingTableStride, type = VkDeviceSize, offset = 80, size = 8
    callableShaderBindingTableStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 88, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 92, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = depth, type = uint32_t, offset = 96, size = 4
    depth dword ?
VkTraceRaysIndirectCommand2KHR ends

; TYPEDEF VkTraceRaysIndirectCommand2KHR = struct VkTraceRaysIndirectCommand2KHR, TypeKind.ELABORATED
; remove struct typedef

VkTraceRaysIndirectCommand2KHR struct
;   TypeKind.ELABORATED
;   name = raygenShaderRecordAddress, type = VkDeviceAddress, offset = 0, size = 8
    raygenShaderRecordAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = raygenShaderRecordSize, type = VkDeviceSize, offset = 8, size = 8
    raygenShaderRecordSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = missShaderBindingTableAddress, type = VkDeviceAddress, offset = 16, size = 8
    missShaderBindingTableAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = missShaderBindingTableSize, type = VkDeviceSize, offset = 24, size = 8
    missShaderBindingTableSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = missShaderBindingTableStride, type = VkDeviceSize, offset = 32, size = 8
    missShaderBindingTableStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = hitShaderBindingTableAddress, type = VkDeviceAddress, offset = 40, size = 8
    hitShaderBindingTableAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = hitShaderBindingTableSize, type = VkDeviceSize, offset = 48, size = 8
    hitShaderBindingTableSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = hitShaderBindingTableStride, type = VkDeviceSize, offset = 56, size = 8
    hitShaderBindingTableStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = callableShaderBindingTableAddress, type = VkDeviceAddress, offset = 64, size = 8
    callableShaderBindingTableAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = callableShaderBindingTableSize, type = VkDeviceSize, offset = 72, size = 8
    callableShaderBindingTableSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = callableShaderBindingTableStride, type = VkDeviceSize, offset = 80, size = 8
    callableShaderBindingTableStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 88, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 92, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = depth, type = uint32_t, offset = 96, size = 4
    depth dword ?
VkTraceRaysIndirectCommand2KHR ends

; TYPEDEF PFN_vkCmdTraceRaysIndirect2KHR = void (*)(VkCommandBuffer, VkDeviceAddress) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdTraceRaysIndirect2KHR typedef qword

; void vkCmdTraceRaysIndirect2KHR(VkCommandBuffer commandBuffer, VkDeviceAddress indirectDeviceAddress)
vkCmdTraceRaysIndirect2KHR qword ?

; TYPEDEF VkPhysicalDeviceMaintenance4FeaturesKHR = VkPhysicalDeviceMaintenance4Features, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceMaintenance4PropertiesKHR = VkPhysicalDeviceMaintenance4Properties, TypeKind.ELABORATED

; TYPEDEF VkDeviceBufferMemoryRequirementsKHR = VkDeviceBufferMemoryRequirements, TypeKind.ELABORATED

; TYPEDEF VkDeviceImageMemoryRequirementsKHR = VkDeviceImageMemoryRequirements, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetDeviceBufferMemoryRequirementsKHR = void (*)(VkDevice, const VkDeviceBufferMemoryRequirements *, VkMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceBufferMemoryRequirementsKHR typedef qword

; TYPEDEF PFN_vkGetDeviceImageMemoryRequirementsKHR = void (*)(VkDevice, const VkDeviceImageMemoryRequirements *, VkMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceImageMemoryRequirementsKHR typedef qword

; TYPEDEF PFN_vkGetDeviceImageSparseMemoryRequirementsKHR = void (*)(VkDevice, const VkDeviceImageMemoryRequirements *, uint32_t *, VkSparseImageMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceImageSparseMemoryRequirementsKHR typedef qword

; void vkGetDeviceBufferMemoryRequirementsKHR(VkDevice device, const VkDeviceBufferMemoryRequirements * pInfo, VkMemoryRequirements2 * pMemoryRequirements)
vkGetDeviceBufferMemoryRequirementsKHR qword ?

; void vkGetDeviceImageMemoryRequirementsKHR(VkDevice device, const VkDeviceImageMemoryRequirements * pInfo, VkMemoryRequirements2 * pMemoryRequirements)
vkGetDeviceImageMemoryRequirementsKHR qword ?

; void vkGetDeviceImageSparseMemoryRequirementsKHR(VkDevice device, const VkDeviceImageMemoryRequirements * pInfo, uint32_t * pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements2 * pSparseMemoryRequirements)
vkGetDeviceImageSparseMemoryRequirementsKHR qword ?

VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSubgroupRotate, type = VkBool32, offset = 16, size = 4
    shaderSubgroupRotate VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSubgroupRotateClustered, type = VkBool32, offset = 20, size = 4
    shaderSubgroupRotateClustered VkBool32 <>
VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR = struct VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSubgroupRotate, type = VkBool32, offset = 16, size = 4
    shaderSubgroupRotate VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSubgroupRotateClustered, type = VkBool32, offset = 20, size = 4
    shaderSubgroupRotateClustered VkBool32 <>
VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR ends

VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderMaximalReconvergence, type = VkBool32, offset = 16, size = 4
    shaderMaximalReconvergence VkBool32 <>
VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR = struct VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderMaximalReconvergence, type = VkBool32, offset = 16, size = 4
    shaderMaximalReconvergence VkBool32 <>
VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR ends

; TYPEDEF VkPipelineCreateFlags2KHR = VkFlags64, TypeKind.ELABORATED
VkPipelineCreateFlags2KHR typedef dword

; TYPEDEF VkPipelineCreateFlagBits2KHR = VkFlags64, TypeKind.ELABORATED
VkPipelineCreateFlagBits2KHR typedef dword

; TYPEDEF VkBufferUsageFlags2KHR = VkFlags64, TypeKind.ELABORATED
VkBufferUsageFlags2KHR typedef dword

; TYPEDEF VkBufferUsageFlagBits2KHR = VkFlags64, TypeKind.ELABORATED
VkBufferUsageFlagBits2KHR typedef dword

VkPhysicalDeviceMaintenance5FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maintenance5, type = VkBool32, offset = 16, size = 4
    maintenance5 VkBool32 <>
VkPhysicalDeviceMaintenance5FeaturesKHR ends

; TYPEDEF VkPhysicalDeviceMaintenance5FeaturesKHR = struct VkPhysicalDeviceMaintenance5FeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMaintenance5FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maintenance5, type = VkBool32, offset = 16, size = 4
    maintenance5 VkBool32 <>
VkPhysicalDeviceMaintenance5FeaturesKHR ends

VkPhysicalDeviceMaintenance5PropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = earlyFragmentMultisampleCoverageAfterSampleCounting, type = VkBool32, offset = 16, size = 4
    earlyFragmentMultisampleCoverageAfterSampleCounting VkBool32 <>
;   TypeKind.ELABORATED
;   name = earlyFragmentSampleMaskTestBeforeSampleCounting, type = VkBool32, offset = 20, size = 4
    earlyFragmentSampleMaskTestBeforeSampleCounting VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthStencilSwizzleOneSupport, type = VkBool32, offset = 24, size = 4
    depthStencilSwizzleOneSupport VkBool32 <>
;   TypeKind.ELABORATED
;   name = polygonModePointSize, type = VkBool32, offset = 28, size = 4
    polygonModePointSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = nonStrictSinglePixelWideLinesUseParallelogram, type = VkBool32, offset = 32, size = 4
    nonStrictSinglePixelWideLinesUseParallelogram VkBool32 <>
;   TypeKind.ELABORATED
;   name = nonStrictWideLinesUseParallelogram, type = VkBool32, offset = 36, size = 4
    nonStrictWideLinesUseParallelogram VkBool32 <>
VkPhysicalDeviceMaintenance5PropertiesKHR ends

; TYPEDEF VkPhysicalDeviceMaintenance5PropertiesKHR = struct VkPhysicalDeviceMaintenance5PropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMaintenance5PropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = earlyFragmentMultisampleCoverageAfterSampleCounting, type = VkBool32, offset = 16, size = 4
    earlyFragmentMultisampleCoverageAfterSampleCounting VkBool32 <>
;   TypeKind.ELABORATED
;   name = earlyFragmentSampleMaskTestBeforeSampleCounting, type = VkBool32, offset = 20, size = 4
    earlyFragmentSampleMaskTestBeforeSampleCounting VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthStencilSwizzleOneSupport, type = VkBool32, offset = 24, size = 4
    depthStencilSwizzleOneSupport VkBool32 <>
;   TypeKind.ELABORATED
;   name = polygonModePointSize, type = VkBool32, offset = 28, size = 4
    polygonModePointSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = nonStrictSinglePixelWideLinesUseParallelogram, type = VkBool32, offset = 32, size = 4
    nonStrictSinglePixelWideLinesUseParallelogram VkBool32 <>
;   TypeKind.ELABORATED
;   name = nonStrictWideLinesUseParallelogram, type = VkBool32, offset = 36, size = 4
    nonStrictWideLinesUseParallelogram VkBool32 <>
VkPhysicalDeviceMaintenance5PropertiesKHR ends

VkRenderingAreaInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = viewMask, type = uint32_t, offset = 16, size = 4
    viewMask dword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 20, size = 4
    colorAttachmentCount dword ?
;   TypeKind.POINTER
;   name = pColorAttachmentFormats, type = const VkFormat *, offset = 24, size = 8
    pColorAttachmentFormats qword ?
;   TypeKind.ELABORATED
;   name = depthAttachmentFormat, type = VkFormat, offset = 32, size = 4
    depthAttachmentFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = stencilAttachmentFormat, type = VkFormat, offset = 36, size = 4
    stencilAttachmentFormat VkFormat <>
VkRenderingAreaInfoKHR ends

; TYPEDEF VkRenderingAreaInfoKHR = struct VkRenderingAreaInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkRenderingAreaInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = viewMask, type = uint32_t, offset = 16, size = 4
    viewMask dword ?
;   TypeKind.ELABORATED
;   name = colorAttachmentCount, type = uint32_t, offset = 20, size = 4
    colorAttachmentCount dword ?
;   TypeKind.POINTER
;   name = pColorAttachmentFormats, type = const VkFormat *, offset = 24, size = 8
    pColorAttachmentFormats qword ?
;   TypeKind.ELABORATED
;   name = depthAttachmentFormat, type = VkFormat, offset = 32, size = 4
    depthAttachmentFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = stencilAttachmentFormat, type = VkFormat, offset = 36, size = 4
    stencilAttachmentFormat VkFormat <>
VkRenderingAreaInfoKHR ends

VkImageSubresource2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresource, offset = 16, size = 12
    imageSubresource VkImageSubresource <>
VkImageSubresource2KHR ends

; TYPEDEF VkImageSubresource2KHR = struct VkImageSubresource2KHR, TypeKind.ELABORATED
; remove struct typedef

VkImageSubresource2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresource, offset = 16, size = 12
    imageSubresource VkImageSubresource <>
VkImageSubresource2KHR ends

VkDeviceImageSubresourceInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pCreateInfo, type = const VkImageCreateInfo *, offset = 16, size = 8
    pCreateInfo qword ?
;   TypeKind.POINTER
;   name = pSubresource, type = const VkImageSubresource2KHR *, offset = 24, size = 8
    pSubresource qword ?
VkDeviceImageSubresourceInfoKHR ends

; TYPEDEF VkDeviceImageSubresourceInfoKHR = struct VkDeviceImageSubresourceInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkDeviceImageSubresourceInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pCreateInfo, type = const VkImageCreateInfo *, offset = 16, size = 8
    pCreateInfo qword ?
;   TypeKind.POINTER
;   name = pSubresource, type = const VkImageSubresource2KHR *, offset = 24, size = 8
    pSubresource qword ?
VkDeviceImageSubresourceInfoKHR ends

VkSubresourceLayout2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subresourceLayout, type = VkSubresourceLayout, offset = 16, size = 40
    subresourceLayout VkSubresourceLayout <>
VkSubresourceLayout2KHR ends

; TYPEDEF VkSubresourceLayout2KHR = struct VkSubresourceLayout2KHR, TypeKind.ELABORATED
; remove struct typedef

VkSubresourceLayout2KHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subresourceLayout, type = VkSubresourceLayout, offset = 16, size = 40
    subresourceLayout VkSubresourceLayout <>
VkSubresourceLayout2KHR ends

VkPipelineCreateFlags2CreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreateFlags2KHR, offset = 16, size = 8
    flags VkPipelineCreateFlags2KHR <>
VkPipelineCreateFlags2CreateInfoKHR ends

; TYPEDEF VkPipelineCreateFlags2CreateInfoKHR = struct VkPipelineCreateFlags2CreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPipelineCreateFlags2CreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreateFlags2KHR, offset = 16, size = 8
    flags VkPipelineCreateFlags2KHR <>
VkPipelineCreateFlags2CreateInfoKHR ends

VkBufferUsageFlags2CreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = usage, type = VkBufferUsageFlags2KHR, offset = 16, size = 8
    usage VkBufferUsageFlags2KHR <>
VkBufferUsageFlags2CreateInfoKHR ends

; TYPEDEF VkBufferUsageFlags2CreateInfoKHR = struct VkBufferUsageFlags2CreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkBufferUsageFlags2CreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = usage, type = VkBufferUsageFlags2KHR, offset = 16, size = 8
    usage VkBufferUsageFlags2KHR <>
VkBufferUsageFlags2CreateInfoKHR ends

; TYPEDEF PFN_vkCmdBindIndexBuffer2KHR = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkDeviceSize, VkIndexType) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindIndexBuffer2KHR typedef qword

; TYPEDEF PFN_vkGetRenderingAreaGranularityKHR = void (*)(VkDevice, const VkRenderingAreaInfoKHR *, VkExtent2D *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetRenderingAreaGranularityKHR typedef qword

; TYPEDEF PFN_vkGetDeviceImageSubresourceLayoutKHR = void (*)(VkDevice, const VkDeviceImageSubresourceInfoKHR *, VkSubresourceLayout2KHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceImageSubresourceLayoutKHR typedef qword

; TYPEDEF PFN_vkGetImageSubresourceLayout2KHR = void (*)(VkDevice, VkImage, const VkImageSubresource2KHR *, VkSubresourceLayout2KHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageSubresourceLayout2KHR typedef qword

; void vkCmdBindIndexBuffer2KHR(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkDeviceSize size, VkIndexType indexType)
vkCmdBindIndexBuffer2KHR qword ?

; void vkGetRenderingAreaGranularityKHR(VkDevice device, const VkRenderingAreaInfoKHR * pRenderingAreaInfo, VkExtent2D * pGranularity)
vkGetRenderingAreaGranularityKHR qword ?

; void vkGetDeviceImageSubresourceLayoutKHR(VkDevice device, const VkDeviceImageSubresourceInfoKHR * pInfo, VkSubresourceLayout2KHR * pLayout)
vkGetDeviceImageSubresourceLayoutKHR qword ?

; void vkGetImageSubresourceLayout2KHR(VkDevice device, VkImage image, const VkImageSubresource2KHR * pSubresource, VkSubresourceLayout2KHR * pLayout)
vkGetImageSubresourceLayout2KHR qword ?

VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingPositionFetch, type = VkBool32, offset = 16, size = 4
    rayTracingPositionFetch VkBool32 <>
VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR = struct VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingPositionFetch, type = VkBool32, offset = 16, size = 4
    rayTracingPositionFetch VkBool32 <>
VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR ends

; enum VkComponentTypeKHR {
    VK_COMPONENT_TYPE_FLOAT16_KHR equ 0
    VK_COMPONENT_TYPE_FLOAT32_KHR equ 1
    VK_COMPONENT_TYPE_FLOAT64_KHR equ 2
    VK_COMPONENT_TYPE_SINT8_KHR equ 3
    VK_COMPONENT_TYPE_SINT16_KHR equ 4
    VK_COMPONENT_TYPE_SINT32_KHR equ 5
    VK_COMPONENT_TYPE_SINT64_KHR equ 6
    VK_COMPONENT_TYPE_UINT8_KHR equ 7
    VK_COMPONENT_TYPE_UINT16_KHR equ 8
    VK_COMPONENT_TYPE_UINT32_KHR equ 9
    VK_COMPONENT_TYPE_UINT64_KHR equ 10
    VK_COMPONENT_TYPE_FLOAT16_NV equ 0
    VK_COMPONENT_TYPE_FLOAT32_NV equ 1
    VK_COMPONENT_TYPE_FLOAT64_NV equ 2
    VK_COMPONENT_TYPE_SINT8_NV equ 3
    VK_COMPONENT_TYPE_SINT16_NV equ 4
    VK_COMPONENT_TYPE_SINT32_NV equ 5
    VK_COMPONENT_TYPE_SINT64_NV equ 6
    VK_COMPONENT_TYPE_UINT8_NV equ 7
    VK_COMPONENT_TYPE_UINT16_NV equ 8
    VK_COMPONENT_TYPE_UINT32_NV equ 9
    VK_COMPONENT_TYPE_UINT64_NV equ 10
    VK_COMPONENT_TYPE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkComponentTypeKHR = enum VkComponentTypeKHR, TypeKind.ELABORATED
VkComponentTypeKHR typedef dword

; enum VkComponentTypeKHR {
    VK_COMPONENT_TYPE_FLOAT16_KHR equ 0
    VK_COMPONENT_TYPE_FLOAT32_KHR equ 1
    VK_COMPONENT_TYPE_FLOAT64_KHR equ 2
    VK_COMPONENT_TYPE_SINT8_KHR equ 3
    VK_COMPONENT_TYPE_SINT16_KHR equ 4
    VK_COMPONENT_TYPE_SINT32_KHR equ 5
    VK_COMPONENT_TYPE_SINT64_KHR equ 6
    VK_COMPONENT_TYPE_UINT8_KHR equ 7
    VK_COMPONENT_TYPE_UINT16_KHR equ 8
    VK_COMPONENT_TYPE_UINT32_KHR equ 9
    VK_COMPONENT_TYPE_UINT64_KHR equ 10
    VK_COMPONENT_TYPE_FLOAT16_NV equ 0
    VK_COMPONENT_TYPE_FLOAT32_NV equ 1
    VK_COMPONENT_TYPE_FLOAT64_NV equ 2
    VK_COMPONENT_TYPE_SINT8_NV equ 3
    VK_COMPONENT_TYPE_SINT16_NV equ 4
    VK_COMPONENT_TYPE_SINT32_NV equ 5
    VK_COMPONENT_TYPE_SINT64_NV equ 6
    VK_COMPONENT_TYPE_UINT8_NV equ 7
    VK_COMPONENT_TYPE_UINT16_NV equ 8
    VK_COMPONENT_TYPE_UINT32_NV equ 9
    VK_COMPONENT_TYPE_UINT64_NV equ 10
    VK_COMPONENT_TYPE_MAX_ENUM_KHR equ 2147483647
; }

; enum VkScopeKHR {
    VK_SCOPE_DEVICE_KHR equ 1
    VK_SCOPE_WORKGROUP_KHR equ 2
    VK_SCOPE_SUBGROUP_KHR equ 3
    VK_SCOPE_QUEUE_FAMILY_KHR equ 5
    VK_SCOPE_DEVICE_NV equ 1
    VK_SCOPE_WORKGROUP_NV equ 2
    VK_SCOPE_SUBGROUP_NV equ 3
    VK_SCOPE_QUEUE_FAMILY_NV equ 5
    VK_SCOPE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkScopeKHR = enum VkScopeKHR, TypeKind.ELABORATED
VkScopeKHR typedef dword

; enum VkScopeKHR {
    VK_SCOPE_DEVICE_KHR equ 1
    VK_SCOPE_WORKGROUP_KHR equ 2
    VK_SCOPE_SUBGROUP_KHR equ 3
    VK_SCOPE_QUEUE_FAMILY_KHR equ 5
    VK_SCOPE_DEVICE_NV equ 1
    VK_SCOPE_WORKGROUP_NV equ 2
    VK_SCOPE_SUBGROUP_NV equ 3
    VK_SCOPE_QUEUE_FAMILY_NV equ 5
    VK_SCOPE_MAX_ENUM_KHR equ 2147483647
; }

VkCooperativeMatrixPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = MSize, type = uint32_t, offset = 16, size = 4
    MSize dword ?
;   TypeKind.ELABORATED
;   name = NSize, type = uint32_t, offset = 20, size = 4
    NSize dword ?
;   TypeKind.ELABORATED
;   name = KSize, type = uint32_t, offset = 24, size = 4
    KSize dword ?
;   TypeKind.ELABORATED
;   name = AType, type = VkComponentTypeKHR, offset = 28, size = 4
    AType VkComponentTypeKHR <>
;   TypeKind.ELABORATED
;   name = BType, type = VkComponentTypeKHR, offset = 32, size = 4
    BType VkComponentTypeKHR <>
;   TypeKind.ELABORATED
;   name = CType, type = VkComponentTypeKHR, offset = 36, size = 4
    CType VkComponentTypeKHR <>
;   TypeKind.ELABORATED
;   name = ResultType, type = VkComponentTypeKHR, offset = 40, size = 4
    ResultType VkComponentTypeKHR <>
;   TypeKind.ELABORATED
;   name = saturatingAccumulation, type = VkBool32, offset = 44, size = 4
    saturatingAccumulation VkBool32 <>
;   TypeKind.ELABORATED
;   name = scope, type = VkScopeKHR, offset = 48, size = 4
    scope VkScopeKHR <>
VkCooperativeMatrixPropertiesKHR ends

; TYPEDEF VkCooperativeMatrixPropertiesKHR = struct VkCooperativeMatrixPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkCooperativeMatrixPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = MSize, type = uint32_t, offset = 16, size = 4
    MSize dword ?
;   TypeKind.ELABORATED
;   name = NSize, type = uint32_t, offset = 20, size = 4
    NSize dword ?
;   TypeKind.ELABORATED
;   name = KSize, type = uint32_t, offset = 24, size = 4
    KSize dword ?
;   TypeKind.ELABORATED
;   name = AType, type = VkComponentTypeKHR, offset = 28, size = 4
    AType VkComponentTypeKHR <>
;   TypeKind.ELABORATED
;   name = BType, type = VkComponentTypeKHR, offset = 32, size = 4
    BType VkComponentTypeKHR <>
;   TypeKind.ELABORATED
;   name = CType, type = VkComponentTypeKHR, offset = 36, size = 4
    CType VkComponentTypeKHR <>
;   TypeKind.ELABORATED
;   name = ResultType, type = VkComponentTypeKHR, offset = 40, size = 4
    ResultType VkComponentTypeKHR <>
;   TypeKind.ELABORATED
;   name = saturatingAccumulation, type = VkBool32, offset = 44, size = 4
    saturatingAccumulation VkBool32 <>
;   TypeKind.ELABORATED
;   name = scope, type = VkScopeKHR, offset = 48, size = 4
    scope VkScopeKHR <>
VkCooperativeMatrixPropertiesKHR ends

VkPhysicalDeviceCooperativeMatrixFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cooperativeMatrix, type = VkBool32, offset = 16, size = 4
    cooperativeMatrix VkBool32 <>
;   TypeKind.ELABORATED
;   name = cooperativeMatrixRobustBufferAccess, type = VkBool32, offset = 20, size = 4
    cooperativeMatrixRobustBufferAccess VkBool32 <>
VkPhysicalDeviceCooperativeMatrixFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceCooperativeMatrixFeaturesKHR = struct VkPhysicalDeviceCooperativeMatrixFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCooperativeMatrixFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cooperativeMatrix, type = VkBool32, offset = 16, size = 4
    cooperativeMatrix VkBool32 <>
;   TypeKind.ELABORATED
;   name = cooperativeMatrixRobustBufferAccess, type = VkBool32, offset = 20, size = 4
    cooperativeMatrixRobustBufferAccess VkBool32 <>
VkPhysicalDeviceCooperativeMatrixFeaturesKHR ends

VkPhysicalDeviceCooperativeMatrixPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cooperativeMatrixSupportedStages, type = VkShaderStageFlags, offset = 16, size = 4
    cooperativeMatrixSupportedStages VkShaderStageFlags <>
VkPhysicalDeviceCooperativeMatrixPropertiesKHR ends

; TYPEDEF VkPhysicalDeviceCooperativeMatrixPropertiesKHR = struct VkPhysicalDeviceCooperativeMatrixPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCooperativeMatrixPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cooperativeMatrixSupportedStages, type = VkShaderStageFlags, offset = 16, size = 4
    cooperativeMatrixSupportedStages VkShaderStageFlags <>
VkPhysicalDeviceCooperativeMatrixPropertiesKHR ends

; TYPEDEF PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR = VkResult (*)(VkPhysicalDevice, uint32_t *, VkCooperativeMatrixPropertiesKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR typedef qword

; VkResult vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR(VkPhysicalDevice physicalDevice, uint32_t * pPropertyCount, VkCooperativeMatrixPropertiesKHR * pProperties)
vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR qword ?

VkVideoDecodeAV1ProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = stdProfile, type = int, offset = -1, size = 4
    stdProfile sdword ?
;   TypeKind.ELABORATED
;   name = filmGrainSupport, type = VkBool32, offset = -1, size = 4
    filmGrainSupport VkBool32 <>
VkVideoDecodeAV1ProfileInfoKHR ends

; TYPEDEF VkVideoDecodeAV1ProfileInfoKHR = struct VkVideoDecodeAV1ProfileInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeAV1ProfileInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = stdProfile, type = int, offset = -1, size = 4
    stdProfile sdword ?
;   TypeKind.ELABORATED
;   name = filmGrainSupport, type = VkBool32, offset = -1, size = 4
    filmGrainSupport VkBool32 <>
VkVideoDecodeAV1ProfileInfoKHR ends

VkVideoDecodeAV1CapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = maxLevel, type = int, offset = -1, size = 4
    maxLevel sdword ?
VkVideoDecodeAV1CapabilitiesKHR ends

; TYPEDEF VkVideoDecodeAV1CapabilitiesKHR = struct VkVideoDecodeAV1CapabilitiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeAV1CapabilitiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.INT
;   name = maxLevel, type = int, offset = -1, size = 4
    maxLevel sdword ?
VkVideoDecodeAV1CapabilitiesKHR ends

VkVideoDecodeAV1SessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdSequenceHeader, type = const int *, offset = -1, size = 8
    pStdSequenceHeader qword ?
VkVideoDecodeAV1SessionParametersCreateInfoKHR ends

; TYPEDEF VkVideoDecodeAV1SessionParametersCreateInfoKHR = struct VkVideoDecodeAV1SessionParametersCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeAV1SessionParametersCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdSequenceHeader, type = const int *, offset = -1, size = 8
    pStdSequenceHeader qword ?
VkVideoDecodeAV1SessionParametersCreateInfoKHR ends

VkVideoDecodeAV1PictureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdPictureInfo, type = const int *, offset = -1, size = 8
    pStdPictureInfo qword ?
;   TypeKind.CONSTANTARRAY
;   name = referenceNameSlotIndices, type = int32_t[7], offset = -1, size = 28
    referenceNameSlotIndices sdword 7 dup(?)
;   TypeKind.ELABORATED
;   name = frameHeaderOffset, type = uint32_t, offset = -1, size = 4
    frameHeaderOffset dword ?
;   TypeKind.ELABORATED
;   name = tileCount, type = uint32_t, offset = -1, size = 4
    tileCount dword ?
;   TypeKind.POINTER
;   name = pTileOffsets, type = const uint32_t *, offset = -1, size = 8
    pTileOffsets qword ?
;   TypeKind.POINTER
;   name = pTileSizes, type = const uint32_t *, offset = -1, size = 8
    pTileSizes qword ?
VkVideoDecodeAV1PictureInfoKHR ends

; TYPEDEF VkVideoDecodeAV1PictureInfoKHR = struct VkVideoDecodeAV1PictureInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeAV1PictureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdPictureInfo, type = const int *, offset = -1, size = 8
    pStdPictureInfo qword ?
;   TypeKind.CONSTANTARRAY
;   name = referenceNameSlotIndices, type = int32_t[7], offset = -1, size = 28
    referenceNameSlotIndices sdword 7 dup(?)
;   TypeKind.ELABORATED
;   name = frameHeaderOffset, type = uint32_t, offset = -1, size = 4
    frameHeaderOffset dword ?
;   TypeKind.ELABORATED
;   name = tileCount, type = uint32_t, offset = -1, size = 4
    tileCount dword ?
;   TypeKind.POINTER
;   name = pTileOffsets, type = const uint32_t *, offset = -1, size = 8
    pTileOffsets qword ?
;   TypeKind.POINTER
;   name = pTileSizes, type = const uint32_t *, offset = -1, size = 8
    pTileSizes qword ?
VkVideoDecodeAV1PictureInfoKHR ends

VkVideoDecodeAV1DpbSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdReferenceInfo, type = const int *, offset = -1, size = 8
    pStdReferenceInfo qword ?
VkVideoDecodeAV1DpbSlotInfoKHR ends

; TYPEDEF VkVideoDecodeAV1DpbSlotInfoKHR = struct VkVideoDecodeAV1DpbSlotInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoDecodeAV1DpbSlotInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = -1, size = 4
    _sType dword ?
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = -1, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pStdReferenceInfo, type = const int *, offset = -1, size = 8
    pStdReferenceInfo qword ?
VkVideoDecodeAV1DpbSlotInfoKHR ends

VkPhysicalDeviceVideoMaintenance1FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoMaintenance1, type = VkBool32, offset = 16, size = 4
    videoMaintenance1 VkBool32 <>
VkPhysicalDeviceVideoMaintenance1FeaturesKHR ends

; TYPEDEF VkPhysicalDeviceVideoMaintenance1FeaturesKHR = struct VkPhysicalDeviceVideoMaintenance1FeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVideoMaintenance1FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = videoMaintenance1, type = VkBool32, offset = 16, size = 4
    videoMaintenance1 VkBool32 <>
VkPhysicalDeviceVideoMaintenance1FeaturesKHR ends

VkVideoInlineQueryInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queryPool, type = VkQueryPool, offset = 16, size = 8
    queryPool VkQueryPool <>
;   TypeKind.ELABORATED
;   name = firstQuery, type = uint32_t, offset = 24, size = 4
    firstQuery dword ?
;   TypeKind.ELABORATED
;   name = queryCount, type = uint32_t, offset = 28, size = 4
    queryCount dword ?
VkVideoInlineQueryInfoKHR ends

; TYPEDEF VkVideoInlineQueryInfoKHR = struct VkVideoInlineQueryInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkVideoInlineQueryInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queryPool, type = VkQueryPool, offset = 16, size = 8
    queryPool VkQueryPool <>
;   TypeKind.ELABORATED
;   name = firstQuery, type = uint32_t, offset = 24, size = 4
    firstQuery dword ?
;   TypeKind.ELABORATED
;   name = queryCount, type = uint32_t, offset = 28, size = 4
    queryCount dword ?
VkVideoInlineQueryInfoKHR ends

VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxVertexAttribDivisor, type = uint32_t, offset = 16, size = 4
    maxVertexAttribDivisor dword ?
;   TypeKind.ELABORATED
;   name = supportsNonZeroFirstInstance, type = VkBool32, offset = 20, size = 4
    supportsNonZeroFirstInstance VkBool32 <>
VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR ends

; TYPEDEF VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR = struct VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxVertexAttribDivisor, type = uint32_t, offset = 16, size = 4
    maxVertexAttribDivisor dword ?
;   TypeKind.ELABORATED
;   name = supportsNonZeroFirstInstance, type = VkBool32, offset = 20, size = 4
    supportsNonZeroFirstInstance VkBool32 <>
VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR ends

VkVertexInputBindingDivisorDescriptionKHR struct
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 0, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = divisor, type = uint32_t, offset = 4, size = 4
    divisor dword ?
VkVertexInputBindingDivisorDescriptionKHR ends

; TYPEDEF VkVertexInputBindingDivisorDescriptionKHR = struct VkVertexInputBindingDivisorDescriptionKHR, TypeKind.ELABORATED
; remove struct typedef

VkVertexInputBindingDivisorDescriptionKHR struct
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 0, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = divisor, type = uint32_t, offset = 4, size = 4
    divisor dword ?
VkVertexInputBindingDivisorDescriptionKHR ends

VkPipelineVertexInputDivisorStateCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexBindingDivisorCount, type = uint32_t, offset = 16, size = 4
    vertexBindingDivisorCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pVertexBindingDivisors, type = const VkVertexInputBindingDivisorDescriptionKHR *, offset = 24, size = 8
    pVertexBindingDivisors qword ?
VkPipelineVertexInputDivisorStateCreateInfoKHR ends

; TYPEDEF VkPipelineVertexInputDivisorStateCreateInfoKHR = struct VkPipelineVertexInputDivisorStateCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPipelineVertexInputDivisorStateCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexBindingDivisorCount, type = uint32_t, offset = 16, size = 4
    vertexBindingDivisorCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pVertexBindingDivisors, type = const VkVertexInputBindingDivisorDescriptionKHR *, offset = 24, size = 8
    pVertexBindingDivisors qword ?
VkPipelineVertexInputDivisorStateCreateInfoKHR ends

VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexAttributeInstanceRateDivisor, type = VkBool32, offset = 16, size = 4
    vertexAttributeInstanceRateDivisor VkBool32 <>
;   TypeKind.ELABORATED
;   name = vertexAttributeInstanceRateZeroDivisor, type = VkBool32, offset = 20, size = 4
    vertexAttributeInstanceRateZeroDivisor VkBool32 <>
VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR = struct VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexAttributeInstanceRateDivisor, type = VkBool32, offset = 16, size = 4
    vertexAttributeInstanceRateDivisor VkBool32 <>
;   TypeKind.ELABORATED
;   name = vertexAttributeInstanceRateZeroDivisor, type = VkBool32, offset = 20, size = 4
    vertexAttributeInstanceRateZeroDivisor VkBool32 <>
VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR ends

VkPhysicalDeviceShaderFloatControls2FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderFloatControls2, type = VkBool32, offset = 16, size = 4
    shaderFloatControls2 VkBool32 <>
VkPhysicalDeviceShaderFloatControls2FeaturesKHR ends

; TYPEDEF VkPhysicalDeviceShaderFloatControls2FeaturesKHR = struct VkPhysicalDeviceShaderFloatControls2FeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderFloatControls2FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderFloatControls2, type = VkBool32, offset = 16, size = 4
    shaderFloatControls2 VkBool32 <>
VkPhysicalDeviceShaderFloatControls2FeaturesKHR ends

VkPhysicalDeviceIndexTypeUint8FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = indexTypeUint8, type = VkBool32, offset = 16, size = 4
    indexTypeUint8 VkBool32 <>
VkPhysicalDeviceIndexTypeUint8FeaturesKHR ends

; TYPEDEF VkPhysicalDeviceIndexTypeUint8FeaturesKHR = struct VkPhysicalDeviceIndexTypeUint8FeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceIndexTypeUint8FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = indexTypeUint8, type = VkBool32, offset = 16, size = 4
    indexTypeUint8 VkBool32 <>
VkPhysicalDeviceIndexTypeUint8FeaturesKHR ends

; enum VkLineRasterizationModeKHR {
    VK_LINE_RASTERIZATION_MODE_DEFAULT_KHR equ 0
    VK_LINE_RASTERIZATION_MODE_RECTANGULAR_KHR equ 1
    VK_LINE_RASTERIZATION_MODE_BRESENHAM_KHR equ 2
    VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_KHR equ 3
    VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT equ 0
    VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT equ 1
    VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT equ 2
    VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT equ 3
    VK_LINE_RASTERIZATION_MODE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkLineRasterizationModeKHR = enum VkLineRasterizationModeKHR, TypeKind.ELABORATED
VkLineRasterizationModeKHR typedef dword

; enum VkLineRasterizationModeKHR {
    VK_LINE_RASTERIZATION_MODE_DEFAULT_KHR equ 0
    VK_LINE_RASTERIZATION_MODE_RECTANGULAR_KHR equ 1
    VK_LINE_RASTERIZATION_MODE_BRESENHAM_KHR equ 2
    VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_KHR equ 3
    VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT equ 0
    VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT equ 1
    VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT equ 2
    VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT equ 3
    VK_LINE_RASTERIZATION_MODE_MAX_ENUM_KHR equ 2147483647
; }

VkPhysicalDeviceLineRasterizationFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rectangularLines, type = VkBool32, offset = 16, size = 4
    rectangularLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = bresenhamLines, type = VkBool32, offset = 20, size = 4
    bresenhamLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = smoothLines, type = VkBool32, offset = 24, size = 4
    smoothLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = stippledRectangularLines, type = VkBool32, offset = 28, size = 4
    stippledRectangularLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = stippledBresenhamLines, type = VkBool32, offset = 32, size = 4
    stippledBresenhamLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = stippledSmoothLines, type = VkBool32, offset = 36, size = 4
    stippledSmoothLines VkBool32 <>
VkPhysicalDeviceLineRasterizationFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceLineRasterizationFeaturesKHR = struct VkPhysicalDeviceLineRasterizationFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceLineRasterizationFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rectangularLines, type = VkBool32, offset = 16, size = 4
    rectangularLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = bresenhamLines, type = VkBool32, offset = 20, size = 4
    bresenhamLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = smoothLines, type = VkBool32, offset = 24, size = 4
    smoothLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = stippledRectangularLines, type = VkBool32, offset = 28, size = 4
    stippledRectangularLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = stippledBresenhamLines, type = VkBool32, offset = 32, size = 4
    stippledBresenhamLines VkBool32 <>
;   TypeKind.ELABORATED
;   name = stippledSmoothLines, type = VkBool32, offset = 36, size = 4
    stippledSmoothLines VkBool32 <>
VkPhysicalDeviceLineRasterizationFeaturesKHR ends

VkPhysicalDeviceLineRasterizationPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = lineSubPixelPrecisionBits, type = uint32_t, offset = 16, size = 4
    lineSubPixelPrecisionBits dword ?
VkPhysicalDeviceLineRasterizationPropertiesKHR ends

; TYPEDEF VkPhysicalDeviceLineRasterizationPropertiesKHR = struct VkPhysicalDeviceLineRasterizationPropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceLineRasterizationPropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = lineSubPixelPrecisionBits, type = uint32_t, offset = 16, size = 4
    lineSubPixelPrecisionBits dword ?
VkPhysicalDeviceLineRasterizationPropertiesKHR ends

VkPipelineRasterizationLineStateCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = lineRasterizationMode, type = VkLineRasterizationModeKHR, offset = 16, size = 4
    lineRasterizationMode VkLineRasterizationModeKHR <>
;   TypeKind.ELABORATED
;   name = stippledLineEnable, type = VkBool32, offset = 20, size = 4
    stippledLineEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = lineStippleFactor, type = uint32_t, offset = 24, size = 4
    lineStippleFactor dword ?
;   TypeKind.ELABORATED
;   name = lineStipplePattern, type = uint16_t, offset = 28, size = 2
    lineStipplePattern word ?
VkPipelineRasterizationLineStateCreateInfoKHR ends

; TYPEDEF VkPipelineRasterizationLineStateCreateInfoKHR = struct VkPipelineRasterizationLineStateCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPipelineRasterizationLineStateCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = lineRasterizationMode, type = VkLineRasterizationModeKHR, offset = 16, size = 4
    lineRasterizationMode VkLineRasterizationModeKHR <>
;   TypeKind.ELABORATED
;   name = stippledLineEnable, type = VkBool32, offset = 20, size = 4
    stippledLineEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = lineStippleFactor, type = uint32_t, offset = 24, size = 4
    lineStippleFactor dword ?
;   TypeKind.ELABORATED
;   name = lineStipplePattern, type = uint16_t, offset = 28, size = 2
    lineStipplePattern word ?
VkPipelineRasterizationLineStateCreateInfoKHR ends

; TYPEDEF PFN_vkCmdSetLineStippleKHR = void (*)(VkCommandBuffer, uint32_t, uint16_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetLineStippleKHR typedef qword

; void vkCmdSetLineStippleKHR(VkCommandBuffer commandBuffer, uint32_t lineStippleFactor, uint16_t lineStipplePattern)
vkCmdSetLineStippleKHR qword ?

; enum VkTimeDomainKHR {
    VK_TIME_DOMAIN_DEVICE_KHR equ 0
    VK_TIME_DOMAIN_CLOCK_MONOTONIC_KHR equ 1
    VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_KHR equ 2
    VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_KHR equ 3
    VK_TIME_DOMAIN_DEVICE_EXT equ 0
    VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT equ 1
    VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT equ 2
    VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT equ 3
    VK_TIME_DOMAIN_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkTimeDomainKHR = enum VkTimeDomainKHR, TypeKind.ELABORATED
VkTimeDomainKHR typedef dword

; enum VkTimeDomainKHR {
    VK_TIME_DOMAIN_DEVICE_KHR equ 0
    VK_TIME_DOMAIN_CLOCK_MONOTONIC_KHR equ 1
    VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_KHR equ 2
    VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_KHR equ 3
    VK_TIME_DOMAIN_DEVICE_EXT equ 0
    VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT equ 1
    VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT equ 2
    VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT equ 3
    VK_TIME_DOMAIN_MAX_ENUM_KHR equ 2147483647
; }

VkCalibratedTimestampInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = timeDomain, type = VkTimeDomainKHR, offset = 16, size = 4
    timeDomain VkTimeDomainKHR <>
VkCalibratedTimestampInfoKHR ends

; TYPEDEF VkCalibratedTimestampInfoKHR = struct VkCalibratedTimestampInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkCalibratedTimestampInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = timeDomain, type = VkTimeDomainKHR, offset = 16, size = 4
    timeDomain VkTimeDomainKHR <>
VkCalibratedTimestampInfoKHR ends

; TYPEDEF PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsKHR = VkResult (*)(VkPhysicalDevice, uint32_t *, VkTimeDomainKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsKHR typedef qword

; TYPEDEF PFN_vkGetCalibratedTimestampsKHR = VkResult (*)(VkDevice, uint32_t, const VkCalibratedTimestampInfoKHR *, uint64_t *, uint64_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetCalibratedTimestampsKHR typedef qword

; VkResult vkGetPhysicalDeviceCalibrateableTimeDomainsKHR(VkPhysicalDevice physicalDevice, uint32_t * pTimeDomainCount, VkTimeDomainKHR * pTimeDomains)
vkGetPhysicalDeviceCalibrateableTimeDomainsKHR qword ?

; VkResult vkGetCalibratedTimestampsKHR(VkDevice device, uint32_t timestampCount, const VkCalibratedTimestampInfoKHR * pTimestampInfos, uint64_t * pTimestamps, uint64_t * pMaxDeviation)
vkGetCalibratedTimestampsKHR qword ?

VkPhysicalDeviceShaderExpectAssumeFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderExpectAssume, type = VkBool32, offset = 16, size = 4
    shaderExpectAssume VkBool32 <>
VkPhysicalDeviceShaderExpectAssumeFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceShaderExpectAssumeFeaturesKHR = struct VkPhysicalDeviceShaderExpectAssumeFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderExpectAssumeFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderExpectAssume, type = VkBool32, offset = 16, size = 4
    shaderExpectAssume VkBool32 <>
VkPhysicalDeviceShaderExpectAssumeFeaturesKHR ends

VkPhysicalDeviceMaintenance6FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maintenance6, type = VkBool32, offset = 16, size = 4
    maintenance6 VkBool32 <>
VkPhysicalDeviceMaintenance6FeaturesKHR ends

; TYPEDEF VkPhysicalDeviceMaintenance6FeaturesKHR = struct VkPhysicalDeviceMaintenance6FeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMaintenance6FeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maintenance6, type = VkBool32, offset = 16, size = 4
    maintenance6 VkBool32 <>
VkPhysicalDeviceMaintenance6FeaturesKHR ends

VkPhysicalDeviceMaintenance6PropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = blockTexelViewCompatibleMultipleLayers, type = VkBool32, offset = 16, size = 4
    blockTexelViewCompatibleMultipleLayers VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxCombinedImageSamplerDescriptorCount, type = uint32_t, offset = 20, size = 4
    maxCombinedImageSamplerDescriptorCount dword ?
;   TypeKind.ELABORATED
;   name = fragmentShadingRateClampCombinerInputs, type = VkBool32, offset = 24, size = 4
    fragmentShadingRateClampCombinerInputs VkBool32 <>
VkPhysicalDeviceMaintenance6PropertiesKHR ends

; TYPEDEF VkPhysicalDeviceMaintenance6PropertiesKHR = struct VkPhysicalDeviceMaintenance6PropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMaintenance6PropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = blockTexelViewCompatibleMultipleLayers, type = VkBool32, offset = 16, size = 4
    blockTexelViewCompatibleMultipleLayers VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxCombinedImageSamplerDescriptorCount, type = uint32_t, offset = 20, size = 4
    maxCombinedImageSamplerDescriptorCount dword ?
;   TypeKind.ELABORATED
;   name = fragmentShadingRateClampCombinerInputs, type = VkBool32, offset = 24, size = 4
    fragmentShadingRateClampCombinerInputs VkBool32 <>
VkPhysicalDeviceMaintenance6PropertiesKHR ends

VkBindMemoryStatusKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pResult, type = VkResult *, offset = 16, size = 8
    pResult qword ?
VkBindMemoryStatusKHR ends

; TYPEDEF VkBindMemoryStatusKHR = struct VkBindMemoryStatusKHR, TypeKind.ELABORATED
; remove struct typedef

VkBindMemoryStatusKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pResult, type = VkResult *, offset = 16, size = 8
    pResult qword ?
VkBindMemoryStatusKHR ends

VkBindDescriptorSetsInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 16, size = 4
    stageFlags VkShaderStageFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 24, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = firstSet, type = uint32_t, offset = 32, size = 4
    firstSet dword ?
;   TypeKind.ELABORATED
;   name = descriptorSetCount, type = uint32_t, offset = 36, size = 4
    descriptorSetCount dword ?
;   TypeKind.POINTER
;   name = pDescriptorSets, type = const VkDescriptorSet *, offset = 40, size = 8
    pDescriptorSets qword ?
;   TypeKind.ELABORATED
;   name = dynamicOffsetCount, type = uint32_t, offset = 48, size = 4
    dynamicOffsetCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDynamicOffsets, type = const uint32_t *, offset = 56, size = 8
    pDynamicOffsets qword ?
VkBindDescriptorSetsInfoKHR ends

; TYPEDEF VkBindDescriptorSetsInfoKHR = struct VkBindDescriptorSetsInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkBindDescriptorSetsInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 16, size = 4
    stageFlags VkShaderStageFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 24, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = firstSet, type = uint32_t, offset = 32, size = 4
    firstSet dword ?
;   TypeKind.ELABORATED
;   name = descriptorSetCount, type = uint32_t, offset = 36, size = 4
    descriptorSetCount dword ?
;   TypeKind.POINTER
;   name = pDescriptorSets, type = const VkDescriptorSet *, offset = 40, size = 8
    pDescriptorSets qword ?
;   TypeKind.ELABORATED
;   name = dynamicOffsetCount, type = uint32_t, offset = 48, size = 4
    dynamicOffsetCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDynamicOffsets, type = const uint32_t *, offset = 56, size = 8
    pDynamicOffsets qword ?
VkBindDescriptorSetsInfoKHR ends

VkPushConstantsInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 16, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 24, size = 4
    stageFlags VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 28, size = 4
    _offset dword ?
;   TypeKind.ELABORATED
;   name = size, type = uint32_t, offset = 32, size = 4
    _size dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pValues, type = const void *, offset = 40, size = 8
    pValues qword ?
VkPushConstantsInfoKHR ends

; TYPEDEF VkPushConstantsInfoKHR = struct VkPushConstantsInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPushConstantsInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 16, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 24, size = 4
    stageFlags VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 28, size = 4
    _offset dword ?
;   TypeKind.ELABORATED
;   name = size, type = uint32_t, offset = 32, size = 4
    _size dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pValues, type = const void *, offset = 40, size = 8
    pValues qword ?
VkPushConstantsInfoKHR ends

VkPushDescriptorSetInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 16, size = 4
    stageFlags VkShaderStageFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 24, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = set, type = uint32_t, offset = 32, size = 4
    set dword ?
;   TypeKind.ELABORATED
;   name = descriptorWriteCount, type = uint32_t, offset = 36, size = 4
    descriptorWriteCount dword ?
;   TypeKind.POINTER
;   name = pDescriptorWrites, type = const VkWriteDescriptorSet *, offset = 40, size = 8
    pDescriptorWrites qword ?
VkPushDescriptorSetInfoKHR ends

; TYPEDEF VkPushDescriptorSetInfoKHR = struct VkPushDescriptorSetInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPushDescriptorSetInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 16, size = 4
    stageFlags VkShaderStageFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 24, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = set, type = uint32_t, offset = 32, size = 4
    set dword ?
;   TypeKind.ELABORATED
;   name = descriptorWriteCount, type = uint32_t, offset = 36, size = 4
    descriptorWriteCount dword ?
;   TypeKind.POINTER
;   name = pDescriptorWrites, type = const VkWriteDescriptorSet *, offset = 40, size = 8
    pDescriptorWrites qword ?
VkPushDescriptorSetInfoKHR ends

VkPushDescriptorSetWithTemplateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorUpdateTemplate, type = VkDescriptorUpdateTemplate, offset = 16, size = 8
    descriptorUpdateTemplate VkDescriptorUpdateTemplate <>
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 24, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = set, type = uint32_t, offset = 32, size = 4
    set dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pData, type = const void *, offset = 40, size = 8
    pData qword ?
VkPushDescriptorSetWithTemplateInfoKHR ends

; TYPEDEF VkPushDescriptorSetWithTemplateInfoKHR = struct VkPushDescriptorSetWithTemplateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkPushDescriptorSetWithTemplateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorUpdateTemplate, type = VkDescriptorUpdateTemplate, offset = 16, size = 8
    descriptorUpdateTemplate VkDescriptorUpdateTemplate <>
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 24, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = set, type = uint32_t, offset = 32, size = 4
    set dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pData, type = const void *, offset = 40, size = 8
    pData qword ?
VkPushDescriptorSetWithTemplateInfoKHR ends

VkSetDescriptorBufferOffsetsInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 16, size = 4
    stageFlags VkShaderStageFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 24, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = firstSet, type = uint32_t, offset = 32, size = 4
    firstSet dword ?
;   TypeKind.ELABORATED
;   name = setCount, type = uint32_t, offset = 36, size = 4
    setCount dword ?
;   TypeKind.POINTER
;   name = pBufferIndices, type = const uint32_t *, offset = 40, size = 8
    pBufferIndices qword ?
;   TypeKind.POINTER
;   name = pOffsets, type = const VkDeviceSize *, offset = 48, size = 8
    pOffsets qword ?
VkSetDescriptorBufferOffsetsInfoEXT ends

; TYPEDEF VkSetDescriptorBufferOffsetsInfoEXT = struct VkSetDescriptorBufferOffsetsInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkSetDescriptorBufferOffsetsInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 16, size = 4
    stageFlags VkShaderStageFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 24, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = firstSet, type = uint32_t, offset = 32, size = 4
    firstSet dword ?
;   TypeKind.ELABORATED
;   name = setCount, type = uint32_t, offset = 36, size = 4
    setCount dword ?
;   TypeKind.POINTER
;   name = pBufferIndices, type = const uint32_t *, offset = 40, size = 8
    pBufferIndices qword ?
;   TypeKind.POINTER
;   name = pOffsets, type = const VkDeviceSize *, offset = 48, size = 8
    pOffsets qword ?
VkSetDescriptorBufferOffsetsInfoEXT ends

VkBindDescriptorBufferEmbeddedSamplersInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 16, size = 4
    stageFlags VkShaderStageFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 24, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = set, type = uint32_t, offset = 32, size = 4
    set dword ?
VkBindDescriptorBufferEmbeddedSamplersInfoEXT ends

; TYPEDEF VkBindDescriptorBufferEmbeddedSamplersInfoEXT = struct VkBindDescriptorBufferEmbeddedSamplersInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkBindDescriptorBufferEmbeddedSamplersInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stageFlags, type = VkShaderStageFlags, offset = 16, size = 4
    stageFlags VkShaderStageFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 24, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = set, type = uint32_t, offset = 32, size = 4
    set dword ?
VkBindDescriptorBufferEmbeddedSamplersInfoEXT ends

; TYPEDEF PFN_vkCmdBindDescriptorSets2KHR = void (*)(VkCommandBuffer, const VkBindDescriptorSetsInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindDescriptorSets2KHR typedef qword

; TYPEDEF PFN_vkCmdPushConstants2KHR = void (*)(VkCommandBuffer, const VkPushConstantsInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdPushConstants2KHR typedef qword

; TYPEDEF PFN_vkCmdPushDescriptorSet2KHR = void (*)(VkCommandBuffer, const VkPushDescriptorSetInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdPushDescriptorSet2KHR typedef qword

; TYPEDEF PFN_vkCmdPushDescriptorSetWithTemplate2KHR = void (*)(VkCommandBuffer, const VkPushDescriptorSetWithTemplateInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdPushDescriptorSetWithTemplate2KHR typedef qword

; TYPEDEF PFN_vkCmdSetDescriptorBufferOffsets2EXT = void (*)(VkCommandBuffer, const VkSetDescriptorBufferOffsetsInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDescriptorBufferOffsets2EXT typedef qword

; TYPEDEF PFN_vkCmdBindDescriptorBufferEmbeddedSamplers2EXT = void (*)(VkCommandBuffer, const VkBindDescriptorBufferEmbeddedSamplersInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindDescriptorBufferEmbeddedSamplers2EXT typedef qword

; void vkCmdBindDescriptorSets2KHR(VkCommandBuffer commandBuffer, const VkBindDescriptorSetsInfoKHR * pBindDescriptorSetsInfo)
vkCmdBindDescriptorSets2KHR qword ?

; void vkCmdPushConstants2KHR(VkCommandBuffer commandBuffer, const VkPushConstantsInfoKHR * pPushConstantsInfo)
vkCmdPushConstants2KHR qword ?

; void vkCmdPushDescriptorSet2KHR(VkCommandBuffer commandBuffer, const VkPushDescriptorSetInfoKHR * pPushDescriptorSetInfo)
vkCmdPushDescriptorSet2KHR qword ?

; void vkCmdPushDescriptorSetWithTemplate2KHR(VkCommandBuffer commandBuffer, const VkPushDescriptorSetWithTemplateInfoKHR * pPushDescriptorSetWithTemplateInfo)
vkCmdPushDescriptorSetWithTemplate2KHR qword ?

; void vkCmdSetDescriptorBufferOffsets2EXT(VkCommandBuffer commandBuffer, const VkSetDescriptorBufferOffsetsInfoEXT * pSetDescriptorBufferOffsetsInfo)
vkCmdSetDescriptorBufferOffsets2EXT qword ?

; void vkCmdBindDescriptorBufferEmbeddedSamplers2EXT(VkCommandBuffer commandBuffer, const VkBindDescriptorBufferEmbeddedSamplersInfoEXT * pBindDescriptorBufferEmbeddedSamplersInfo)
vkCmdBindDescriptorBufferEmbeddedSamplers2EXT qword ?

; TYPEDEF VkDebugReportCallbackEXT = struct VkDebugReportCallbackEXT_T *, TypeKind.POINTER
VkDebugReportCallbackEXT typedef qword

; enum VkDebugReportObjectTypeEXT {
    VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT equ 0
    VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT equ 1
    VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT equ 2
    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT equ 3
    VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT equ 4
    VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT equ 5
    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT equ 6
    VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT equ 7
    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT equ 8
    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT equ 9
    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT equ 10
    VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT equ 11
    VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT equ 12
    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT equ 13
    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT equ 14
    VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT equ 15
    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT equ 16
    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT equ 17
    VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT equ 18
    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT equ 19
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT equ 20
    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT equ 21
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT equ 22
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT equ 23
    VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT equ 24
    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT equ 25
    VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT equ 26
    VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT equ 27
    VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT equ 28
    VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT equ 29
    VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT equ 30
    VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT equ 33
    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT equ 1000156000
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT equ 1000085000
    VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT equ 1000029000
    VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT equ 1000029001
    VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT equ 1000150000
    VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT equ 1000165000
    VK_DEBUG_REPORT_OBJECT_TYPE_CUDA_MODULE_NV_EXT equ 1000307000
    VK_DEBUG_REPORT_OBJECT_TYPE_CUDA_FUNCTION_NV_EXT equ 1000307001
    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT equ 1000366000
    VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT equ 28
    VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT equ 33
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT equ 1000085000
    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT equ 1000156000
    VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDebugReportObjectTypeEXT = enum VkDebugReportObjectTypeEXT, TypeKind.ELABORATED
VkDebugReportObjectTypeEXT typedef dword

; enum VkDebugReportObjectTypeEXT {
    VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT equ 0
    VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT equ 1
    VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT equ 2
    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT equ 3
    VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT equ 4
    VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT equ 5
    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT equ 6
    VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT equ 7
    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT equ 8
    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT equ 9
    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT equ 10
    VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT equ 11
    VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT equ 12
    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT equ 13
    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT equ 14
    VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT equ 15
    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT equ 16
    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT equ 17
    VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT equ 18
    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT equ 19
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT equ 20
    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT equ 21
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT equ 22
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT equ 23
    VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT equ 24
    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT equ 25
    VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT equ 26
    VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT equ 27
    VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT equ 28
    VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT equ 29
    VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT equ 30
    VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT equ 33
    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT equ 1000156000
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT equ 1000085000
    VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT equ 1000029000
    VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT equ 1000029001
    VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT equ 1000150000
    VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT equ 1000165000
    VK_DEBUG_REPORT_OBJECT_TYPE_CUDA_MODULE_NV_EXT equ 1000307000
    VK_DEBUG_REPORT_OBJECT_TYPE_CUDA_FUNCTION_NV_EXT equ 1000307001
    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT equ 1000366000
    VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT equ 28
    VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT equ 33
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT equ 1000085000
    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT equ 1000156000
    VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; enum VkDebugReportFlagBitsEXT {
    VK_DEBUG_REPORT_INFORMATION_BIT_EXT equ 1
    VK_DEBUG_REPORT_WARNING_BIT_EXT equ 2
    VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT equ 4
    VK_DEBUG_REPORT_ERROR_BIT_EXT equ 8
    VK_DEBUG_REPORT_DEBUG_BIT_EXT equ 16
    VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDebugReportFlagBitsEXT = enum VkDebugReportFlagBitsEXT, TypeKind.ELABORATED
VkDebugReportFlagBitsEXT typedef dword

; enum VkDebugReportFlagBitsEXT {
    VK_DEBUG_REPORT_INFORMATION_BIT_EXT equ 1
    VK_DEBUG_REPORT_WARNING_BIT_EXT equ 2
    VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT equ 4
    VK_DEBUG_REPORT_ERROR_BIT_EXT equ 8
    VK_DEBUG_REPORT_DEBUG_BIT_EXT equ 16
    VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDebugReportFlagsEXT = VkFlags, TypeKind.ELABORATED
VkDebugReportFlagsEXT typedef dword

; TYPEDEF PFN_vkDebugReportCallbackEXT = VkBool32 (*)(VkDebugReportFlagsEXT, VkDebugReportObjectTypeEXT, uint64_t, size_t, int32_t, const char *, const char *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDebugReportCallbackEXT typedef qword

VkDebugReportCallbackCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDebugReportFlagsEXT, offset = 16, size = 4
    flags VkDebugReportFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pfnCallback, type = PFN_vkDebugReportCallbackEXT, offset = 24, size = 8
    pfnCallback PFN_vkDebugReportCallbackEXT <>
;   TypeKind.POINTER
;   name = pUserData, type = void *, offset = 32, size = 8
    pUserData qword ?
VkDebugReportCallbackCreateInfoEXT ends

; TYPEDEF VkDebugReportCallbackCreateInfoEXT = struct VkDebugReportCallbackCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDebugReportCallbackCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDebugReportFlagsEXT, offset = 16, size = 4
    flags VkDebugReportFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pfnCallback, type = PFN_vkDebugReportCallbackEXT, offset = 24, size = 8
    pfnCallback PFN_vkDebugReportCallbackEXT <>
;   TypeKind.POINTER
;   name = pUserData, type = void *, offset = 32, size = 8
    pUserData qword ?
VkDebugReportCallbackCreateInfoEXT ends

; TYPEDEF PFN_vkCreateDebugReportCallbackEXT = VkResult (*)(VkInstance, const VkDebugReportCallbackCreateInfoEXT *, const VkAllocationCallbacks *, VkDebugReportCallbackEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateDebugReportCallbackEXT typedef qword

; TYPEDEF PFN_vkDestroyDebugReportCallbackEXT = void (*)(VkInstance, VkDebugReportCallbackEXT, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyDebugReportCallbackEXT typedef qword

; TYPEDEF PFN_vkDebugReportMessageEXT = void (*)(VkInstance, VkDebugReportFlagsEXT, VkDebugReportObjectTypeEXT, uint64_t, size_t, int32_t, const char *, const char *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDebugReportMessageEXT typedef qword

; VkResult vkCreateDebugReportCallbackEXT(VkInstance instance, const VkDebugReportCallbackCreateInfoEXT * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkDebugReportCallbackEXT * pCallback)
vkCreateDebugReportCallbackEXT qword ?

; void vkDestroyDebugReportCallbackEXT(VkInstance instance, VkDebugReportCallbackEXT callback, const VkAllocationCallbacks * pAllocator)
vkDestroyDebugReportCallbackEXT qword ?

; void vkDebugReportMessageEXT(VkInstance instance, VkDebugReportFlagsEXT flags, VkDebugReportObjectTypeEXT objectType, uint64_t object, size_t location, int32_t messageCode, const char * pLayerPrefix, const char * pMessage)
vkDebugReportMessageEXT qword ?

; enum VkRasterizationOrderAMD {
    VK_RASTERIZATION_ORDER_STRICT_AMD equ 0
    VK_RASTERIZATION_ORDER_RELAXED_AMD equ 1
    VK_RASTERIZATION_ORDER_MAX_ENUM_AMD equ 2147483647
; }

; TYPEDEF VkRasterizationOrderAMD = enum VkRasterizationOrderAMD, TypeKind.ELABORATED
VkRasterizationOrderAMD typedef dword

; enum VkRasterizationOrderAMD {
    VK_RASTERIZATION_ORDER_STRICT_AMD equ 0
    VK_RASTERIZATION_ORDER_RELAXED_AMD equ 1
    VK_RASTERIZATION_ORDER_MAX_ENUM_AMD equ 2147483647
; }

VkPipelineRasterizationStateRasterizationOrderAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rasterizationOrder, type = VkRasterizationOrderAMD, offset = 16, size = 4
    rasterizationOrder VkRasterizationOrderAMD <>
VkPipelineRasterizationStateRasterizationOrderAMD ends

; TYPEDEF VkPipelineRasterizationStateRasterizationOrderAMD = struct VkPipelineRasterizationStateRasterizationOrderAMD, TypeKind.ELABORATED
; remove struct typedef

VkPipelineRasterizationStateRasterizationOrderAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rasterizationOrder, type = VkRasterizationOrderAMD, offset = 16, size = 4
    rasterizationOrder VkRasterizationOrderAMD <>
VkPipelineRasterizationStateRasterizationOrderAMD ends

VkDebugMarkerObjectNameInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = objectType, type = VkDebugReportObjectTypeEXT, offset = 16, size = 4
    objectType VkDebugReportObjectTypeEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = object, type = uint64_t, offset = 24, size = 8
    object qword ?
;   TypeKind.POINTER
;   name = pObjectName, type = const char *, offset = 32, size = 8
    pObjectName qword ?
VkDebugMarkerObjectNameInfoEXT ends

; TYPEDEF VkDebugMarkerObjectNameInfoEXT = struct VkDebugMarkerObjectNameInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDebugMarkerObjectNameInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = objectType, type = VkDebugReportObjectTypeEXT, offset = 16, size = 4
    objectType VkDebugReportObjectTypeEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = object, type = uint64_t, offset = 24, size = 8
    object qword ?
;   TypeKind.POINTER
;   name = pObjectName, type = const char *, offset = 32, size = 8
    pObjectName qword ?
VkDebugMarkerObjectNameInfoEXT ends

VkDebugMarkerObjectTagInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = objectType, type = VkDebugReportObjectTypeEXT, offset = 16, size = 4
    objectType VkDebugReportObjectTypeEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = object, type = uint64_t, offset = 24, size = 8
    object qword ?
;   TypeKind.ELABORATED
;   name = tagName, type = uint64_t, offset = 32, size = 8
    tagName qword ?
;   TypeKind.ELABORATED
;   name = tagSize, type = size_t, offset = 40, size = 8
    tagSize qword ?
;   TypeKind.POINTER
;   name = pTag, type = const void *, offset = 48, size = 8
    pTag qword ?
VkDebugMarkerObjectTagInfoEXT ends

; TYPEDEF VkDebugMarkerObjectTagInfoEXT = struct VkDebugMarkerObjectTagInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDebugMarkerObjectTagInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = objectType, type = VkDebugReportObjectTypeEXT, offset = 16, size = 4
    objectType VkDebugReportObjectTypeEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = object, type = uint64_t, offset = 24, size = 8
    object qword ?
;   TypeKind.ELABORATED
;   name = tagName, type = uint64_t, offset = 32, size = 8
    tagName qword ?
;   TypeKind.ELABORATED
;   name = tagSize, type = size_t, offset = 40, size = 8
    tagSize qword ?
;   TypeKind.POINTER
;   name = pTag, type = const void *, offset = 48, size = 8
    pTag qword ?
VkDebugMarkerObjectTagInfoEXT ends

VkDebugMarkerMarkerInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pMarkerName, type = const char *, offset = 16, size = 8
    pMarkerName qword ?
;   TypeKind.CONSTANTARRAY
;   name = color, type = float[4], offset = 24, size = 16
    color real4 4 dup(?)
VkDebugMarkerMarkerInfoEXT ends

; TYPEDEF VkDebugMarkerMarkerInfoEXT = struct VkDebugMarkerMarkerInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDebugMarkerMarkerInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pMarkerName, type = const char *, offset = 16, size = 8
    pMarkerName qword ?
;   TypeKind.CONSTANTARRAY
;   name = color, type = float[4], offset = 24, size = 16
    color real4 4 dup(?)
VkDebugMarkerMarkerInfoEXT ends

; TYPEDEF PFN_vkDebugMarkerSetObjectTagEXT = VkResult (*)(VkDevice, const VkDebugMarkerObjectTagInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDebugMarkerSetObjectTagEXT typedef qword

; TYPEDEF PFN_vkDebugMarkerSetObjectNameEXT = VkResult (*)(VkDevice, const VkDebugMarkerObjectNameInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDebugMarkerSetObjectNameEXT typedef qword

; TYPEDEF PFN_vkCmdDebugMarkerBeginEXT = void (*)(VkCommandBuffer, const VkDebugMarkerMarkerInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDebugMarkerBeginEXT typedef qword

; TYPEDEF PFN_vkCmdDebugMarkerEndEXT = void (*)(VkCommandBuffer) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDebugMarkerEndEXT typedef qword

; TYPEDEF PFN_vkCmdDebugMarkerInsertEXT = void (*)(VkCommandBuffer, const VkDebugMarkerMarkerInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDebugMarkerInsertEXT typedef qword

; VkResult vkDebugMarkerSetObjectTagEXT(VkDevice device, const VkDebugMarkerObjectTagInfoEXT * pTagInfo)
vkDebugMarkerSetObjectTagEXT qword ?

; VkResult vkDebugMarkerSetObjectNameEXT(VkDevice device, const VkDebugMarkerObjectNameInfoEXT * pNameInfo)
vkDebugMarkerSetObjectNameEXT qword ?

; void vkCmdDebugMarkerBeginEXT(VkCommandBuffer commandBuffer, const VkDebugMarkerMarkerInfoEXT * pMarkerInfo)
vkCmdDebugMarkerBeginEXT qword ?

; void vkCmdDebugMarkerEndEXT(VkCommandBuffer commandBuffer)
vkCmdDebugMarkerEndEXT qword ?

; void vkCmdDebugMarkerInsertEXT(VkCommandBuffer commandBuffer, const VkDebugMarkerMarkerInfoEXT * pMarkerInfo)
vkCmdDebugMarkerInsertEXT qword ?

VkDedicatedAllocationImageCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dedicatedAllocation, type = VkBool32, offset = 16, size = 4
    dedicatedAllocation VkBool32 <>
VkDedicatedAllocationImageCreateInfoNV ends

; TYPEDEF VkDedicatedAllocationImageCreateInfoNV = struct VkDedicatedAllocationImageCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkDedicatedAllocationImageCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dedicatedAllocation, type = VkBool32, offset = 16, size = 4
    dedicatedAllocation VkBool32 <>
VkDedicatedAllocationImageCreateInfoNV ends

VkDedicatedAllocationBufferCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dedicatedAllocation, type = VkBool32, offset = 16, size = 4
    dedicatedAllocation VkBool32 <>
VkDedicatedAllocationBufferCreateInfoNV ends

; TYPEDEF VkDedicatedAllocationBufferCreateInfoNV = struct VkDedicatedAllocationBufferCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkDedicatedAllocationBufferCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dedicatedAllocation, type = VkBool32, offset = 16, size = 4
    dedicatedAllocation VkBool32 <>
VkDedicatedAllocationBufferCreateInfoNV ends

VkDedicatedAllocationMemoryAllocateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 24, size = 8
    _buffer VkBuffer <>
VkDedicatedAllocationMemoryAllocateInfoNV ends

; TYPEDEF VkDedicatedAllocationMemoryAllocateInfoNV = struct VkDedicatedAllocationMemoryAllocateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkDedicatedAllocationMemoryAllocateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 24, size = 8
    _buffer VkBuffer <>
VkDedicatedAllocationMemoryAllocateInfoNV ends

; TYPEDEF VkPipelineRasterizationStateStreamCreateFlagsEXT = VkFlags, TypeKind.ELABORATED
VkPipelineRasterizationStateStreamCreateFlagsEXT typedef dword

VkPhysicalDeviceTransformFeedbackFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = transformFeedback, type = VkBool32, offset = 16, size = 4
    transformFeedback VkBool32 <>
;   TypeKind.ELABORATED
;   name = geometryStreams, type = VkBool32, offset = 20, size = 4
    geometryStreams VkBool32 <>
VkPhysicalDeviceTransformFeedbackFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceTransformFeedbackFeaturesEXT = struct VkPhysicalDeviceTransformFeedbackFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceTransformFeedbackFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = transformFeedback, type = VkBool32, offset = 16, size = 4
    transformFeedback VkBool32 <>
;   TypeKind.ELABORATED
;   name = geometryStreams, type = VkBool32, offset = 20, size = 4
    geometryStreams VkBool32 <>
VkPhysicalDeviceTransformFeedbackFeaturesEXT ends

VkPhysicalDeviceTransformFeedbackPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackStreams, type = uint32_t, offset = 16, size = 4
    maxTransformFeedbackStreams dword ?
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackBuffers, type = uint32_t, offset = 20, size = 4
    maxTransformFeedbackBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackBufferSize, type = VkDeviceSize, offset = 24, size = 8
    maxTransformFeedbackBufferSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackStreamDataSize, type = uint32_t, offset = 32, size = 4
    maxTransformFeedbackStreamDataSize dword ?
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackBufferDataSize, type = uint32_t, offset = 36, size = 4
    maxTransformFeedbackBufferDataSize dword ?
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackBufferDataStride, type = uint32_t, offset = 40, size = 4
    maxTransformFeedbackBufferDataStride dword ?
;   TypeKind.ELABORATED
;   name = transformFeedbackQueries, type = VkBool32, offset = 44, size = 4
    transformFeedbackQueries VkBool32 <>
;   TypeKind.ELABORATED
;   name = transformFeedbackStreamsLinesTriangles, type = VkBool32, offset = 48, size = 4
    transformFeedbackStreamsLinesTriangles VkBool32 <>
;   TypeKind.ELABORATED
;   name = transformFeedbackRasterizationStreamSelect, type = VkBool32, offset = 52, size = 4
    transformFeedbackRasterizationStreamSelect VkBool32 <>
;   TypeKind.ELABORATED
;   name = transformFeedbackDraw, type = VkBool32, offset = 56, size = 4
    transformFeedbackDraw VkBool32 <>
VkPhysicalDeviceTransformFeedbackPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceTransformFeedbackPropertiesEXT = struct VkPhysicalDeviceTransformFeedbackPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceTransformFeedbackPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackStreams, type = uint32_t, offset = 16, size = 4
    maxTransformFeedbackStreams dword ?
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackBuffers, type = uint32_t, offset = 20, size = 4
    maxTransformFeedbackBuffers dword ?
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackBufferSize, type = VkDeviceSize, offset = 24, size = 8
    maxTransformFeedbackBufferSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackStreamDataSize, type = uint32_t, offset = 32, size = 4
    maxTransformFeedbackStreamDataSize dword ?
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackBufferDataSize, type = uint32_t, offset = 36, size = 4
    maxTransformFeedbackBufferDataSize dword ?
;   TypeKind.ELABORATED
;   name = maxTransformFeedbackBufferDataStride, type = uint32_t, offset = 40, size = 4
    maxTransformFeedbackBufferDataStride dword ?
;   TypeKind.ELABORATED
;   name = transformFeedbackQueries, type = VkBool32, offset = 44, size = 4
    transformFeedbackQueries VkBool32 <>
;   TypeKind.ELABORATED
;   name = transformFeedbackStreamsLinesTriangles, type = VkBool32, offset = 48, size = 4
    transformFeedbackStreamsLinesTriangles VkBool32 <>
;   TypeKind.ELABORATED
;   name = transformFeedbackRasterizationStreamSelect, type = VkBool32, offset = 52, size = 4
    transformFeedbackRasterizationStreamSelect VkBool32 <>
;   TypeKind.ELABORATED
;   name = transformFeedbackDraw, type = VkBool32, offset = 56, size = 4
    transformFeedbackDraw VkBool32 <>
VkPhysicalDeviceTransformFeedbackPropertiesEXT ends

VkPipelineRasterizationStateStreamCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineRasterizationStateStreamCreateFlagsEXT, offset = 16, size = 4
    flags VkPipelineRasterizationStateStreamCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = rasterizationStream, type = uint32_t, offset = 20, size = 4
    rasterizationStream dword ?
VkPipelineRasterizationStateStreamCreateInfoEXT ends

; TYPEDEF VkPipelineRasterizationStateStreamCreateInfoEXT = struct VkPipelineRasterizationStateStreamCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelineRasterizationStateStreamCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineRasterizationStateStreamCreateFlagsEXT, offset = 16, size = 4
    flags VkPipelineRasterizationStateStreamCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = rasterizationStream, type = uint32_t, offset = 20, size = 4
    rasterizationStream dword ?
VkPipelineRasterizationStateStreamCreateInfoEXT ends

; TYPEDEF PFN_vkCmdBindTransformFeedbackBuffersEXT = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkBuffer *, const VkDeviceSize *, const VkDeviceSize *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindTransformFeedbackBuffersEXT typedef qword

; TYPEDEF PFN_vkCmdBeginTransformFeedbackEXT = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkBuffer *, const VkDeviceSize *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBeginTransformFeedbackEXT typedef qword

; TYPEDEF PFN_vkCmdEndTransformFeedbackEXT = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkBuffer *, const VkDeviceSize *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEndTransformFeedbackEXT typedef qword

; TYPEDEF PFN_vkCmdBeginQueryIndexedEXT = void (*)(VkCommandBuffer, VkQueryPool, uint32_t, VkQueryControlFlags, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBeginQueryIndexedEXT typedef qword

; TYPEDEF PFN_vkCmdEndQueryIndexedEXT = void (*)(VkCommandBuffer, VkQueryPool, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEndQueryIndexedEXT typedef qword

; TYPEDEF PFN_vkCmdDrawIndirectByteCountEXT = void (*)(VkCommandBuffer, uint32_t, uint32_t, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawIndirectByteCountEXT typedef qword

; void vkCmdBindTransformFeedbackBuffersEXT(VkCommandBuffer commandBuffer, uint32_t firstBinding, uint32_t bindingCount, const VkBuffer * pBuffers, const VkDeviceSize * pOffsets, const VkDeviceSize * pSizes)
vkCmdBindTransformFeedbackBuffersEXT qword ?

; void vkCmdBeginTransformFeedbackEXT(VkCommandBuffer commandBuffer, uint32_t firstCounterBuffer, uint32_t counterBufferCount, const VkBuffer * pCounterBuffers, const VkDeviceSize * pCounterBufferOffsets)
vkCmdBeginTransformFeedbackEXT qword ?

; void vkCmdEndTransformFeedbackEXT(VkCommandBuffer commandBuffer, uint32_t firstCounterBuffer, uint32_t counterBufferCount, const VkBuffer * pCounterBuffers, const VkDeviceSize * pCounterBufferOffsets)
vkCmdEndTransformFeedbackEXT qword ?

; void vkCmdBeginQueryIndexedEXT(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query, VkQueryControlFlags flags, uint32_t index)
vkCmdBeginQueryIndexedEXT qword ?

; void vkCmdEndQueryIndexedEXT(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query, uint32_t index)
vkCmdEndQueryIndexedEXT qword ?

; void vkCmdDrawIndirectByteCountEXT(VkCommandBuffer commandBuffer, uint32_t instanceCount, uint32_t firstInstance, VkBuffer counterBuffer, VkDeviceSize counterBufferOffset, uint32_t counterOffset, uint32_t vertexStride)
vkCmdDrawIndirectByteCountEXT qword ?

; TYPEDEF VkCuModuleNVX = struct VkCuModuleNVX_T *, TypeKind.POINTER
VkCuModuleNVX typedef qword

; TYPEDEF VkCuFunctionNVX = struct VkCuFunctionNVX_T *, TypeKind.POINTER
VkCuFunctionNVX typedef qword

VkCuModuleCreateInfoNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dataSize, type = size_t, offset = 16, size = 8
    dataSize qword ?
;   TypeKind.POINTER
;   name = pData, type = const void *, offset = 24, size = 8
    pData qword ?
VkCuModuleCreateInfoNVX ends

; TYPEDEF VkCuModuleCreateInfoNVX = struct VkCuModuleCreateInfoNVX, TypeKind.ELABORATED
; remove struct typedef

VkCuModuleCreateInfoNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dataSize, type = size_t, offset = 16, size = 8
    dataSize qword ?
;   TypeKind.POINTER
;   name = pData, type = const void *, offset = 24, size = 8
    pData qword ?
VkCuModuleCreateInfoNVX ends

VkCuFunctionCreateInfoNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = module, type = VkCuModuleNVX, offset = 16, size = 8
    module VkCuModuleNVX <>
;   TypeKind.POINTER
;   name = pName, type = const char *, offset = 24, size = 8
    pName qword ?
VkCuFunctionCreateInfoNVX ends

; TYPEDEF VkCuFunctionCreateInfoNVX = struct VkCuFunctionCreateInfoNVX, TypeKind.ELABORATED
; remove struct typedef

VkCuFunctionCreateInfoNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = module, type = VkCuModuleNVX, offset = 16, size = 8
    module VkCuModuleNVX <>
;   TypeKind.POINTER
;   name = pName, type = const char *, offset = 24, size = 8
    pName qword ?
VkCuFunctionCreateInfoNVX ends

VkCuLaunchInfoNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = function, type = VkCuFunctionNVX, offset = 16, size = 8
    function VkCuFunctionNVX <>
;   TypeKind.ELABORATED
;   name = gridDimX, type = uint32_t, offset = 24, size = 4
    gridDimX dword ?
;   TypeKind.ELABORATED
;   name = gridDimY, type = uint32_t, offset = 28, size = 4
    gridDimY dword ?
;   TypeKind.ELABORATED
;   name = gridDimZ, type = uint32_t, offset = 32, size = 4
    gridDimZ dword ?
;   TypeKind.ELABORATED
;   name = blockDimX, type = uint32_t, offset = 36, size = 4
    blockDimX dword ?
;   TypeKind.ELABORATED
;   name = blockDimY, type = uint32_t, offset = 40, size = 4
    blockDimY dword ?
;   TypeKind.ELABORATED
;   name = blockDimZ, type = uint32_t, offset = 44, size = 4
    blockDimZ dword ?
;   TypeKind.ELABORATED
;   name = sharedMemBytes, type = uint32_t, offset = 48, size = 4
    sharedMemBytes dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = paramCount, type = size_t, offset = 56, size = 8
    paramCount qword ?
;   TypeKind.POINTER
;   name = pParams, type = const void *const *, offset = 64, size = 8
    pParams qword ?
;   TypeKind.ELABORATED
;   name = extraCount, type = size_t, offset = 72, size = 8
    extraCount qword ?
;   TypeKind.POINTER
;   name = pExtras, type = const void *const *, offset = 80, size = 8
    pExtras qword ?
VkCuLaunchInfoNVX ends

; TYPEDEF VkCuLaunchInfoNVX = struct VkCuLaunchInfoNVX, TypeKind.ELABORATED
; remove struct typedef

VkCuLaunchInfoNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = function, type = VkCuFunctionNVX, offset = 16, size = 8
    function VkCuFunctionNVX <>
;   TypeKind.ELABORATED
;   name = gridDimX, type = uint32_t, offset = 24, size = 4
    gridDimX dword ?
;   TypeKind.ELABORATED
;   name = gridDimY, type = uint32_t, offset = 28, size = 4
    gridDimY dword ?
;   TypeKind.ELABORATED
;   name = gridDimZ, type = uint32_t, offset = 32, size = 4
    gridDimZ dword ?
;   TypeKind.ELABORATED
;   name = blockDimX, type = uint32_t, offset = 36, size = 4
    blockDimX dword ?
;   TypeKind.ELABORATED
;   name = blockDimY, type = uint32_t, offset = 40, size = 4
    blockDimY dword ?
;   TypeKind.ELABORATED
;   name = blockDimZ, type = uint32_t, offset = 44, size = 4
    blockDimZ dword ?
;   TypeKind.ELABORATED
;   name = sharedMemBytes, type = uint32_t, offset = 48, size = 4
    sharedMemBytes dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = paramCount, type = size_t, offset = 56, size = 8
    paramCount qword ?
;   TypeKind.POINTER
;   name = pParams, type = const void *const *, offset = 64, size = 8
    pParams qword ?
;   TypeKind.ELABORATED
;   name = extraCount, type = size_t, offset = 72, size = 8
    extraCount qword ?
;   TypeKind.POINTER
;   name = pExtras, type = const void *const *, offset = 80, size = 8
    pExtras qword ?
VkCuLaunchInfoNVX ends

; TYPEDEF PFN_vkCreateCuModuleNVX = VkResult (*)(VkDevice, const VkCuModuleCreateInfoNVX *, const VkAllocationCallbacks *, VkCuModuleNVX *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateCuModuleNVX typedef qword

; TYPEDEF PFN_vkCreateCuFunctionNVX = VkResult (*)(VkDevice, const VkCuFunctionCreateInfoNVX *, const VkAllocationCallbacks *, VkCuFunctionNVX *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateCuFunctionNVX typedef qword

; TYPEDEF PFN_vkDestroyCuModuleNVX = void (*)(VkDevice, VkCuModuleNVX, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyCuModuleNVX typedef qword

; TYPEDEF PFN_vkDestroyCuFunctionNVX = void (*)(VkDevice, VkCuFunctionNVX, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyCuFunctionNVX typedef qword

; TYPEDEF PFN_vkCmdCuLaunchKernelNVX = void (*)(VkCommandBuffer, const VkCuLaunchInfoNVX *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCuLaunchKernelNVX typedef qword

; VkResult vkCreateCuModuleNVX(VkDevice device, const VkCuModuleCreateInfoNVX * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkCuModuleNVX * pModule)
vkCreateCuModuleNVX qword ?

; VkResult vkCreateCuFunctionNVX(VkDevice device, const VkCuFunctionCreateInfoNVX * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkCuFunctionNVX * pFunction)
vkCreateCuFunctionNVX qword ?

; void vkDestroyCuModuleNVX(VkDevice device, VkCuModuleNVX module, const VkAllocationCallbacks * pAllocator)
vkDestroyCuModuleNVX qword ?

; void vkDestroyCuFunctionNVX(VkDevice device, VkCuFunctionNVX function, const VkAllocationCallbacks * pAllocator)
vkDestroyCuFunctionNVX qword ?

; void vkCmdCuLaunchKernelNVX(VkCommandBuffer commandBuffer, const VkCuLaunchInfoNVX * pLaunchInfo)
vkCmdCuLaunchKernelNVX qword ?

VkImageViewHandleInfoNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 16, size = 8
    imageView VkImageView <>
;   TypeKind.ELABORATED
;   name = descriptorType, type = VkDescriptorType, offset = 24, size = 4
    descriptorType VkDescriptorType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = sampler, type = VkSampler, offset = 32, size = 8
    sampler VkSampler <>
VkImageViewHandleInfoNVX ends

; TYPEDEF VkImageViewHandleInfoNVX = struct VkImageViewHandleInfoNVX, TypeKind.ELABORATED
; remove struct typedef

VkImageViewHandleInfoNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 16, size = 8
    imageView VkImageView <>
;   TypeKind.ELABORATED
;   name = descriptorType, type = VkDescriptorType, offset = 24, size = 4
    descriptorType VkDescriptorType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = sampler, type = VkSampler, offset = 32, size = 8
    sampler VkSampler <>
VkImageViewHandleInfoNVX ends

VkImageViewAddressPropertiesNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 16, size = 8
    deviceAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 24, size = 8
    _size VkDeviceSize <>
VkImageViewAddressPropertiesNVX ends

; TYPEDEF VkImageViewAddressPropertiesNVX = struct VkImageViewAddressPropertiesNVX, TypeKind.ELABORATED
; remove struct typedef

VkImageViewAddressPropertiesNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 16, size = 8
    deviceAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 24, size = 8
    _size VkDeviceSize <>
VkImageViewAddressPropertiesNVX ends

; TYPEDEF PFN_vkGetImageViewHandleNVX = uint32_t (*)(VkDevice, const VkImageViewHandleInfoNVX *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageViewHandleNVX typedef qword

; TYPEDEF PFN_vkGetImageViewAddressNVX = VkResult (*)(VkDevice, VkImageView, VkImageViewAddressPropertiesNVX *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageViewAddressNVX typedef qword

; uint32_t vkGetImageViewHandleNVX(VkDevice device, const VkImageViewHandleInfoNVX * pInfo)
vkGetImageViewHandleNVX qword ?

; VkResult vkGetImageViewAddressNVX(VkDevice device, VkImageView imageView, VkImageViewAddressPropertiesNVX * pProperties)
vkGetImageViewAddressNVX qword ?

; TYPEDEF PFN_vkCmdDrawIndirectCountAMD = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawIndirectCountAMD typedef qword

; TYPEDEF PFN_vkCmdDrawIndexedIndirectCountAMD = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawIndexedIndirectCountAMD typedef qword

; void vkCmdDrawIndirectCountAMD(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride)
vkCmdDrawIndirectCountAMD qword ?

; void vkCmdDrawIndexedIndirectCountAMD(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride)
vkCmdDrawIndexedIndirectCountAMD qword ?

VkTextureLODGatherFormatPropertiesAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportsTextureGatherLODBiasAMD, type = VkBool32, offset = 16, size = 4
    supportsTextureGatherLODBiasAMD VkBool32 <>
VkTextureLODGatherFormatPropertiesAMD ends

; TYPEDEF VkTextureLODGatherFormatPropertiesAMD = struct VkTextureLODGatherFormatPropertiesAMD, TypeKind.ELABORATED
; remove struct typedef

VkTextureLODGatherFormatPropertiesAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportsTextureGatherLODBiasAMD, type = VkBool32, offset = 16, size = 4
    supportsTextureGatherLODBiasAMD VkBool32 <>
VkTextureLODGatherFormatPropertiesAMD ends

; enum VkShaderInfoTypeAMD {
    VK_SHADER_INFO_TYPE_STATISTICS_AMD equ 0
    VK_SHADER_INFO_TYPE_BINARY_AMD equ 1
    VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD equ 2
    VK_SHADER_INFO_TYPE_MAX_ENUM_AMD equ 2147483647
; }

; TYPEDEF VkShaderInfoTypeAMD = enum VkShaderInfoTypeAMD, TypeKind.ELABORATED
VkShaderInfoTypeAMD typedef dword

; enum VkShaderInfoTypeAMD {
    VK_SHADER_INFO_TYPE_STATISTICS_AMD equ 0
    VK_SHADER_INFO_TYPE_BINARY_AMD equ 1
    VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD equ 2
    VK_SHADER_INFO_TYPE_MAX_ENUM_AMD equ 2147483647
; }

VkShaderResourceUsageAMD struct
;   TypeKind.ELABORATED
;   name = numUsedVgprs, type = uint32_t, offset = 0, size = 4
    numUsedVgprs dword ?
;   TypeKind.ELABORATED
;   name = numUsedSgprs, type = uint32_t, offset = 4, size = 4
    numUsedSgprs dword ?
;   TypeKind.ELABORATED
;   name = ldsSizePerLocalWorkGroup, type = uint32_t, offset = 8, size = 4
    ldsSizePerLocalWorkGroup dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = ldsUsageSizeInBytes, type = size_t, offset = 16, size = 8
    ldsUsageSizeInBytes qword ?
;   TypeKind.ELABORATED
;   name = scratchMemUsageInBytes, type = size_t, offset = 24, size = 8
    scratchMemUsageInBytes qword ?
VkShaderResourceUsageAMD ends

; TYPEDEF VkShaderResourceUsageAMD = struct VkShaderResourceUsageAMD, TypeKind.ELABORATED
; remove struct typedef

VkShaderResourceUsageAMD struct
;   TypeKind.ELABORATED
;   name = numUsedVgprs, type = uint32_t, offset = 0, size = 4
    numUsedVgprs dword ?
;   TypeKind.ELABORATED
;   name = numUsedSgprs, type = uint32_t, offset = 4, size = 4
    numUsedSgprs dword ?
;   TypeKind.ELABORATED
;   name = ldsSizePerLocalWorkGroup, type = uint32_t, offset = 8, size = 4
    ldsSizePerLocalWorkGroup dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = ldsUsageSizeInBytes, type = size_t, offset = 16, size = 8
    ldsUsageSizeInBytes qword ?
;   TypeKind.ELABORATED
;   name = scratchMemUsageInBytes, type = size_t, offset = 24, size = 8
    scratchMemUsageInBytes qword ?
VkShaderResourceUsageAMD ends

VkShaderStatisticsInfoAMD struct
;   TypeKind.ELABORATED
;   name = shaderStageMask, type = VkShaderStageFlags, offset = 0, size = 4
    shaderStageMask VkShaderStageFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = resourceUsage, type = VkShaderResourceUsageAMD, offset = 8, size = 32
    resourceUsage VkShaderResourceUsageAMD <>
;   TypeKind.ELABORATED
;   name = numPhysicalVgprs, type = uint32_t, offset = 40, size = 4
    numPhysicalVgprs dword ?
;   TypeKind.ELABORATED
;   name = numPhysicalSgprs, type = uint32_t, offset = 44, size = 4
    numPhysicalSgprs dword ?
;   TypeKind.ELABORATED
;   name = numAvailableVgprs, type = uint32_t, offset = 48, size = 4
    numAvailableVgprs dword ?
;   TypeKind.ELABORATED
;   name = numAvailableSgprs, type = uint32_t, offset = 52, size = 4
    numAvailableSgprs dword ?
;   TypeKind.CONSTANTARRAY
;   name = computeWorkGroupSize, type = uint32_t[3], offset = 56, size = 12
    computeWorkGroupSize dword 3 dup(?)
VkShaderStatisticsInfoAMD ends

; TYPEDEF VkShaderStatisticsInfoAMD = struct VkShaderStatisticsInfoAMD, TypeKind.ELABORATED
; remove struct typedef

VkShaderStatisticsInfoAMD struct
;   TypeKind.ELABORATED
;   name = shaderStageMask, type = VkShaderStageFlags, offset = 0, size = 4
    shaderStageMask VkShaderStageFlags <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = resourceUsage, type = VkShaderResourceUsageAMD, offset = 8, size = 32
    resourceUsage VkShaderResourceUsageAMD <>
;   TypeKind.ELABORATED
;   name = numPhysicalVgprs, type = uint32_t, offset = 40, size = 4
    numPhysicalVgprs dword ?
;   TypeKind.ELABORATED
;   name = numPhysicalSgprs, type = uint32_t, offset = 44, size = 4
    numPhysicalSgprs dword ?
;   TypeKind.ELABORATED
;   name = numAvailableVgprs, type = uint32_t, offset = 48, size = 4
    numAvailableVgprs dword ?
;   TypeKind.ELABORATED
;   name = numAvailableSgprs, type = uint32_t, offset = 52, size = 4
    numAvailableSgprs dword ?
;   TypeKind.CONSTANTARRAY
;   name = computeWorkGroupSize, type = uint32_t[3], offset = 56, size = 12
    computeWorkGroupSize dword 3 dup(?)
VkShaderStatisticsInfoAMD ends

; TYPEDEF PFN_vkGetShaderInfoAMD = VkResult (*)(VkDevice, VkPipeline, VkShaderStageFlagBits, VkShaderInfoTypeAMD, size_t *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetShaderInfoAMD typedef qword

; VkResult vkGetShaderInfoAMD(VkDevice device, VkPipeline pipeline, VkShaderStageFlagBits shaderStage, VkShaderInfoTypeAMD infoType, size_t * pInfoSize, void * pInfo)
vkGetShaderInfoAMD qword ?

VkPhysicalDeviceCornerSampledImageFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cornerSampledImage, type = VkBool32, offset = 16, size = 4
    cornerSampledImage VkBool32 <>
VkPhysicalDeviceCornerSampledImageFeaturesNV ends

; TYPEDEF VkPhysicalDeviceCornerSampledImageFeaturesNV = struct VkPhysicalDeviceCornerSampledImageFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCornerSampledImageFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cornerSampledImage, type = VkBool32, offset = 16, size = 4
    cornerSampledImage VkBool32 <>
VkPhysicalDeviceCornerSampledImageFeaturesNV ends

; enum VkExternalMemoryHandleTypeFlagBitsNV {
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV equ 1
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV equ 2
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV equ 4
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV equ 8
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkExternalMemoryHandleTypeFlagBitsNV = enum VkExternalMemoryHandleTypeFlagBitsNV, TypeKind.ELABORATED
VkExternalMemoryHandleTypeFlagBitsNV typedef dword

; enum VkExternalMemoryHandleTypeFlagBitsNV {
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV equ 1
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV equ 2
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV equ 4
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV equ 8
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkExternalMemoryHandleTypeFlagsNV = VkFlags, TypeKind.ELABORATED
VkExternalMemoryHandleTypeFlagsNV typedef dword

; enum VkExternalMemoryFeatureFlagBitsNV {
    VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV equ 1
    VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV equ 2
    VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV equ 4
    VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkExternalMemoryFeatureFlagBitsNV = enum VkExternalMemoryFeatureFlagBitsNV, TypeKind.ELABORATED
VkExternalMemoryFeatureFlagBitsNV typedef dword

; enum VkExternalMemoryFeatureFlagBitsNV {
    VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV equ 1
    VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV equ 2
    VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV equ 4
    VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkExternalMemoryFeatureFlagsNV = VkFlags, TypeKind.ELABORATED
VkExternalMemoryFeatureFlagsNV typedef dword

VkExternalImageFormatPropertiesNV struct
;   TypeKind.ELABORATED
;   name = imageFormatProperties, type = VkImageFormatProperties, offset = 0, size = 32
    imageFormatProperties VkImageFormatProperties <>
;   TypeKind.ELABORATED
;   name = externalMemoryFeatures, type = VkExternalMemoryFeatureFlagsNV, offset = 32, size = 4
    externalMemoryFeatures VkExternalMemoryFeatureFlagsNV <>
;   TypeKind.ELABORATED
;   name = exportFromImportedHandleTypes, type = VkExternalMemoryHandleTypeFlagsNV, offset = 36, size = 4
    exportFromImportedHandleTypes VkExternalMemoryHandleTypeFlagsNV <>
;   TypeKind.ELABORATED
;   name = compatibleHandleTypes, type = VkExternalMemoryHandleTypeFlagsNV, offset = 40, size = 4
    compatibleHandleTypes VkExternalMemoryHandleTypeFlagsNV <>
VkExternalImageFormatPropertiesNV ends

; TYPEDEF VkExternalImageFormatPropertiesNV = struct VkExternalImageFormatPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkExternalImageFormatPropertiesNV struct
;   TypeKind.ELABORATED
;   name = imageFormatProperties, type = VkImageFormatProperties, offset = 0, size = 32
    imageFormatProperties VkImageFormatProperties <>
;   TypeKind.ELABORATED
;   name = externalMemoryFeatures, type = VkExternalMemoryFeatureFlagsNV, offset = 32, size = 4
    externalMemoryFeatures VkExternalMemoryFeatureFlagsNV <>
;   TypeKind.ELABORATED
;   name = exportFromImportedHandleTypes, type = VkExternalMemoryHandleTypeFlagsNV, offset = 36, size = 4
    exportFromImportedHandleTypes VkExternalMemoryHandleTypeFlagsNV <>
;   TypeKind.ELABORATED
;   name = compatibleHandleTypes, type = VkExternalMemoryHandleTypeFlagsNV, offset = 40, size = 4
    compatibleHandleTypes VkExternalMemoryHandleTypeFlagsNV <>
VkExternalImageFormatPropertiesNV ends

; TYPEDEF PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV = VkResult (*)(VkPhysicalDevice, VkFormat, VkImageType, VkImageTiling, VkImageUsageFlags, VkImageCreateFlags, VkExternalMemoryHandleTypeFlagsNV, VkExternalImageFormatPropertiesNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV typedef qword

; VkResult vkGetPhysicalDeviceExternalImageFormatPropertiesNV(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, VkExternalMemoryHandleTypeFlagsNV externalHandleType, VkExternalImageFormatPropertiesNV * pExternalImageFormatProperties)
vkGetPhysicalDeviceExternalImageFormatPropertiesNV qword ?

VkExternalMemoryImageCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalMemoryHandleTypeFlagsNV, offset = 16, size = 4
    handleTypes VkExternalMemoryHandleTypeFlagsNV <>
VkExternalMemoryImageCreateInfoNV ends

; TYPEDEF VkExternalMemoryImageCreateInfoNV = struct VkExternalMemoryImageCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkExternalMemoryImageCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalMemoryHandleTypeFlagsNV, offset = 16, size = 4
    handleTypes VkExternalMemoryHandleTypeFlagsNV <>
VkExternalMemoryImageCreateInfoNV ends

VkExportMemoryAllocateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalMemoryHandleTypeFlagsNV, offset = 16, size = 4
    handleTypes VkExternalMemoryHandleTypeFlagsNV <>
VkExportMemoryAllocateInfoNV ends

; TYPEDEF VkExportMemoryAllocateInfoNV = struct VkExportMemoryAllocateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkExportMemoryAllocateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleTypes, type = VkExternalMemoryHandleTypeFlagsNV, offset = 16, size = 4
    handleTypes VkExternalMemoryHandleTypeFlagsNV <>
VkExportMemoryAllocateInfoNV ends

; enum VkValidationCheckEXT {
    VK_VALIDATION_CHECK_ALL_EXT equ 0
    VK_VALIDATION_CHECK_SHADERS_EXT equ 1
    VK_VALIDATION_CHECK_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkValidationCheckEXT = enum VkValidationCheckEXT, TypeKind.ELABORATED
VkValidationCheckEXT typedef dword

; enum VkValidationCheckEXT {
    VK_VALIDATION_CHECK_ALL_EXT equ 0
    VK_VALIDATION_CHECK_SHADERS_EXT equ 1
    VK_VALIDATION_CHECK_MAX_ENUM_EXT equ 2147483647
; }

VkValidationFlagsEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = disabledValidationCheckCount, type = uint32_t, offset = 16, size = 4
    disabledValidationCheckCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDisabledValidationChecks, type = const VkValidationCheckEXT *, offset = 24, size = 8
    pDisabledValidationChecks qword ?
VkValidationFlagsEXT ends

; TYPEDEF VkValidationFlagsEXT = struct VkValidationFlagsEXT, TypeKind.ELABORATED
; remove struct typedef

VkValidationFlagsEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = disabledValidationCheckCount, type = uint32_t, offset = 16, size = 4
    disabledValidationCheckCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDisabledValidationChecks, type = const VkValidationCheckEXT *, offset = 24, size = 8
    pDisabledValidationChecks qword ?
VkValidationFlagsEXT ends

; TYPEDEF VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT = VkPhysicalDeviceTextureCompressionASTCHDRFeatures, TypeKind.ELABORATED

VkImageViewASTCDecodeModeEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = decodeMode, type = VkFormat, offset = 16, size = 4
    decodeMode VkFormat <>
VkImageViewASTCDecodeModeEXT ends

; TYPEDEF VkImageViewASTCDecodeModeEXT = struct VkImageViewASTCDecodeModeEXT, TypeKind.ELABORATED
; remove struct typedef

VkImageViewASTCDecodeModeEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = decodeMode, type = VkFormat, offset = 16, size = 4
    decodeMode VkFormat <>
VkImageViewASTCDecodeModeEXT ends

VkPhysicalDeviceASTCDecodeFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = decodeModeSharedExponent, type = VkBool32, offset = 16, size = 4
    decodeModeSharedExponent VkBool32 <>
VkPhysicalDeviceASTCDecodeFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceASTCDecodeFeaturesEXT = struct VkPhysicalDeviceASTCDecodeFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceASTCDecodeFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = decodeModeSharedExponent, type = VkBool32, offset = 16, size = 4
    decodeModeSharedExponent VkBool32 <>
VkPhysicalDeviceASTCDecodeFeaturesEXT ends

; enum VkPipelineRobustnessBufferBehaviorEXT {
    VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT_EXT equ 0
    VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED_EXT equ 1
    VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_EXT equ 2
    VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2_EXT equ 3
    VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkPipelineRobustnessBufferBehaviorEXT = enum VkPipelineRobustnessBufferBehaviorEXT, TypeKind.ELABORATED
VkPipelineRobustnessBufferBehaviorEXT typedef dword

; enum VkPipelineRobustnessBufferBehaviorEXT {
    VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT_EXT equ 0
    VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED_EXT equ 1
    VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_EXT equ 2
    VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2_EXT equ 3
    VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_MAX_ENUM_EXT equ 2147483647
; }

; enum VkPipelineRobustnessImageBehaviorEXT {
    VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT_EXT equ 0
    VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED_EXT equ 1
    VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_EXT equ 2
    VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2_EXT equ 3
    VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkPipelineRobustnessImageBehaviorEXT = enum VkPipelineRobustnessImageBehaviorEXT, TypeKind.ELABORATED
VkPipelineRobustnessImageBehaviorEXT typedef dword

; enum VkPipelineRobustnessImageBehaviorEXT {
    VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT_EXT equ 0
    VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED_EXT equ 1
    VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_EXT equ 2
    VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2_EXT equ 3
    VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_MAX_ENUM_EXT equ 2147483647
; }

VkPhysicalDevicePipelineRobustnessFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineRobustness, type = VkBool32, offset = 16, size = 4
    pipelineRobustness VkBool32 <>
VkPhysicalDevicePipelineRobustnessFeaturesEXT ends

; TYPEDEF VkPhysicalDevicePipelineRobustnessFeaturesEXT = struct VkPhysicalDevicePipelineRobustnessFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePipelineRobustnessFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineRobustness, type = VkBool32, offset = 16, size = 4
    pipelineRobustness VkBool32 <>
VkPhysicalDevicePipelineRobustnessFeaturesEXT ends

VkPhysicalDevicePipelineRobustnessPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = defaultRobustnessStorageBuffers, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 16, size = 4
    defaultRobustnessStorageBuffers VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = defaultRobustnessUniformBuffers, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 20, size = 4
    defaultRobustnessUniformBuffers VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = defaultRobustnessVertexInputs, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 24, size = 4
    defaultRobustnessVertexInputs VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = defaultRobustnessImages, type = VkPipelineRobustnessImageBehaviorEXT, offset = 28, size = 4
    defaultRobustnessImages VkPipelineRobustnessImageBehaviorEXT <>
VkPhysicalDevicePipelineRobustnessPropertiesEXT ends

; TYPEDEF VkPhysicalDevicePipelineRobustnessPropertiesEXT = struct VkPhysicalDevicePipelineRobustnessPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePipelineRobustnessPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = defaultRobustnessStorageBuffers, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 16, size = 4
    defaultRobustnessStorageBuffers VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = defaultRobustnessUniformBuffers, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 20, size = 4
    defaultRobustnessUniformBuffers VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = defaultRobustnessVertexInputs, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 24, size = 4
    defaultRobustnessVertexInputs VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = defaultRobustnessImages, type = VkPipelineRobustnessImageBehaviorEXT, offset = 28, size = 4
    defaultRobustnessImages VkPipelineRobustnessImageBehaviorEXT <>
VkPhysicalDevicePipelineRobustnessPropertiesEXT ends

VkPipelineRobustnessCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = storageBuffers, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 16, size = 4
    storageBuffers VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = uniformBuffers, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 20, size = 4
    uniformBuffers VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = vertexInputs, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 24, size = 4
    vertexInputs VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = images, type = VkPipelineRobustnessImageBehaviorEXT, offset = 28, size = 4
    images VkPipelineRobustnessImageBehaviorEXT <>
VkPipelineRobustnessCreateInfoEXT ends

; TYPEDEF VkPipelineRobustnessCreateInfoEXT = struct VkPipelineRobustnessCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelineRobustnessCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = storageBuffers, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 16, size = 4
    storageBuffers VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = uniformBuffers, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 20, size = 4
    uniformBuffers VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = vertexInputs, type = VkPipelineRobustnessBufferBehaviorEXT, offset = 24, size = 4
    vertexInputs VkPipelineRobustnessBufferBehaviorEXT <>
;   TypeKind.ELABORATED
;   name = images, type = VkPipelineRobustnessImageBehaviorEXT, offset = 28, size = 4
    images VkPipelineRobustnessImageBehaviorEXT <>
VkPipelineRobustnessCreateInfoEXT ends

; enum VkConditionalRenderingFlagBitsEXT {
    VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT equ 1
    VK_CONDITIONAL_RENDERING_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkConditionalRenderingFlagBitsEXT = enum VkConditionalRenderingFlagBitsEXT, TypeKind.ELABORATED
VkConditionalRenderingFlagBitsEXT typedef dword

; enum VkConditionalRenderingFlagBitsEXT {
    VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT equ 1
    VK_CONDITIONAL_RENDERING_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkConditionalRenderingFlagsEXT = VkFlags, TypeKind.ELABORATED
VkConditionalRenderingFlagsEXT typedef dword

VkConditionalRenderingBeginInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 24, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = flags, type = VkConditionalRenderingFlagsEXT, offset = 32, size = 4
    flags VkConditionalRenderingFlagsEXT <>
VkConditionalRenderingBeginInfoEXT ends

; TYPEDEF VkConditionalRenderingBeginInfoEXT = struct VkConditionalRenderingBeginInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkConditionalRenderingBeginInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 24, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = flags, type = VkConditionalRenderingFlagsEXT, offset = 32, size = 4
    flags VkConditionalRenderingFlagsEXT <>
VkConditionalRenderingBeginInfoEXT ends

VkPhysicalDeviceConditionalRenderingFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = conditionalRendering, type = VkBool32, offset = 16, size = 4
    conditionalRendering VkBool32 <>
;   TypeKind.ELABORATED
;   name = inheritedConditionalRendering, type = VkBool32, offset = 20, size = 4
    inheritedConditionalRendering VkBool32 <>
VkPhysicalDeviceConditionalRenderingFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceConditionalRenderingFeaturesEXT = struct VkPhysicalDeviceConditionalRenderingFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceConditionalRenderingFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = conditionalRendering, type = VkBool32, offset = 16, size = 4
    conditionalRendering VkBool32 <>
;   TypeKind.ELABORATED
;   name = inheritedConditionalRendering, type = VkBool32, offset = 20, size = 4
    inheritedConditionalRendering VkBool32 <>
VkPhysicalDeviceConditionalRenderingFeaturesEXT ends

VkCommandBufferInheritanceConditionalRenderingInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = conditionalRenderingEnable, type = VkBool32, offset = 16, size = 4
    conditionalRenderingEnable VkBool32 <>
VkCommandBufferInheritanceConditionalRenderingInfoEXT ends

; TYPEDEF VkCommandBufferInheritanceConditionalRenderingInfoEXT = struct VkCommandBufferInheritanceConditionalRenderingInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkCommandBufferInheritanceConditionalRenderingInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = conditionalRenderingEnable, type = VkBool32, offset = 16, size = 4
    conditionalRenderingEnable VkBool32 <>
VkCommandBufferInheritanceConditionalRenderingInfoEXT ends

; TYPEDEF PFN_vkCmdBeginConditionalRenderingEXT = void (*)(VkCommandBuffer, const VkConditionalRenderingBeginInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBeginConditionalRenderingEXT typedef qword

; TYPEDEF PFN_vkCmdEndConditionalRenderingEXT = void (*)(VkCommandBuffer) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEndConditionalRenderingEXT typedef qword

; void vkCmdBeginConditionalRenderingEXT(VkCommandBuffer commandBuffer, const VkConditionalRenderingBeginInfoEXT * pConditionalRenderingBegin)
vkCmdBeginConditionalRenderingEXT qword ?

; void vkCmdEndConditionalRenderingEXT(VkCommandBuffer commandBuffer)
vkCmdEndConditionalRenderingEXT qword ?

VkViewportWScalingNV struct
;   TypeKind.FLOAT
;   name = xcoeff, type = float, offset = 0, size = 4
    xcoeff real4 ?
;   TypeKind.FLOAT
;   name = ycoeff, type = float, offset = 4, size = 4
    ycoeff real4 ?
VkViewportWScalingNV ends

; TYPEDEF VkViewportWScalingNV = struct VkViewportWScalingNV, TypeKind.ELABORATED
; remove struct typedef

VkViewportWScalingNV struct
;   TypeKind.FLOAT
;   name = xcoeff, type = float, offset = 0, size = 4
    xcoeff real4 ?
;   TypeKind.FLOAT
;   name = ycoeff, type = float, offset = 4, size = 4
    ycoeff real4 ?
VkViewportWScalingNV ends

VkPipelineViewportWScalingStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = viewportWScalingEnable, type = VkBool32, offset = 16, size = 4
    viewportWScalingEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = viewportCount, type = uint32_t, offset = 20, size = 4
    viewportCount dword ?
;   TypeKind.POINTER
;   name = pViewportWScalings, type = const VkViewportWScalingNV *, offset = 24, size = 8
    pViewportWScalings qword ?
VkPipelineViewportWScalingStateCreateInfoNV ends

; TYPEDEF VkPipelineViewportWScalingStateCreateInfoNV = struct VkPipelineViewportWScalingStateCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkPipelineViewportWScalingStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = viewportWScalingEnable, type = VkBool32, offset = 16, size = 4
    viewportWScalingEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = viewportCount, type = uint32_t, offset = 20, size = 4
    viewportCount dword ?
;   TypeKind.POINTER
;   name = pViewportWScalings, type = const VkViewportWScalingNV *, offset = 24, size = 8
    pViewportWScalings qword ?
VkPipelineViewportWScalingStateCreateInfoNV ends

; TYPEDEF PFN_vkCmdSetViewportWScalingNV = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkViewportWScalingNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetViewportWScalingNV typedef qword

; void vkCmdSetViewportWScalingNV(VkCommandBuffer commandBuffer, uint32_t firstViewport, uint32_t viewportCount, const VkViewportWScalingNV * pViewportWScalings)
vkCmdSetViewportWScalingNV qword ?

; TYPEDEF PFN_vkReleaseDisplayEXT = VkResult (*)(VkPhysicalDevice, VkDisplayKHR) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkReleaseDisplayEXT typedef qword

; VkResult vkReleaseDisplayEXT(VkPhysicalDevice physicalDevice, VkDisplayKHR display)
vkReleaseDisplayEXT qword ?

; enum VkSurfaceCounterFlagBitsEXT {
    VK_SURFACE_COUNTER_VBLANK_BIT_EXT equ 1
    VK_SURFACE_COUNTER_VBLANK_EXT equ 1
    VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkSurfaceCounterFlagBitsEXT = enum VkSurfaceCounterFlagBitsEXT, TypeKind.ELABORATED
VkSurfaceCounterFlagBitsEXT typedef dword

; enum VkSurfaceCounterFlagBitsEXT {
    VK_SURFACE_COUNTER_VBLANK_BIT_EXT equ 1
    VK_SURFACE_COUNTER_VBLANK_EXT equ 1
    VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkSurfaceCounterFlagsEXT = VkFlags, TypeKind.ELABORATED
VkSurfaceCounterFlagsEXT typedef dword

VkSurfaceCapabilities2EXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minImageCount, type = uint32_t, offset = 16, size = 4
    minImageCount dword ?
;   TypeKind.ELABORATED
;   name = maxImageCount, type = uint32_t, offset = 20, size = 4
    maxImageCount dword ?
;   TypeKind.ELABORATED
;   name = currentExtent, type = VkExtent2D, offset = 24, size = 8
    currentExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = minImageExtent, type = VkExtent2D, offset = 32, size = 8
    minImageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxImageExtent, type = VkExtent2D, offset = 40, size = 8
    maxImageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxImageArrayLayers, type = uint32_t, offset = 48, size = 4
    maxImageArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = supportedTransforms, type = VkSurfaceTransformFlagsKHR, offset = 52, size = 4
    supportedTransforms VkSurfaceTransformFlagsKHR <>
;   TypeKind.ELABORATED
;   name = currentTransform, type = VkSurfaceTransformFlagBitsKHR, offset = 56, size = 4
    currentTransform VkSurfaceTransformFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = supportedCompositeAlpha, type = VkCompositeAlphaFlagsKHR, offset = 60, size = 4
    supportedCompositeAlpha VkCompositeAlphaFlagsKHR <>
;   TypeKind.ELABORATED
;   name = supportedUsageFlags, type = VkImageUsageFlags, offset = 64, size = 4
    supportedUsageFlags VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = supportedSurfaceCounters, type = VkSurfaceCounterFlagsEXT, offset = 68, size = 4
    supportedSurfaceCounters VkSurfaceCounterFlagsEXT <>
VkSurfaceCapabilities2EXT ends

; TYPEDEF VkSurfaceCapabilities2EXT = struct VkSurfaceCapabilities2EXT, TypeKind.ELABORATED
; remove struct typedef

VkSurfaceCapabilities2EXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minImageCount, type = uint32_t, offset = 16, size = 4
    minImageCount dword ?
;   TypeKind.ELABORATED
;   name = maxImageCount, type = uint32_t, offset = 20, size = 4
    maxImageCount dword ?
;   TypeKind.ELABORATED
;   name = currentExtent, type = VkExtent2D, offset = 24, size = 8
    currentExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = minImageExtent, type = VkExtent2D, offset = 32, size = 8
    minImageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxImageExtent, type = VkExtent2D, offset = 40, size = 8
    maxImageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxImageArrayLayers, type = uint32_t, offset = 48, size = 4
    maxImageArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = supportedTransforms, type = VkSurfaceTransformFlagsKHR, offset = 52, size = 4
    supportedTransforms VkSurfaceTransformFlagsKHR <>
;   TypeKind.ELABORATED
;   name = currentTransform, type = VkSurfaceTransformFlagBitsKHR, offset = 56, size = 4
    currentTransform VkSurfaceTransformFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = supportedCompositeAlpha, type = VkCompositeAlphaFlagsKHR, offset = 60, size = 4
    supportedCompositeAlpha VkCompositeAlphaFlagsKHR <>
;   TypeKind.ELABORATED
;   name = supportedUsageFlags, type = VkImageUsageFlags, offset = 64, size = 4
    supportedUsageFlags VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = supportedSurfaceCounters, type = VkSurfaceCounterFlagsEXT, offset = 68, size = 4
    supportedSurfaceCounters VkSurfaceCounterFlagsEXT <>
VkSurfaceCapabilities2EXT ends

; TYPEDEF PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT = VkResult (*)(VkPhysicalDevice, VkSurfaceKHR, VkSurfaceCapabilities2EXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT typedef qword

; VkResult vkGetPhysicalDeviceSurfaceCapabilities2EXT(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, VkSurfaceCapabilities2EXT * pSurfaceCapabilities)
vkGetPhysicalDeviceSurfaceCapabilities2EXT qword ?

; enum VkDisplayPowerStateEXT {
    VK_DISPLAY_POWER_STATE_OFF_EXT equ 0
    VK_DISPLAY_POWER_STATE_SUSPEND_EXT equ 1
    VK_DISPLAY_POWER_STATE_ON_EXT equ 2
    VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDisplayPowerStateEXT = enum VkDisplayPowerStateEXT, TypeKind.ELABORATED
VkDisplayPowerStateEXT typedef dword

; enum VkDisplayPowerStateEXT {
    VK_DISPLAY_POWER_STATE_OFF_EXT equ 0
    VK_DISPLAY_POWER_STATE_SUSPEND_EXT equ 1
    VK_DISPLAY_POWER_STATE_ON_EXT equ 2
    VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT equ 2147483647
; }

; enum VkDeviceEventTypeEXT {
    VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT equ 0
    VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDeviceEventTypeEXT = enum VkDeviceEventTypeEXT, TypeKind.ELABORATED
VkDeviceEventTypeEXT typedef dword

; enum VkDeviceEventTypeEXT {
    VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT equ 0
    VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; enum VkDisplayEventTypeEXT {
    VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT equ 0
    VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDisplayEventTypeEXT = enum VkDisplayEventTypeEXT, TypeKind.ELABORATED
VkDisplayEventTypeEXT typedef dword

; enum VkDisplayEventTypeEXT {
    VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT equ 0
    VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT equ 2147483647
; }

VkDisplayPowerInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = powerState, type = VkDisplayPowerStateEXT, offset = 16, size = 4
    powerState VkDisplayPowerStateEXT <>
VkDisplayPowerInfoEXT ends

; TYPEDEF VkDisplayPowerInfoEXT = struct VkDisplayPowerInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDisplayPowerInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = powerState, type = VkDisplayPowerStateEXT, offset = 16, size = 4
    powerState VkDisplayPowerStateEXT <>
VkDisplayPowerInfoEXT ends

VkDeviceEventInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceEvent, type = VkDeviceEventTypeEXT, offset = 16, size = 4
    deviceEvent VkDeviceEventTypeEXT <>
VkDeviceEventInfoEXT ends

; TYPEDEF VkDeviceEventInfoEXT = struct VkDeviceEventInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDeviceEventInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceEvent, type = VkDeviceEventTypeEXT, offset = 16, size = 4
    deviceEvent VkDeviceEventTypeEXT <>
VkDeviceEventInfoEXT ends

VkDisplayEventInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = displayEvent, type = VkDisplayEventTypeEXT, offset = 16, size = 4
    displayEvent VkDisplayEventTypeEXT <>
VkDisplayEventInfoEXT ends

; TYPEDEF VkDisplayEventInfoEXT = struct VkDisplayEventInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDisplayEventInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = displayEvent, type = VkDisplayEventTypeEXT, offset = 16, size = 4
    displayEvent VkDisplayEventTypeEXT <>
VkDisplayEventInfoEXT ends

VkSwapchainCounterCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = surfaceCounters, type = VkSurfaceCounterFlagsEXT, offset = 16, size = 4
    surfaceCounters VkSurfaceCounterFlagsEXT <>
VkSwapchainCounterCreateInfoEXT ends

; TYPEDEF VkSwapchainCounterCreateInfoEXT = struct VkSwapchainCounterCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkSwapchainCounterCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = surfaceCounters, type = VkSurfaceCounterFlagsEXT, offset = 16, size = 4
    surfaceCounters VkSurfaceCounterFlagsEXT <>
VkSwapchainCounterCreateInfoEXT ends

; TYPEDEF PFN_vkDisplayPowerControlEXT = VkResult (*)(VkDevice, VkDisplayKHR, const VkDisplayPowerInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDisplayPowerControlEXT typedef qword

; TYPEDEF PFN_vkRegisterDeviceEventEXT = VkResult (*)(VkDevice, const VkDeviceEventInfoEXT *, const VkAllocationCallbacks *, VkFence *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkRegisterDeviceEventEXT typedef qword

; TYPEDEF PFN_vkRegisterDisplayEventEXT = VkResult (*)(VkDevice, VkDisplayKHR, const VkDisplayEventInfoEXT *, const VkAllocationCallbacks *, VkFence *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkRegisterDisplayEventEXT typedef qword

; TYPEDEF PFN_vkGetSwapchainCounterEXT = VkResult (*)(VkDevice, VkSwapchainKHR, VkSurfaceCounterFlagBitsEXT, uint64_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetSwapchainCounterEXT typedef qword

; VkResult vkDisplayPowerControlEXT(VkDevice device, VkDisplayKHR display, const VkDisplayPowerInfoEXT * pDisplayPowerInfo)
vkDisplayPowerControlEXT qword ?

; VkResult vkRegisterDeviceEventEXT(VkDevice device, const VkDeviceEventInfoEXT * pDeviceEventInfo, const VkAllocationCallbacks * pAllocator, VkFence * pFence)
vkRegisterDeviceEventEXT qword ?

; VkResult vkRegisterDisplayEventEXT(VkDevice device, VkDisplayKHR display, const VkDisplayEventInfoEXT * pDisplayEventInfo, const VkAllocationCallbacks * pAllocator, VkFence * pFence)
vkRegisterDisplayEventEXT qword ?

; VkResult vkGetSwapchainCounterEXT(VkDevice device, VkSwapchainKHR swapchain, VkSurfaceCounterFlagBitsEXT counter, uint64_t * pCounterValue)
vkGetSwapchainCounterEXT qword ?

VkRefreshCycleDurationGOOGLE struct
;   TypeKind.ELABORATED
;   name = refreshDuration, type = uint64_t, offset = 0, size = 8
    refreshDuration qword ?
VkRefreshCycleDurationGOOGLE ends

; TYPEDEF VkRefreshCycleDurationGOOGLE = struct VkRefreshCycleDurationGOOGLE, TypeKind.ELABORATED
; remove struct typedef

VkRefreshCycleDurationGOOGLE struct
;   TypeKind.ELABORATED
;   name = refreshDuration, type = uint64_t, offset = 0, size = 8
    refreshDuration qword ?
VkRefreshCycleDurationGOOGLE ends

VkPastPresentationTimingGOOGLE struct
;   TypeKind.ELABORATED
;   name = presentID, type = uint32_t, offset = 0, size = 4
    presentID dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = desiredPresentTime, type = uint64_t, offset = 8, size = 8
    desiredPresentTime qword ?
;   TypeKind.ELABORATED
;   name = actualPresentTime, type = uint64_t, offset = 16, size = 8
    actualPresentTime qword ?
;   TypeKind.ELABORATED
;   name = earliestPresentTime, type = uint64_t, offset = 24, size = 8
    earliestPresentTime qword ?
;   TypeKind.ELABORATED
;   name = presentMargin, type = uint64_t, offset = 32, size = 8
    presentMargin qword ?
VkPastPresentationTimingGOOGLE ends

; TYPEDEF VkPastPresentationTimingGOOGLE = struct VkPastPresentationTimingGOOGLE, TypeKind.ELABORATED
; remove struct typedef

VkPastPresentationTimingGOOGLE struct
;   TypeKind.ELABORATED
;   name = presentID, type = uint32_t, offset = 0, size = 4
    presentID dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = desiredPresentTime, type = uint64_t, offset = 8, size = 8
    desiredPresentTime qword ?
;   TypeKind.ELABORATED
;   name = actualPresentTime, type = uint64_t, offset = 16, size = 8
    actualPresentTime qword ?
;   TypeKind.ELABORATED
;   name = earliestPresentTime, type = uint64_t, offset = 24, size = 8
    earliestPresentTime qword ?
;   TypeKind.ELABORATED
;   name = presentMargin, type = uint64_t, offset = 32, size = 8
    presentMargin qword ?
VkPastPresentationTimingGOOGLE ends

VkPresentTimeGOOGLE struct
;   TypeKind.ELABORATED
;   name = presentID, type = uint32_t, offset = 0, size = 4
    presentID dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = desiredPresentTime, type = uint64_t, offset = 8, size = 8
    desiredPresentTime qword ?
VkPresentTimeGOOGLE ends

; TYPEDEF VkPresentTimeGOOGLE = struct VkPresentTimeGOOGLE, TypeKind.ELABORATED
; remove struct typedef

VkPresentTimeGOOGLE struct
;   TypeKind.ELABORATED
;   name = presentID, type = uint32_t, offset = 0, size = 4
    presentID dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = desiredPresentTime, type = uint64_t, offset = 8, size = 8
    desiredPresentTime qword ?
VkPresentTimeGOOGLE ends

VkPresentTimesInfoGOOGLE struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pTimes, type = const VkPresentTimeGOOGLE *, offset = 24, size = 8
    pTimes qword ?
VkPresentTimesInfoGOOGLE ends

; TYPEDEF VkPresentTimesInfoGOOGLE = struct VkPresentTimesInfoGOOGLE, TypeKind.ELABORATED
; remove struct typedef

VkPresentTimesInfoGOOGLE struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pTimes, type = const VkPresentTimeGOOGLE *, offset = 24, size = 8
    pTimes qword ?
VkPresentTimesInfoGOOGLE ends

; TYPEDEF PFN_vkGetRefreshCycleDurationGOOGLE = VkResult (*)(VkDevice, VkSwapchainKHR, VkRefreshCycleDurationGOOGLE *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetRefreshCycleDurationGOOGLE typedef qword

; TYPEDEF PFN_vkGetPastPresentationTimingGOOGLE = VkResult (*)(VkDevice, VkSwapchainKHR, uint32_t *, VkPastPresentationTimingGOOGLE *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPastPresentationTimingGOOGLE typedef qword

; VkResult vkGetRefreshCycleDurationGOOGLE(VkDevice device, VkSwapchainKHR swapchain, VkRefreshCycleDurationGOOGLE * pDisplayTimingProperties)
vkGetRefreshCycleDurationGOOGLE qword ?

; VkResult vkGetPastPresentationTimingGOOGLE(VkDevice device, VkSwapchainKHR swapchain, uint32_t * pPresentationTimingCount, VkPastPresentationTimingGOOGLE * pPresentationTimings)
vkGetPastPresentationTimingGOOGLE qword ?

VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = perViewPositionAllComponents, type = VkBool32, offset = 16, size = 4
    perViewPositionAllComponents VkBool32 <>
VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX ends

; TYPEDEF VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX = struct VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = perViewPositionAllComponents, type = VkBool32, offset = 16, size = 4
    perViewPositionAllComponents VkBool32 <>
VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX ends

; enum VkViewportCoordinateSwizzleNV {
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV equ 0
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV equ 1
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV equ 2
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV equ 3
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV equ 4
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV equ 5
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV equ 6
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV equ 7
    VK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkViewportCoordinateSwizzleNV = enum VkViewportCoordinateSwizzleNV, TypeKind.ELABORATED
VkViewportCoordinateSwizzleNV typedef dword

; enum VkViewportCoordinateSwizzleNV {
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV equ 0
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV equ 1
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV equ 2
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV equ 3
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV equ 4
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV equ 5
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV equ 6
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV equ 7
    VK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkPipelineViewportSwizzleStateCreateFlagsNV = VkFlags, TypeKind.ELABORATED
VkPipelineViewportSwizzleStateCreateFlagsNV typedef dword

VkViewportSwizzleNV struct
;   TypeKind.ELABORATED
;   name = x, type = VkViewportCoordinateSwizzleNV, offset = 0, size = 4
    x VkViewportCoordinateSwizzleNV <>
;   TypeKind.ELABORATED
;   name = y, type = VkViewportCoordinateSwizzleNV, offset = 4, size = 4
    y VkViewportCoordinateSwizzleNV <>
;   TypeKind.ELABORATED
;   name = z, type = VkViewportCoordinateSwizzleNV, offset = 8, size = 4
    z VkViewportCoordinateSwizzleNV <>
;   TypeKind.ELABORATED
;   name = w, type = VkViewportCoordinateSwizzleNV, offset = 12, size = 4
    w VkViewportCoordinateSwizzleNV <>
VkViewportSwizzleNV ends

; TYPEDEF VkViewportSwizzleNV = struct VkViewportSwizzleNV, TypeKind.ELABORATED
; remove struct typedef

VkViewportSwizzleNV struct
;   TypeKind.ELABORATED
;   name = x, type = VkViewportCoordinateSwizzleNV, offset = 0, size = 4
    x VkViewportCoordinateSwizzleNV <>
;   TypeKind.ELABORATED
;   name = y, type = VkViewportCoordinateSwizzleNV, offset = 4, size = 4
    y VkViewportCoordinateSwizzleNV <>
;   TypeKind.ELABORATED
;   name = z, type = VkViewportCoordinateSwizzleNV, offset = 8, size = 4
    z VkViewportCoordinateSwizzleNV <>
;   TypeKind.ELABORATED
;   name = w, type = VkViewportCoordinateSwizzleNV, offset = 12, size = 4
    w VkViewportCoordinateSwizzleNV <>
VkViewportSwizzleNV ends

VkPipelineViewportSwizzleStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineViewportSwizzleStateCreateFlagsNV, offset = 16, size = 4
    flags VkPipelineViewportSwizzleStateCreateFlagsNV <>
;   TypeKind.ELABORATED
;   name = viewportCount, type = uint32_t, offset = 20, size = 4
    viewportCount dword ?
;   TypeKind.POINTER
;   name = pViewportSwizzles, type = const VkViewportSwizzleNV *, offset = 24, size = 8
    pViewportSwizzles qword ?
VkPipelineViewportSwizzleStateCreateInfoNV ends

; TYPEDEF VkPipelineViewportSwizzleStateCreateInfoNV = struct VkPipelineViewportSwizzleStateCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkPipelineViewportSwizzleStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineViewportSwizzleStateCreateFlagsNV, offset = 16, size = 4
    flags VkPipelineViewportSwizzleStateCreateFlagsNV <>
;   TypeKind.ELABORATED
;   name = viewportCount, type = uint32_t, offset = 20, size = 4
    viewportCount dword ?
;   TypeKind.POINTER
;   name = pViewportSwizzles, type = const VkViewportSwizzleNV *, offset = 24, size = 8
    pViewportSwizzles qword ?
VkPipelineViewportSwizzleStateCreateInfoNV ends

; enum VkDiscardRectangleModeEXT {
    VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT equ 0
    VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT equ 1
    VK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDiscardRectangleModeEXT = enum VkDiscardRectangleModeEXT, TypeKind.ELABORATED
VkDiscardRectangleModeEXT typedef dword

; enum VkDiscardRectangleModeEXT {
    VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT equ 0
    VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT equ 1
    VK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkPipelineDiscardRectangleStateCreateFlagsEXT = VkFlags, TypeKind.ELABORATED
VkPipelineDiscardRectangleStateCreateFlagsEXT typedef dword

VkPhysicalDeviceDiscardRectanglePropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxDiscardRectangles, type = uint32_t, offset = 16, size = 4
    maxDiscardRectangles dword ?
VkPhysicalDeviceDiscardRectanglePropertiesEXT ends

; TYPEDEF VkPhysicalDeviceDiscardRectanglePropertiesEXT = struct VkPhysicalDeviceDiscardRectanglePropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDiscardRectanglePropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxDiscardRectangles, type = uint32_t, offset = 16, size = 4
    maxDiscardRectangles dword ?
VkPhysicalDeviceDiscardRectanglePropertiesEXT ends

VkPipelineDiscardRectangleStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineDiscardRectangleStateCreateFlagsEXT, offset = 16, size = 4
    flags VkPipelineDiscardRectangleStateCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = discardRectangleMode, type = VkDiscardRectangleModeEXT, offset = 20, size = 4
    discardRectangleMode VkDiscardRectangleModeEXT <>
;   TypeKind.ELABORATED
;   name = discardRectangleCount, type = uint32_t, offset = 24, size = 4
    discardRectangleCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDiscardRectangles, type = const VkRect2D *, offset = 32, size = 8
    pDiscardRectangles qword ?
VkPipelineDiscardRectangleStateCreateInfoEXT ends

; TYPEDEF VkPipelineDiscardRectangleStateCreateInfoEXT = struct VkPipelineDiscardRectangleStateCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelineDiscardRectangleStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineDiscardRectangleStateCreateFlagsEXT, offset = 16, size = 4
    flags VkPipelineDiscardRectangleStateCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = discardRectangleMode, type = VkDiscardRectangleModeEXT, offset = 20, size = 4
    discardRectangleMode VkDiscardRectangleModeEXT <>
;   TypeKind.ELABORATED
;   name = discardRectangleCount, type = uint32_t, offset = 24, size = 4
    discardRectangleCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDiscardRectangles, type = const VkRect2D *, offset = 32, size = 8
    pDiscardRectangles qword ?
VkPipelineDiscardRectangleStateCreateInfoEXT ends

; TYPEDEF PFN_vkCmdSetDiscardRectangleEXT = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkRect2D *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDiscardRectangleEXT typedef qword

; TYPEDEF PFN_vkCmdSetDiscardRectangleEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDiscardRectangleEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetDiscardRectangleModeEXT = void (*)(VkCommandBuffer, VkDiscardRectangleModeEXT) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDiscardRectangleModeEXT typedef qword

; void vkCmdSetDiscardRectangleEXT(VkCommandBuffer commandBuffer, uint32_t firstDiscardRectangle, uint32_t discardRectangleCount, const VkRect2D * pDiscardRectangles)
vkCmdSetDiscardRectangleEXT qword ?

; void vkCmdSetDiscardRectangleEnableEXT(VkCommandBuffer commandBuffer, VkBool32 discardRectangleEnable)
vkCmdSetDiscardRectangleEnableEXT qword ?

; void vkCmdSetDiscardRectangleModeEXT(VkCommandBuffer commandBuffer, VkDiscardRectangleModeEXT discardRectangleMode)
vkCmdSetDiscardRectangleModeEXT qword ?

; enum VkConservativeRasterizationModeEXT {
    VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT equ 0
    VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT equ 1
    VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT equ 2
    VK_CONSERVATIVE_RASTERIZATION_MODE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkConservativeRasterizationModeEXT = enum VkConservativeRasterizationModeEXT, TypeKind.ELABORATED
VkConservativeRasterizationModeEXT typedef dword

; enum VkConservativeRasterizationModeEXT {
    VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT equ 0
    VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT equ 1
    VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT equ 2
    VK_CONSERVATIVE_RASTERIZATION_MODE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkPipelineRasterizationConservativeStateCreateFlagsEXT = VkFlags, TypeKind.ELABORATED
VkPipelineRasterizationConservativeStateCreateFlagsEXT typedef dword

VkPhysicalDeviceConservativeRasterizationPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.FLOAT
;   name = primitiveOverestimationSize, type = float, offset = 16, size = 4
    primitiveOverestimationSize real4 ?
;   TypeKind.FLOAT
;   name = maxExtraPrimitiveOverestimationSize, type = float, offset = 20, size = 4
    maxExtraPrimitiveOverestimationSize real4 ?
;   TypeKind.FLOAT
;   name = extraPrimitiveOverestimationSizeGranularity, type = float, offset = 24, size = 4
    extraPrimitiveOverestimationSizeGranularity real4 ?
;   TypeKind.ELABORATED
;   name = primitiveUnderestimation, type = VkBool32, offset = 28, size = 4
    primitiveUnderestimation VkBool32 <>
;   TypeKind.ELABORATED
;   name = conservativePointAndLineRasterization, type = VkBool32, offset = 32, size = 4
    conservativePointAndLineRasterization VkBool32 <>
;   TypeKind.ELABORATED
;   name = degenerateTrianglesRasterized, type = VkBool32, offset = 36, size = 4
    degenerateTrianglesRasterized VkBool32 <>
;   TypeKind.ELABORATED
;   name = degenerateLinesRasterized, type = VkBool32, offset = 40, size = 4
    degenerateLinesRasterized VkBool32 <>
;   TypeKind.ELABORATED
;   name = fullyCoveredFragmentShaderInputVariable, type = VkBool32, offset = 44, size = 4
    fullyCoveredFragmentShaderInputVariable VkBool32 <>
;   TypeKind.ELABORATED
;   name = conservativeRasterizationPostDepthCoverage, type = VkBool32, offset = 48, size = 4
    conservativeRasterizationPostDepthCoverage VkBool32 <>
VkPhysicalDeviceConservativeRasterizationPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceConservativeRasterizationPropertiesEXT = struct VkPhysicalDeviceConservativeRasterizationPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceConservativeRasterizationPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.FLOAT
;   name = primitiveOverestimationSize, type = float, offset = 16, size = 4
    primitiveOverestimationSize real4 ?
;   TypeKind.FLOAT
;   name = maxExtraPrimitiveOverestimationSize, type = float, offset = 20, size = 4
    maxExtraPrimitiveOverestimationSize real4 ?
;   TypeKind.FLOAT
;   name = extraPrimitiveOverestimationSizeGranularity, type = float, offset = 24, size = 4
    extraPrimitiveOverestimationSizeGranularity real4 ?
;   TypeKind.ELABORATED
;   name = primitiveUnderestimation, type = VkBool32, offset = 28, size = 4
    primitiveUnderestimation VkBool32 <>
;   TypeKind.ELABORATED
;   name = conservativePointAndLineRasterization, type = VkBool32, offset = 32, size = 4
    conservativePointAndLineRasterization VkBool32 <>
;   TypeKind.ELABORATED
;   name = degenerateTrianglesRasterized, type = VkBool32, offset = 36, size = 4
    degenerateTrianglesRasterized VkBool32 <>
;   TypeKind.ELABORATED
;   name = degenerateLinesRasterized, type = VkBool32, offset = 40, size = 4
    degenerateLinesRasterized VkBool32 <>
;   TypeKind.ELABORATED
;   name = fullyCoveredFragmentShaderInputVariable, type = VkBool32, offset = 44, size = 4
    fullyCoveredFragmentShaderInputVariable VkBool32 <>
;   TypeKind.ELABORATED
;   name = conservativeRasterizationPostDepthCoverage, type = VkBool32, offset = 48, size = 4
    conservativeRasterizationPostDepthCoverage VkBool32 <>
VkPhysicalDeviceConservativeRasterizationPropertiesEXT ends

VkPipelineRasterizationConservativeStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineRasterizationConservativeStateCreateFlagsEXT, offset = 16, size = 4
    flags VkPipelineRasterizationConservativeStateCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = conservativeRasterizationMode, type = VkConservativeRasterizationModeEXT, offset = 20, size = 4
    conservativeRasterizationMode VkConservativeRasterizationModeEXT <>
;   TypeKind.FLOAT
;   name = extraPrimitiveOverestimationSize, type = float, offset = 24, size = 4
    extraPrimitiveOverestimationSize real4 ?
VkPipelineRasterizationConservativeStateCreateInfoEXT ends

; TYPEDEF VkPipelineRasterizationConservativeStateCreateInfoEXT = struct VkPipelineRasterizationConservativeStateCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelineRasterizationConservativeStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineRasterizationConservativeStateCreateFlagsEXT, offset = 16, size = 4
    flags VkPipelineRasterizationConservativeStateCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = conservativeRasterizationMode, type = VkConservativeRasterizationModeEXT, offset = 20, size = 4
    conservativeRasterizationMode VkConservativeRasterizationModeEXT <>
;   TypeKind.FLOAT
;   name = extraPrimitiveOverestimationSize, type = float, offset = 24, size = 4
    extraPrimitiveOverestimationSize real4 ?
VkPipelineRasterizationConservativeStateCreateInfoEXT ends

; TYPEDEF VkPipelineRasterizationDepthClipStateCreateFlagsEXT = VkFlags, TypeKind.ELABORATED
VkPipelineRasterizationDepthClipStateCreateFlagsEXT typedef dword

VkPhysicalDeviceDepthClipEnableFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthClipEnable, type = VkBool32, offset = 16, size = 4
    depthClipEnable VkBool32 <>
VkPhysicalDeviceDepthClipEnableFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceDepthClipEnableFeaturesEXT = struct VkPhysicalDeviceDepthClipEnableFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDepthClipEnableFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthClipEnable, type = VkBool32, offset = 16, size = 4
    depthClipEnable VkBool32 <>
VkPhysicalDeviceDepthClipEnableFeaturesEXT ends

VkPipelineRasterizationDepthClipStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineRasterizationDepthClipStateCreateFlagsEXT, offset = 16, size = 4
    flags VkPipelineRasterizationDepthClipStateCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = depthClipEnable, type = VkBool32, offset = 20, size = 4
    depthClipEnable VkBool32 <>
VkPipelineRasterizationDepthClipStateCreateInfoEXT ends

; TYPEDEF VkPipelineRasterizationDepthClipStateCreateInfoEXT = struct VkPipelineRasterizationDepthClipStateCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelineRasterizationDepthClipStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineRasterizationDepthClipStateCreateFlagsEXT, offset = 16, size = 4
    flags VkPipelineRasterizationDepthClipStateCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = depthClipEnable, type = VkBool32, offset = 20, size = 4
    depthClipEnable VkBool32 <>
VkPipelineRasterizationDepthClipStateCreateInfoEXT ends

VkXYColorEXT struct
;   TypeKind.FLOAT
;   name = x, type = float, offset = 0, size = 4
    x real4 ?
;   TypeKind.FLOAT
;   name = y, type = float, offset = 4, size = 4
    y real4 ?
VkXYColorEXT ends

; TYPEDEF VkXYColorEXT = struct VkXYColorEXT, TypeKind.ELABORATED
; remove struct typedef

VkXYColorEXT struct
;   TypeKind.FLOAT
;   name = x, type = float, offset = 0, size = 4
    x real4 ?
;   TypeKind.FLOAT
;   name = y, type = float, offset = 4, size = 4
    y real4 ?
VkXYColorEXT ends

VkHdrMetadataEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = displayPrimaryRed, type = VkXYColorEXT, offset = 16, size = 8
    displayPrimaryRed VkXYColorEXT <>
;   TypeKind.ELABORATED
;   name = displayPrimaryGreen, type = VkXYColorEXT, offset = 24, size = 8
    displayPrimaryGreen VkXYColorEXT <>
;   TypeKind.ELABORATED
;   name = displayPrimaryBlue, type = VkXYColorEXT, offset = 32, size = 8
    displayPrimaryBlue VkXYColorEXT <>
;   TypeKind.ELABORATED
;   name = whitePoint, type = VkXYColorEXT, offset = 40, size = 8
    whitePoint VkXYColorEXT <>
;   TypeKind.FLOAT
;   name = maxLuminance, type = float, offset = 48, size = 4
    maxLuminance real4 ?
;   TypeKind.FLOAT
;   name = minLuminance, type = float, offset = 52, size = 4
    minLuminance real4 ?
;   TypeKind.FLOAT
;   name = maxContentLightLevel, type = float, offset = 56, size = 4
    maxContentLightLevel real4 ?
;   TypeKind.FLOAT
;   name = maxFrameAverageLightLevel, type = float, offset = 60, size = 4
    maxFrameAverageLightLevel real4 ?
VkHdrMetadataEXT ends

; TYPEDEF VkHdrMetadataEXT = struct VkHdrMetadataEXT, TypeKind.ELABORATED
; remove struct typedef

VkHdrMetadataEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = displayPrimaryRed, type = VkXYColorEXT, offset = 16, size = 8
    displayPrimaryRed VkXYColorEXT <>
;   TypeKind.ELABORATED
;   name = displayPrimaryGreen, type = VkXYColorEXT, offset = 24, size = 8
    displayPrimaryGreen VkXYColorEXT <>
;   TypeKind.ELABORATED
;   name = displayPrimaryBlue, type = VkXYColorEXT, offset = 32, size = 8
    displayPrimaryBlue VkXYColorEXT <>
;   TypeKind.ELABORATED
;   name = whitePoint, type = VkXYColorEXT, offset = 40, size = 8
    whitePoint VkXYColorEXT <>
;   TypeKind.FLOAT
;   name = maxLuminance, type = float, offset = 48, size = 4
    maxLuminance real4 ?
;   TypeKind.FLOAT
;   name = minLuminance, type = float, offset = 52, size = 4
    minLuminance real4 ?
;   TypeKind.FLOAT
;   name = maxContentLightLevel, type = float, offset = 56, size = 4
    maxContentLightLevel real4 ?
;   TypeKind.FLOAT
;   name = maxFrameAverageLightLevel, type = float, offset = 60, size = 4
    maxFrameAverageLightLevel real4 ?
VkHdrMetadataEXT ends

; TYPEDEF PFN_vkSetHdrMetadataEXT = void (*)(VkDevice, uint32_t, const VkSwapchainKHR *, const VkHdrMetadataEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSetHdrMetadataEXT typedef qword

; void vkSetHdrMetadataEXT(VkDevice device, uint32_t swapchainCount, const VkSwapchainKHR * pSwapchains, const VkHdrMetadataEXT * pMetadata)
vkSetHdrMetadataEXT qword ?

VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = relaxedLineRasterization, type = VkBool32, offset = 16, size = 4
    relaxedLineRasterization VkBool32 <>
VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG ends

; TYPEDEF VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG = struct VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = relaxedLineRasterization, type = VkBool32, offset = 16, size = 4
    relaxedLineRasterization VkBool32 <>
VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG ends

; TYPEDEF VkDebugUtilsMessengerEXT = struct VkDebugUtilsMessengerEXT_T *, TypeKind.POINTER
VkDebugUtilsMessengerEXT typedef qword

; TYPEDEF VkDebugUtilsMessengerCallbackDataFlagsEXT = VkFlags, TypeKind.ELABORATED
VkDebugUtilsMessengerCallbackDataFlagsEXT typedef dword

; enum VkDebugUtilsMessageSeverityFlagBitsEXT {
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT equ 1
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT equ 16
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT equ 256
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT equ 4096
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDebugUtilsMessageSeverityFlagBitsEXT = enum VkDebugUtilsMessageSeverityFlagBitsEXT, TypeKind.ELABORATED
VkDebugUtilsMessageSeverityFlagBitsEXT typedef dword

; enum VkDebugUtilsMessageSeverityFlagBitsEXT {
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT equ 1
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT equ 16
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT equ 256
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT equ 4096
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; enum VkDebugUtilsMessageTypeFlagBitsEXT {
    VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT equ 1
    VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT equ 2
    VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT equ 4
    VK_DEBUG_UTILS_MESSAGE_TYPE_DEVICE_ADDRESS_BINDING_BIT_EXT equ 8
    VK_DEBUG_UTILS_MESSAGE_TYPE_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDebugUtilsMessageTypeFlagBitsEXT = enum VkDebugUtilsMessageTypeFlagBitsEXT, TypeKind.ELABORATED
VkDebugUtilsMessageTypeFlagBitsEXT typedef dword

; enum VkDebugUtilsMessageTypeFlagBitsEXT {
    VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT equ 1
    VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT equ 2
    VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT equ 4
    VK_DEBUG_UTILS_MESSAGE_TYPE_DEVICE_ADDRESS_BINDING_BIT_EXT equ 8
    VK_DEBUG_UTILS_MESSAGE_TYPE_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDebugUtilsMessageTypeFlagsEXT = VkFlags, TypeKind.ELABORATED
VkDebugUtilsMessageTypeFlagsEXT typedef dword

; TYPEDEF VkDebugUtilsMessageSeverityFlagsEXT = VkFlags, TypeKind.ELABORATED
VkDebugUtilsMessageSeverityFlagsEXT typedef dword

; TYPEDEF VkDebugUtilsMessengerCreateFlagsEXT = VkFlags, TypeKind.ELABORATED
VkDebugUtilsMessengerCreateFlagsEXT typedef dword

VkDebugUtilsLabelEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pLabelName, type = const char *, offset = 16, size = 8
    pLabelName qword ?
;   TypeKind.CONSTANTARRAY
;   name = color, type = float[4], offset = 24, size = 16
    color real4 4 dup(?)
VkDebugUtilsLabelEXT ends

; TYPEDEF VkDebugUtilsLabelEXT = struct VkDebugUtilsLabelEXT, TypeKind.ELABORATED
; remove struct typedef

VkDebugUtilsLabelEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pLabelName, type = const char *, offset = 16, size = 8
    pLabelName qword ?
;   TypeKind.CONSTANTARRAY
;   name = color, type = float[4], offset = 24, size = 16
    color real4 4 dup(?)
VkDebugUtilsLabelEXT ends

VkDebugUtilsObjectNameInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = objectType, type = VkObjectType, offset = 16, size = 4
    objectType VkObjectType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = objectHandle, type = uint64_t, offset = 24, size = 8
    objectHandle qword ?
;   TypeKind.POINTER
;   name = pObjectName, type = const char *, offset = 32, size = 8
    pObjectName qword ?
VkDebugUtilsObjectNameInfoEXT ends

; TYPEDEF VkDebugUtilsObjectNameInfoEXT = struct VkDebugUtilsObjectNameInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDebugUtilsObjectNameInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = objectType, type = VkObjectType, offset = 16, size = 4
    objectType VkObjectType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = objectHandle, type = uint64_t, offset = 24, size = 8
    objectHandle qword ?
;   TypeKind.POINTER
;   name = pObjectName, type = const char *, offset = 32, size = 8
    pObjectName qword ?
VkDebugUtilsObjectNameInfoEXT ends

VkDebugUtilsMessengerCallbackDataEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDebugUtilsMessengerCallbackDataFlagsEXT, offset = 16, size = 4
    flags VkDebugUtilsMessengerCallbackDataFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pMessageIdName, type = const char *, offset = 24, size = 8
    pMessageIdName qword ?
;   TypeKind.ELABORATED
;   name = messageIdNumber, type = int32_t, offset = 32, size = 4
    messageIdNumber sdword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pMessage, type = const char *, offset = 40, size = 8
    pMessage qword ?
;   TypeKind.ELABORATED
;   name = queueLabelCount, type = uint32_t, offset = 48, size = 4
    queueLabelCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pQueueLabels, type = const VkDebugUtilsLabelEXT *, offset = 56, size = 8
    pQueueLabels qword ?
;   TypeKind.ELABORATED
;   name = cmdBufLabelCount, type = uint32_t, offset = 64, size = 4
    cmdBufLabelCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCmdBufLabels, type = const VkDebugUtilsLabelEXT *, offset = 72, size = 8
    pCmdBufLabels qword ?
;   TypeKind.ELABORATED
;   name = objectCount, type = uint32_t, offset = 80, size = 4
    objectCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pObjects, type = const VkDebugUtilsObjectNameInfoEXT *, offset = 88, size = 8
    pObjects qword ?
VkDebugUtilsMessengerCallbackDataEXT ends

; TYPEDEF VkDebugUtilsMessengerCallbackDataEXT = struct VkDebugUtilsMessengerCallbackDataEXT, TypeKind.ELABORATED
; remove struct typedef

VkDebugUtilsMessengerCallbackDataEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDebugUtilsMessengerCallbackDataFlagsEXT, offset = 16, size = 4
    flags VkDebugUtilsMessengerCallbackDataFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pMessageIdName, type = const char *, offset = 24, size = 8
    pMessageIdName qword ?
;   TypeKind.ELABORATED
;   name = messageIdNumber, type = int32_t, offset = 32, size = 4
    messageIdNumber sdword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pMessage, type = const char *, offset = 40, size = 8
    pMessage qword ?
;   TypeKind.ELABORATED
;   name = queueLabelCount, type = uint32_t, offset = 48, size = 4
    queueLabelCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pQueueLabels, type = const VkDebugUtilsLabelEXT *, offset = 56, size = 8
    pQueueLabels qword ?
;   TypeKind.ELABORATED
;   name = cmdBufLabelCount, type = uint32_t, offset = 64, size = 4
    cmdBufLabelCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCmdBufLabels, type = const VkDebugUtilsLabelEXT *, offset = 72, size = 8
    pCmdBufLabels qword ?
;   TypeKind.ELABORATED
;   name = objectCount, type = uint32_t, offset = 80, size = 4
    objectCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pObjects, type = const VkDebugUtilsObjectNameInfoEXT *, offset = 88, size = 8
    pObjects qword ?
VkDebugUtilsMessengerCallbackDataEXT ends

; TYPEDEF PFN_vkDebugUtilsMessengerCallbackEXT = VkBool32 (*)(VkDebugUtilsMessageSeverityFlagBitsEXT, VkDebugUtilsMessageTypeFlagsEXT, const VkDebugUtilsMessengerCallbackDataEXT *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDebugUtilsMessengerCallbackEXT typedef qword

VkDebugUtilsMessengerCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDebugUtilsMessengerCreateFlagsEXT, offset = 16, size = 4
    flags VkDebugUtilsMessengerCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = messageSeverity, type = VkDebugUtilsMessageSeverityFlagsEXT, offset = 20, size = 4
    messageSeverity VkDebugUtilsMessageSeverityFlagsEXT <>
;   TypeKind.ELABORATED
;   name = messageType, type = VkDebugUtilsMessageTypeFlagsEXT, offset = 24, size = 4
    messageType VkDebugUtilsMessageTypeFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pfnUserCallback, type = PFN_vkDebugUtilsMessengerCallbackEXT, offset = 32, size = 8
    pfnUserCallback PFN_vkDebugUtilsMessengerCallbackEXT <>
;   TypeKind.POINTER
;   name = pUserData, type = void *, offset = 40, size = 8
    pUserData qword ?
VkDebugUtilsMessengerCreateInfoEXT ends

; TYPEDEF VkDebugUtilsMessengerCreateInfoEXT = struct VkDebugUtilsMessengerCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDebugUtilsMessengerCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDebugUtilsMessengerCreateFlagsEXT, offset = 16, size = 4
    flags VkDebugUtilsMessengerCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = messageSeverity, type = VkDebugUtilsMessageSeverityFlagsEXT, offset = 20, size = 4
    messageSeverity VkDebugUtilsMessageSeverityFlagsEXT <>
;   TypeKind.ELABORATED
;   name = messageType, type = VkDebugUtilsMessageTypeFlagsEXT, offset = 24, size = 4
    messageType VkDebugUtilsMessageTypeFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pfnUserCallback, type = PFN_vkDebugUtilsMessengerCallbackEXT, offset = 32, size = 8
    pfnUserCallback PFN_vkDebugUtilsMessengerCallbackEXT <>
;   TypeKind.POINTER
;   name = pUserData, type = void *, offset = 40, size = 8
    pUserData qword ?
VkDebugUtilsMessengerCreateInfoEXT ends

VkDebugUtilsObjectTagInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = objectType, type = VkObjectType, offset = 16, size = 4
    objectType VkObjectType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = objectHandle, type = uint64_t, offset = 24, size = 8
    objectHandle qword ?
;   TypeKind.ELABORATED
;   name = tagName, type = uint64_t, offset = 32, size = 8
    tagName qword ?
;   TypeKind.ELABORATED
;   name = tagSize, type = size_t, offset = 40, size = 8
    tagSize qword ?
;   TypeKind.POINTER
;   name = pTag, type = const void *, offset = 48, size = 8
    pTag qword ?
VkDebugUtilsObjectTagInfoEXT ends

; TYPEDEF VkDebugUtilsObjectTagInfoEXT = struct VkDebugUtilsObjectTagInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDebugUtilsObjectTagInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = objectType, type = VkObjectType, offset = 16, size = 4
    objectType VkObjectType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = objectHandle, type = uint64_t, offset = 24, size = 8
    objectHandle qword ?
;   TypeKind.ELABORATED
;   name = tagName, type = uint64_t, offset = 32, size = 8
    tagName qword ?
;   TypeKind.ELABORATED
;   name = tagSize, type = size_t, offset = 40, size = 8
    tagSize qword ?
;   TypeKind.POINTER
;   name = pTag, type = const void *, offset = 48, size = 8
    pTag qword ?
VkDebugUtilsObjectTagInfoEXT ends

; TYPEDEF PFN_vkSetDebugUtilsObjectNameEXT = VkResult (*)(VkDevice, const VkDebugUtilsObjectNameInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSetDebugUtilsObjectNameEXT typedef qword

; TYPEDEF PFN_vkSetDebugUtilsObjectTagEXT = VkResult (*)(VkDevice, const VkDebugUtilsObjectTagInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSetDebugUtilsObjectTagEXT typedef qword

; TYPEDEF PFN_vkQueueBeginDebugUtilsLabelEXT = void (*)(VkQueue, const VkDebugUtilsLabelEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkQueueBeginDebugUtilsLabelEXT typedef qword

; TYPEDEF PFN_vkQueueEndDebugUtilsLabelEXT = void (*)(VkQueue) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkQueueEndDebugUtilsLabelEXT typedef qword

; TYPEDEF PFN_vkQueueInsertDebugUtilsLabelEXT = void (*)(VkQueue, const VkDebugUtilsLabelEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkQueueInsertDebugUtilsLabelEXT typedef qword

; TYPEDEF PFN_vkCmdBeginDebugUtilsLabelEXT = void (*)(VkCommandBuffer, const VkDebugUtilsLabelEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBeginDebugUtilsLabelEXT typedef qword

; TYPEDEF PFN_vkCmdEndDebugUtilsLabelEXT = void (*)(VkCommandBuffer) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdEndDebugUtilsLabelEXT typedef qword

; TYPEDEF PFN_vkCmdInsertDebugUtilsLabelEXT = void (*)(VkCommandBuffer, const VkDebugUtilsLabelEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdInsertDebugUtilsLabelEXT typedef qword

; TYPEDEF PFN_vkCreateDebugUtilsMessengerEXT = VkResult (*)(VkInstance, const VkDebugUtilsMessengerCreateInfoEXT *, const VkAllocationCallbacks *, VkDebugUtilsMessengerEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateDebugUtilsMessengerEXT typedef qword

; TYPEDEF PFN_vkDestroyDebugUtilsMessengerEXT = void (*)(VkInstance, VkDebugUtilsMessengerEXT, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyDebugUtilsMessengerEXT typedef qword

; TYPEDEF PFN_vkSubmitDebugUtilsMessageEXT = void (*)(VkInstance, VkDebugUtilsMessageSeverityFlagBitsEXT, VkDebugUtilsMessageTypeFlagsEXT, const VkDebugUtilsMessengerCallbackDataEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSubmitDebugUtilsMessageEXT typedef qword

; VkResult vkSetDebugUtilsObjectNameEXT(VkDevice device, const VkDebugUtilsObjectNameInfoEXT * pNameInfo)
vkSetDebugUtilsObjectNameEXT qword ?

; VkResult vkSetDebugUtilsObjectTagEXT(VkDevice device, const VkDebugUtilsObjectTagInfoEXT * pTagInfo)
vkSetDebugUtilsObjectTagEXT qword ?

; void vkQueueBeginDebugUtilsLabelEXT(VkQueue queue, const VkDebugUtilsLabelEXT * pLabelInfo)
vkQueueBeginDebugUtilsLabelEXT qword ?

; void vkQueueEndDebugUtilsLabelEXT(VkQueue queue)
vkQueueEndDebugUtilsLabelEXT qword ?

; void vkQueueInsertDebugUtilsLabelEXT(VkQueue queue, const VkDebugUtilsLabelEXT * pLabelInfo)
vkQueueInsertDebugUtilsLabelEXT qword ?

; void vkCmdBeginDebugUtilsLabelEXT(VkCommandBuffer commandBuffer, const VkDebugUtilsLabelEXT * pLabelInfo)
vkCmdBeginDebugUtilsLabelEXT qword ?

; void vkCmdEndDebugUtilsLabelEXT(VkCommandBuffer commandBuffer)
vkCmdEndDebugUtilsLabelEXT qword ?

; void vkCmdInsertDebugUtilsLabelEXT(VkCommandBuffer commandBuffer, const VkDebugUtilsLabelEXT * pLabelInfo)
vkCmdInsertDebugUtilsLabelEXT qword ?

; VkResult vkCreateDebugUtilsMessengerEXT(VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkDebugUtilsMessengerEXT * pMessenger)
vkCreateDebugUtilsMessengerEXT qword ?

; void vkDestroyDebugUtilsMessengerEXT(VkInstance instance, VkDebugUtilsMessengerEXT messenger, const VkAllocationCallbacks * pAllocator)
vkDestroyDebugUtilsMessengerEXT qword ?

; void vkSubmitDebugUtilsMessageEXT(VkInstance instance, VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity, VkDebugUtilsMessageTypeFlagsEXT messageTypes, const VkDebugUtilsMessengerCallbackDataEXT * pCallbackData)
vkSubmitDebugUtilsMessageEXT qword ?

; TYPEDEF VkSamplerReductionModeEXT = VkSamplerReductionMode, TypeKind.ELABORATED

; TYPEDEF VkSamplerReductionModeCreateInfoEXT = VkSamplerReductionModeCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT = VkPhysicalDeviceSamplerFilterMinmaxProperties, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceInlineUniformBlockFeaturesEXT = VkPhysicalDeviceInlineUniformBlockFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceInlineUniformBlockPropertiesEXT = VkPhysicalDeviceInlineUniformBlockProperties, TypeKind.ELABORATED

; TYPEDEF VkWriteDescriptorSetInlineUniformBlockEXT = VkWriteDescriptorSetInlineUniformBlock, TypeKind.ELABORATED

; TYPEDEF VkDescriptorPoolInlineUniformBlockCreateInfoEXT = VkDescriptorPoolInlineUniformBlockCreateInfo, TypeKind.ELABORATED

VkSampleLocationEXT struct
;   TypeKind.FLOAT
;   name = x, type = float, offset = 0, size = 4
    x real4 ?
;   TypeKind.FLOAT
;   name = y, type = float, offset = 4, size = 4
    y real4 ?
VkSampleLocationEXT ends

; TYPEDEF VkSampleLocationEXT = struct VkSampleLocationEXT, TypeKind.ELABORATED
; remove struct typedef

VkSampleLocationEXT struct
;   TypeKind.FLOAT
;   name = x, type = float, offset = 0, size = 4
    x real4 ?
;   TypeKind.FLOAT
;   name = y, type = float, offset = 4, size = 4
    y real4 ?
VkSampleLocationEXT ends

VkSampleLocationsInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampleLocationsPerPixel, type = VkSampleCountFlagBits, offset = 16, size = 4
    sampleLocationsPerPixel VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = sampleLocationGridSize, type = VkExtent2D, offset = 20, size = 8
    sampleLocationGridSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = sampleLocationsCount, type = uint32_t, offset = 28, size = 4
    sampleLocationsCount dword ?
;   TypeKind.POINTER
;   name = pSampleLocations, type = const VkSampleLocationEXT *, offset = 32, size = 8
    pSampleLocations qword ?
VkSampleLocationsInfoEXT ends

; TYPEDEF VkSampleLocationsInfoEXT = struct VkSampleLocationsInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkSampleLocationsInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampleLocationsPerPixel, type = VkSampleCountFlagBits, offset = 16, size = 4
    sampleLocationsPerPixel VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = sampleLocationGridSize, type = VkExtent2D, offset = 20, size = 8
    sampleLocationGridSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = sampleLocationsCount, type = uint32_t, offset = 28, size = 4
    sampleLocationsCount dword ?
;   TypeKind.POINTER
;   name = pSampleLocations, type = const VkSampleLocationEXT *, offset = 32, size = 8
    pSampleLocations qword ?
VkSampleLocationsInfoEXT ends

VkAttachmentSampleLocationsEXT struct
;   TypeKind.ELABORATED
;   name = attachmentIndex, type = uint32_t, offset = 0, size = 4
    attachmentIndex dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = sampleLocationsInfo, type = VkSampleLocationsInfoEXT, offset = 8, size = 40
    sampleLocationsInfo VkSampleLocationsInfoEXT <>
VkAttachmentSampleLocationsEXT ends

; TYPEDEF VkAttachmentSampleLocationsEXT = struct VkAttachmentSampleLocationsEXT, TypeKind.ELABORATED
; remove struct typedef

VkAttachmentSampleLocationsEXT struct
;   TypeKind.ELABORATED
;   name = attachmentIndex, type = uint32_t, offset = 0, size = 4
    attachmentIndex dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = sampleLocationsInfo, type = VkSampleLocationsInfoEXT, offset = 8, size = 40
    sampleLocationsInfo VkSampleLocationsInfoEXT <>
VkAttachmentSampleLocationsEXT ends

VkSubpassSampleLocationsEXT struct
;   TypeKind.ELABORATED
;   name = subpassIndex, type = uint32_t, offset = 0, size = 4
    subpassIndex dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = sampleLocationsInfo, type = VkSampleLocationsInfoEXT, offset = 8, size = 40
    sampleLocationsInfo VkSampleLocationsInfoEXT <>
VkSubpassSampleLocationsEXT ends

; TYPEDEF VkSubpassSampleLocationsEXT = struct VkSubpassSampleLocationsEXT, TypeKind.ELABORATED
; remove struct typedef

VkSubpassSampleLocationsEXT struct
;   TypeKind.ELABORATED
;   name = subpassIndex, type = uint32_t, offset = 0, size = 4
    subpassIndex dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = sampleLocationsInfo, type = VkSampleLocationsInfoEXT, offset = 8, size = 40
    sampleLocationsInfo VkSampleLocationsInfoEXT <>
VkSubpassSampleLocationsEXT ends

VkRenderPassSampleLocationsBeginInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentInitialSampleLocationsCount, type = uint32_t, offset = 16, size = 4
    attachmentInitialSampleLocationsCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAttachmentInitialSampleLocations, type = const VkAttachmentSampleLocationsEXT *, offset = 24, size = 8
    pAttachmentInitialSampleLocations qword ?
;   TypeKind.ELABORATED
;   name = postSubpassSampleLocationsCount, type = uint32_t, offset = 32, size = 4
    postSubpassSampleLocationsCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPostSubpassSampleLocations, type = const VkSubpassSampleLocationsEXT *, offset = 40, size = 8
    pPostSubpassSampleLocations qword ?
VkRenderPassSampleLocationsBeginInfoEXT ends

; TYPEDEF VkRenderPassSampleLocationsBeginInfoEXT = struct VkRenderPassSampleLocationsBeginInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassSampleLocationsBeginInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentInitialSampleLocationsCount, type = uint32_t, offset = 16, size = 4
    attachmentInitialSampleLocationsCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAttachmentInitialSampleLocations, type = const VkAttachmentSampleLocationsEXT *, offset = 24, size = 8
    pAttachmentInitialSampleLocations qword ?
;   TypeKind.ELABORATED
;   name = postSubpassSampleLocationsCount, type = uint32_t, offset = 32, size = 4
    postSubpassSampleLocationsCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPostSubpassSampleLocations, type = const VkSubpassSampleLocationsEXT *, offset = 40, size = 8
    pPostSubpassSampleLocations qword ?
VkRenderPassSampleLocationsBeginInfoEXT ends

VkPipelineSampleLocationsStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampleLocationsEnable, type = VkBool32, offset = 16, size = 4
    sampleLocationsEnable VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = sampleLocationsInfo, type = VkSampleLocationsInfoEXT, offset = 24, size = 40
    sampleLocationsInfo VkSampleLocationsInfoEXT <>
VkPipelineSampleLocationsStateCreateInfoEXT ends

; TYPEDEF VkPipelineSampleLocationsStateCreateInfoEXT = struct VkPipelineSampleLocationsStateCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelineSampleLocationsStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampleLocationsEnable, type = VkBool32, offset = 16, size = 4
    sampleLocationsEnable VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = sampleLocationsInfo, type = VkSampleLocationsInfoEXT, offset = 24, size = 40
    sampleLocationsInfo VkSampleLocationsInfoEXT <>
VkPipelineSampleLocationsStateCreateInfoEXT ends

VkPhysicalDeviceSampleLocationsPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampleLocationSampleCounts, type = VkSampleCountFlags, offset = 16, size = 4
    sampleLocationSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = maxSampleLocationGridSize, type = VkExtent2D, offset = 20, size = 8
    maxSampleLocationGridSize VkExtent2D <>
;   TypeKind.CONSTANTARRAY
;   name = sampleLocationCoordinateRange, type = float[2], offset = 28, size = 8
    sampleLocationCoordinateRange real4 2 dup(?)
;   TypeKind.ELABORATED
;   name = sampleLocationSubPixelBits, type = uint32_t, offset = 36, size = 4
    sampleLocationSubPixelBits dword ?
;   TypeKind.ELABORATED
;   name = variableSampleLocations, type = VkBool32, offset = 40, size = 4
    variableSampleLocations VkBool32 <>
VkPhysicalDeviceSampleLocationsPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceSampleLocationsPropertiesEXT = struct VkPhysicalDeviceSampleLocationsPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSampleLocationsPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampleLocationSampleCounts, type = VkSampleCountFlags, offset = 16, size = 4
    sampleLocationSampleCounts VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = maxSampleLocationGridSize, type = VkExtent2D, offset = 20, size = 8
    maxSampleLocationGridSize VkExtent2D <>
;   TypeKind.CONSTANTARRAY
;   name = sampleLocationCoordinateRange, type = float[2], offset = 28, size = 8
    sampleLocationCoordinateRange real4 2 dup(?)
;   TypeKind.ELABORATED
;   name = sampleLocationSubPixelBits, type = uint32_t, offset = 36, size = 4
    sampleLocationSubPixelBits dword ?
;   TypeKind.ELABORATED
;   name = variableSampleLocations, type = VkBool32, offset = 40, size = 4
    variableSampleLocations VkBool32 <>
VkPhysicalDeviceSampleLocationsPropertiesEXT ends

VkMultisamplePropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxSampleLocationGridSize, type = VkExtent2D, offset = 16, size = 8
    maxSampleLocationGridSize VkExtent2D <>
VkMultisamplePropertiesEXT ends

; TYPEDEF VkMultisamplePropertiesEXT = struct VkMultisamplePropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkMultisamplePropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxSampleLocationGridSize, type = VkExtent2D, offset = 16, size = 8
    maxSampleLocationGridSize VkExtent2D <>
VkMultisamplePropertiesEXT ends

; TYPEDEF PFN_vkCmdSetSampleLocationsEXT = void (*)(VkCommandBuffer, const VkSampleLocationsInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetSampleLocationsEXT typedef qword

; TYPEDEF PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT = void (*)(VkPhysicalDevice, VkSampleCountFlagBits, VkMultisamplePropertiesEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT typedef qword

; void vkCmdSetSampleLocationsEXT(VkCommandBuffer commandBuffer, const VkSampleLocationsInfoEXT * pSampleLocationsInfo)
vkCmdSetSampleLocationsEXT qword ?

; void vkGetPhysicalDeviceMultisamplePropertiesEXT(VkPhysicalDevice physicalDevice, VkSampleCountFlagBits samples, VkMultisamplePropertiesEXT * pMultisampleProperties)
vkGetPhysicalDeviceMultisamplePropertiesEXT qword ?

; enum VkBlendOverlapEXT {
    VK_BLEND_OVERLAP_UNCORRELATED_EXT equ 0
    VK_BLEND_OVERLAP_DISJOINT_EXT equ 1
    VK_BLEND_OVERLAP_CONJOINT_EXT equ 2
    VK_BLEND_OVERLAP_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkBlendOverlapEXT = enum VkBlendOverlapEXT, TypeKind.ELABORATED
VkBlendOverlapEXT typedef dword

; enum VkBlendOverlapEXT {
    VK_BLEND_OVERLAP_UNCORRELATED_EXT equ 0
    VK_BLEND_OVERLAP_DISJOINT_EXT equ 1
    VK_BLEND_OVERLAP_CONJOINT_EXT equ 2
    VK_BLEND_OVERLAP_MAX_ENUM_EXT equ 2147483647
; }

VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = advancedBlendCoherentOperations, type = VkBool32, offset = 16, size = 4
    advancedBlendCoherentOperations VkBool32 <>
VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT = struct VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = advancedBlendCoherentOperations, type = VkBool32, offset = 16, size = 4
    advancedBlendCoherentOperations VkBool32 <>
VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT ends

VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = advancedBlendMaxColorAttachments, type = uint32_t, offset = 16, size = 4
    advancedBlendMaxColorAttachments dword ?
;   TypeKind.ELABORATED
;   name = advancedBlendIndependentBlend, type = VkBool32, offset = 20, size = 4
    advancedBlendIndependentBlend VkBool32 <>
;   TypeKind.ELABORATED
;   name = advancedBlendNonPremultipliedSrcColor, type = VkBool32, offset = 24, size = 4
    advancedBlendNonPremultipliedSrcColor VkBool32 <>
;   TypeKind.ELABORATED
;   name = advancedBlendNonPremultipliedDstColor, type = VkBool32, offset = 28, size = 4
    advancedBlendNonPremultipliedDstColor VkBool32 <>
;   TypeKind.ELABORATED
;   name = advancedBlendCorrelatedOverlap, type = VkBool32, offset = 32, size = 4
    advancedBlendCorrelatedOverlap VkBool32 <>
;   TypeKind.ELABORATED
;   name = advancedBlendAllOperations, type = VkBool32, offset = 36, size = 4
    advancedBlendAllOperations VkBool32 <>
VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT = struct VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = advancedBlendMaxColorAttachments, type = uint32_t, offset = 16, size = 4
    advancedBlendMaxColorAttachments dword ?
;   TypeKind.ELABORATED
;   name = advancedBlendIndependentBlend, type = VkBool32, offset = 20, size = 4
    advancedBlendIndependentBlend VkBool32 <>
;   TypeKind.ELABORATED
;   name = advancedBlendNonPremultipliedSrcColor, type = VkBool32, offset = 24, size = 4
    advancedBlendNonPremultipliedSrcColor VkBool32 <>
;   TypeKind.ELABORATED
;   name = advancedBlendNonPremultipliedDstColor, type = VkBool32, offset = 28, size = 4
    advancedBlendNonPremultipliedDstColor VkBool32 <>
;   TypeKind.ELABORATED
;   name = advancedBlendCorrelatedOverlap, type = VkBool32, offset = 32, size = 4
    advancedBlendCorrelatedOverlap VkBool32 <>
;   TypeKind.ELABORATED
;   name = advancedBlendAllOperations, type = VkBool32, offset = 36, size = 4
    advancedBlendAllOperations VkBool32 <>
VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT ends

VkPipelineColorBlendAdvancedStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcPremultiplied, type = VkBool32, offset = 16, size = 4
    srcPremultiplied VkBool32 <>
;   TypeKind.ELABORATED
;   name = dstPremultiplied, type = VkBool32, offset = 20, size = 4
    dstPremultiplied VkBool32 <>
;   TypeKind.ELABORATED
;   name = blendOverlap, type = VkBlendOverlapEXT, offset = 24, size = 4
    blendOverlap VkBlendOverlapEXT <>
VkPipelineColorBlendAdvancedStateCreateInfoEXT ends

; TYPEDEF VkPipelineColorBlendAdvancedStateCreateInfoEXT = struct VkPipelineColorBlendAdvancedStateCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelineColorBlendAdvancedStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = srcPremultiplied, type = VkBool32, offset = 16, size = 4
    srcPremultiplied VkBool32 <>
;   TypeKind.ELABORATED
;   name = dstPremultiplied, type = VkBool32, offset = 20, size = 4
    dstPremultiplied VkBool32 <>
;   TypeKind.ELABORATED
;   name = blendOverlap, type = VkBlendOverlapEXT, offset = 24, size = 4
    blendOverlap VkBlendOverlapEXT <>
VkPipelineColorBlendAdvancedStateCreateInfoEXT ends

; TYPEDEF VkPipelineCoverageToColorStateCreateFlagsNV = VkFlags, TypeKind.ELABORATED
VkPipelineCoverageToColorStateCreateFlagsNV typedef dword

VkPipelineCoverageToColorStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCoverageToColorStateCreateFlagsNV, offset = 16, size = 4
    flags VkPipelineCoverageToColorStateCreateFlagsNV <>
;   TypeKind.ELABORATED
;   name = coverageToColorEnable, type = VkBool32, offset = 20, size = 4
    coverageToColorEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = coverageToColorLocation, type = uint32_t, offset = 24, size = 4
    coverageToColorLocation dword ?
VkPipelineCoverageToColorStateCreateInfoNV ends

; TYPEDEF VkPipelineCoverageToColorStateCreateInfoNV = struct VkPipelineCoverageToColorStateCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkPipelineCoverageToColorStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCoverageToColorStateCreateFlagsNV, offset = 16, size = 4
    flags VkPipelineCoverageToColorStateCreateFlagsNV <>
;   TypeKind.ELABORATED
;   name = coverageToColorEnable, type = VkBool32, offset = 20, size = 4
    coverageToColorEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = coverageToColorLocation, type = uint32_t, offset = 24, size = 4
    coverageToColorLocation dword ?
VkPipelineCoverageToColorStateCreateInfoNV ends

; enum VkCoverageModulationModeNV {
    VK_COVERAGE_MODULATION_MODE_NONE_NV equ 0
    VK_COVERAGE_MODULATION_MODE_RGB_NV equ 1
    VK_COVERAGE_MODULATION_MODE_ALPHA_NV equ 2
    VK_COVERAGE_MODULATION_MODE_RGBA_NV equ 3
    VK_COVERAGE_MODULATION_MODE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkCoverageModulationModeNV = enum VkCoverageModulationModeNV, TypeKind.ELABORATED
VkCoverageModulationModeNV typedef dword

; enum VkCoverageModulationModeNV {
    VK_COVERAGE_MODULATION_MODE_NONE_NV equ 0
    VK_COVERAGE_MODULATION_MODE_RGB_NV equ 1
    VK_COVERAGE_MODULATION_MODE_ALPHA_NV equ 2
    VK_COVERAGE_MODULATION_MODE_RGBA_NV equ 3
    VK_COVERAGE_MODULATION_MODE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkPipelineCoverageModulationStateCreateFlagsNV = VkFlags, TypeKind.ELABORATED
VkPipelineCoverageModulationStateCreateFlagsNV typedef dword

VkPipelineCoverageModulationStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCoverageModulationStateCreateFlagsNV, offset = 16, size = 4
    flags VkPipelineCoverageModulationStateCreateFlagsNV <>
;   TypeKind.ELABORATED
;   name = coverageModulationMode, type = VkCoverageModulationModeNV, offset = 20, size = 4
    coverageModulationMode VkCoverageModulationModeNV <>
;   TypeKind.ELABORATED
;   name = coverageModulationTableEnable, type = VkBool32, offset = 24, size = 4
    coverageModulationTableEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = coverageModulationTableCount, type = uint32_t, offset = 28, size = 4
    coverageModulationTableCount dword ?
;   TypeKind.POINTER
;   name = pCoverageModulationTable, type = const float *, offset = 32, size = 8
    pCoverageModulationTable qword ?
VkPipelineCoverageModulationStateCreateInfoNV ends

; TYPEDEF VkPipelineCoverageModulationStateCreateInfoNV = struct VkPipelineCoverageModulationStateCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkPipelineCoverageModulationStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCoverageModulationStateCreateFlagsNV, offset = 16, size = 4
    flags VkPipelineCoverageModulationStateCreateFlagsNV <>
;   TypeKind.ELABORATED
;   name = coverageModulationMode, type = VkCoverageModulationModeNV, offset = 20, size = 4
    coverageModulationMode VkCoverageModulationModeNV <>
;   TypeKind.ELABORATED
;   name = coverageModulationTableEnable, type = VkBool32, offset = 24, size = 4
    coverageModulationTableEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = coverageModulationTableCount, type = uint32_t, offset = 28, size = 4
    coverageModulationTableCount dword ?
;   TypeKind.POINTER
;   name = pCoverageModulationTable, type = const float *, offset = 32, size = 8
    pCoverageModulationTable qword ?
VkPipelineCoverageModulationStateCreateInfoNV ends

VkPhysicalDeviceShaderSMBuiltinsPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSMCount, type = uint32_t, offset = 16, size = 4
    shaderSMCount dword ?
;   TypeKind.ELABORATED
;   name = shaderWarpsPerSM, type = uint32_t, offset = 20, size = 4
    shaderWarpsPerSM dword ?
VkPhysicalDeviceShaderSMBuiltinsPropertiesNV ends

; TYPEDEF VkPhysicalDeviceShaderSMBuiltinsPropertiesNV = struct VkPhysicalDeviceShaderSMBuiltinsPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderSMBuiltinsPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSMCount, type = uint32_t, offset = 16, size = 4
    shaderSMCount dword ?
;   TypeKind.ELABORATED
;   name = shaderWarpsPerSM, type = uint32_t, offset = 20, size = 4
    shaderWarpsPerSM dword ?
VkPhysicalDeviceShaderSMBuiltinsPropertiesNV ends

VkPhysicalDeviceShaderSMBuiltinsFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSMBuiltins, type = VkBool32, offset = 16, size = 4
    shaderSMBuiltins VkBool32 <>
VkPhysicalDeviceShaderSMBuiltinsFeaturesNV ends

; TYPEDEF VkPhysicalDeviceShaderSMBuiltinsFeaturesNV = struct VkPhysicalDeviceShaderSMBuiltinsFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderSMBuiltinsFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderSMBuiltins, type = VkBool32, offset = 16, size = 4
    shaderSMBuiltins VkBool32 <>
VkPhysicalDeviceShaderSMBuiltinsFeaturesNV ends

VkDrmFormatModifierPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = drmFormatModifier, type = uint64_t, offset = 0, size = 8
    drmFormatModifier qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierPlaneCount, type = uint32_t, offset = 8, size = 4
    drmFormatModifierPlaneCount dword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierTilingFeatures, type = VkFormatFeatureFlags, offset = 12, size = 4
    drmFormatModifierTilingFeatures dword ?
VkDrmFormatModifierPropertiesEXT ends

; TYPEDEF VkDrmFormatModifierPropertiesEXT = struct VkDrmFormatModifierPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkDrmFormatModifierPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = drmFormatModifier, type = uint64_t, offset = 0, size = 8
    drmFormatModifier qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierPlaneCount, type = uint32_t, offset = 8, size = 4
    drmFormatModifierPlaneCount dword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierTilingFeatures, type = VkFormatFeatureFlags, offset = 12, size = 4
    drmFormatModifierTilingFeatures dword ?
VkDrmFormatModifierPropertiesEXT ends

VkDrmFormatModifierPropertiesListEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierCount, type = uint32_t, offset = 16, size = 4
    drmFormatModifierCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDrmFormatModifierProperties, type = VkDrmFormatModifierPropertiesEXT *, offset = 24, size = 8
    pDrmFormatModifierProperties qword ?
VkDrmFormatModifierPropertiesListEXT ends

; TYPEDEF VkDrmFormatModifierPropertiesListEXT = struct VkDrmFormatModifierPropertiesListEXT, TypeKind.ELABORATED
; remove struct typedef

VkDrmFormatModifierPropertiesListEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierCount, type = uint32_t, offset = 16, size = 4
    drmFormatModifierCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDrmFormatModifierProperties, type = VkDrmFormatModifierPropertiesEXT *, offset = 24, size = 8
    pDrmFormatModifierProperties qword ?
VkDrmFormatModifierPropertiesListEXT ends

VkPhysicalDeviceImageDrmFormatModifierInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifier, type = uint64_t, offset = 16, size = 8
    drmFormatModifier qword ?
;   TypeKind.ELABORATED
;   name = sharingMode, type = VkSharingMode, offset = 24, size = 4
    sharingMode VkSharingMode <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndexCount, type = uint32_t, offset = 28, size = 4
    queueFamilyIndexCount dword ?
;   TypeKind.POINTER
;   name = pQueueFamilyIndices, type = const uint32_t *, offset = 32, size = 8
    pQueueFamilyIndices qword ?
VkPhysicalDeviceImageDrmFormatModifierInfoEXT ends

; TYPEDEF VkPhysicalDeviceImageDrmFormatModifierInfoEXT = struct VkPhysicalDeviceImageDrmFormatModifierInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageDrmFormatModifierInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifier, type = uint64_t, offset = 16, size = 8
    drmFormatModifier qword ?
;   TypeKind.ELABORATED
;   name = sharingMode, type = VkSharingMode, offset = 24, size = 4
    sharingMode VkSharingMode <>
;   TypeKind.ELABORATED
;   name = queueFamilyIndexCount, type = uint32_t, offset = 28, size = 4
    queueFamilyIndexCount dword ?
;   TypeKind.POINTER
;   name = pQueueFamilyIndices, type = const uint32_t *, offset = 32, size = 8
    pQueueFamilyIndices qword ?
VkPhysicalDeviceImageDrmFormatModifierInfoEXT ends

VkImageDrmFormatModifierListCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierCount, type = uint32_t, offset = 16, size = 4
    drmFormatModifierCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDrmFormatModifiers, type = const uint64_t *, offset = 24, size = 8
    pDrmFormatModifiers qword ?
VkImageDrmFormatModifierListCreateInfoEXT ends

; TYPEDEF VkImageDrmFormatModifierListCreateInfoEXT = struct VkImageDrmFormatModifierListCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkImageDrmFormatModifierListCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierCount, type = uint32_t, offset = 16, size = 4
    drmFormatModifierCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDrmFormatModifiers, type = const uint64_t *, offset = 24, size = 8
    pDrmFormatModifiers qword ?
VkImageDrmFormatModifierListCreateInfoEXT ends

VkImageDrmFormatModifierExplicitCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifier, type = uint64_t, offset = 16, size = 8
    drmFormatModifier qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierPlaneCount, type = uint32_t, offset = 24, size = 4
    drmFormatModifierPlaneCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPlaneLayouts, type = const VkSubresourceLayout *, offset = 32, size = 8
    pPlaneLayouts qword ?
VkImageDrmFormatModifierExplicitCreateInfoEXT ends

; TYPEDEF VkImageDrmFormatModifierExplicitCreateInfoEXT = struct VkImageDrmFormatModifierExplicitCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkImageDrmFormatModifierExplicitCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifier, type = uint64_t, offset = 16, size = 8
    drmFormatModifier qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierPlaneCount, type = uint32_t, offset = 24, size = 4
    drmFormatModifierPlaneCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPlaneLayouts, type = const VkSubresourceLayout *, offset = 32, size = 8
    pPlaneLayouts qword ?
VkImageDrmFormatModifierExplicitCreateInfoEXT ends

VkImageDrmFormatModifierPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifier, type = uint64_t, offset = 16, size = 8
    drmFormatModifier qword ?
VkImageDrmFormatModifierPropertiesEXT ends

; TYPEDEF VkImageDrmFormatModifierPropertiesEXT = struct VkImageDrmFormatModifierPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkImageDrmFormatModifierPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifier, type = uint64_t, offset = 16, size = 8
    drmFormatModifier qword ?
VkImageDrmFormatModifierPropertiesEXT ends

VkDrmFormatModifierProperties2EXT struct
;   TypeKind.ELABORATED
;   name = drmFormatModifier, type = uint64_t, offset = 0, size = 8
    drmFormatModifier qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierPlaneCount, type = uint32_t, offset = 8, size = 4
    drmFormatModifierPlaneCount dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = drmFormatModifierTilingFeatures, type = VkFormatFeatureFlags2, offset = 16, size = 8
    drmFormatModifierTilingFeatures VkFormatFeatureFlags2 <>
VkDrmFormatModifierProperties2EXT ends

; TYPEDEF VkDrmFormatModifierProperties2EXT = struct VkDrmFormatModifierProperties2EXT, TypeKind.ELABORATED
; remove struct typedef

VkDrmFormatModifierProperties2EXT struct
;   TypeKind.ELABORATED
;   name = drmFormatModifier, type = uint64_t, offset = 0, size = 8
    drmFormatModifier qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierPlaneCount, type = uint32_t, offset = 8, size = 4
    drmFormatModifierPlaneCount dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = drmFormatModifierTilingFeatures, type = VkFormatFeatureFlags2, offset = 16, size = 8
    drmFormatModifierTilingFeatures VkFormatFeatureFlags2 <>
VkDrmFormatModifierProperties2EXT ends

VkDrmFormatModifierPropertiesList2EXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierCount, type = uint32_t, offset = 16, size = 4
    drmFormatModifierCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDrmFormatModifierProperties, type = VkDrmFormatModifierProperties2EXT *, offset = 24, size = 8
    pDrmFormatModifierProperties qword ?
VkDrmFormatModifierPropertiesList2EXT ends

; TYPEDEF VkDrmFormatModifierPropertiesList2EXT = struct VkDrmFormatModifierPropertiesList2EXT, TypeKind.ELABORATED
; remove struct typedef

VkDrmFormatModifierPropertiesList2EXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = drmFormatModifierCount, type = uint32_t, offset = 16, size = 4
    drmFormatModifierCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDrmFormatModifierProperties, type = VkDrmFormatModifierProperties2EXT *, offset = 24, size = 8
    pDrmFormatModifierProperties qword ?
VkDrmFormatModifierPropertiesList2EXT ends

; TYPEDEF PFN_vkGetImageDrmFormatModifierPropertiesEXT = VkResult (*)(VkDevice, VkImage, VkImageDrmFormatModifierPropertiesEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageDrmFormatModifierPropertiesEXT typedef qword

; VkResult vkGetImageDrmFormatModifierPropertiesEXT(VkDevice device, VkImage image, VkImageDrmFormatModifierPropertiesEXT * pProperties)
vkGetImageDrmFormatModifierPropertiesEXT qword ?

; TYPEDEF VkValidationCacheEXT = struct VkValidationCacheEXT_T *, TypeKind.POINTER
VkValidationCacheEXT typedef qword

; enum VkValidationCacheHeaderVersionEXT {
    VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT equ 1
    VK_VALIDATION_CACHE_HEADER_VERSION_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkValidationCacheHeaderVersionEXT = enum VkValidationCacheHeaderVersionEXT, TypeKind.ELABORATED
VkValidationCacheHeaderVersionEXT typedef dword

; enum VkValidationCacheHeaderVersionEXT {
    VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT equ 1
    VK_VALIDATION_CACHE_HEADER_VERSION_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkValidationCacheCreateFlagsEXT = VkFlags, TypeKind.ELABORATED
VkValidationCacheCreateFlagsEXT typedef dword

VkValidationCacheCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkValidationCacheCreateFlagsEXT, offset = 16, size = 4
    flags VkValidationCacheCreateFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = initialDataSize, type = size_t, offset = 24, size = 8
    initialDataSize qword ?
;   TypeKind.POINTER
;   name = pInitialData, type = const void *, offset = 32, size = 8
    pInitialData qword ?
VkValidationCacheCreateInfoEXT ends

; TYPEDEF VkValidationCacheCreateInfoEXT = struct VkValidationCacheCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkValidationCacheCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkValidationCacheCreateFlagsEXT, offset = 16, size = 4
    flags VkValidationCacheCreateFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = initialDataSize, type = size_t, offset = 24, size = 8
    initialDataSize qword ?
;   TypeKind.POINTER
;   name = pInitialData, type = const void *, offset = 32, size = 8
    pInitialData qword ?
VkValidationCacheCreateInfoEXT ends

VkShaderModuleValidationCacheCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = validationCache, type = VkValidationCacheEXT, offset = 16, size = 8
    validationCache VkValidationCacheEXT <>
VkShaderModuleValidationCacheCreateInfoEXT ends

; TYPEDEF VkShaderModuleValidationCacheCreateInfoEXT = struct VkShaderModuleValidationCacheCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkShaderModuleValidationCacheCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = validationCache, type = VkValidationCacheEXT, offset = 16, size = 8
    validationCache VkValidationCacheEXT <>
VkShaderModuleValidationCacheCreateInfoEXT ends

; TYPEDEF PFN_vkCreateValidationCacheEXT = VkResult (*)(VkDevice, const VkValidationCacheCreateInfoEXT *, const VkAllocationCallbacks *, VkValidationCacheEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateValidationCacheEXT typedef qword

; TYPEDEF PFN_vkDestroyValidationCacheEXT = void (*)(VkDevice, VkValidationCacheEXT, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyValidationCacheEXT typedef qword

; TYPEDEF PFN_vkMergeValidationCachesEXT = VkResult (*)(VkDevice, VkValidationCacheEXT, uint32_t, const VkValidationCacheEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkMergeValidationCachesEXT typedef qword

; TYPEDEF PFN_vkGetValidationCacheDataEXT = VkResult (*)(VkDevice, VkValidationCacheEXT, size_t *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetValidationCacheDataEXT typedef qword

; VkResult vkCreateValidationCacheEXT(VkDevice device, const VkValidationCacheCreateInfoEXT * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkValidationCacheEXT * pValidationCache)
vkCreateValidationCacheEXT qword ?

; void vkDestroyValidationCacheEXT(VkDevice device, VkValidationCacheEXT validationCache, const VkAllocationCallbacks * pAllocator)
vkDestroyValidationCacheEXT qword ?

; VkResult vkMergeValidationCachesEXT(VkDevice device, VkValidationCacheEXT dstCache, uint32_t srcCacheCount, const VkValidationCacheEXT * pSrcCaches)
vkMergeValidationCachesEXT qword ?

; VkResult vkGetValidationCacheDataEXT(VkDevice device, VkValidationCacheEXT validationCache, size_t * pDataSize, void * pData)
vkGetValidationCacheDataEXT qword ?

; TYPEDEF VkDescriptorBindingFlagBitsEXT = VkDescriptorBindingFlagBits, TypeKind.ELABORATED

; TYPEDEF VkDescriptorBindingFlagsEXT = VkDescriptorBindingFlags, TypeKind.ELABORATED

; TYPEDEF VkDescriptorSetLayoutBindingFlagsCreateInfoEXT = VkDescriptorSetLayoutBindingFlagsCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceDescriptorIndexingFeaturesEXT = VkPhysicalDeviceDescriptorIndexingFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceDescriptorIndexingPropertiesEXT = VkPhysicalDeviceDescriptorIndexingProperties, TypeKind.ELABORATED

; TYPEDEF VkDescriptorSetVariableDescriptorCountAllocateInfoEXT = VkDescriptorSetVariableDescriptorCountAllocateInfo, TypeKind.ELABORATED

; TYPEDEF VkDescriptorSetVariableDescriptorCountLayoutSupportEXT = VkDescriptorSetVariableDescriptorCountLayoutSupport, TypeKind.ELABORATED

; enum VkShadingRatePaletteEntryNV {
    VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV equ 0
    VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV equ 1
    VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV equ 2
    VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV equ 3
    VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV equ 4
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV equ 5
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV equ 6
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV equ 7
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV equ 8
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV equ 9
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV equ 10
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV equ 11
    VK_SHADING_RATE_PALETTE_ENTRY_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkShadingRatePaletteEntryNV = enum VkShadingRatePaletteEntryNV, TypeKind.ELABORATED
VkShadingRatePaletteEntryNV typedef dword

; enum VkShadingRatePaletteEntryNV {
    VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV equ 0
    VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV equ 1
    VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV equ 2
    VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV equ 3
    VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV equ 4
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV equ 5
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV equ 6
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV equ 7
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV equ 8
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV equ 9
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV equ 10
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV equ 11
    VK_SHADING_RATE_PALETTE_ENTRY_MAX_ENUM_NV equ 2147483647
; }

; enum VkCoarseSampleOrderTypeNV {
    VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV equ 0
    VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV equ 1
    VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV equ 2
    VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV equ 3
    VK_COARSE_SAMPLE_ORDER_TYPE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkCoarseSampleOrderTypeNV = enum VkCoarseSampleOrderTypeNV, TypeKind.ELABORATED
VkCoarseSampleOrderTypeNV typedef dword

; enum VkCoarseSampleOrderTypeNV {
    VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV equ 0
    VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV equ 1
    VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV equ 2
    VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV equ 3
    VK_COARSE_SAMPLE_ORDER_TYPE_MAX_ENUM_NV equ 2147483647
; }

VkShadingRatePaletteNV struct
;   TypeKind.ELABORATED
;   name = shadingRatePaletteEntryCount, type = uint32_t, offset = 0, size = 4
    shadingRatePaletteEntryCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pShadingRatePaletteEntries, type = const VkShadingRatePaletteEntryNV *, offset = 8, size = 8
    pShadingRatePaletteEntries qword ?
VkShadingRatePaletteNV ends

; TYPEDEF VkShadingRatePaletteNV = struct VkShadingRatePaletteNV, TypeKind.ELABORATED
; remove struct typedef

VkShadingRatePaletteNV struct
;   TypeKind.ELABORATED
;   name = shadingRatePaletteEntryCount, type = uint32_t, offset = 0, size = 4
    shadingRatePaletteEntryCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pShadingRatePaletteEntries, type = const VkShadingRatePaletteEntryNV *, offset = 8, size = 8
    pShadingRatePaletteEntries qword ?
VkShadingRatePaletteNV ends

VkPipelineViewportShadingRateImageStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shadingRateImageEnable, type = VkBool32, offset = 16, size = 4
    shadingRateImageEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = viewportCount, type = uint32_t, offset = 20, size = 4
    viewportCount dword ?
;   TypeKind.POINTER
;   name = pShadingRatePalettes, type = const VkShadingRatePaletteNV *, offset = 24, size = 8
    pShadingRatePalettes qword ?
VkPipelineViewportShadingRateImageStateCreateInfoNV ends

; TYPEDEF VkPipelineViewportShadingRateImageStateCreateInfoNV = struct VkPipelineViewportShadingRateImageStateCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkPipelineViewportShadingRateImageStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shadingRateImageEnable, type = VkBool32, offset = 16, size = 4
    shadingRateImageEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = viewportCount, type = uint32_t, offset = 20, size = 4
    viewportCount dword ?
;   TypeKind.POINTER
;   name = pShadingRatePalettes, type = const VkShadingRatePaletteNV *, offset = 24, size = 8
    pShadingRatePalettes qword ?
VkPipelineViewportShadingRateImageStateCreateInfoNV ends

VkPhysicalDeviceShadingRateImageFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shadingRateImage, type = VkBool32, offset = 16, size = 4
    shadingRateImage VkBool32 <>
;   TypeKind.ELABORATED
;   name = shadingRateCoarseSampleOrder, type = VkBool32, offset = 20, size = 4
    shadingRateCoarseSampleOrder VkBool32 <>
VkPhysicalDeviceShadingRateImageFeaturesNV ends

; TYPEDEF VkPhysicalDeviceShadingRateImageFeaturesNV = struct VkPhysicalDeviceShadingRateImageFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShadingRateImageFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shadingRateImage, type = VkBool32, offset = 16, size = 4
    shadingRateImage VkBool32 <>
;   TypeKind.ELABORATED
;   name = shadingRateCoarseSampleOrder, type = VkBool32, offset = 20, size = 4
    shadingRateCoarseSampleOrder VkBool32 <>
VkPhysicalDeviceShadingRateImageFeaturesNV ends

VkPhysicalDeviceShadingRateImagePropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shadingRateTexelSize, type = VkExtent2D, offset = 16, size = 8
    shadingRateTexelSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = shadingRatePaletteSize, type = uint32_t, offset = 24, size = 4
    shadingRatePaletteSize dword ?
;   TypeKind.ELABORATED
;   name = shadingRateMaxCoarseSamples, type = uint32_t, offset = 28, size = 4
    shadingRateMaxCoarseSamples dword ?
VkPhysicalDeviceShadingRateImagePropertiesNV ends

; TYPEDEF VkPhysicalDeviceShadingRateImagePropertiesNV = struct VkPhysicalDeviceShadingRateImagePropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShadingRateImagePropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shadingRateTexelSize, type = VkExtent2D, offset = 16, size = 8
    shadingRateTexelSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = shadingRatePaletteSize, type = uint32_t, offset = 24, size = 4
    shadingRatePaletteSize dword ?
;   TypeKind.ELABORATED
;   name = shadingRateMaxCoarseSamples, type = uint32_t, offset = 28, size = 4
    shadingRateMaxCoarseSamples dword ?
VkPhysicalDeviceShadingRateImagePropertiesNV ends

VkCoarseSampleLocationNV struct
;   TypeKind.ELABORATED
;   name = pixelX, type = uint32_t, offset = 0, size = 4
    pixelX dword ?
;   TypeKind.ELABORATED
;   name = pixelY, type = uint32_t, offset = 4, size = 4
    pixelY dword ?
;   TypeKind.ELABORATED
;   name = sample, type = uint32_t, offset = 8, size = 4
    sample dword ?
VkCoarseSampleLocationNV ends

; TYPEDEF VkCoarseSampleLocationNV = struct VkCoarseSampleLocationNV, TypeKind.ELABORATED
; remove struct typedef

VkCoarseSampleLocationNV struct
;   TypeKind.ELABORATED
;   name = pixelX, type = uint32_t, offset = 0, size = 4
    pixelX dword ?
;   TypeKind.ELABORATED
;   name = pixelY, type = uint32_t, offset = 4, size = 4
    pixelY dword ?
;   TypeKind.ELABORATED
;   name = sample, type = uint32_t, offset = 8, size = 4
    sample dword ?
VkCoarseSampleLocationNV ends

VkCoarseSampleOrderCustomNV struct
;   TypeKind.ELABORATED
;   name = shadingRate, type = VkShadingRatePaletteEntryNV, offset = 0, size = 4
    shadingRate VkShadingRatePaletteEntryNV <>
;   TypeKind.ELABORATED
;   name = sampleCount, type = uint32_t, offset = 4, size = 4
    sampleCount dword ?
;   TypeKind.ELABORATED
;   name = sampleLocationCount, type = uint32_t, offset = 8, size = 4
    sampleLocationCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSampleLocations, type = const VkCoarseSampleLocationNV *, offset = 16, size = 8
    pSampleLocations qword ?
VkCoarseSampleOrderCustomNV ends

; TYPEDEF VkCoarseSampleOrderCustomNV = struct VkCoarseSampleOrderCustomNV, TypeKind.ELABORATED
; remove struct typedef

VkCoarseSampleOrderCustomNV struct
;   TypeKind.ELABORATED
;   name = shadingRate, type = VkShadingRatePaletteEntryNV, offset = 0, size = 4
    shadingRate VkShadingRatePaletteEntryNV <>
;   TypeKind.ELABORATED
;   name = sampleCount, type = uint32_t, offset = 4, size = 4
    sampleCount dword ?
;   TypeKind.ELABORATED
;   name = sampleLocationCount, type = uint32_t, offset = 8, size = 4
    sampleLocationCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSampleLocations, type = const VkCoarseSampleLocationNV *, offset = 16, size = 8
    pSampleLocations qword ?
VkCoarseSampleOrderCustomNV ends

VkPipelineViewportCoarseSampleOrderStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampleOrderType, type = VkCoarseSampleOrderTypeNV, offset = 16, size = 4
    sampleOrderType VkCoarseSampleOrderTypeNV <>
;   TypeKind.ELABORATED
;   name = customSampleOrderCount, type = uint32_t, offset = 20, size = 4
    customSampleOrderCount dword ?
;   TypeKind.POINTER
;   name = pCustomSampleOrders, type = const VkCoarseSampleOrderCustomNV *, offset = 24, size = 8
    pCustomSampleOrders qword ?
VkPipelineViewportCoarseSampleOrderStateCreateInfoNV ends

; TYPEDEF VkPipelineViewportCoarseSampleOrderStateCreateInfoNV = struct VkPipelineViewportCoarseSampleOrderStateCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkPipelineViewportCoarseSampleOrderStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampleOrderType, type = VkCoarseSampleOrderTypeNV, offset = 16, size = 4
    sampleOrderType VkCoarseSampleOrderTypeNV <>
;   TypeKind.ELABORATED
;   name = customSampleOrderCount, type = uint32_t, offset = 20, size = 4
    customSampleOrderCount dword ?
;   TypeKind.POINTER
;   name = pCustomSampleOrders, type = const VkCoarseSampleOrderCustomNV *, offset = 24, size = 8
    pCustomSampleOrders qword ?
VkPipelineViewportCoarseSampleOrderStateCreateInfoNV ends

; TYPEDEF PFN_vkCmdBindShadingRateImageNV = void (*)(VkCommandBuffer, VkImageView, VkImageLayout) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindShadingRateImageNV typedef qword

; TYPEDEF PFN_vkCmdSetViewportShadingRatePaletteNV = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkShadingRatePaletteNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetViewportShadingRatePaletteNV typedef qword

; TYPEDEF PFN_vkCmdSetCoarseSampleOrderNV = void (*)(VkCommandBuffer, VkCoarseSampleOrderTypeNV, uint32_t, const VkCoarseSampleOrderCustomNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetCoarseSampleOrderNV typedef qword

; void vkCmdBindShadingRateImageNV(VkCommandBuffer commandBuffer, VkImageView imageView, VkImageLayout imageLayout)
vkCmdBindShadingRateImageNV qword ?

; void vkCmdSetViewportShadingRatePaletteNV(VkCommandBuffer commandBuffer, uint32_t firstViewport, uint32_t viewportCount, const VkShadingRatePaletteNV * pShadingRatePalettes)
vkCmdSetViewportShadingRatePaletteNV qword ?

; void vkCmdSetCoarseSampleOrderNV(VkCommandBuffer commandBuffer, VkCoarseSampleOrderTypeNV sampleOrderType, uint32_t customSampleOrderCount, const VkCoarseSampleOrderCustomNV * pCustomSampleOrders)
vkCmdSetCoarseSampleOrderNV qword ?

; TYPEDEF VkAccelerationStructureNV = struct VkAccelerationStructureNV_T *, TypeKind.POINTER
VkAccelerationStructureNV typedef qword

; enum VkRayTracingShaderGroupTypeKHR {
    VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR equ 0
    VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR equ 1
    VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR equ 2
    VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV equ 0
    VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV equ 1
    VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV equ 2
    VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkRayTracingShaderGroupTypeKHR = enum VkRayTracingShaderGroupTypeKHR, TypeKind.ELABORATED
VkRayTracingShaderGroupTypeKHR typedef dword

; enum VkRayTracingShaderGroupTypeKHR {
    VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR equ 0
    VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR equ 1
    VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR equ 2
    VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV equ 0
    VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV equ 1
    VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV equ 2
    VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkRayTracingShaderGroupTypeNV = VkRayTracingShaderGroupTypeKHR, TypeKind.ELABORATED

; enum VkGeometryTypeKHR {
    VK_GEOMETRY_TYPE_TRIANGLES_KHR equ 0
    VK_GEOMETRY_TYPE_AABBS_KHR equ 1
    VK_GEOMETRY_TYPE_INSTANCES_KHR equ 2
    VK_GEOMETRY_TYPE_TRIANGLES_NV equ 0
    VK_GEOMETRY_TYPE_AABBS_NV equ 1
    VK_GEOMETRY_TYPE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkGeometryTypeKHR = enum VkGeometryTypeKHR, TypeKind.ELABORATED
VkGeometryTypeKHR typedef dword

; enum VkGeometryTypeKHR {
    VK_GEOMETRY_TYPE_TRIANGLES_KHR equ 0
    VK_GEOMETRY_TYPE_AABBS_KHR equ 1
    VK_GEOMETRY_TYPE_INSTANCES_KHR equ 2
    VK_GEOMETRY_TYPE_TRIANGLES_NV equ 0
    VK_GEOMETRY_TYPE_AABBS_NV equ 1
    VK_GEOMETRY_TYPE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkGeometryTypeNV = VkGeometryTypeKHR, TypeKind.ELABORATED

; enum VkAccelerationStructureTypeKHR {
    VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR equ 0
    VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR equ 1
    VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR equ 2
    VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV equ 0
    VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV equ 1
    VK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkAccelerationStructureTypeKHR = enum VkAccelerationStructureTypeKHR, TypeKind.ELABORATED
VkAccelerationStructureTypeKHR typedef dword

; enum VkAccelerationStructureTypeKHR {
    VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR equ 0
    VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR equ 1
    VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR equ 2
    VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV equ 0
    VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV equ 1
    VK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkAccelerationStructureTypeNV = VkAccelerationStructureTypeKHR, TypeKind.ELABORATED

; enum VkCopyAccelerationStructureModeKHR {
    VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR equ 0
    VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR equ 1
    VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR equ 2
    VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR equ 3
    VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV equ 0
    VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV equ 1
    VK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkCopyAccelerationStructureModeKHR = enum VkCopyAccelerationStructureModeKHR, TypeKind.ELABORATED
VkCopyAccelerationStructureModeKHR typedef dword

; enum VkCopyAccelerationStructureModeKHR {
    VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR equ 0
    VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR equ 1
    VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR equ 2
    VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR equ 3
    VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV equ 0
    VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV equ 1
    VK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkCopyAccelerationStructureModeNV = VkCopyAccelerationStructureModeKHR, TypeKind.ELABORATED

; enum VkAccelerationStructureMemoryRequirementsTypeNV {
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV equ 0
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV equ 1
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV equ 2
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkAccelerationStructureMemoryRequirementsTypeNV = enum VkAccelerationStructureMemoryRequirementsTypeNV, TypeKind.ELABORATED
VkAccelerationStructureMemoryRequirementsTypeNV typedef dword

; enum VkAccelerationStructureMemoryRequirementsTypeNV {
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV equ 0
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV equ 1
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV equ 2
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_NV equ 2147483647
; }

; enum VkGeometryFlagBitsKHR {
    VK_GEOMETRY_OPAQUE_BIT_KHR equ 1
    VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR equ 2
    VK_GEOMETRY_OPAQUE_BIT_NV equ 1
    VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV equ 2
    VK_GEOMETRY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkGeometryFlagBitsKHR = enum VkGeometryFlagBitsKHR, TypeKind.ELABORATED
VkGeometryFlagBitsKHR typedef dword

; enum VkGeometryFlagBitsKHR {
    VK_GEOMETRY_OPAQUE_BIT_KHR equ 1
    VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR equ 2
    VK_GEOMETRY_OPAQUE_BIT_NV equ 1
    VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV equ 2
    VK_GEOMETRY_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkGeometryFlagsKHR = VkFlags, TypeKind.ELABORATED
VkGeometryFlagsKHR typedef dword

; TYPEDEF VkGeometryFlagsNV = VkGeometryFlagsKHR, TypeKind.ELABORATED

; TYPEDEF VkGeometryFlagBitsNV = VkGeometryFlagBitsKHR, TypeKind.ELABORATED

; enum VkGeometryInstanceFlagBitsKHR {
    VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR equ 1
    VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR equ 2
    VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR equ 4
    VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR equ 8
    VK_GEOMETRY_INSTANCE_FORCE_OPACITY_MICROMAP_2_STATE_EXT equ 16
    VK_GEOMETRY_INSTANCE_DISABLE_OPACITY_MICROMAPS_EXT equ 32
    VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR equ 2
    VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV equ 1
    VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV equ 2
    VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV equ 4
    VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV equ 8
    VK_GEOMETRY_INSTANCE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkGeometryInstanceFlagBitsKHR = enum VkGeometryInstanceFlagBitsKHR, TypeKind.ELABORATED
VkGeometryInstanceFlagBitsKHR typedef dword

; enum VkGeometryInstanceFlagBitsKHR {
    VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR equ 1
    VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR equ 2
    VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR equ 4
    VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR equ 8
    VK_GEOMETRY_INSTANCE_FORCE_OPACITY_MICROMAP_2_STATE_EXT equ 16
    VK_GEOMETRY_INSTANCE_DISABLE_OPACITY_MICROMAPS_EXT equ 32
    VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR equ 2
    VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV equ 1
    VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV equ 2
    VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV equ 4
    VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV equ 8
    VK_GEOMETRY_INSTANCE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkGeometryInstanceFlagsKHR = VkFlags, TypeKind.ELABORATED
VkGeometryInstanceFlagsKHR typedef dword

; TYPEDEF VkGeometryInstanceFlagsNV = VkGeometryInstanceFlagsKHR, TypeKind.ELABORATED

; TYPEDEF VkGeometryInstanceFlagBitsNV = VkGeometryInstanceFlagBitsKHR, TypeKind.ELABORATED

; enum VkBuildAccelerationStructureFlagBitsKHR {
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR equ 1
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR equ 2
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR equ 4
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR equ 8
    VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR equ 16
    VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV equ 32
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_OPACITY_MICROMAP_UPDATE_EXT equ 64
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_DISABLE_OPACITY_MICROMAPS_EXT equ 128
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_OPACITY_MICROMAP_DATA_UPDATE_EXT equ 256
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_DATA_ACCESS_KHR equ 2048
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV equ 1
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV equ 2
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV equ 4
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV equ 8
    VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV equ 16
    VK_BUILD_ACCELERATION_STRUCTURE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkBuildAccelerationStructureFlagBitsKHR = enum VkBuildAccelerationStructureFlagBitsKHR, TypeKind.ELABORATED
VkBuildAccelerationStructureFlagBitsKHR typedef dword

; enum VkBuildAccelerationStructureFlagBitsKHR {
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR equ 1
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR equ 2
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR equ 4
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR equ 8
    VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR equ 16
    VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV equ 32
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_OPACITY_MICROMAP_UPDATE_EXT equ 64
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_DISABLE_OPACITY_MICROMAPS_EXT equ 128
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_OPACITY_MICROMAP_DATA_UPDATE_EXT equ 256
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_DATA_ACCESS_KHR equ 2048
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV equ 1
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV equ 2
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV equ 4
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV equ 8
    VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV equ 16
    VK_BUILD_ACCELERATION_STRUCTURE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkBuildAccelerationStructureFlagsKHR = VkFlags, TypeKind.ELABORATED
VkBuildAccelerationStructureFlagsKHR typedef dword

; TYPEDEF VkBuildAccelerationStructureFlagsNV = VkBuildAccelerationStructureFlagsKHR, TypeKind.ELABORATED

; TYPEDEF VkBuildAccelerationStructureFlagBitsNV = VkBuildAccelerationStructureFlagBitsKHR, TypeKind.ELABORATED

VkRayTracingShaderGroupCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkRayTracingShaderGroupTypeKHR, offset = 16, size = 4
    __type VkRayTracingShaderGroupTypeKHR <>
;   TypeKind.ELABORATED
;   name = generalShader, type = uint32_t, offset = 20, size = 4
    generalShader dword ?
;   TypeKind.ELABORATED
;   name = closestHitShader, type = uint32_t, offset = 24, size = 4
    closestHitShader dword ?
;   TypeKind.ELABORATED
;   name = anyHitShader, type = uint32_t, offset = 28, size = 4
    anyHitShader dword ?
;   TypeKind.ELABORATED
;   name = intersectionShader, type = uint32_t, offset = 32, size = 4
    intersectionShader dword ?
VkRayTracingShaderGroupCreateInfoNV ends

; TYPEDEF VkRayTracingShaderGroupCreateInfoNV = struct VkRayTracingShaderGroupCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkRayTracingShaderGroupCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkRayTracingShaderGroupTypeKHR, offset = 16, size = 4
    __type VkRayTracingShaderGroupTypeKHR <>
;   TypeKind.ELABORATED
;   name = generalShader, type = uint32_t, offset = 20, size = 4
    generalShader dword ?
;   TypeKind.ELABORATED
;   name = closestHitShader, type = uint32_t, offset = 24, size = 4
    closestHitShader dword ?
;   TypeKind.ELABORATED
;   name = anyHitShader, type = uint32_t, offset = 28, size = 4
    anyHitShader dword ?
;   TypeKind.ELABORATED
;   name = intersectionShader, type = uint32_t, offset = 32, size = 4
    intersectionShader dword ?
VkRayTracingShaderGroupCreateInfoNV ends

VkRayTracingPipelineCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreateFlags, offset = 16, size = 4
    flags VkPipelineCreateFlags <>
;   TypeKind.ELABORATED
;   name = stageCount, type = uint32_t, offset = 20, size = 4
    stageCount dword ?
;   TypeKind.POINTER
;   name = pStages, type = const VkPipelineShaderStageCreateInfo *, offset = 24, size = 8
    pStages qword ?
;   TypeKind.ELABORATED
;   name = groupCount, type = uint32_t, offset = 32, size = 4
    groupCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pGroups, type = const VkRayTracingShaderGroupCreateInfoNV *, offset = 40, size = 8
    pGroups qword ?
;   TypeKind.ELABORATED
;   name = maxRecursionDepth, type = uint32_t, offset = 48, size = 4
    maxRecursionDepth dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 56, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = basePipelineHandle, type = VkPipeline, offset = 64, size = 8
    basePipelineHandle VkPipeline <>
;   TypeKind.ELABORATED
;   name = basePipelineIndex, type = int32_t, offset = 72, size = 4
    basePipelineIndex sdword ?
VkRayTracingPipelineCreateInfoNV ends

; TYPEDEF VkRayTracingPipelineCreateInfoNV = struct VkRayTracingPipelineCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkRayTracingPipelineCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreateFlags, offset = 16, size = 4
    flags VkPipelineCreateFlags <>
;   TypeKind.ELABORATED
;   name = stageCount, type = uint32_t, offset = 20, size = 4
    stageCount dword ?
;   TypeKind.POINTER
;   name = pStages, type = const VkPipelineShaderStageCreateInfo *, offset = 24, size = 8
    pStages qword ?
;   TypeKind.ELABORATED
;   name = groupCount, type = uint32_t, offset = 32, size = 4
    groupCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pGroups, type = const VkRayTracingShaderGroupCreateInfoNV *, offset = 40, size = 8
    pGroups qword ?
;   TypeKind.ELABORATED
;   name = maxRecursionDepth, type = uint32_t, offset = 48, size = 4
    maxRecursionDepth dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 56, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = basePipelineHandle, type = VkPipeline, offset = 64, size = 8
    basePipelineHandle VkPipeline <>
;   TypeKind.ELABORATED
;   name = basePipelineIndex, type = int32_t, offset = 72, size = 4
    basePipelineIndex sdword ?
VkRayTracingPipelineCreateInfoNV ends

VkGeometryTrianglesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexData, type = VkBuffer, offset = 16, size = 8
    vertexData VkBuffer <>
;   TypeKind.ELABORATED
;   name = vertexOffset, type = VkDeviceSize, offset = 24, size = 8
    vertexOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = vertexCount, type = uint32_t, offset = 32, size = 4
    vertexCount dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = vertexStride, type = VkDeviceSize, offset = 40, size = 8
    vertexStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = vertexFormat, type = VkFormat, offset = 48, size = 4
    vertexFormat VkFormat <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = indexData, type = VkBuffer, offset = 56, size = 8
    indexData VkBuffer <>
;   TypeKind.ELABORATED
;   name = indexOffset, type = VkDeviceSize, offset = 64, size = 8
    indexOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = indexCount, type = uint32_t, offset = 72, size = 4
    indexCount dword ?
;   TypeKind.ELABORATED
;   name = indexType, type = VkIndexType, offset = 76, size = 4
    indexType VkIndexType <>
;   TypeKind.ELABORATED
;   name = transformData, type = VkBuffer, offset = 80, size = 8
    transformData VkBuffer <>
;   TypeKind.ELABORATED
;   name = transformOffset, type = VkDeviceSize, offset = 88, size = 8
    transformOffset VkDeviceSize <>
VkGeometryTrianglesNV ends

; TYPEDEF VkGeometryTrianglesNV = struct VkGeometryTrianglesNV, TypeKind.ELABORATED
; remove struct typedef

VkGeometryTrianglesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexData, type = VkBuffer, offset = 16, size = 8
    vertexData VkBuffer <>
;   TypeKind.ELABORATED
;   name = vertexOffset, type = VkDeviceSize, offset = 24, size = 8
    vertexOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = vertexCount, type = uint32_t, offset = 32, size = 4
    vertexCount dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = vertexStride, type = VkDeviceSize, offset = 40, size = 8
    vertexStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = vertexFormat, type = VkFormat, offset = 48, size = 4
    vertexFormat VkFormat <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = indexData, type = VkBuffer, offset = 56, size = 8
    indexData VkBuffer <>
;   TypeKind.ELABORATED
;   name = indexOffset, type = VkDeviceSize, offset = 64, size = 8
    indexOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = indexCount, type = uint32_t, offset = 72, size = 4
    indexCount dword ?
;   TypeKind.ELABORATED
;   name = indexType, type = VkIndexType, offset = 76, size = 4
    indexType VkIndexType <>
;   TypeKind.ELABORATED
;   name = transformData, type = VkBuffer, offset = 80, size = 8
    transformData VkBuffer <>
;   TypeKind.ELABORATED
;   name = transformOffset, type = VkDeviceSize, offset = 88, size = 8
    transformOffset VkDeviceSize <>
VkGeometryTrianglesNV ends

VkGeometryAABBNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = aabbData, type = VkBuffer, offset = 16, size = 8
    aabbData VkBuffer <>
;   TypeKind.ELABORATED
;   name = numAABBs, type = uint32_t, offset = 24, size = 4
    numAABBs dword ?
;   TypeKind.ELABORATED
;   name = stride, type = uint32_t, offset = 28, size = 4
    stride dword ?
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 32, size = 8
    _offset VkDeviceSize <>
VkGeometryAABBNV ends

; TYPEDEF VkGeometryAABBNV = struct VkGeometryAABBNV, TypeKind.ELABORATED
; remove struct typedef

VkGeometryAABBNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = aabbData, type = VkBuffer, offset = 16, size = 8
    aabbData VkBuffer <>
;   TypeKind.ELABORATED
;   name = numAABBs, type = uint32_t, offset = 24, size = 4
    numAABBs dword ?
;   TypeKind.ELABORATED
;   name = stride, type = uint32_t, offset = 28, size = 4
    stride dword ?
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 32, size = 8
    _offset VkDeviceSize <>
VkGeometryAABBNV ends

VkGeometryDataNV struct
;   TypeKind.ELABORATED
;   name = triangles, type = VkGeometryTrianglesNV, offset = 0, size = 96
    triangles VkGeometryTrianglesNV <>
;   TypeKind.ELABORATED
;   name = aabbs, type = VkGeometryAABBNV, offset = 96, size = 40
    aabbs VkGeometryAABBNV <>
VkGeometryDataNV ends

; TYPEDEF VkGeometryDataNV = struct VkGeometryDataNV, TypeKind.ELABORATED
; remove struct typedef

VkGeometryDataNV struct
;   TypeKind.ELABORATED
;   name = triangles, type = VkGeometryTrianglesNV, offset = 0, size = 96
    triangles VkGeometryTrianglesNV <>
;   TypeKind.ELABORATED
;   name = aabbs, type = VkGeometryAABBNV, offset = 96, size = 40
    aabbs VkGeometryAABBNV <>
VkGeometryDataNV ends

VkGeometryNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = geometryType, type = VkGeometryTypeKHR, offset = 16, size = 4
    geometryType VkGeometryTypeKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = geometry, type = VkGeometryDataNV, offset = 24, size = 136
    geometry VkGeometryDataNV <>
;   TypeKind.ELABORATED
;   name = flags, type = VkGeometryFlagsKHR, offset = 160, size = 4
    flags VkGeometryFlagsKHR <>
VkGeometryNV ends

; TYPEDEF VkGeometryNV = struct VkGeometryNV, TypeKind.ELABORATED
; remove struct typedef

VkGeometryNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = geometryType, type = VkGeometryTypeKHR, offset = 16, size = 4
    geometryType VkGeometryTypeKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = geometry, type = VkGeometryDataNV, offset = 24, size = 136
    geometry VkGeometryDataNV <>
;   TypeKind.ELABORATED
;   name = flags, type = VkGeometryFlagsKHR, offset = 160, size = 4
    flags VkGeometryFlagsKHR <>
VkGeometryNV ends

VkAccelerationStructureInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkAccelerationStructureTypeNV, offset = 16, size = 4
    __type VkAccelerationStructureTypeNV <>
;   TypeKind.ELABORATED
;   name = flags, type = VkBuildAccelerationStructureFlagsNV, offset = 20, size = 4
    flags VkBuildAccelerationStructureFlagsNV <>
;   TypeKind.ELABORATED
;   name = instanceCount, type = uint32_t, offset = 24, size = 4
    instanceCount dword ?
;   TypeKind.ELABORATED
;   name = geometryCount, type = uint32_t, offset = 28, size = 4
    geometryCount dword ?
;   TypeKind.POINTER
;   name = pGeometries, type = const VkGeometryNV *, offset = 32, size = 8
    pGeometries qword ?
VkAccelerationStructureInfoNV ends

; TYPEDEF VkAccelerationStructureInfoNV = struct VkAccelerationStructureInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkAccelerationStructureTypeNV, offset = 16, size = 4
    __type VkAccelerationStructureTypeNV <>
;   TypeKind.ELABORATED
;   name = flags, type = VkBuildAccelerationStructureFlagsNV, offset = 20, size = 4
    flags VkBuildAccelerationStructureFlagsNV <>
;   TypeKind.ELABORATED
;   name = instanceCount, type = uint32_t, offset = 24, size = 4
    instanceCount dword ?
;   TypeKind.ELABORATED
;   name = geometryCount, type = uint32_t, offset = 28, size = 4
    geometryCount dword ?
;   TypeKind.POINTER
;   name = pGeometries, type = const VkGeometryNV *, offset = 32, size = 8
    pGeometries qword ?
VkAccelerationStructureInfoNV ends

VkAccelerationStructureCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = compactedSize, type = VkDeviceSize, offset = 16, size = 8
    compactedSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = info, type = VkAccelerationStructureInfoNV, offset = 24, size = 40
    info VkAccelerationStructureInfoNV <>
VkAccelerationStructureCreateInfoNV ends

; TYPEDEF VkAccelerationStructureCreateInfoNV = struct VkAccelerationStructureCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = compactedSize, type = VkDeviceSize, offset = 16, size = 8
    compactedSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = info, type = VkAccelerationStructureInfoNV, offset = 24, size = 40
    info VkAccelerationStructureInfoNV <>
VkAccelerationStructureCreateInfoNV ends

VkBindAccelerationStructureMemoryInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructure, type = VkAccelerationStructureNV, offset = 16, size = 8
    accelerationStructure VkAccelerationStructureNV <>
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 32, size = 8
    memoryOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = deviceIndexCount, type = uint32_t, offset = 40, size = 4
    deviceIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDeviceIndices, type = const uint32_t *, offset = 48, size = 8
    pDeviceIndices qword ?
VkBindAccelerationStructureMemoryInfoNV ends

; TYPEDEF VkBindAccelerationStructureMemoryInfoNV = struct VkBindAccelerationStructureMemoryInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkBindAccelerationStructureMemoryInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructure, type = VkAccelerationStructureNV, offset = 16, size = 8
    accelerationStructure VkAccelerationStructureNV <>
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 24, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = memoryOffset, type = VkDeviceSize, offset = 32, size = 8
    memoryOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = deviceIndexCount, type = uint32_t, offset = 40, size = 4
    deviceIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDeviceIndices, type = const uint32_t *, offset = 48, size = 8
    pDeviceIndices qword ?
VkBindAccelerationStructureMemoryInfoNV ends

VkWriteDescriptorSetAccelerationStructureNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructureCount, type = uint32_t, offset = 16, size = 4
    accelerationStructureCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAccelerationStructures, type = const VkAccelerationStructureNV *, offset = 24, size = 8
    pAccelerationStructures qword ?
VkWriteDescriptorSetAccelerationStructureNV ends

; TYPEDEF VkWriteDescriptorSetAccelerationStructureNV = struct VkWriteDescriptorSetAccelerationStructureNV, TypeKind.ELABORATED
; remove struct typedef

VkWriteDescriptorSetAccelerationStructureNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructureCount, type = uint32_t, offset = 16, size = 4
    accelerationStructureCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAccelerationStructures, type = const VkAccelerationStructureNV *, offset = 24, size = 8
    pAccelerationStructures qword ?
VkWriteDescriptorSetAccelerationStructureNV ends

VkAccelerationStructureMemoryRequirementsInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkAccelerationStructureMemoryRequirementsTypeNV, offset = 16, size = 4
    __type VkAccelerationStructureMemoryRequirementsTypeNV <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = accelerationStructure, type = VkAccelerationStructureNV, offset = 24, size = 8
    accelerationStructure VkAccelerationStructureNV <>
VkAccelerationStructureMemoryRequirementsInfoNV ends

; TYPEDEF VkAccelerationStructureMemoryRequirementsInfoNV = struct VkAccelerationStructureMemoryRequirementsInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureMemoryRequirementsInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkAccelerationStructureMemoryRequirementsTypeNV, offset = 16, size = 4
    __type VkAccelerationStructureMemoryRequirementsTypeNV <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = accelerationStructure, type = VkAccelerationStructureNV, offset = 24, size = 8
    accelerationStructure VkAccelerationStructureNV <>
VkAccelerationStructureMemoryRequirementsInfoNV ends

VkPhysicalDeviceRayTracingPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderGroupHandleSize, type = uint32_t, offset = 16, size = 4
    shaderGroupHandleSize dword ?
;   TypeKind.ELABORATED
;   name = maxRecursionDepth, type = uint32_t, offset = 20, size = 4
    maxRecursionDepth dword ?
;   TypeKind.ELABORATED
;   name = maxShaderGroupStride, type = uint32_t, offset = 24, size = 4
    maxShaderGroupStride dword ?
;   TypeKind.ELABORATED
;   name = shaderGroupBaseAlignment, type = uint32_t, offset = 28, size = 4
    shaderGroupBaseAlignment dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryCount, type = uint64_t, offset = 32, size = 8
    maxGeometryCount qword ?
;   TypeKind.ELABORATED
;   name = maxInstanceCount, type = uint64_t, offset = 40, size = 8
    maxInstanceCount qword ?
;   TypeKind.ELABORATED
;   name = maxTriangleCount, type = uint64_t, offset = 48, size = 8
    maxTriangleCount qword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetAccelerationStructures, type = uint32_t, offset = 56, size = 4
    maxDescriptorSetAccelerationStructures dword ?
VkPhysicalDeviceRayTracingPropertiesNV ends

; TYPEDEF VkPhysicalDeviceRayTracingPropertiesNV = struct VkPhysicalDeviceRayTracingPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRayTracingPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderGroupHandleSize, type = uint32_t, offset = 16, size = 4
    shaderGroupHandleSize dword ?
;   TypeKind.ELABORATED
;   name = maxRecursionDepth, type = uint32_t, offset = 20, size = 4
    maxRecursionDepth dword ?
;   TypeKind.ELABORATED
;   name = maxShaderGroupStride, type = uint32_t, offset = 24, size = 4
    maxShaderGroupStride dword ?
;   TypeKind.ELABORATED
;   name = shaderGroupBaseAlignment, type = uint32_t, offset = 28, size = 4
    shaderGroupBaseAlignment dword ?
;   TypeKind.ELABORATED
;   name = maxGeometryCount, type = uint64_t, offset = 32, size = 8
    maxGeometryCount qword ?
;   TypeKind.ELABORATED
;   name = maxInstanceCount, type = uint64_t, offset = 40, size = 8
    maxInstanceCount qword ?
;   TypeKind.ELABORATED
;   name = maxTriangleCount, type = uint64_t, offset = 48, size = 8
    maxTriangleCount qword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetAccelerationStructures, type = uint32_t, offset = 56, size = 4
    maxDescriptorSetAccelerationStructures dword ?
VkPhysicalDeviceRayTracingPropertiesNV ends

VkTransformMatrixKHR struct
;   TypeKind.CONSTANTARRAY
;   name = matrix, type = float[3][4], offset = 0, size = 48
    matrix real4 12 dup(?)
VkTransformMatrixKHR ends

; TYPEDEF VkTransformMatrixKHR = struct VkTransformMatrixKHR, TypeKind.ELABORATED
; remove struct typedef

VkTransformMatrixKHR struct
;   TypeKind.CONSTANTARRAY
;   name = matrix, type = float[3][4], offset = 0, size = 48
    matrix real4 12 dup(?)
VkTransformMatrixKHR ends

; TYPEDEF VkTransformMatrixNV = VkTransformMatrixKHR, TypeKind.ELABORATED

VkAabbPositionsKHR struct
;   TypeKind.FLOAT
;   name = minX, type = float, offset = 0, size = 4
    minX real4 ?
;   TypeKind.FLOAT
;   name = minY, type = float, offset = 4, size = 4
    minY real4 ?
;   TypeKind.FLOAT
;   name = minZ, type = float, offset = 8, size = 4
    minZ real4 ?
;   TypeKind.FLOAT
;   name = maxX, type = float, offset = 12, size = 4
    maxX real4 ?
;   TypeKind.FLOAT
;   name = maxY, type = float, offset = 16, size = 4
    maxY real4 ?
;   TypeKind.FLOAT
;   name = maxZ, type = float, offset = 20, size = 4
    maxZ real4 ?
VkAabbPositionsKHR ends

; TYPEDEF VkAabbPositionsKHR = struct VkAabbPositionsKHR, TypeKind.ELABORATED
; remove struct typedef

VkAabbPositionsKHR struct
;   TypeKind.FLOAT
;   name = minX, type = float, offset = 0, size = 4
    minX real4 ?
;   TypeKind.FLOAT
;   name = minY, type = float, offset = 4, size = 4
    minY real4 ?
;   TypeKind.FLOAT
;   name = minZ, type = float, offset = 8, size = 4
    minZ real4 ?
;   TypeKind.FLOAT
;   name = maxX, type = float, offset = 12, size = 4
    maxX real4 ?
;   TypeKind.FLOAT
;   name = maxY, type = float, offset = 16, size = 4
    maxY real4 ?
;   TypeKind.FLOAT
;   name = maxZ, type = float, offset = 20, size = 4
    maxZ real4 ?
VkAabbPositionsKHR ends

; TYPEDEF VkAabbPositionsNV = VkAabbPositionsKHR, TypeKind.ELABORATED

VkAccelerationStructureInstanceKHR struct
;   TypeKind.ELABORATED
;   name = transform, type = VkTransformMatrixKHR, offset = 0, size = 48
    transform VkTransformMatrixKHR <>
;   TypeKind.ELABORATED
;   name = instanceCustomIndex, type = uint32_t, offset = 48, size = 4
    instanceCustomIndex dword ?
;   TypeKind.ELABORATED
;   name = mask, type = uint32_t, offset = 51, size = 4
    _mask dword ?
;   TypeKind.ELABORATED
;   name = instanceShaderBindingTableRecordOffset, type = uint32_t, offset = 52, size = 4
    instanceShaderBindingTableRecordOffset dword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkGeometryInstanceFlagsKHR, offset = 55, size = 4
    flags VkGeometryInstanceFlagsKHR <>
;   TypeKind.ELABORATED
;   name = accelerationStructureReference, type = uint64_t, offset = 56, size = 8
    accelerationStructureReference qword ?
VkAccelerationStructureInstanceKHR ends

; TYPEDEF VkAccelerationStructureInstanceKHR = struct VkAccelerationStructureInstanceKHR, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureInstanceKHR struct
;   TypeKind.ELABORATED
;   name = transform, type = VkTransformMatrixKHR, offset = 0, size = 48
    transform VkTransformMatrixKHR <>
;   TypeKind.ELABORATED
;   name = instanceCustomIndex, type = uint32_t, offset = 48, size = 4
    instanceCustomIndex dword ?
;   TypeKind.ELABORATED
;   name = mask, type = uint32_t, offset = 51, size = 4
    _mask dword ?
;   TypeKind.ELABORATED
;   name = instanceShaderBindingTableRecordOffset, type = uint32_t, offset = 52, size = 4
    instanceShaderBindingTableRecordOffset dword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkGeometryInstanceFlagsKHR, offset = 55, size = 4
    flags VkGeometryInstanceFlagsKHR <>
;   TypeKind.ELABORATED
;   name = accelerationStructureReference, type = uint64_t, offset = 56, size = 8
    accelerationStructureReference qword ?
VkAccelerationStructureInstanceKHR ends

; TYPEDEF VkAccelerationStructureInstanceNV = VkAccelerationStructureInstanceKHR, TypeKind.ELABORATED

; TYPEDEF PFN_vkCreateAccelerationStructureNV = VkResult (*)(VkDevice, const VkAccelerationStructureCreateInfoNV *, const VkAllocationCallbacks *, VkAccelerationStructureNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateAccelerationStructureNV typedef qword

; TYPEDEF PFN_vkDestroyAccelerationStructureNV = void (*)(VkDevice, VkAccelerationStructureNV, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyAccelerationStructureNV typedef qword

; TYPEDEF PFN_vkGetAccelerationStructureMemoryRequirementsNV = void (*)(VkDevice, const VkAccelerationStructureMemoryRequirementsInfoNV *, VkMemoryRequirements2KHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetAccelerationStructureMemoryRequirementsNV typedef qword

; TYPEDEF PFN_vkBindAccelerationStructureMemoryNV = VkResult (*)(VkDevice, uint32_t, const VkBindAccelerationStructureMemoryInfoNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBindAccelerationStructureMemoryNV typedef qword

; TYPEDEF PFN_vkCmdBuildAccelerationStructureNV = void (*)(VkCommandBuffer, const VkAccelerationStructureInfoNV *, VkBuffer, VkDeviceSize, VkBool32, VkAccelerationStructureNV, VkAccelerationStructureNV, VkBuffer, VkDeviceSize) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBuildAccelerationStructureNV typedef qword

; TYPEDEF PFN_vkCmdCopyAccelerationStructureNV = void (*)(VkCommandBuffer, VkAccelerationStructureNV, VkAccelerationStructureNV, VkCopyAccelerationStructureModeKHR) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyAccelerationStructureNV typedef qword

; TYPEDEF PFN_vkCmdTraceRaysNV = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, VkDeviceSize, VkBuffer, VkDeviceSize, VkDeviceSize, VkBuffer, VkDeviceSize, VkDeviceSize, uint32_t, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdTraceRaysNV typedef qword

; TYPEDEF PFN_vkCreateRayTracingPipelinesNV = VkResult (*)(VkDevice, VkPipelineCache, uint32_t, const VkRayTracingPipelineCreateInfoNV *, const VkAllocationCallbacks *, VkPipeline *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateRayTracingPipelinesNV typedef qword

; TYPEDEF PFN_vkGetRayTracingShaderGroupHandlesKHR = VkResult (*)(VkDevice, VkPipeline, uint32_t, uint32_t, size_t, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetRayTracingShaderGroupHandlesKHR typedef qword

; TYPEDEF PFN_vkGetRayTracingShaderGroupHandlesNV = VkResult (*)(VkDevice, VkPipeline, uint32_t, uint32_t, size_t, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetRayTracingShaderGroupHandlesNV typedef qword

; TYPEDEF PFN_vkGetAccelerationStructureHandleNV = VkResult (*)(VkDevice, VkAccelerationStructureNV, size_t, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetAccelerationStructureHandleNV typedef qword

; TYPEDEF PFN_vkCmdWriteAccelerationStructuresPropertiesNV = void (*)(VkCommandBuffer, uint32_t, const VkAccelerationStructureNV *, VkQueryType, VkQueryPool, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdWriteAccelerationStructuresPropertiesNV typedef qword

; TYPEDEF PFN_vkCompileDeferredNV = VkResult (*)(VkDevice, VkPipeline, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCompileDeferredNV typedef qword

; VkResult vkCreateAccelerationStructureNV(VkDevice device, const VkAccelerationStructureCreateInfoNV * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkAccelerationStructureNV * pAccelerationStructure)
vkCreateAccelerationStructureNV qword ?

; void vkDestroyAccelerationStructureNV(VkDevice device, VkAccelerationStructureNV accelerationStructure, const VkAllocationCallbacks * pAllocator)
vkDestroyAccelerationStructureNV qword ?

; void vkGetAccelerationStructureMemoryRequirementsNV(VkDevice device, const VkAccelerationStructureMemoryRequirementsInfoNV * pInfo, VkMemoryRequirements2KHR * pMemoryRequirements)
vkGetAccelerationStructureMemoryRequirementsNV qword ?

; VkResult vkBindAccelerationStructureMemoryNV(VkDevice device, uint32_t bindInfoCount, const VkBindAccelerationStructureMemoryInfoNV * pBindInfos)
vkBindAccelerationStructureMemoryNV qword ?

; void vkCmdBuildAccelerationStructureNV(VkCommandBuffer commandBuffer, const VkAccelerationStructureInfoNV * pInfo, VkBuffer instanceData, VkDeviceSize instanceOffset, VkBool32 update, VkAccelerationStructureNV dst, VkAccelerationStructureNV src, VkBuffer scratch, VkDeviceSize scratchOffset)
vkCmdBuildAccelerationStructureNV qword ?

; void vkCmdCopyAccelerationStructureNV(VkCommandBuffer commandBuffer, VkAccelerationStructureNV dst, VkAccelerationStructureNV src, VkCopyAccelerationStructureModeKHR mode)
vkCmdCopyAccelerationStructureNV qword ?

; void vkCmdTraceRaysNV(VkCommandBuffer commandBuffer, VkBuffer raygenShaderBindingTableBuffer, VkDeviceSize raygenShaderBindingOffset, VkBuffer missShaderBindingTableBuffer, VkDeviceSize missShaderBindingOffset, VkDeviceSize missShaderBindingStride, VkBuffer hitShaderBindingTableBuffer, VkDeviceSize hitShaderBindingOffset, VkDeviceSize hitShaderBindingStride, VkBuffer callableShaderBindingTableBuffer, VkDeviceSize callableShaderBindingOffset, VkDeviceSize callableShaderBindingStride, uint32_t width, uint32_t height, uint32_t depth)
vkCmdTraceRaysNV qword ?

; VkResult vkCreateRayTracingPipelinesNV(VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkRayTracingPipelineCreateInfoNV * pCreateInfos, const VkAllocationCallbacks * pAllocator, VkPipeline * pPipelines)
vkCreateRayTracingPipelinesNV qword ?

; VkResult vkGetRayTracingShaderGroupHandlesKHR(VkDevice device, VkPipeline pipeline, uint32_t firstGroup, uint32_t groupCount, size_t dataSize, void * pData)
vkGetRayTracingShaderGroupHandlesKHR qword ?

; VkResult vkGetRayTracingShaderGroupHandlesNV(VkDevice device, VkPipeline pipeline, uint32_t firstGroup, uint32_t groupCount, size_t dataSize, void * pData)
vkGetRayTracingShaderGroupHandlesNV qword ?

; VkResult vkGetAccelerationStructureHandleNV(VkDevice device, VkAccelerationStructureNV accelerationStructure, size_t dataSize, void * pData)
vkGetAccelerationStructureHandleNV qword ?

; void vkCmdWriteAccelerationStructuresPropertiesNV(VkCommandBuffer commandBuffer, uint32_t accelerationStructureCount, const VkAccelerationStructureNV * pAccelerationStructures, VkQueryType queryType, VkQueryPool queryPool, uint32_t firstQuery)
vkCmdWriteAccelerationStructuresPropertiesNV qword ?

; VkResult vkCompileDeferredNV(VkDevice device, VkPipeline pipeline, uint32_t shader)
vkCompileDeferredNV qword ?

VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = representativeFragmentTest, type = VkBool32, offset = 16, size = 4
    representativeFragmentTest VkBool32 <>
VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV ends

; TYPEDEF VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV = struct VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = representativeFragmentTest, type = VkBool32, offset = 16, size = 4
    representativeFragmentTest VkBool32 <>
VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV ends

VkPipelineRepresentativeFragmentTestStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = representativeFragmentTestEnable, type = VkBool32, offset = 16, size = 4
    representativeFragmentTestEnable VkBool32 <>
VkPipelineRepresentativeFragmentTestStateCreateInfoNV ends

; TYPEDEF VkPipelineRepresentativeFragmentTestStateCreateInfoNV = struct VkPipelineRepresentativeFragmentTestStateCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkPipelineRepresentativeFragmentTestStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = representativeFragmentTestEnable, type = VkBool32, offset = 16, size = 4
    representativeFragmentTestEnable VkBool32 <>
VkPipelineRepresentativeFragmentTestStateCreateInfoNV ends

VkPhysicalDeviceImageViewImageFormatInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageViewType, type = VkImageViewType, offset = 16, size = 4
    imageViewType VkImageViewType <>
VkPhysicalDeviceImageViewImageFormatInfoEXT ends

; TYPEDEF VkPhysicalDeviceImageViewImageFormatInfoEXT = struct VkPhysicalDeviceImageViewImageFormatInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageViewImageFormatInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageViewType, type = VkImageViewType, offset = 16, size = 4
    imageViewType VkImageViewType <>
VkPhysicalDeviceImageViewImageFormatInfoEXT ends

VkFilterCubicImageViewImageFormatPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = filterCubic, type = VkBool32, offset = 16, size = 4
    filterCubic VkBool32 <>
;   TypeKind.ELABORATED
;   name = filterCubicMinmax, type = VkBool32, offset = 20, size = 4
    filterCubicMinmax VkBool32 <>
VkFilterCubicImageViewImageFormatPropertiesEXT ends

; TYPEDEF VkFilterCubicImageViewImageFormatPropertiesEXT = struct VkFilterCubicImageViewImageFormatPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkFilterCubicImageViewImageFormatPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = filterCubic, type = VkBool32, offset = 16, size = 4
    filterCubic VkBool32 <>
;   TypeKind.ELABORATED
;   name = filterCubicMinmax, type = VkBool32, offset = 20, size = 4
    filterCubicMinmax VkBool32 <>
VkFilterCubicImageViewImageFormatPropertiesEXT ends

; TYPEDEF VkQueueGlobalPriorityEXT = VkQueueGlobalPriorityKHR, TypeKind.ELABORATED

; TYPEDEF VkDeviceQueueGlobalPriorityCreateInfoEXT = VkDeviceQueueGlobalPriorityCreateInfoKHR, TypeKind.ELABORATED

VkImportMemoryHostPointerInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 16, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pHostPointer, type = void *, offset = 24, size = 8
    pHostPointer qword ?
VkImportMemoryHostPointerInfoEXT ends

; TYPEDEF VkImportMemoryHostPointerInfoEXT = struct VkImportMemoryHostPointerInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkImportMemoryHostPointerInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 16, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pHostPointer, type = void *, offset = 24, size = 8
    pHostPointer qword ?
VkImportMemoryHostPointerInfoEXT ends

VkMemoryHostPointerPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryTypeBits, type = uint32_t, offset = 16, size = 4
    memoryTypeBits dword ?
VkMemoryHostPointerPropertiesEXT ends

; TYPEDEF VkMemoryHostPointerPropertiesEXT = struct VkMemoryHostPointerPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkMemoryHostPointerPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryTypeBits, type = uint32_t, offset = 16, size = 4
    memoryTypeBits dword ?
VkMemoryHostPointerPropertiesEXT ends

VkPhysicalDeviceExternalMemoryHostPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minImportedHostPointerAlignment, type = VkDeviceSize, offset = 16, size = 8
    minImportedHostPointerAlignment VkDeviceSize <>
VkPhysicalDeviceExternalMemoryHostPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceExternalMemoryHostPropertiesEXT = struct VkPhysicalDeviceExternalMemoryHostPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExternalMemoryHostPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minImportedHostPointerAlignment, type = VkDeviceSize, offset = 16, size = 8
    minImportedHostPointerAlignment VkDeviceSize <>
VkPhysicalDeviceExternalMemoryHostPropertiesEXT ends

; TYPEDEF PFN_vkGetMemoryHostPointerPropertiesEXT = VkResult (*)(VkDevice, VkExternalMemoryHandleTypeFlagBits, const void *, VkMemoryHostPointerPropertiesEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetMemoryHostPointerPropertiesEXT typedef qword

; VkResult vkGetMemoryHostPointerPropertiesEXT(VkDevice device, VkExternalMemoryHandleTypeFlagBits handleType, const void * pHostPointer, VkMemoryHostPointerPropertiesEXT * pMemoryHostPointerProperties)
vkGetMemoryHostPointerPropertiesEXT qword ?

; TYPEDEF PFN_vkCmdWriteBufferMarkerAMD = void (*)(VkCommandBuffer, VkPipelineStageFlagBits, VkBuffer, VkDeviceSize, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdWriteBufferMarkerAMD typedef qword

; void vkCmdWriteBufferMarkerAMD(VkCommandBuffer commandBuffer, VkPipelineStageFlagBits pipelineStage, VkBuffer dstBuffer, VkDeviceSize dstOffset, uint32_t marker)
vkCmdWriteBufferMarkerAMD qword ?

; enum VkPipelineCompilerControlFlagBitsAMD {
    VK_PIPELINE_COMPILER_CONTROL_FLAG_BITS_MAX_ENUM_AMD equ 2147483647
; }

; TYPEDEF VkPipelineCompilerControlFlagBitsAMD = enum VkPipelineCompilerControlFlagBitsAMD, TypeKind.ELABORATED
VkPipelineCompilerControlFlagBitsAMD typedef dword

; enum VkPipelineCompilerControlFlagBitsAMD {
    VK_PIPELINE_COMPILER_CONTROL_FLAG_BITS_MAX_ENUM_AMD equ 2147483647
; }

; TYPEDEF VkPipelineCompilerControlFlagsAMD = VkFlags, TypeKind.ELABORATED
VkPipelineCompilerControlFlagsAMD typedef dword

VkPipelineCompilerControlCreateInfoAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = compilerControlFlags, type = VkPipelineCompilerControlFlagsAMD, offset = 16, size = 4
    compilerControlFlags VkPipelineCompilerControlFlagsAMD <>
VkPipelineCompilerControlCreateInfoAMD ends

; TYPEDEF VkPipelineCompilerControlCreateInfoAMD = struct VkPipelineCompilerControlCreateInfoAMD, TypeKind.ELABORATED
; remove struct typedef

VkPipelineCompilerControlCreateInfoAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = compilerControlFlags, type = VkPipelineCompilerControlFlagsAMD, offset = 16, size = 4
    compilerControlFlags VkPipelineCompilerControlFlagsAMD <>
VkPipelineCompilerControlCreateInfoAMD ends

; TYPEDEF VkTimeDomainEXT = VkTimeDomainKHR, TypeKind.ELABORATED

; TYPEDEF VkCalibratedTimestampInfoEXT = VkCalibratedTimestampInfoKHR, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT = VkResult (*)(VkPhysicalDevice, uint32_t *, VkTimeDomainKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT typedef qword

; TYPEDEF PFN_vkGetCalibratedTimestampsEXT = VkResult (*)(VkDevice, uint32_t, const VkCalibratedTimestampInfoKHR *, uint64_t *, uint64_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetCalibratedTimestampsEXT typedef qword

; VkResult vkGetPhysicalDeviceCalibrateableTimeDomainsEXT(VkPhysicalDevice physicalDevice, uint32_t * pTimeDomainCount, VkTimeDomainKHR * pTimeDomains)
vkGetPhysicalDeviceCalibrateableTimeDomainsEXT qword ?

; VkResult vkGetCalibratedTimestampsEXT(VkDevice device, uint32_t timestampCount, const VkCalibratedTimestampInfoKHR * pTimestampInfos, uint64_t * pTimestamps, uint64_t * pMaxDeviation)
vkGetCalibratedTimestampsEXT qword ?

VkPhysicalDeviceShaderCorePropertiesAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderEngineCount, type = uint32_t, offset = 16, size = 4
    shaderEngineCount dword ?
;   TypeKind.ELABORATED
;   name = shaderArraysPerEngineCount, type = uint32_t, offset = 20, size = 4
    shaderArraysPerEngineCount dword ?
;   TypeKind.ELABORATED
;   name = computeUnitsPerShaderArray, type = uint32_t, offset = 24, size = 4
    computeUnitsPerShaderArray dword ?
;   TypeKind.ELABORATED
;   name = simdPerComputeUnit, type = uint32_t, offset = 28, size = 4
    simdPerComputeUnit dword ?
;   TypeKind.ELABORATED
;   name = wavefrontsPerSimd, type = uint32_t, offset = 32, size = 4
    wavefrontsPerSimd dword ?
;   TypeKind.ELABORATED
;   name = wavefrontSize, type = uint32_t, offset = 36, size = 4
    wavefrontSize dword ?
;   TypeKind.ELABORATED
;   name = sgprsPerSimd, type = uint32_t, offset = 40, size = 4
    sgprsPerSimd dword ?
;   TypeKind.ELABORATED
;   name = minSgprAllocation, type = uint32_t, offset = 44, size = 4
    minSgprAllocation dword ?
;   TypeKind.ELABORATED
;   name = maxSgprAllocation, type = uint32_t, offset = 48, size = 4
    maxSgprAllocation dword ?
;   TypeKind.ELABORATED
;   name = sgprAllocationGranularity, type = uint32_t, offset = 52, size = 4
    sgprAllocationGranularity dword ?
;   TypeKind.ELABORATED
;   name = vgprsPerSimd, type = uint32_t, offset = 56, size = 4
    vgprsPerSimd dword ?
;   TypeKind.ELABORATED
;   name = minVgprAllocation, type = uint32_t, offset = 60, size = 4
    minVgprAllocation dword ?
;   TypeKind.ELABORATED
;   name = maxVgprAllocation, type = uint32_t, offset = 64, size = 4
    maxVgprAllocation dword ?
;   TypeKind.ELABORATED
;   name = vgprAllocationGranularity, type = uint32_t, offset = 68, size = 4
    vgprAllocationGranularity dword ?
VkPhysicalDeviceShaderCorePropertiesAMD ends

; TYPEDEF VkPhysicalDeviceShaderCorePropertiesAMD = struct VkPhysicalDeviceShaderCorePropertiesAMD, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderCorePropertiesAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderEngineCount, type = uint32_t, offset = 16, size = 4
    shaderEngineCount dword ?
;   TypeKind.ELABORATED
;   name = shaderArraysPerEngineCount, type = uint32_t, offset = 20, size = 4
    shaderArraysPerEngineCount dword ?
;   TypeKind.ELABORATED
;   name = computeUnitsPerShaderArray, type = uint32_t, offset = 24, size = 4
    computeUnitsPerShaderArray dword ?
;   TypeKind.ELABORATED
;   name = simdPerComputeUnit, type = uint32_t, offset = 28, size = 4
    simdPerComputeUnit dword ?
;   TypeKind.ELABORATED
;   name = wavefrontsPerSimd, type = uint32_t, offset = 32, size = 4
    wavefrontsPerSimd dword ?
;   TypeKind.ELABORATED
;   name = wavefrontSize, type = uint32_t, offset = 36, size = 4
    wavefrontSize dword ?
;   TypeKind.ELABORATED
;   name = sgprsPerSimd, type = uint32_t, offset = 40, size = 4
    sgprsPerSimd dword ?
;   TypeKind.ELABORATED
;   name = minSgprAllocation, type = uint32_t, offset = 44, size = 4
    minSgprAllocation dword ?
;   TypeKind.ELABORATED
;   name = maxSgprAllocation, type = uint32_t, offset = 48, size = 4
    maxSgprAllocation dword ?
;   TypeKind.ELABORATED
;   name = sgprAllocationGranularity, type = uint32_t, offset = 52, size = 4
    sgprAllocationGranularity dword ?
;   TypeKind.ELABORATED
;   name = vgprsPerSimd, type = uint32_t, offset = 56, size = 4
    vgprsPerSimd dword ?
;   TypeKind.ELABORATED
;   name = minVgprAllocation, type = uint32_t, offset = 60, size = 4
    minVgprAllocation dword ?
;   TypeKind.ELABORATED
;   name = maxVgprAllocation, type = uint32_t, offset = 64, size = 4
    maxVgprAllocation dword ?
;   TypeKind.ELABORATED
;   name = vgprAllocationGranularity, type = uint32_t, offset = 68, size = 4
    vgprAllocationGranularity dword ?
VkPhysicalDeviceShaderCorePropertiesAMD ends

; enum VkMemoryOverallocationBehaviorAMD {
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD equ 0
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD equ 1
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD equ 2
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_MAX_ENUM_AMD equ 2147483647
; }

; TYPEDEF VkMemoryOverallocationBehaviorAMD = enum VkMemoryOverallocationBehaviorAMD, TypeKind.ELABORATED
VkMemoryOverallocationBehaviorAMD typedef dword

; enum VkMemoryOverallocationBehaviorAMD {
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD equ 0
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD equ 1
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD equ 2
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_MAX_ENUM_AMD equ 2147483647
; }

VkDeviceMemoryOverallocationCreateInfoAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = overallocationBehavior, type = VkMemoryOverallocationBehaviorAMD, offset = 16, size = 4
    overallocationBehavior VkMemoryOverallocationBehaviorAMD <>
VkDeviceMemoryOverallocationCreateInfoAMD ends

; TYPEDEF VkDeviceMemoryOverallocationCreateInfoAMD = struct VkDeviceMemoryOverallocationCreateInfoAMD, TypeKind.ELABORATED
; remove struct typedef

VkDeviceMemoryOverallocationCreateInfoAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = overallocationBehavior, type = VkMemoryOverallocationBehaviorAMD, offset = 16, size = 4
    overallocationBehavior VkMemoryOverallocationBehaviorAMD <>
VkDeviceMemoryOverallocationCreateInfoAMD ends

VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxVertexAttribDivisor, type = uint32_t, offset = 16, size = 4
    maxVertexAttribDivisor dword ?
VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = struct VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxVertexAttribDivisor, type = uint32_t, offset = 16, size = 4
    maxVertexAttribDivisor dword ?
VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT ends

; TYPEDEF VkVertexInputBindingDivisorDescriptionEXT = VkVertexInputBindingDivisorDescriptionKHR, TypeKind.ELABORATED

; TYPEDEF VkPipelineVertexInputDivisorStateCreateInfoEXT = VkPipelineVertexInputDivisorStateCreateInfoKHR, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR, TypeKind.ELABORATED

; TYPEDEF VkPipelineCreationFeedbackFlagBitsEXT = VkPipelineCreationFeedbackFlagBits, TypeKind.ELABORATED

; TYPEDEF VkPipelineCreationFeedbackFlagsEXT = VkPipelineCreationFeedbackFlags, TypeKind.ELABORATED

; TYPEDEF VkPipelineCreationFeedbackCreateInfoEXT = VkPipelineCreationFeedbackCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkPipelineCreationFeedbackEXT = VkPipelineCreationFeedback, TypeKind.ELABORATED

VkPhysicalDeviceComputeShaderDerivativesFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = computeDerivativeGroupQuads, type = VkBool32, offset = 16, size = 4
    computeDerivativeGroupQuads VkBool32 <>
;   TypeKind.ELABORATED
;   name = computeDerivativeGroupLinear, type = VkBool32, offset = 20, size = 4
    computeDerivativeGroupLinear VkBool32 <>
VkPhysicalDeviceComputeShaderDerivativesFeaturesNV ends

; TYPEDEF VkPhysicalDeviceComputeShaderDerivativesFeaturesNV = struct VkPhysicalDeviceComputeShaderDerivativesFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceComputeShaderDerivativesFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = computeDerivativeGroupQuads, type = VkBool32, offset = 16, size = 4
    computeDerivativeGroupQuads VkBool32 <>
;   TypeKind.ELABORATED
;   name = computeDerivativeGroupLinear, type = VkBool32, offset = 20, size = 4
    computeDerivativeGroupLinear VkBool32 <>
VkPhysicalDeviceComputeShaderDerivativesFeaturesNV ends

VkPhysicalDeviceMeshShaderFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = taskShader, type = VkBool32, offset = 16, size = 4
    taskShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = meshShader, type = VkBool32, offset = 20, size = 4
    meshShader VkBool32 <>
VkPhysicalDeviceMeshShaderFeaturesNV ends

; TYPEDEF VkPhysicalDeviceMeshShaderFeaturesNV = struct VkPhysicalDeviceMeshShaderFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMeshShaderFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = taskShader, type = VkBool32, offset = 16, size = 4
    taskShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = meshShader, type = VkBool32, offset = 20, size = 4
    meshShader VkBool32 <>
VkPhysicalDeviceMeshShaderFeaturesNV ends

VkPhysicalDeviceMeshShaderPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxDrawMeshTasksCount, type = uint32_t, offset = 16, size = 4
    maxDrawMeshTasksCount dword ?
;   TypeKind.ELABORATED
;   name = maxTaskWorkGroupInvocations, type = uint32_t, offset = 20, size = 4
    maxTaskWorkGroupInvocations dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxTaskWorkGroupSize, type = uint32_t[3], offset = 24, size = 12
    maxTaskWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxTaskTotalMemorySize, type = uint32_t, offset = 36, size = 4
    maxTaskTotalMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxTaskOutputCount, type = uint32_t, offset = 40, size = 4
    maxTaskOutputCount dword ?
;   TypeKind.ELABORATED
;   name = maxMeshWorkGroupInvocations, type = uint32_t, offset = 44, size = 4
    maxMeshWorkGroupInvocations dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxMeshWorkGroupSize, type = uint32_t[3], offset = 48, size = 12
    maxMeshWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxMeshTotalMemorySize, type = uint32_t, offset = 60, size = 4
    maxMeshTotalMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputVertices, type = uint32_t, offset = 64, size = 4
    maxMeshOutputVertices dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputPrimitives, type = uint32_t, offset = 68, size = 4
    maxMeshOutputPrimitives dword ?
;   TypeKind.ELABORATED
;   name = maxMeshMultiviewViewCount, type = uint32_t, offset = 72, size = 4
    maxMeshMultiviewViewCount dword ?
;   TypeKind.ELABORATED
;   name = meshOutputPerVertexGranularity, type = uint32_t, offset = 76, size = 4
    meshOutputPerVertexGranularity dword ?
;   TypeKind.ELABORATED
;   name = meshOutputPerPrimitiveGranularity, type = uint32_t, offset = 80, size = 4
    meshOutputPerPrimitiveGranularity dword ?
VkPhysicalDeviceMeshShaderPropertiesNV ends

; TYPEDEF VkPhysicalDeviceMeshShaderPropertiesNV = struct VkPhysicalDeviceMeshShaderPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMeshShaderPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxDrawMeshTasksCount, type = uint32_t, offset = 16, size = 4
    maxDrawMeshTasksCount dword ?
;   TypeKind.ELABORATED
;   name = maxTaskWorkGroupInvocations, type = uint32_t, offset = 20, size = 4
    maxTaskWorkGroupInvocations dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxTaskWorkGroupSize, type = uint32_t[3], offset = 24, size = 12
    maxTaskWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxTaskTotalMemorySize, type = uint32_t, offset = 36, size = 4
    maxTaskTotalMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxTaskOutputCount, type = uint32_t, offset = 40, size = 4
    maxTaskOutputCount dword ?
;   TypeKind.ELABORATED
;   name = maxMeshWorkGroupInvocations, type = uint32_t, offset = 44, size = 4
    maxMeshWorkGroupInvocations dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxMeshWorkGroupSize, type = uint32_t[3], offset = 48, size = 12
    maxMeshWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxMeshTotalMemorySize, type = uint32_t, offset = 60, size = 4
    maxMeshTotalMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputVertices, type = uint32_t, offset = 64, size = 4
    maxMeshOutputVertices dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputPrimitives, type = uint32_t, offset = 68, size = 4
    maxMeshOutputPrimitives dword ?
;   TypeKind.ELABORATED
;   name = maxMeshMultiviewViewCount, type = uint32_t, offset = 72, size = 4
    maxMeshMultiviewViewCount dword ?
;   TypeKind.ELABORATED
;   name = meshOutputPerVertexGranularity, type = uint32_t, offset = 76, size = 4
    meshOutputPerVertexGranularity dword ?
;   TypeKind.ELABORATED
;   name = meshOutputPerPrimitiveGranularity, type = uint32_t, offset = 80, size = 4
    meshOutputPerPrimitiveGranularity dword ?
VkPhysicalDeviceMeshShaderPropertiesNV ends

VkDrawMeshTasksIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = taskCount, type = uint32_t, offset = 0, size = 4
    taskCount dword ?
;   TypeKind.ELABORATED
;   name = firstTask, type = uint32_t, offset = 4, size = 4
    firstTask dword ?
VkDrawMeshTasksIndirectCommandNV ends

; TYPEDEF VkDrawMeshTasksIndirectCommandNV = struct VkDrawMeshTasksIndirectCommandNV, TypeKind.ELABORATED
; remove struct typedef

VkDrawMeshTasksIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = taskCount, type = uint32_t, offset = 0, size = 4
    taskCount dword ?
;   TypeKind.ELABORATED
;   name = firstTask, type = uint32_t, offset = 4, size = 4
    firstTask dword ?
VkDrawMeshTasksIndirectCommandNV ends

; TYPEDEF PFN_vkCmdDrawMeshTasksNV = void (*)(VkCommandBuffer, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawMeshTasksNV typedef qword

; TYPEDEF PFN_vkCmdDrawMeshTasksIndirectNV = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawMeshTasksIndirectNV typedef qword

; TYPEDEF PFN_vkCmdDrawMeshTasksIndirectCountNV = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawMeshTasksIndirectCountNV typedef qword

; void vkCmdDrawMeshTasksNV(VkCommandBuffer commandBuffer, uint32_t taskCount, uint32_t firstTask)
vkCmdDrawMeshTasksNV qword ?

; void vkCmdDrawMeshTasksIndirectNV(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, uint32_t drawCount, uint32_t stride)
vkCmdDrawMeshTasksIndirectNV qword ?

; void vkCmdDrawMeshTasksIndirectCountNV(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride)
vkCmdDrawMeshTasksIndirectCountNV qword ?

; TYPEDEF VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV = VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR, TypeKind.ELABORATED

VkPhysicalDeviceShaderImageFootprintFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageFootprint, type = VkBool32, offset = 16, size = 4
    imageFootprint VkBool32 <>
VkPhysicalDeviceShaderImageFootprintFeaturesNV ends

; TYPEDEF VkPhysicalDeviceShaderImageFootprintFeaturesNV = struct VkPhysicalDeviceShaderImageFootprintFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderImageFootprintFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageFootprint, type = VkBool32, offset = 16, size = 4
    imageFootprint VkBool32 <>
VkPhysicalDeviceShaderImageFootprintFeaturesNV ends

VkPipelineViewportExclusiveScissorStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = exclusiveScissorCount, type = uint32_t, offset = 16, size = 4
    exclusiveScissorCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pExclusiveScissors, type = const VkRect2D *, offset = 24, size = 8
    pExclusiveScissors qword ?
VkPipelineViewportExclusiveScissorStateCreateInfoNV ends

; TYPEDEF VkPipelineViewportExclusiveScissorStateCreateInfoNV = struct VkPipelineViewportExclusiveScissorStateCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkPipelineViewportExclusiveScissorStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = exclusiveScissorCount, type = uint32_t, offset = 16, size = 4
    exclusiveScissorCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pExclusiveScissors, type = const VkRect2D *, offset = 24, size = 8
    pExclusiveScissors qword ?
VkPipelineViewportExclusiveScissorStateCreateInfoNV ends

VkPhysicalDeviceExclusiveScissorFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = exclusiveScissor, type = VkBool32, offset = 16, size = 4
    exclusiveScissor VkBool32 <>
VkPhysicalDeviceExclusiveScissorFeaturesNV ends

; TYPEDEF VkPhysicalDeviceExclusiveScissorFeaturesNV = struct VkPhysicalDeviceExclusiveScissorFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExclusiveScissorFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = exclusiveScissor, type = VkBool32, offset = 16, size = 4
    exclusiveScissor VkBool32 <>
VkPhysicalDeviceExclusiveScissorFeaturesNV ends

; TYPEDEF PFN_vkCmdSetExclusiveScissorEnableNV = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkBool32 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetExclusiveScissorEnableNV typedef qword

; TYPEDEF PFN_vkCmdSetExclusiveScissorNV = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkRect2D *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetExclusiveScissorNV typedef qword

; void vkCmdSetExclusiveScissorEnableNV(VkCommandBuffer commandBuffer, uint32_t firstExclusiveScissor, uint32_t exclusiveScissorCount, const VkBool32 * pExclusiveScissorEnables)
vkCmdSetExclusiveScissorEnableNV qword ?

; void vkCmdSetExclusiveScissorNV(VkCommandBuffer commandBuffer, uint32_t firstExclusiveScissor, uint32_t exclusiveScissorCount, const VkRect2D * pExclusiveScissors)
vkCmdSetExclusiveScissorNV qword ?

VkQueueFamilyCheckpointPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = checkpointExecutionStageMask, type = VkPipelineStageFlags, offset = 16, size = 4
    checkpointExecutionStageMask VkPipelineStageFlags <>
VkQueueFamilyCheckpointPropertiesNV ends

; TYPEDEF VkQueueFamilyCheckpointPropertiesNV = struct VkQueueFamilyCheckpointPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkQueueFamilyCheckpointPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = checkpointExecutionStageMask, type = VkPipelineStageFlags, offset = 16, size = 4
    checkpointExecutionStageMask VkPipelineStageFlags <>
VkQueueFamilyCheckpointPropertiesNV ends

VkCheckpointDataNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stage, type = VkPipelineStageFlagBits, offset = 16, size = 4
    stage VkPipelineStageFlagBits <>
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCheckpointMarker, type = void *, offset = 24, size = 8
    pCheckpointMarker qword ?
VkCheckpointDataNV ends

; TYPEDEF VkCheckpointDataNV = struct VkCheckpointDataNV, TypeKind.ELABORATED
; remove struct typedef

VkCheckpointDataNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stage, type = VkPipelineStageFlagBits, offset = 16, size = 4
    stage VkPipelineStageFlagBits <>
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCheckpointMarker, type = void *, offset = 24, size = 8
    pCheckpointMarker qword ?
VkCheckpointDataNV ends

; TYPEDEF PFN_vkCmdSetCheckpointNV = void (*)(VkCommandBuffer, const void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetCheckpointNV typedef qword

; TYPEDEF PFN_vkGetQueueCheckpointDataNV = void (*)(VkQueue, uint32_t *, VkCheckpointDataNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetQueueCheckpointDataNV typedef qword

; void vkCmdSetCheckpointNV(VkCommandBuffer commandBuffer, const void * pCheckpointMarker)
vkCmdSetCheckpointNV qword ?

; void vkGetQueueCheckpointDataNV(VkQueue queue, uint32_t * pCheckpointDataCount, VkCheckpointDataNV * pCheckpointData)
vkGetQueueCheckpointDataNV qword ?

VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderIntegerFunctions2, type = VkBool32, offset = 16, size = 4
    shaderIntegerFunctions2 VkBool32 <>
VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL ends

; TYPEDEF VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL = struct VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderIntegerFunctions2, type = VkBool32, offset = 16, size = 4
    shaderIntegerFunctions2 VkBool32 <>
VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL ends

; TYPEDEF VkPerformanceConfigurationINTEL = struct VkPerformanceConfigurationINTEL_T *, TypeKind.POINTER
VkPerformanceConfigurationINTEL typedef qword

; enum VkPerformanceConfigurationTypeINTEL {
    VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL equ 0
    VK_PERFORMANCE_CONFIGURATION_TYPE_MAX_ENUM_INTEL equ 2147483647
; }

; TYPEDEF VkPerformanceConfigurationTypeINTEL = enum VkPerformanceConfigurationTypeINTEL, TypeKind.ELABORATED
VkPerformanceConfigurationTypeINTEL typedef dword

; enum VkPerformanceConfigurationTypeINTEL {
    VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL equ 0
    VK_PERFORMANCE_CONFIGURATION_TYPE_MAX_ENUM_INTEL equ 2147483647
; }

; enum VkQueryPoolSamplingModeINTEL {
    VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL equ 0
    VK_QUERY_POOL_SAMPLING_MODE_MAX_ENUM_INTEL equ 2147483647
; }

; TYPEDEF VkQueryPoolSamplingModeINTEL = enum VkQueryPoolSamplingModeINTEL, TypeKind.ELABORATED
VkQueryPoolSamplingModeINTEL typedef dword

; enum VkQueryPoolSamplingModeINTEL {
    VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL equ 0
    VK_QUERY_POOL_SAMPLING_MODE_MAX_ENUM_INTEL equ 2147483647
; }

; enum VkPerformanceOverrideTypeINTEL {
    VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL equ 0
    VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL equ 1
    VK_PERFORMANCE_OVERRIDE_TYPE_MAX_ENUM_INTEL equ 2147483647
; }

; TYPEDEF VkPerformanceOverrideTypeINTEL = enum VkPerformanceOverrideTypeINTEL, TypeKind.ELABORATED
VkPerformanceOverrideTypeINTEL typedef dword

; enum VkPerformanceOverrideTypeINTEL {
    VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL equ 0
    VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL equ 1
    VK_PERFORMANCE_OVERRIDE_TYPE_MAX_ENUM_INTEL equ 2147483647
; }

; enum VkPerformanceParameterTypeINTEL {
    VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL equ 0
    VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL equ 1
    VK_PERFORMANCE_PARAMETER_TYPE_MAX_ENUM_INTEL equ 2147483647
; }

; TYPEDEF VkPerformanceParameterTypeINTEL = enum VkPerformanceParameterTypeINTEL, TypeKind.ELABORATED
VkPerformanceParameterTypeINTEL typedef dword

; enum VkPerformanceParameterTypeINTEL {
    VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL equ 0
    VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL equ 1
    VK_PERFORMANCE_PARAMETER_TYPE_MAX_ENUM_INTEL equ 2147483647
; }

; enum VkPerformanceValueTypeINTEL {
    VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL equ 0
    VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL equ 1
    VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL equ 2
    VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL equ 3
    VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL equ 4
    VK_PERFORMANCE_VALUE_TYPE_MAX_ENUM_INTEL equ 2147483647
; }

; TYPEDEF VkPerformanceValueTypeINTEL = enum VkPerformanceValueTypeINTEL, TypeKind.ELABORATED
VkPerformanceValueTypeINTEL typedef dword

; enum VkPerformanceValueTypeINTEL {
    VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL equ 0
    VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL equ 1
    VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL equ 2
    VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL equ 3
    VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL equ 4
    VK_PERFORMANCE_VALUE_TYPE_MAX_ENUM_INTEL equ 2147483647
; }

; TYPEDEF VkPerformanceValueDataINTEL = union VkPerformanceValueDataINTEL, TypeKind.ELABORATED
; remove union typedef

VkPerformanceValueINTEL struct
;   TypeKind.ELABORATED
;   name = type, type = VkPerformanceValueTypeINTEL, offset = 0, size = 4
    __type VkPerformanceValueTypeINTEL <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = data, type = VkPerformanceValueDataINTEL, offset = 8, size = 8
    data VkPerformanceValueDataINTEL <>
VkPerformanceValueINTEL ends

; TYPEDEF VkPerformanceValueINTEL = struct VkPerformanceValueINTEL, TypeKind.ELABORATED
; remove struct typedef

VkPerformanceValueINTEL struct
;   TypeKind.ELABORATED
;   name = type, type = VkPerformanceValueTypeINTEL, offset = 0, size = 4
    __type VkPerformanceValueTypeINTEL <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = data, type = VkPerformanceValueDataINTEL, offset = 8, size = 8
    data VkPerformanceValueDataINTEL <>
VkPerformanceValueINTEL ends

VkInitializePerformanceApiInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pUserData, type = void *, offset = 16, size = 8
    pUserData qword ?
VkInitializePerformanceApiInfoINTEL ends

; TYPEDEF VkInitializePerformanceApiInfoINTEL = struct VkInitializePerformanceApiInfoINTEL, TypeKind.ELABORATED
; remove struct typedef

VkInitializePerformanceApiInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pUserData, type = void *, offset = 16, size = 8
    pUserData qword ?
VkInitializePerformanceApiInfoINTEL ends

VkQueryPoolPerformanceQueryCreateInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = performanceCountersSampling, type = VkQueryPoolSamplingModeINTEL, offset = 16, size = 4
    performanceCountersSampling VkQueryPoolSamplingModeINTEL <>
VkQueryPoolPerformanceQueryCreateInfoINTEL ends

; TYPEDEF VkQueryPoolPerformanceQueryCreateInfoINTEL = struct VkQueryPoolPerformanceQueryCreateInfoINTEL, TypeKind.ELABORATED
; remove struct typedef

VkQueryPoolPerformanceQueryCreateInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = performanceCountersSampling, type = VkQueryPoolSamplingModeINTEL, offset = 16, size = 4
    performanceCountersSampling VkQueryPoolSamplingModeINTEL <>
VkQueryPoolPerformanceQueryCreateInfoINTEL ends

; TYPEDEF VkQueryPoolCreateInfoINTEL = VkQueryPoolPerformanceQueryCreateInfoINTEL, TypeKind.ELABORATED

VkPerformanceMarkerInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = marker, type = uint64_t, offset = 16, size = 8
    marker qword ?
VkPerformanceMarkerInfoINTEL ends

; TYPEDEF VkPerformanceMarkerInfoINTEL = struct VkPerformanceMarkerInfoINTEL, TypeKind.ELABORATED
; remove struct typedef

VkPerformanceMarkerInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = marker, type = uint64_t, offset = 16, size = 8
    marker qword ?
VkPerformanceMarkerInfoINTEL ends

VkPerformanceStreamMarkerInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = marker, type = uint32_t, offset = 16, size = 4
    marker dword ?
VkPerformanceStreamMarkerInfoINTEL ends

; TYPEDEF VkPerformanceStreamMarkerInfoINTEL = struct VkPerformanceStreamMarkerInfoINTEL, TypeKind.ELABORATED
; remove struct typedef

VkPerformanceStreamMarkerInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = marker, type = uint32_t, offset = 16, size = 4
    marker dword ?
VkPerformanceStreamMarkerInfoINTEL ends

VkPerformanceOverrideInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkPerformanceOverrideTypeINTEL, offset = 16, size = 4
    __type VkPerformanceOverrideTypeINTEL <>
;   TypeKind.ELABORATED
;   name = enable, type = VkBool32, offset = 20, size = 4
    enable VkBool32 <>
;   TypeKind.ELABORATED
;   name = parameter, type = uint64_t, offset = 24, size = 8
    parameter qword ?
VkPerformanceOverrideInfoINTEL ends

; TYPEDEF VkPerformanceOverrideInfoINTEL = struct VkPerformanceOverrideInfoINTEL, TypeKind.ELABORATED
; remove struct typedef

VkPerformanceOverrideInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkPerformanceOverrideTypeINTEL, offset = 16, size = 4
    __type VkPerformanceOverrideTypeINTEL <>
;   TypeKind.ELABORATED
;   name = enable, type = VkBool32, offset = 20, size = 4
    enable VkBool32 <>
;   TypeKind.ELABORATED
;   name = parameter, type = uint64_t, offset = 24, size = 8
    parameter qword ?
VkPerformanceOverrideInfoINTEL ends

VkPerformanceConfigurationAcquireInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkPerformanceConfigurationTypeINTEL, offset = 16, size = 4
    __type VkPerformanceConfigurationTypeINTEL <>
VkPerformanceConfigurationAcquireInfoINTEL ends

; TYPEDEF VkPerformanceConfigurationAcquireInfoINTEL = struct VkPerformanceConfigurationAcquireInfoINTEL, TypeKind.ELABORATED
; remove struct typedef

VkPerformanceConfigurationAcquireInfoINTEL struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkPerformanceConfigurationTypeINTEL, offset = 16, size = 4
    __type VkPerformanceConfigurationTypeINTEL <>
VkPerformanceConfigurationAcquireInfoINTEL ends

; TYPEDEF PFN_vkInitializePerformanceApiINTEL = VkResult (*)(VkDevice, const VkInitializePerformanceApiInfoINTEL *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkInitializePerformanceApiINTEL typedef qword

; TYPEDEF PFN_vkUninitializePerformanceApiINTEL = void (*)(VkDevice) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkUninitializePerformanceApiINTEL typedef qword

; TYPEDEF PFN_vkCmdSetPerformanceMarkerINTEL = VkResult (*)(VkCommandBuffer, const VkPerformanceMarkerInfoINTEL *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetPerformanceMarkerINTEL typedef qword

; TYPEDEF PFN_vkCmdSetPerformanceStreamMarkerINTEL = VkResult (*)(VkCommandBuffer, const VkPerformanceStreamMarkerInfoINTEL *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetPerformanceStreamMarkerINTEL typedef qword

; TYPEDEF PFN_vkCmdSetPerformanceOverrideINTEL = VkResult (*)(VkCommandBuffer, const VkPerformanceOverrideInfoINTEL *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetPerformanceOverrideINTEL typedef qword

; TYPEDEF PFN_vkAcquirePerformanceConfigurationINTEL = VkResult (*)(VkDevice, const VkPerformanceConfigurationAcquireInfoINTEL *, VkPerformanceConfigurationINTEL *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkAcquirePerformanceConfigurationINTEL typedef qword

; TYPEDEF PFN_vkReleasePerformanceConfigurationINTEL = VkResult (*)(VkDevice, VkPerformanceConfigurationINTEL) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkReleasePerformanceConfigurationINTEL typedef qword

; TYPEDEF PFN_vkQueueSetPerformanceConfigurationINTEL = VkResult (*)(VkQueue, VkPerformanceConfigurationINTEL) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkQueueSetPerformanceConfigurationINTEL typedef qword

; TYPEDEF PFN_vkGetPerformanceParameterINTEL = VkResult (*)(VkDevice, VkPerformanceParameterTypeINTEL, VkPerformanceValueINTEL *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPerformanceParameterINTEL typedef qword

; VkResult vkInitializePerformanceApiINTEL(VkDevice device, const VkInitializePerformanceApiInfoINTEL * pInitializeInfo)
vkInitializePerformanceApiINTEL qword ?

; void vkUninitializePerformanceApiINTEL(VkDevice device)
vkUninitializePerformanceApiINTEL qword ?

; VkResult vkCmdSetPerformanceMarkerINTEL(VkCommandBuffer commandBuffer, const VkPerformanceMarkerInfoINTEL * pMarkerInfo)
vkCmdSetPerformanceMarkerINTEL qword ?

; VkResult vkCmdSetPerformanceStreamMarkerINTEL(VkCommandBuffer commandBuffer, const VkPerformanceStreamMarkerInfoINTEL * pMarkerInfo)
vkCmdSetPerformanceStreamMarkerINTEL qword ?

; VkResult vkCmdSetPerformanceOverrideINTEL(VkCommandBuffer commandBuffer, const VkPerformanceOverrideInfoINTEL * pOverrideInfo)
vkCmdSetPerformanceOverrideINTEL qword ?

; VkResult vkAcquirePerformanceConfigurationINTEL(VkDevice device, const VkPerformanceConfigurationAcquireInfoINTEL * pAcquireInfo, VkPerformanceConfigurationINTEL * pConfiguration)
vkAcquirePerformanceConfigurationINTEL qword ?

; VkResult vkReleasePerformanceConfigurationINTEL(VkDevice device, VkPerformanceConfigurationINTEL configuration)
vkReleasePerformanceConfigurationINTEL qword ?

; VkResult vkQueueSetPerformanceConfigurationINTEL(VkQueue queue, VkPerformanceConfigurationINTEL configuration)
vkQueueSetPerformanceConfigurationINTEL qword ?

; VkResult vkGetPerformanceParameterINTEL(VkDevice device, VkPerformanceParameterTypeINTEL parameter, VkPerformanceValueINTEL * pValue)
vkGetPerformanceParameterINTEL qword ?

VkPhysicalDevicePCIBusInfoPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pciDomain, type = uint32_t, offset = 16, size = 4
    pciDomain dword ?
;   TypeKind.ELABORATED
;   name = pciBus, type = uint32_t, offset = 20, size = 4
    pciBus dword ?
;   TypeKind.ELABORATED
;   name = pciDevice, type = uint32_t, offset = 24, size = 4
    pciDevice dword ?
;   TypeKind.ELABORATED
;   name = pciFunction, type = uint32_t, offset = 28, size = 4
    pciFunction dword ?
VkPhysicalDevicePCIBusInfoPropertiesEXT ends

; TYPEDEF VkPhysicalDevicePCIBusInfoPropertiesEXT = struct VkPhysicalDevicePCIBusInfoPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePCIBusInfoPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pciDomain, type = uint32_t, offset = 16, size = 4
    pciDomain dword ?
;   TypeKind.ELABORATED
;   name = pciBus, type = uint32_t, offset = 20, size = 4
    pciBus dword ?
;   TypeKind.ELABORATED
;   name = pciDevice, type = uint32_t, offset = 24, size = 4
    pciDevice dword ?
;   TypeKind.ELABORATED
;   name = pciFunction, type = uint32_t, offset = 28, size = 4
    pciFunction dword ?
VkPhysicalDevicePCIBusInfoPropertiesEXT ends

VkDisplayNativeHdrSurfaceCapabilitiesAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = localDimmingSupport, type = VkBool32, offset = 16, size = 4
    localDimmingSupport VkBool32 <>
VkDisplayNativeHdrSurfaceCapabilitiesAMD ends

; TYPEDEF VkDisplayNativeHdrSurfaceCapabilitiesAMD = struct VkDisplayNativeHdrSurfaceCapabilitiesAMD, TypeKind.ELABORATED
; remove struct typedef

VkDisplayNativeHdrSurfaceCapabilitiesAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = localDimmingSupport, type = VkBool32, offset = 16, size = 4
    localDimmingSupport VkBool32 <>
VkDisplayNativeHdrSurfaceCapabilitiesAMD ends

VkSwapchainDisplayNativeHdrCreateInfoAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = localDimmingEnable, type = VkBool32, offset = 16, size = 4
    localDimmingEnable VkBool32 <>
VkSwapchainDisplayNativeHdrCreateInfoAMD ends

; TYPEDEF VkSwapchainDisplayNativeHdrCreateInfoAMD = struct VkSwapchainDisplayNativeHdrCreateInfoAMD, TypeKind.ELABORATED
; remove struct typedef

VkSwapchainDisplayNativeHdrCreateInfoAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = localDimmingEnable, type = VkBool32, offset = 16, size = 4
    localDimmingEnable VkBool32 <>
VkSwapchainDisplayNativeHdrCreateInfoAMD ends

; TYPEDEF PFN_vkSetLocalDimmingAMD = void (*)(VkDevice, VkSwapchainKHR, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSetLocalDimmingAMD typedef qword

; void vkSetLocalDimmingAMD(VkDevice device, VkSwapchainKHR swapChain, VkBool32 localDimmingEnable)
vkSetLocalDimmingAMD qword ?

VkPhysicalDeviceFragmentDensityMapFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityMap, type = VkBool32, offset = 16, size = 4
    fragmentDensityMap VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentDensityMapDynamic, type = VkBool32, offset = 20, size = 4
    fragmentDensityMapDynamic VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentDensityMapNonSubsampledImages, type = VkBool32, offset = 24, size = 4
    fragmentDensityMapNonSubsampledImages VkBool32 <>
VkPhysicalDeviceFragmentDensityMapFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceFragmentDensityMapFeaturesEXT = struct VkPhysicalDeviceFragmentDensityMapFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentDensityMapFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityMap, type = VkBool32, offset = 16, size = 4
    fragmentDensityMap VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentDensityMapDynamic, type = VkBool32, offset = 20, size = 4
    fragmentDensityMapDynamic VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentDensityMapNonSubsampledImages, type = VkBool32, offset = 24, size = 4
    fragmentDensityMapNonSubsampledImages VkBool32 <>
VkPhysicalDeviceFragmentDensityMapFeaturesEXT ends

VkPhysicalDeviceFragmentDensityMapPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minFragmentDensityTexelSize, type = VkExtent2D, offset = 16, size = 8
    minFragmentDensityTexelSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxFragmentDensityTexelSize, type = VkExtent2D, offset = 24, size = 8
    maxFragmentDensityTexelSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = fragmentDensityInvocations, type = VkBool32, offset = 32, size = 4
    fragmentDensityInvocations VkBool32 <>
VkPhysicalDeviceFragmentDensityMapPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceFragmentDensityMapPropertiesEXT = struct VkPhysicalDeviceFragmentDensityMapPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentDensityMapPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minFragmentDensityTexelSize, type = VkExtent2D, offset = 16, size = 8
    minFragmentDensityTexelSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxFragmentDensityTexelSize, type = VkExtent2D, offset = 24, size = 8
    maxFragmentDensityTexelSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = fragmentDensityInvocations, type = VkBool32, offset = 32, size = 4
    fragmentDensityInvocations VkBool32 <>
VkPhysicalDeviceFragmentDensityMapPropertiesEXT ends

VkRenderPassFragmentDensityMapCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityMapAttachment, type = VkAttachmentReference, offset = 16, size = 8
    fragmentDensityMapAttachment VkAttachmentReference <>
VkRenderPassFragmentDensityMapCreateInfoEXT ends

; TYPEDEF VkRenderPassFragmentDensityMapCreateInfoEXT = struct VkRenderPassFragmentDensityMapCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassFragmentDensityMapCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityMapAttachment, type = VkAttachmentReference, offset = 16, size = 8
    fragmentDensityMapAttachment VkAttachmentReference <>
VkRenderPassFragmentDensityMapCreateInfoEXT ends

; TYPEDEF VkPhysicalDeviceScalarBlockLayoutFeaturesEXT = VkPhysicalDeviceScalarBlockLayoutFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = VkPhysicalDeviceSubgroupSizeControlFeatures, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = VkPhysicalDeviceSubgroupSizeControlProperties, TypeKind.ELABORATED

; TYPEDEF VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT = VkPipelineShaderStageRequiredSubgroupSizeCreateInfo, TypeKind.ELABORATED

; enum VkShaderCorePropertiesFlagBitsAMD {
    VK_SHADER_CORE_PROPERTIES_FLAG_BITS_MAX_ENUM_AMD equ 2147483647
; }

; TYPEDEF VkShaderCorePropertiesFlagBitsAMD = enum VkShaderCorePropertiesFlagBitsAMD, TypeKind.ELABORATED
VkShaderCorePropertiesFlagBitsAMD typedef dword

; enum VkShaderCorePropertiesFlagBitsAMD {
    VK_SHADER_CORE_PROPERTIES_FLAG_BITS_MAX_ENUM_AMD equ 2147483647
; }

; TYPEDEF VkShaderCorePropertiesFlagsAMD = VkFlags, TypeKind.ELABORATED
VkShaderCorePropertiesFlagsAMD typedef dword

VkPhysicalDeviceShaderCoreProperties2AMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderCoreFeatures, type = VkShaderCorePropertiesFlagsAMD, offset = 16, size = 4
    shaderCoreFeatures VkShaderCorePropertiesFlagsAMD <>
;   TypeKind.ELABORATED
;   name = activeComputeUnitCount, type = uint32_t, offset = 20, size = 4
    activeComputeUnitCount dword ?
VkPhysicalDeviceShaderCoreProperties2AMD ends

; TYPEDEF VkPhysicalDeviceShaderCoreProperties2AMD = struct VkPhysicalDeviceShaderCoreProperties2AMD, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderCoreProperties2AMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderCoreFeatures, type = VkShaderCorePropertiesFlagsAMD, offset = 16, size = 4
    shaderCoreFeatures VkShaderCorePropertiesFlagsAMD <>
;   TypeKind.ELABORATED
;   name = activeComputeUnitCount, type = uint32_t, offset = 20, size = 4
    activeComputeUnitCount dword ?
VkPhysicalDeviceShaderCoreProperties2AMD ends

VkPhysicalDeviceCoherentMemoryFeaturesAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceCoherentMemory, type = VkBool32, offset = 16, size = 4
    deviceCoherentMemory VkBool32 <>
VkPhysicalDeviceCoherentMemoryFeaturesAMD ends

; TYPEDEF VkPhysicalDeviceCoherentMemoryFeaturesAMD = struct VkPhysicalDeviceCoherentMemoryFeaturesAMD, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCoherentMemoryFeaturesAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceCoherentMemory, type = VkBool32, offset = 16, size = 4
    deviceCoherentMemory VkBool32 <>
VkPhysicalDeviceCoherentMemoryFeaturesAMD ends

VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderImageInt64Atomics, type = VkBool32, offset = 16, size = 4
    shaderImageInt64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseImageInt64Atomics, type = VkBool32, offset = 20, size = 4
    sparseImageInt64Atomics VkBool32 <>
VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT ends

; TYPEDEF VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT = struct VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderImageInt64Atomics, type = VkBool32, offset = 16, size = 4
    shaderImageInt64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseImageInt64Atomics, type = VkBool32, offset = 20, size = 4
    sparseImageInt64Atomics VkBool32 <>
VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT ends

VkPhysicalDeviceMemoryBudgetPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = heapBudget, type = VkDeviceSize[16], offset = 16, size = 128
    heapBudget VkDeviceSize 16 dup(<>)
;   TypeKind.CONSTANTARRAY
;   name = heapUsage, type = VkDeviceSize[16], offset = 144, size = 128
    heapUsage VkDeviceSize 16 dup(<>)
VkPhysicalDeviceMemoryBudgetPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceMemoryBudgetPropertiesEXT = struct VkPhysicalDeviceMemoryBudgetPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMemoryBudgetPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = heapBudget, type = VkDeviceSize[16], offset = 16, size = 128
    heapBudget VkDeviceSize 16 dup(<>)
;   TypeKind.CONSTANTARRAY
;   name = heapUsage, type = VkDeviceSize[16], offset = 144, size = 128
    heapUsage VkDeviceSize 16 dup(<>)
VkPhysicalDeviceMemoryBudgetPropertiesEXT ends

VkPhysicalDeviceMemoryPriorityFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryPriority, type = VkBool32, offset = 16, size = 4
    memoryPriority VkBool32 <>
VkPhysicalDeviceMemoryPriorityFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceMemoryPriorityFeaturesEXT = struct VkPhysicalDeviceMemoryPriorityFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMemoryPriorityFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryPriority, type = VkBool32, offset = 16, size = 4
    memoryPriority VkBool32 <>
VkPhysicalDeviceMemoryPriorityFeaturesEXT ends

VkMemoryPriorityAllocateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.FLOAT
;   name = priority, type = float, offset = 16, size = 4
    priority real4 ?
VkMemoryPriorityAllocateInfoEXT ends

; TYPEDEF VkMemoryPriorityAllocateInfoEXT = struct VkMemoryPriorityAllocateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkMemoryPriorityAllocateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.FLOAT
;   name = priority, type = float, offset = 16, size = 4
    priority real4 ?
VkMemoryPriorityAllocateInfoEXT ends

VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dedicatedAllocationImageAliasing, type = VkBool32, offset = 16, size = 4
    dedicatedAllocationImageAliasing VkBool32 <>
VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV ends

; TYPEDEF VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV = struct VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dedicatedAllocationImageAliasing, type = VkBool32, offset = 16, size = 4
    dedicatedAllocationImageAliasing VkBool32 <>
VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV ends

VkPhysicalDeviceBufferDeviceAddressFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = bufferDeviceAddress, type = VkBool32, offset = 16, size = 4
    bufferDeviceAddress VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressCaptureReplay, type = VkBool32, offset = 20, size = 4
    bufferDeviceAddressCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressMultiDevice, type = VkBool32, offset = 24, size = 4
    bufferDeviceAddressMultiDevice VkBool32 <>
VkPhysicalDeviceBufferDeviceAddressFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceBufferDeviceAddressFeaturesEXT = struct VkPhysicalDeviceBufferDeviceAddressFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceBufferDeviceAddressFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = bufferDeviceAddress, type = VkBool32, offset = 16, size = 4
    bufferDeviceAddress VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressCaptureReplay, type = VkBool32, offset = 20, size = 4
    bufferDeviceAddressCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferDeviceAddressMultiDevice, type = VkBool32, offset = 24, size = 4
    bufferDeviceAddressMultiDevice VkBool32 <>
VkPhysicalDeviceBufferDeviceAddressFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceBufferAddressFeaturesEXT = VkPhysicalDeviceBufferDeviceAddressFeaturesEXT, TypeKind.ELABORATED

; TYPEDEF VkBufferDeviceAddressInfoEXT = VkBufferDeviceAddressInfo, TypeKind.ELABORATED

VkBufferDeviceAddressCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 16, size = 8
    deviceAddress VkDeviceAddress <>
VkBufferDeviceAddressCreateInfoEXT ends

; TYPEDEF VkBufferDeviceAddressCreateInfoEXT = struct VkBufferDeviceAddressCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkBufferDeviceAddressCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 16, size = 8
    deviceAddress VkDeviceAddress <>
VkBufferDeviceAddressCreateInfoEXT ends

; TYPEDEF PFN_vkGetBufferDeviceAddressEXT = VkDeviceAddress (*)(VkDevice, const VkBufferDeviceAddressInfo *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetBufferDeviceAddressEXT typedef qword

; VkDeviceAddress vkGetBufferDeviceAddressEXT(VkDevice device, const VkBufferDeviceAddressInfo * pInfo)
vkGetBufferDeviceAddressEXT qword ?

; TYPEDEF VkToolPurposeFlagBitsEXT = VkToolPurposeFlagBits, TypeKind.ELABORATED

; TYPEDEF VkToolPurposeFlagsEXT = VkToolPurposeFlags, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceToolPropertiesEXT = VkPhysicalDeviceToolProperties, TypeKind.ELABORATED

; TYPEDEF PFN_vkGetPhysicalDeviceToolPropertiesEXT = VkResult (*)(VkPhysicalDevice, uint32_t *, VkPhysicalDeviceToolProperties *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceToolPropertiesEXT typedef qword

; VkResult vkGetPhysicalDeviceToolPropertiesEXT(VkPhysicalDevice physicalDevice, uint32_t * pToolCount, VkPhysicalDeviceToolProperties * pToolProperties)
vkGetPhysicalDeviceToolPropertiesEXT qword ?

; TYPEDEF VkImageStencilUsageCreateInfoEXT = VkImageStencilUsageCreateInfo, TypeKind.ELABORATED

; enum VkValidationFeatureEnableEXT {
    VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT equ 0
    VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT equ 1
    VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT equ 2
    VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT equ 3
    VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT equ 4
    VK_VALIDATION_FEATURE_ENABLE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkValidationFeatureEnableEXT = enum VkValidationFeatureEnableEXT, TypeKind.ELABORATED
VkValidationFeatureEnableEXT typedef dword

; enum VkValidationFeatureEnableEXT {
    VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT equ 0
    VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT equ 1
    VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT equ 2
    VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT equ 3
    VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT equ 4
    VK_VALIDATION_FEATURE_ENABLE_MAX_ENUM_EXT equ 2147483647
; }

; enum VkValidationFeatureDisableEXT {
    VK_VALIDATION_FEATURE_DISABLE_ALL_EXT equ 0
    VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT equ 1
    VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT equ 2
    VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT equ 3
    VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT equ 4
    VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT equ 5
    VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT equ 6
    VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT equ 7
    VK_VALIDATION_FEATURE_DISABLE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkValidationFeatureDisableEXT = enum VkValidationFeatureDisableEXT, TypeKind.ELABORATED
VkValidationFeatureDisableEXT typedef dword

; enum VkValidationFeatureDisableEXT {
    VK_VALIDATION_FEATURE_DISABLE_ALL_EXT equ 0
    VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT equ 1
    VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT equ 2
    VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT equ 3
    VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT equ 4
    VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT equ 5
    VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT equ 6
    VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT equ 7
    VK_VALIDATION_FEATURE_DISABLE_MAX_ENUM_EXT equ 2147483647
; }

VkValidationFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = enabledValidationFeatureCount, type = uint32_t, offset = 16, size = 4
    enabledValidationFeatureCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pEnabledValidationFeatures, type = const VkValidationFeatureEnableEXT *, offset = 24, size = 8
    pEnabledValidationFeatures qword ?
;   TypeKind.ELABORATED
;   name = disabledValidationFeatureCount, type = uint32_t, offset = 32, size = 4
    disabledValidationFeatureCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDisabledValidationFeatures, type = const VkValidationFeatureDisableEXT *, offset = 40, size = 8
    pDisabledValidationFeatures qword ?
VkValidationFeaturesEXT ends

; TYPEDEF VkValidationFeaturesEXT = struct VkValidationFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkValidationFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = enabledValidationFeatureCount, type = uint32_t, offset = 16, size = 4
    enabledValidationFeatureCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pEnabledValidationFeatures, type = const VkValidationFeatureEnableEXT *, offset = 24, size = 8
    pEnabledValidationFeatures qword ?
;   TypeKind.ELABORATED
;   name = disabledValidationFeatureCount, type = uint32_t, offset = 32, size = 4
    disabledValidationFeatureCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDisabledValidationFeatures, type = const VkValidationFeatureDisableEXT *, offset = 40, size = 8
    pDisabledValidationFeatures qword ?
VkValidationFeaturesEXT ends

; TYPEDEF VkComponentTypeNV = VkComponentTypeKHR, TypeKind.ELABORATED

; TYPEDEF VkScopeNV = VkScopeKHR, TypeKind.ELABORATED

VkCooperativeMatrixPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = MSize, type = uint32_t, offset = 16, size = 4
    MSize dword ?
;   TypeKind.ELABORATED
;   name = NSize, type = uint32_t, offset = 20, size = 4
    NSize dword ?
;   TypeKind.ELABORATED
;   name = KSize, type = uint32_t, offset = 24, size = 4
    KSize dword ?
;   TypeKind.ELABORATED
;   name = AType, type = VkComponentTypeNV, offset = 28, size = 4
    AType VkComponentTypeNV <>
;   TypeKind.ELABORATED
;   name = BType, type = VkComponentTypeNV, offset = 32, size = 4
    BType VkComponentTypeNV <>
;   TypeKind.ELABORATED
;   name = CType, type = VkComponentTypeNV, offset = 36, size = 4
    CType VkComponentTypeNV <>
;   TypeKind.ELABORATED
;   name = DType, type = VkComponentTypeNV, offset = 40, size = 4
    DType VkComponentTypeNV <>
;   TypeKind.ELABORATED
;   name = scope, type = VkScopeNV, offset = 44, size = 4
    scope VkScopeNV <>
VkCooperativeMatrixPropertiesNV ends

; TYPEDEF VkCooperativeMatrixPropertiesNV = struct VkCooperativeMatrixPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkCooperativeMatrixPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = MSize, type = uint32_t, offset = 16, size = 4
    MSize dword ?
;   TypeKind.ELABORATED
;   name = NSize, type = uint32_t, offset = 20, size = 4
    NSize dword ?
;   TypeKind.ELABORATED
;   name = KSize, type = uint32_t, offset = 24, size = 4
    KSize dword ?
;   TypeKind.ELABORATED
;   name = AType, type = VkComponentTypeNV, offset = 28, size = 4
    AType VkComponentTypeNV <>
;   TypeKind.ELABORATED
;   name = BType, type = VkComponentTypeNV, offset = 32, size = 4
    BType VkComponentTypeNV <>
;   TypeKind.ELABORATED
;   name = CType, type = VkComponentTypeNV, offset = 36, size = 4
    CType VkComponentTypeNV <>
;   TypeKind.ELABORATED
;   name = DType, type = VkComponentTypeNV, offset = 40, size = 4
    DType VkComponentTypeNV <>
;   TypeKind.ELABORATED
;   name = scope, type = VkScopeNV, offset = 44, size = 4
    scope VkScopeNV <>
VkCooperativeMatrixPropertiesNV ends

VkPhysicalDeviceCooperativeMatrixFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cooperativeMatrix, type = VkBool32, offset = 16, size = 4
    cooperativeMatrix VkBool32 <>
;   TypeKind.ELABORATED
;   name = cooperativeMatrixRobustBufferAccess, type = VkBool32, offset = 20, size = 4
    cooperativeMatrixRobustBufferAccess VkBool32 <>
VkPhysicalDeviceCooperativeMatrixFeaturesNV ends

; TYPEDEF VkPhysicalDeviceCooperativeMatrixFeaturesNV = struct VkPhysicalDeviceCooperativeMatrixFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCooperativeMatrixFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cooperativeMatrix, type = VkBool32, offset = 16, size = 4
    cooperativeMatrix VkBool32 <>
;   TypeKind.ELABORATED
;   name = cooperativeMatrixRobustBufferAccess, type = VkBool32, offset = 20, size = 4
    cooperativeMatrixRobustBufferAccess VkBool32 <>
VkPhysicalDeviceCooperativeMatrixFeaturesNV ends

VkPhysicalDeviceCooperativeMatrixPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cooperativeMatrixSupportedStages, type = VkShaderStageFlags, offset = 16, size = 4
    cooperativeMatrixSupportedStages VkShaderStageFlags <>
VkPhysicalDeviceCooperativeMatrixPropertiesNV ends

; TYPEDEF VkPhysicalDeviceCooperativeMatrixPropertiesNV = struct VkPhysicalDeviceCooperativeMatrixPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCooperativeMatrixPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cooperativeMatrixSupportedStages, type = VkShaderStageFlags, offset = 16, size = 4
    cooperativeMatrixSupportedStages VkShaderStageFlags <>
VkPhysicalDeviceCooperativeMatrixPropertiesNV ends

; TYPEDEF PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV = VkResult (*)(VkPhysicalDevice, uint32_t *, VkCooperativeMatrixPropertiesNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV typedef qword

; VkResult vkGetPhysicalDeviceCooperativeMatrixPropertiesNV(VkPhysicalDevice physicalDevice, uint32_t * pPropertyCount, VkCooperativeMatrixPropertiesNV * pProperties)
vkGetPhysicalDeviceCooperativeMatrixPropertiesNV qword ?

; enum VkCoverageReductionModeNV {
    VK_COVERAGE_REDUCTION_MODE_MERGE_NV equ 0
    VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV equ 1
    VK_COVERAGE_REDUCTION_MODE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkCoverageReductionModeNV = enum VkCoverageReductionModeNV, TypeKind.ELABORATED
VkCoverageReductionModeNV typedef dword

; enum VkCoverageReductionModeNV {
    VK_COVERAGE_REDUCTION_MODE_MERGE_NV equ 0
    VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV equ 1
    VK_COVERAGE_REDUCTION_MODE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkPipelineCoverageReductionStateCreateFlagsNV = VkFlags, TypeKind.ELABORATED
VkPipelineCoverageReductionStateCreateFlagsNV typedef dword

VkPhysicalDeviceCoverageReductionModeFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = coverageReductionMode, type = VkBool32, offset = 16, size = 4
    coverageReductionMode VkBool32 <>
VkPhysicalDeviceCoverageReductionModeFeaturesNV ends

; TYPEDEF VkPhysicalDeviceCoverageReductionModeFeaturesNV = struct VkPhysicalDeviceCoverageReductionModeFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCoverageReductionModeFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = coverageReductionMode, type = VkBool32, offset = 16, size = 4
    coverageReductionMode VkBool32 <>
VkPhysicalDeviceCoverageReductionModeFeaturesNV ends

VkPipelineCoverageReductionStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCoverageReductionStateCreateFlagsNV, offset = 16, size = 4
    flags VkPipelineCoverageReductionStateCreateFlagsNV <>
;   TypeKind.ELABORATED
;   name = coverageReductionMode, type = VkCoverageReductionModeNV, offset = 20, size = 4
    coverageReductionMode VkCoverageReductionModeNV <>
VkPipelineCoverageReductionStateCreateInfoNV ends

; TYPEDEF VkPipelineCoverageReductionStateCreateInfoNV = struct VkPipelineCoverageReductionStateCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkPipelineCoverageReductionStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCoverageReductionStateCreateFlagsNV, offset = 16, size = 4
    flags VkPipelineCoverageReductionStateCreateFlagsNV <>
;   TypeKind.ELABORATED
;   name = coverageReductionMode, type = VkCoverageReductionModeNV, offset = 20, size = 4
    coverageReductionMode VkCoverageReductionModeNV <>
VkPipelineCoverageReductionStateCreateInfoNV ends

VkFramebufferMixedSamplesCombinationNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = coverageReductionMode, type = VkCoverageReductionModeNV, offset = 16, size = 4
    coverageReductionMode VkCoverageReductionModeNV <>
;   TypeKind.ELABORATED
;   name = rasterizationSamples, type = VkSampleCountFlagBits, offset = 20, size = 4
    rasterizationSamples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = depthStencilSamples, type = VkSampleCountFlags, offset = 24, size = 4
    depthStencilSamples VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = colorSamples, type = VkSampleCountFlags, offset = 28, size = 4
    colorSamples VkSampleCountFlags <>
VkFramebufferMixedSamplesCombinationNV ends

; TYPEDEF VkFramebufferMixedSamplesCombinationNV = struct VkFramebufferMixedSamplesCombinationNV, TypeKind.ELABORATED
; remove struct typedef

VkFramebufferMixedSamplesCombinationNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = coverageReductionMode, type = VkCoverageReductionModeNV, offset = 16, size = 4
    coverageReductionMode VkCoverageReductionModeNV <>
;   TypeKind.ELABORATED
;   name = rasterizationSamples, type = VkSampleCountFlagBits, offset = 20, size = 4
    rasterizationSamples VkSampleCountFlagBits <>
;   TypeKind.ELABORATED
;   name = depthStencilSamples, type = VkSampleCountFlags, offset = 24, size = 4
    depthStencilSamples VkSampleCountFlags <>
;   TypeKind.ELABORATED
;   name = colorSamples, type = VkSampleCountFlags, offset = 28, size = 4
    colorSamples VkSampleCountFlags <>
VkFramebufferMixedSamplesCombinationNV ends

; TYPEDEF PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = VkResult (*)(VkPhysicalDevice, uint32_t *, VkFramebufferMixedSamplesCombinationNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV typedef qword

; VkResult vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(VkPhysicalDevice physicalDevice, uint32_t * pCombinationCount, VkFramebufferMixedSamplesCombinationNV * pCombinations)
vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV qword ?

VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentShaderSampleInterlock, type = VkBool32, offset = 16, size = 4
    fragmentShaderSampleInterlock VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShaderPixelInterlock, type = VkBool32, offset = 20, size = 4
    fragmentShaderPixelInterlock VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShaderShadingRateInterlock, type = VkBool32, offset = 24, size = 4
    fragmentShaderShadingRateInterlock VkBool32 <>
VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT = struct VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentShaderSampleInterlock, type = VkBool32, offset = 16, size = 4
    fragmentShaderSampleInterlock VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShaderPixelInterlock, type = VkBool32, offset = 20, size = 4
    fragmentShaderPixelInterlock VkBool32 <>
;   TypeKind.ELABORATED
;   name = fragmentShaderShadingRateInterlock, type = VkBool32, offset = 24, size = 4
    fragmentShaderShadingRateInterlock VkBool32 <>
VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT ends

VkPhysicalDeviceYcbcrImageArraysFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = ycbcrImageArrays, type = VkBool32, offset = 16, size = 4
    ycbcrImageArrays VkBool32 <>
VkPhysicalDeviceYcbcrImageArraysFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceYcbcrImageArraysFeaturesEXT = struct VkPhysicalDeviceYcbcrImageArraysFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceYcbcrImageArraysFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = ycbcrImageArrays, type = VkBool32, offset = 16, size = 4
    ycbcrImageArrays VkBool32 <>
VkPhysicalDeviceYcbcrImageArraysFeaturesEXT ends

; enum VkProvokingVertexModeEXT {
    VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT equ 0
    VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT equ 1
    VK_PROVOKING_VERTEX_MODE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkProvokingVertexModeEXT = enum VkProvokingVertexModeEXT, TypeKind.ELABORATED
VkProvokingVertexModeEXT typedef dword

; enum VkProvokingVertexModeEXT {
    VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT equ 0
    VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT equ 1
    VK_PROVOKING_VERTEX_MODE_MAX_ENUM_EXT equ 2147483647
; }

VkPhysicalDeviceProvokingVertexFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = provokingVertexLast, type = VkBool32, offset = 16, size = 4
    provokingVertexLast VkBool32 <>
;   TypeKind.ELABORATED
;   name = transformFeedbackPreservesProvokingVertex, type = VkBool32, offset = 20, size = 4
    transformFeedbackPreservesProvokingVertex VkBool32 <>
VkPhysicalDeviceProvokingVertexFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceProvokingVertexFeaturesEXT = struct VkPhysicalDeviceProvokingVertexFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceProvokingVertexFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = provokingVertexLast, type = VkBool32, offset = 16, size = 4
    provokingVertexLast VkBool32 <>
;   TypeKind.ELABORATED
;   name = transformFeedbackPreservesProvokingVertex, type = VkBool32, offset = 20, size = 4
    transformFeedbackPreservesProvokingVertex VkBool32 <>
VkPhysicalDeviceProvokingVertexFeaturesEXT ends

VkPhysicalDeviceProvokingVertexPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = provokingVertexModePerPipeline, type = VkBool32, offset = 16, size = 4
    provokingVertexModePerPipeline VkBool32 <>
;   TypeKind.ELABORATED
;   name = transformFeedbackPreservesTriangleFanProvokingVertex, type = VkBool32, offset = 20, size = 4
    transformFeedbackPreservesTriangleFanProvokingVertex VkBool32 <>
VkPhysicalDeviceProvokingVertexPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceProvokingVertexPropertiesEXT = struct VkPhysicalDeviceProvokingVertexPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceProvokingVertexPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = provokingVertexModePerPipeline, type = VkBool32, offset = 16, size = 4
    provokingVertexModePerPipeline VkBool32 <>
;   TypeKind.ELABORATED
;   name = transformFeedbackPreservesTriangleFanProvokingVertex, type = VkBool32, offset = 20, size = 4
    transformFeedbackPreservesTriangleFanProvokingVertex VkBool32 <>
VkPhysicalDeviceProvokingVertexPropertiesEXT ends

VkPipelineRasterizationProvokingVertexStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = provokingVertexMode, type = VkProvokingVertexModeEXT, offset = 16, size = 4
    provokingVertexMode VkProvokingVertexModeEXT <>
VkPipelineRasterizationProvokingVertexStateCreateInfoEXT ends

; TYPEDEF VkPipelineRasterizationProvokingVertexStateCreateInfoEXT = struct VkPipelineRasterizationProvokingVertexStateCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelineRasterizationProvokingVertexStateCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = provokingVertexMode, type = VkProvokingVertexModeEXT, offset = 16, size = 4
    provokingVertexMode VkProvokingVertexModeEXT <>
VkPipelineRasterizationProvokingVertexStateCreateInfoEXT ends

; TYPEDEF VkHeadlessSurfaceCreateFlagsEXT = VkFlags, TypeKind.ELABORATED
VkHeadlessSurfaceCreateFlagsEXT typedef dword

VkHeadlessSurfaceCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkHeadlessSurfaceCreateFlagsEXT, offset = 16, size = 4
    flags VkHeadlessSurfaceCreateFlagsEXT <>
VkHeadlessSurfaceCreateInfoEXT ends

; TYPEDEF VkHeadlessSurfaceCreateInfoEXT = struct VkHeadlessSurfaceCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkHeadlessSurfaceCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkHeadlessSurfaceCreateFlagsEXT, offset = 16, size = 4
    flags VkHeadlessSurfaceCreateFlagsEXT <>
VkHeadlessSurfaceCreateInfoEXT ends

; TYPEDEF PFN_vkCreateHeadlessSurfaceEXT = VkResult (*)(VkInstance, const VkHeadlessSurfaceCreateInfoEXT *, const VkAllocationCallbacks *, VkSurfaceKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateHeadlessSurfaceEXT typedef qword

; VkResult vkCreateHeadlessSurfaceEXT(VkInstance instance, const VkHeadlessSurfaceCreateInfoEXT * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkSurfaceKHR * pSurface)
vkCreateHeadlessSurfaceEXT qword ?

; TYPEDEF VkLineRasterizationModeEXT = VkLineRasterizationModeKHR, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceLineRasterizationFeaturesEXT = VkPhysicalDeviceLineRasterizationFeaturesKHR, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDeviceLineRasterizationPropertiesEXT = VkPhysicalDeviceLineRasterizationPropertiesKHR, TypeKind.ELABORATED

; TYPEDEF VkPipelineRasterizationLineStateCreateInfoEXT = VkPipelineRasterizationLineStateCreateInfoKHR, TypeKind.ELABORATED

; TYPEDEF PFN_vkCmdSetLineStippleEXT = void (*)(VkCommandBuffer, uint32_t, uint16_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetLineStippleEXT typedef qword

; void vkCmdSetLineStippleEXT(VkCommandBuffer commandBuffer, uint32_t lineStippleFactor, uint16_t lineStipplePattern)
vkCmdSetLineStippleEXT qword ?

VkPhysicalDeviceShaderAtomicFloatFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderBufferFloat32Atomics, type = VkBool32, offset = 16, size = 4
    shaderBufferFloat32Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat32AtomicAdd, type = VkBool32, offset = 20, size = 4
    shaderBufferFloat32AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat64Atomics, type = VkBool32, offset = 24, size = 4
    shaderBufferFloat64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat64AtomicAdd, type = VkBool32, offset = 28, size = 4
    shaderBufferFloat64AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat32Atomics, type = VkBool32, offset = 32, size = 4
    shaderSharedFloat32Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat32AtomicAdd, type = VkBool32, offset = 36, size = 4
    shaderSharedFloat32AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat64Atomics, type = VkBool32, offset = 40, size = 4
    shaderSharedFloat64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat64AtomicAdd, type = VkBool32, offset = 44, size = 4
    shaderSharedFloat64AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderImageFloat32Atomics, type = VkBool32, offset = 48, size = 4
    shaderImageFloat32Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderImageFloat32AtomicAdd, type = VkBool32, offset = 52, size = 4
    shaderImageFloat32AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseImageFloat32Atomics, type = VkBool32, offset = 56, size = 4
    sparseImageFloat32Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseImageFloat32AtomicAdd, type = VkBool32, offset = 60, size = 4
    sparseImageFloat32AtomicAdd VkBool32 <>
VkPhysicalDeviceShaderAtomicFloatFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceShaderAtomicFloatFeaturesEXT = struct VkPhysicalDeviceShaderAtomicFloatFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderAtomicFloatFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderBufferFloat32Atomics, type = VkBool32, offset = 16, size = 4
    shaderBufferFloat32Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat32AtomicAdd, type = VkBool32, offset = 20, size = 4
    shaderBufferFloat32AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat64Atomics, type = VkBool32, offset = 24, size = 4
    shaderBufferFloat64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat64AtomicAdd, type = VkBool32, offset = 28, size = 4
    shaderBufferFloat64AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat32Atomics, type = VkBool32, offset = 32, size = 4
    shaderSharedFloat32Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat32AtomicAdd, type = VkBool32, offset = 36, size = 4
    shaderSharedFloat32AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat64Atomics, type = VkBool32, offset = 40, size = 4
    shaderSharedFloat64Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat64AtomicAdd, type = VkBool32, offset = 44, size = 4
    shaderSharedFloat64AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderImageFloat32Atomics, type = VkBool32, offset = 48, size = 4
    shaderImageFloat32Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderImageFloat32AtomicAdd, type = VkBool32, offset = 52, size = 4
    shaderImageFloat32AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseImageFloat32Atomics, type = VkBool32, offset = 56, size = 4
    sparseImageFloat32Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseImageFloat32AtomicAdd, type = VkBool32, offset = 60, size = 4
    sparseImageFloat32AtomicAdd VkBool32 <>
VkPhysicalDeviceShaderAtomicFloatFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceHostQueryResetFeaturesEXT = VkPhysicalDeviceHostQueryResetFeatures, TypeKind.ELABORATED

; TYPEDEF PFN_vkResetQueryPoolEXT = void (*)(VkDevice, VkQueryPool, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkResetQueryPoolEXT typedef qword

; void vkResetQueryPoolEXT(VkDevice device, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount)
vkResetQueryPoolEXT qword ?

; TYPEDEF VkPhysicalDeviceIndexTypeUint8FeaturesEXT = VkPhysicalDeviceIndexTypeUint8FeaturesKHR, TypeKind.ELABORATED

VkPhysicalDeviceExtendedDynamicStateFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = extendedDynamicState, type = VkBool32, offset = 16, size = 4
    extendedDynamicState VkBool32 <>
VkPhysicalDeviceExtendedDynamicStateFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceExtendedDynamicStateFeaturesEXT = struct VkPhysicalDeviceExtendedDynamicStateFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExtendedDynamicStateFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = extendedDynamicState, type = VkBool32, offset = 16, size = 4
    extendedDynamicState VkBool32 <>
VkPhysicalDeviceExtendedDynamicStateFeaturesEXT ends

; TYPEDEF PFN_vkCmdSetCullModeEXT = void (*)(VkCommandBuffer, VkCullModeFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetCullModeEXT typedef qword

; TYPEDEF PFN_vkCmdSetFrontFaceEXT = void (*)(VkCommandBuffer, VkFrontFace) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetFrontFaceEXT typedef qword

; TYPEDEF PFN_vkCmdSetPrimitiveTopologyEXT = void (*)(VkCommandBuffer, VkPrimitiveTopology) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetPrimitiveTopologyEXT typedef qword

; TYPEDEF PFN_vkCmdSetViewportWithCountEXT = void (*)(VkCommandBuffer, uint32_t, const VkViewport *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetViewportWithCountEXT typedef qword

; TYPEDEF PFN_vkCmdSetScissorWithCountEXT = void (*)(VkCommandBuffer, uint32_t, const VkRect2D *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetScissorWithCountEXT typedef qword

; TYPEDEF PFN_vkCmdBindVertexBuffers2EXT = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkBuffer *, const VkDeviceSize *, const VkDeviceSize *, const VkDeviceSize *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindVertexBuffers2EXT typedef qword

; TYPEDEF PFN_vkCmdSetDepthTestEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthTestEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetDepthWriteEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthWriteEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetDepthCompareOpEXT = void (*)(VkCommandBuffer, VkCompareOp) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthCompareOpEXT typedef qword

; TYPEDEF PFN_vkCmdSetDepthBoundsTestEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthBoundsTestEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetStencilTestEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetStencilTestEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetStencilOpEXT = void (*)(VkCommandBuffer, VkStencilFaceFlags, VkStencilOp, VkStencilOp, VkStencilOp, VkCompareOp) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetStencilOpEXT typedef qword

; void vkCmdSetCullModeEXT(VkCommandBuffer commandBuffer, VkCullModeFlags cullMode)
vkCmdSetCullModeEXT qword ?

; void vkCmdSetFrontFaceEXT(VkCommandBuffer commandBuffer, VkFrontFace frontFace)
vkCmdSetFrontFaceEXT qword ?

; void vkCmdSetPrimitiveTopologyEXT(VkCommandBuffer commandBuffer, VkPrimitiveTopology primitiveTopology)
vkCmdSetPrimitiveTopologyEXT qword ?

; void vkCmdSetViewportWithCountEXT(VkCommandBuffer commandBuffer, uint32_t viewportCount, const VkViewport * pViewports)
vkCmdSetViewportWithCountEXT qword ?

; void vkCmdSetScissorWithCountEXT(VkCommandBuffer commandBuffer, uint32_t scissorCount, const VkRect2D * pScissors)
vkCmdSetScissorWithCountEXT qword ?

; void vkCmdBindVertexBuffers2EXT(VkCommandBuffer commandBuffer, uint32_t firstBinding, uint32_t bindingCount, const VkBuffer * pBuffers, const VkDeviceSize * pOffsets, const VkDeviceSize * pSizes, const VkDeviceSize * pStrides)
vkCmdBindVertexBuffers2EXT qword ?

; void vkCmdSetDepthTestEnableEXT(VkCommandBuffer commandBuffer, VkBool32 depthTestEnable)
vkCmdSetDepthTestEnableEXT qword ?

; void vkCmdSetDepthWriteEnableEXT(VkCommandBuffer commandBuffer, VkBool32 depthWriteEnable)
vkCmdSetDepthWriteEnableEXT qword ?

; void vkCmdSetDepthCompareOpEXT(VkCommandBuffer commandBuffer, VkCompareOp depthCompareOp)
vkCmdSetDepthCompareOpEXT qword ?

; void vkCmdSetDepthBoundsTestEnableEXT(VkCommandBuffer commandBuffer, VkBool32 depthBoundsTestEnable)
vkCmdSetDepthBoundsTestEnableEXT qword ?

; void vkCmdSetStencilTestEnableEXT(VkCommandBuffer commandBuffer, VkBool32 stencilTestEnable)
vkCmdSetStencilTestEnableEXT qword ?

; void vkCmdSetStencilOpEXT(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, VkStencilOp failOp, VkStencilOp passOp, VkStencilOp depthFailOp, VkCompareOp compareOp)
vkCmdSetStencilOpEXT qword ?

; enum VkHostImageCopyFlagBitsEXT {
    VK_HOST_IMAGE_COPY_MEMCPY_EXT equ 1
    VK_HOST_IMAGE_COPY_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkHostImageCopyFlagBitsEXT = enum VkHostImageCopyFlagBitsEXT, TypeKind.ELABORATED
VkHostImageCopyFlagBitsEXT typedef dword

; enum VkHostImageCopyFlagBitsEXT {
    VK_HOST_IMAGE_COPY_MEMCPY_EXT equ 1
    VK_HOST_IMAGE_COPY_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkHostImageCopyFlagsEXT = VkFlags, TypeKind.ELABORATED
VkHostImageCopyFlagsEXT typedef dword

VkPhysicalDeviceHostImageCopyFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hostImageCopy, type = VkBool32, offset = 16, size = 4
    hostImageCopy VkBool32 <>
VkPhysicalDeviceHostImageCopyFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceHostImageCopyFeaturesEXT = struct VkPhysicalDeviceHostImageCopyFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceHostImageCopyFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hostImageCopy, type = VkBool32, offset = 16, size = 4
    hostImageCopy VkBool32 <>
VkPhysicalDeviceHostImageCopyFeaturesEXT ends

VkPhysicalDeviceHostImageCopyPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = copySrcLayoutCount, type = uint32_t, offset = 16, size = 4
    copySrcLayoutCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCopySrcLayouts, type = VkImageLayout *, offset = 24, size = 8
    pCopySrcLayouts qword ?
;   TypeKind.ELABORATED
;   name = copyDstLayoutCount, type = uint32_t, offset = 32, size = 4
    copyDstLayoutCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCopyDstLayouts, type = VkImageLayout *, offset = 40, size = 8
    pCopyDstLayouts qword ?
;   TypeKind.CONSTANTARRAY
;   name = optimalTilingLayoutUUID, type = uint8_t[16], offset = 48, size = 16
    optimalTilingLayoutUUID byte 16 dup(?)
;   TypeKind.ELABORATED
;   name = identicalMemoryTypeRequirements, type = VkBool32, offset = 64, size = 4
    identicalMemoryTypeRequirements VkBool32 <>
VkPhysicalDeviceHostImageCopyPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceHostImageCopyPropertiesEXT = struct VkPhysicalDeviceHostImageCopyPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceHostImageCopyPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = copySrcLayoutCount, type = uint32_t, offset = 16, size = 4
    copySrcLayoutCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCopySrcLayouts, type = VkImageLayout *, offset = 24, size = 8
    pCopySrcLayouts qword ?
;   TypeKind.ELABORATED
;   name = copyDstLayoutCount, type = uint32_t, offset = 32, size = 4
    copyDstLayoutCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pCopyDstLayouts, type = VkImageLayout *, offset = 40, size = 8
    pCopyDstLayouts qword ?
;   TypeKind.CONSTANTARRAY
;   name = optimalTilingLayoutUUID, type = uint8_t[16], offset = 48, size = 16
    optimalTilingLayoutUUID byte 16 dup(?)
;   TypeKind.ELABORATED
;   name = identicalMemoryTypeRequirements, type = VkBool32, offset = 64, size = 4
    identicalMemoryTypeRequirements VkBool32 <>
VkPhysicalDeviceHostImageCopyPropertiesEXT ends

VkMemoryToImageCopyEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pHostPointer, type = const void *, offset = 16, size = 8
    pHostPointer qword ?
;   TypeKind.ELABORATED
;   name = memoryRowLength, type = uint32_t, offset = 24, size = 4
    memoryRowLength dword ?
;   TypeKind.ELABORATED
;   name = memoryImageHeight, type = uint32_t, offset = 28, size = 4
    memoryImageHeight dword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresourceLayers, offset = 32, size = 16
    imageSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = imageOffset, type = VkOffset3D, offset = 48, size = 12
    imageOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent3D, offset = 60, size = 12
    imageExtent VkExtent3D <>
VkMemoryToImageCopyEXT ends

; TYPEDEF VkMemoryToImageCopyEXT = struct VkMemoryToImageCopyEXT, TypeKind.ELABORATED
; remove struct typedef

VkMemoryToImageCopyEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pHostPointer, type = const void *, offset = 16, size = 8
    pHostPointer qword ?
;   TypeKind.ELABORATED
;   name = memoryRowLength, type = uint32_t, offset = 24, size = 4
    memoryRowLength dword ?
;   TypeKind.ELABORATED
;   name = memoryImageHeight, type = uint32_t, offset = 28, size = 4
    memoryImageHeight dword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresourceLayers, offset = 32, size = 16
    imageSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = imageOffset, type = VkOffset3D, offset = 48, size = 12
    imageOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent3D, offset = 60, size = 12
    imageExtent VkExtent3D <>
VkMemoryToImageCopyEXT ends

VkImageToMemoryCopyEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pHostPointer, type = void *, offset = 16, size = 8
    pHostPointer qword ?
;   TypeKind.ELABORATED
;   name = memoryRowLength, type = uint32_t, offset = 24, size = 4
    memoryRowLength dword ?
;   TypeKind.ELABORATED
;   name = memoryImageHeight, type = uint32_t, offset = 28, size = 4
    memoryImageHeight dword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresourceLayers, offset = 32, size = 16
    imageSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = imageOffset, type = VkOffset3D, offset = 48, size = 12
    imageOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent3D, offset = 60, size = 12
    imageExtent VkExtent3D <>
VkImageToMemoryCopyEXT ends

; TYPEDEF VkImageToMemoryCopyEXT = struct VkImageToMemoryCopyEXT, TypeKind.ELABORATED
; remove struct typedef

VkImageToMemoryCopyEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pHostPointer, type = void *, offset = 16, size = 8
    pHostPointer qword ?
;   TypeKind.ELABORATED
;   name = memoryRowLength, type = uint32_t, offset = 24, size = 4
    memoryRowLength dword ?
;   TypeKind.ELABORATED
;   name = memoryImageHeight, type = uint32_t, offset = 28, size = 4
    memoryImageHeight dword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresourceLayers, offset = 32, size = 16
    imageSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = imageOffset, type = VkOffset3D, offset = 48, size = 12
    imageOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent3D, offset = 60, size = 12
    imageExtent VkExtent3D <>
VkImageToMemoryCopyEXT ends

VkCopyMemoryToImageInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkHostImageCopyFlagsEXT, offset = 16, size = 4
    flags VkHostImageCopyFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 24, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 32, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 36, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkMemoryToImageCopyEXT *, offset = 40, size = 8
    pRegions qword ?
VkCopyMemoryToImageInfoEXT ends

; TYPEDEF VkCopyMemoryToImageInfoEXT = struct VkCopyMemoryToImageInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkCopyMemoryToImageInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkHostImageCopyFlagsEXT, offset = 16, size = 4
    flags VkHostImageCopyFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 24, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 32, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 36, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkMemoryToImageCopyEXT *, offset = 40, size = 8
    pRegions qword ?
VkCopyMemoryToImageInfoEXT ends

VkCopyImageToMemoryInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkHostImageCopyFlagsEXT, offset = 16, size = 4
    flags VkHostImageCopyFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 24, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 32, size = 4
    srcImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 36, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkImageToMemoryCopyEXT *, offset = 40, size = 8
    pRegions qword ?
VkCopyImageToMemoryInfoEXT ends

; TYPEDEF VkCopyImageToMemoryInfoEXT = struct VkCopyImageToMemoryInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkCopyImageToMemoryInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkHostImageCopyFlagsEXT, offset = 16, size = 4
    flags VkHostImageCopyFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 24, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 32, size = 4
    srcImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 36, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkImageToMemoryCopyEXT *, offset = 40, size = 8
    pRegions qword ?
VkCopyImageToMemoryInfoEXT ends

VkCopyImageToImageInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkHostImageCopyFlagsEXT, offset = 16, size = 4
    flags VkHostImageCopyFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 24, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 32, size = 4
    srcImageLayout VkImageLayout <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 40, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 48, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 52, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkImageCopy2 *, offset = 56, size = 8
    pRegions qword ?
VkCopyImageToImageInfoEXT ends

; TYPEDEF VkCopyImageToImageInfoEXT = struct VkCopyImageToImageInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkCopyImageToImageInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkHostImageCopyFlagsEXT, offset = 16, size = 4
    flags VkHostImageCopyFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = srcImage, type = VkImage, offset = 24, size = 8
    srcImage VkImage <>
;   TypeKind.ELABORATED
;   name = srcImageLayout, type = VkImageLayout, offset = 32, size = 4
    srcImageLayout VkImageLayout <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstImage, type = VkImage, offset = 40, size = 8
    dstImage VkImage <>
;   TypeKind.ELABORATED
;   name = dstImageLayout, type = VkImageLayout, offset = 48, size = 4
    dstImageLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 52, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkImageCopy2 *, offset = 56, size = 8
    pRegions qword ?
VkCopyImageToImageInfoEXT ends

VkHostImageLayoutTransitionInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = oldLayout, type = VkImageLayout, offset = 24, size = 4
    oldLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = newLayout, type = VkImageLayout, offset = 28, size = 4
    newLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = subresourceRange, type = VkImageSubresourceRange, offset = 32, size = 20
    subresourceRange VkImageSubresourceRange <>
VkHostImageLayoutTransitionInfoEXT ends

; TYPEDEF VkHostImageLayoutTransitionInfoEXT = struct VkHostImageLayoutTransitionInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkHostImageLayoutTransitionInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
;   TypeKind.ELABORATED
;   name = oldLayout, type = VkImageLayout, offset = 24, size = 4
    oldLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = newLayout, type = VkImageLayout, offset = 28, size = 4
    newLayout VkImageLayout <>
;   TypeKind.ELABORATED
;   name = subresourceRange, type = VkImageSubresourceRange, offset = 32, size = 20
    subresourceRange VkImageSubresourceRange <>
VkHostImageLayoutTransitionInfoEXT ends

VkSubresourceHostMemcpySizeEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 16, size = 8
    _size VkDeviceSize <>
VkSubresourceHostMemcpySizeEXT ends

; TYPEDEF VkSubresourceHostMemcpySizeEXT = struct VkSubresourceHostMemcpySizeEXT, TypeKind.ELABORATED
; remove struct typedef

VkSubresourceHostMemcpySizeEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 16, size = 8
    _size VkDeviceSize <>
VkSubresourceHostMemcpySizeEXT ends

VkHostImageCopyDevicePerformanceQueryEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = optimalDeviceAccess, type = VkBool32, offset = 16, size = 4
    optimalDeviceAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = identicalMemoryLayout, type = VkBool32, offset = 20, size = 4
    identicalMemoryLayout VkBool32 <>
VkHostImageCopyDevicePerformanceQueryEXT ends

; TYPEDEF VkHostImageCopyDevicePerformanceQueryEXT = struct VkHostImageCopyDevicePerformanceQueryEXT, TypeKind.ELABORATED
; remove struct typedef

VkHostImageCopyDevicePerformanceQueryEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = optimalDeviceAccess, type = VkBool32, offset = 16, size = 4
    optimalDeviceAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = identicalMemoryLayout, type = VkBool32, offset = 20, size = 4
    identicalMemoryLayout VkBool32 <>
VkHostImageCopyDevicePerformanceQueryEXT ends

; TYPEDEF VkSubresourceLayout2EXT = VkSubresourceLayout2KHR, TypeKind.ELABORATED

; TYPEDEF VkImageSubresource2EXT = VkImageSubresource2KHR, TypeKind.ELABORATED

; TYPEDEF PFN_vkCopyMemoryToImageEXT = VkResult (*)(VkDevice, const VkCopyMemoryToImageInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCopyMemoryToImageEXT typedef qword

; TYPEDEF PFN_vkCopyImageToMemoryEXT = VkResult (*)(VkDevice, const VkCopyImageToMemoryInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCopyImageToMemoryEXT typedef qword

; TYPEDEF PFN_vkCopyImageToImageEXT = VkResult (*)(VkDevice, const VkCopyImageToImageInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCopyImageToImageEXT typedef qword

; TYPEDEF PFN_vkTransitionImageLayoutEXT = VkResult (*)(VkDevice, uint32_t, const VkHostImageLayoutTransitionInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkTransitionImageLayoutEXT typedef qword

; TYPEDEF PFN_vkGetImageSubresourceLayout2EXT = void (*)(VkDevice, VkImage, const VkImageSubresource2KHR *, VkSubresourceLayout2KHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageSubresourceLayout2EXT typedef qword

; VkResult vkCopyMemoryToImageEXT(VkDevice device, const VkCopyMemoryToImageInfoEXT * pCopyMemoryToImageInfo)
vkCopyMemoryToImageEXT qword ?

; VkResult vkCopyImageToMemoryEXT(VkDevice device, const VkCopyImageToMemoryInfoEXT * pCopyImageToMemoryInfo)
vkCopyImageToMemoryEXT qword ?

; VkResult vkCopyImageToImageEXT(VkDevice device, const VkCopyImageToImageInfoEXT * pCopyImageToImageInfo)
vkCopyImageToImageEXT qword ?

; VkResult vkTransitionImageLayoutEXT(VkDevice device, uint32_t transitionCount, const VkHostImageLayoutTransitionInfoEXT * pTransitions)
vkTransitionImageLayoutEXT qword ?

; void vkGetImageSubresourceLayout2EXT(VkDevice device, VkImage image, const VkImageSubresource2KHR * pSubresource, VkSubresourceLayout2KHR * pLayout)
vkGetImageSubresourceLayout2EXT qword ?

VkPhysicalDeviceMapMemoryPlacedFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryMapPlaced, type = VkBool32, offset = 16, size = 4
    memoryMapPlaced VkBool32 <>
;   TypeKind.ELABORATED
;   name = memoryMapRangePlaced, type = VkBool32, offset = 20, size = 4
    memoryMapRangePlaced VkBool32 <>
;   TypeKind.ELABORATED
;   name = memoryUnmapReserve, type = VkBool32, offset = 24, size = 4
    memoryUnmapReserve VkBool32 <>
VkPhysicalDeviceMapMemoryPlacedFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceMapMemoryPlacedFeaturesEXT = struct VkPhysicalDeviceMapMemoryPlacedFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMapMemoryPlacedFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryMapPlaced, type = VkBool32, offset = 16, size = 4
    memoryMapPlaced VkBool32 <>
;   TypeKind.ELABORATED
;   name = memoryMapRangePlaced, type = VkBool32, offset = 20, size = 4
    memoryMapRangePlaced VkBool32 <>
;   TypeKind.ELABORATED
;   name = memoryUnmapReserve, type = VkBool32, offset = 24, size = 4
    memoryUnmapReserve VkBool32 <>
VkPhysicalDeviceMapMemoryPlacedFeaturesEXT ends

VkPhysicalDeviceMapMemoryPlacedPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minPlacedMemoryMapAlignment, type = VkDeviceSize, offset = 16, size = 8
    minPlacedMemoryMapAlignment VkDeviceSize <>
VkPhysicalDeviceMapMemoryPlacedPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceMapMemoryPlacedPropertiesEXT = struct VkPhysicalDeviceMapMemoryPlacedPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMapMemoryPlacedPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minPlacedMemoryMapAlignment, type = VkDeviceSize, offset = 16, size = 8
    minPlacedMemoryMapAlignment VkDeviceSize <>
VkPhysicalDeviceMapMemoryPlacedPropertiesEXT ends

VkMemoryMapPlacedInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pPlacedAddress, type = void *, offset = 16, size = 8
    pPlacedAddress qword ?
VkMemoryMapPlacedInfoEXT ends

; TYPEDEF VkMemoryMapPlacedInfoEXT = struct VkMemoryMapPlacedInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkMemoryMapPlacedInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pPlacedAddress, type = void *, offset = 16, size = 8
    pPlacedAddress qword ?
VkMemoryMapPlacedInfoEXT ends

VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderBufferFloat16Atomics, type = VkBool32, offset = 16, size = 4
    shaderBufferFloat16Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat16AtomicAdd, type = VkBool32, offset = 20, size = 4
    shaderBufferFloat16AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat16AtomicMinMax, type = VkBool32, offset = 24, size = 4
    shaderBufferFloat16AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat32AtomicMinMax, type = VkBool32, offset = 28, size = 4
    shaderBufferFloat32AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat64AtomicMinMax, type = VkBool32, offset = 32, size = 4
    shaderBufferFloat64AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat16Atomics, type = VkBool32, offset = 36, size = 4
    shaderSharedFloat16Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat16AtomicAdd, type = VkBool32, offset = 40, size = 4
    shaderSharedFloat16AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat16AtomicMinMax, type = VkBool32, offset = 44, size = 4
    shaderSharedFloat16AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat32AtomicMinMax, type = VkBool32, offset = 48, size = 4
    shaderSharedFloat32AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat64AtomicMinMax, type = VkBool32, offset = 52, size = 4
    shaderSharedFloat64AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderImageFloat32AtomicMinMax, type = VkBool32, offset = 56, size = 4
    shaderImageFloat32AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseImageFloat32AtomicMinMax, type = VkBool32, offset = 60, size = 4
    sparseImageFloat32AtomicMinMax VkBool32 <>
VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT ends

; TYPEDEF VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT = struct VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderBufferFloat16Atomics, type = VkBool32, offset = 16, size = 4
    shaderBufferFloat16Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat16AtomicAdd, type = VkBool32, offset = 20, size = 4
    shaderBufferFloat16AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat16AtomicMinMax, type = VkBool32, offset = 24, size = 4
    shaderBufferFloat16AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat32AtomicMinMax, type = VkBool32, offset = 28, size = 4
    shaderBufferFloat32AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderBufferFloat64AtomicMinMax, type = VkBool32, offset = 32, size = 4
    shaderBufferFloat64AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat16Atomics, type = VkBool32, offset = 36, size = 4
    shaderSharedFloat16Atomics VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat16AtomicAdd, type = VkBool32, offset = 40, size = 4
    shaderSharedFloat16AtomicAdd VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat16AtomicMinMax, type = VkBool32, offset = 44, size = 4
    shaderSharedFloat16AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat32AtomicMinMax, type = VkBool32, offset = 48, size = 4
    shaderSharedFloat32AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderSharedFloat64AtomicMinMax, type = VkBool32, offset = 52, size = 4
    shaderSharedFloat64AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderImageFloat32AtomicMinMax, type = VkBool32, offset = 56, size = 4
    shaderImageFloat32AtomicMinMax VkBool32 <>
;   TypeKind.ELABORATED
;   name = sparseImageFloat32AtomicMinMax, type = VkBool32, offset = 60, size = 4
    sparseImageFloat32AtomicMinMax VkBool32 <>
VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT ends

; enum VkPresentScalingFlagBitsEXT {
    VK_PRESENT_SCALING_ONE_TO_ONE_BIT_EXT equ 1
    VK_PRESENT_SCALING_ASPECT_RATIO_STRETCH_BIT_EXT equ 2
    VK_PRESENT_SCALING_STRETCH_BIT_EXT equ 4
    VK_PRESENT_SCALING_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkPresentScalingFlagBitsEXT = enum VkPresentScalingFlagBitsEXT, TypeKind.ELABORATED
VkPresentScalingFlagBitsEXT typedef dword

; enum VkPresentScalingFlagBitsEXT {
    VK_PRESENT_SCALING_ONE_TO_ONE_BIT_EXT equ 1
    VK_PRESENT_SCALING_ASPECT_RATIO_STRETCH_BIT_EXT equ 2
    VK_PRESENT_SCALING_STRETCH_BIT_EXT equ 4
    VK_PRESENT_SCALING_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkPresentScalingFlagsEXT = VkFlags, TypeKind.ELABORATED
VkPresentScalingFlagsEXT typedef dword

; enum VkPresentGravityFlagBitsEXT {
    VK_PRESENT_GRAVITY_MIN_BIT_EXT equ 1
    VK_PRESENT_GRAVITY_MAX_BIT_EXT equ 2
    VK_PRESENT_GRAVITY_CENTERED_BIT_EXT equ 4
    VK_PRESENT_GRAVITY_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkPresentGravityFlagBitsEXT = enum VkPresentGravityFlagBitsEXT, TypeKind.ELABORATED
VkPresentGravityFlagBitsEXT typedef dword

; enum VkPresentGravityFlagBitsEXT {
    VK_PRESENT_GRAVITY_MIN_BIT_EXT equ 1
    VK_PRESENT_GRAVITY_MAX_BIT_EXT equ 2
    VK_PRESENT_GRAVITY_CENTERED_BIT_EXT equ 4
    VK_PRESENT_GRAVITY_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkPresentGravityFlagsEXT = VkFlags, TypeKind.ELABORATED
VkPresentGravityFlagsEXT typedef dword

VkSurfacePresentModeEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentMode, type = VkPresentModeKHR, offset = 16, size = 4
    presentMode VkPresentModeKHR <>
VkSurfacePresentModeEXT ends

; TYPEDEF VkSurfacePresentModeEXT = struct VkSurfacePresentModeEXT, TypeKind.ELABORATED
; remove struct typedef

VkSurfacePresentModeEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentMode, type = VkPresentModeKHR, offset = 16, size = 4
    presentMode VkPresentModeKHR <>
VkSurfacePresentModeEXT ends

VkSurfacePresentScalingCapabilitiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportedPresentScaling, type = VkPresentScalingFlagsEXT, offset = 16, size = 4
    supportedPresentScaling VkPresentScalingFlagsEXT <>
;   TypeKind.ELABORATED
;   name = supportedPresentGravityX, type = VkPresentGravityFlagsEXT, offset = 20, size = 4
    supportedPresentGravityX VkPresentGravityFlagsEXT <>
;   TypeKind.ELABORATED
;   name = supportedPresentGravityY, type = VkPresentGravityFlagsEXT, offset = 24, size = 4
    supportedPresentGravityY VkPresentGravityFlagsEXT <>
;   TypeKind.ELABORATED
;   name = minScaledImageExtent, type = VkExtent2D, offset = 28, size = 8
    minScaledImageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxScaledImageExtent, type = VkExtent2D, offset = 36, size = 8
    maxScaledImageExtent VkExtent2D <>
VkSurfacePresentScalingCapabilitiesEXT ends

; TYPEDEF VkSurfacePresentScalingCapabilitiesEXT = struct VkSurfacePresentScalingCapabilitiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkSurfacePresentScalingCapabilitiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportedPresentScaling, type = VkPresentScalingFlagsEXT, offset = 16, size = 4
    supportedPresentScaling VkPresentScalingFlagsEXT <>
;   TypeKind.ELABORATED
;   name = supportedPresentGravityX, type = VkPresentGravityFlagsEXT, offset = 20, size = 4
    supportedPresentGravityX VkPresentGravityFlagsEXT <>
;   TypeKind.ELABORATED
;   name = supportedPresentGravityY, type = VkPresentGravityFlagsEXT, offset = 24, size = 4
    supportedPresentGravityY VkPresentGravityFlagsEXT <>
;   TypeKind.ELABORATED
;   name = minScaledImageExtent, type = VkExtent2D, offset = 28, size = 8
    minScaledImageExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxScaledImageExtent, type = VkExtent2D, offset = 36, size = 8
    maxScaledImageExtent VkExtent2D <>
VkSurfacePresentScalingCapabilitiesEXT ends

VkSurfacePresentModeCompatibilityEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentModeCount, type = uint32_t, offset = 16, size = 4
    presentModeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPresentModes, type = VkPresentModeKHR *, offset = 24, size = 8
    pPresentModes qword ?
VkSurfacePresentModeCompatibilityEXT ends

; TYPEDEF VkSurfacePresentModeCompatibilityEXT = struct VkSurfacePresentModeCompatibilityEXT, TypeKind.ELABORATED
; remove struct typedef

VkSurfacePresentModeCompatibilityEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentModeCount, type = uint32_t, offset = 16, size = 4
    presentModeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPresentModes, type = VkPresentModeKHR *, offset = 24, size = 8
    pPresentModes qword ?
VkSurfacePresentModeCompatibilityEXT ends

VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainMaintenance1, type = VkBool32, offset = 16, size = 4
    swapchainMaintenance1 VkBool32 <>
VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT ends

; TYPEDEF VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT = struct VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainMaintenance1, type = VkBool32, offset = 16, size = 4
    swapchainMaintenance1 VkBool32 <>
VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT ends

VkSwapchainPresentFenceInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pFences, type = const VkFence *, offset = 24, size = 8
    pFences qword ?
VkSwapchainPresentFenceInfoEXT ends

; TYPEDEF VkSwapchainPresentFenceInfoEXT = struct VkSwapchainPresentFenceInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkSwapchainPresentFenceInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pFences, type = const VkFence *, offset = 24, size = 8
    pFences qword ?
VkSwapchainPresentFenceInfoEXT ends

VkSwapchainPresentModesCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentModeCount, type = uint32_t, offset = 16, size = 4
    presentModeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPresentModes, type = const VkPresentModeKHR *, offset = 24, size = 8
    pPresentModes qword ?
VkSwapchainPresentModesCreateInfoEXT ends

; TYPEDEF VkSwapchainPresentModesCreateInfoEXT = struct VkSwapchainPresentModesCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkSwapchainPresentModesCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentModeCount, type = uint32_t, offset = 16, size = 4
    presentModeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPresentModes, type = const VkPresentModeKHR *, offset = 24, size = 8
    pPresentModes qword ?
VkSwapchainPresentModesCreateInfoEXT ends

VkSwapchainPresentModeInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPresentModes, type = const VkPresentModeKHR *, offset = 24, size = 8
    pPresentModes qword ?
VkSwapchainPresentModeInfoEXT ends

; TYPEDEF VkSwapchainPresentModeInfoEXT = struct VkSwapchainPresentModeInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkSwapchainPresentModeInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchainCount, type = uint32_t, offset = 16, size = 4
    swapchainCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPresentModes, type = const VkPresentModeKHR *, offset = 24, size = 8
    pPresentModes qword ?
VkSwapchainPresentModeInfoEXT ends

VkSwapchainPresentScalingCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = scalingBehavior, type = VkPresentScalingFlagsEXT, offset = 16, size = 4
    scalingBehavior VkPresentScalingFlagsEXT <>
;   TypeKind.ELABORATED
;   name = presentGravityX, type = VkPresentGravityFlagsEXT, offset = 20, size = 4
    presentGravityX VkPresentGravityFlagsEXT <>
;   TypeKind.ELABORATED
;   name = presentGravityY, type = VkPresentGravityFlagsEXT, offset = 24, size = 4
    presentGravityY VkPresentGravityFlagsEXT <>
VkSwapchainPresentScalingCreateInfoEXT ends

; TYPEDEF VkSwapchainPresentScalingCreateInfoEXT = struct VkSwapchainPresentScalingCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkSwapchainPresentScalingCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = scalingBehavior, type = VkPresentScalingFlagsEXT, offset = 16, size = 4
    scalingBehavior VkPresentScalingFlagsEXT <>
;   TypeKind.ELABORATED
;   name = presentGravityX, type = VkPresentGravityFlagsEXT, offset = 20, size = 4
    presentGravityX VkPresentGravityFlagsEXT <>
;   TypeKind.ELABORATED
;   name = presentGravityY, type = VkPresentGravityFlagsEXT, offset = 24, size = 4
    presentGravityY VkPresentGravityFlagsEXT <>
VkSwapchainPresentScalingCreateInfoEXT ends

VkReleaseSwapchainImagesInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchain, type = VkSwapchainKHR, offset = 16, size = 8
    swapchain VkSwapchainKHR <>
;   TypeKind.ELABORATED
;   name = imageIndexCount, type = uint32_t, offset = 24, size = 4
    imageIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pImageIndices, type = const uint32_t *, offset = 32, size = 8
    pImageIndices qword ?
VkReleaseSwapchainImagesInfoEXT ends

; TYPEDEF VkReleaseSwapchainImagesInfoEXT = struct VkReleaseSwapchainImagesInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkReleaseSwapchainImagesInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = swapchain, type = VkSwapchainKHR, offset = 16, size = 8
    swapchain VkSwapchainKHR <>
;   TypeKind.ELABORATED
;   name = imageIndexCount, type = uint32_t, offset = 24, size = 4
    imageIndexCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pImageIndices, type = const uint32_t *, offset = 32, size = 8
    pImageIndices qword ?
VkReleaseSwapchainImagesInfoEXT ends

; TYPEDEF PFN_vkReleaseSwapchainImagesEXT = VkResult (*)(VkDevice, const VkReleaseSwapchainImagesInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkReleaseSwapchainImagesEXT typedef qword

; VkResult vkReleaseSwapchainImagesEXT(VkDevice device, const VkReleaseSwapchainImagesInfoEXT * pReleaseInfo)
vkReleaseSwapchainImagesEXT qword ?

; TYPEDEF VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT = VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures, TypeKind.ELABORATED

; TYPEDEF VkIndirectCommandsLayoutNV = struct VkIndirectCommandsLayoutNV_T *, TypeKind.POINTER
VkIndirectCommandsLayoutNV typedef qword

; enum VkIndirectCommandsTokenTypeNV {
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV equ 0
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV equ 1
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV equ 2
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV equ 3
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV equ 4
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV equ 5
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV equ 6
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV equ 7
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_MESH_TASKS_NV equ 1000328000
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NV equ 1000428003
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NV equ 1000428004
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkIndirectCommandsTokenTypeNV = enum VkIndirectCommandsTokenTypeNV, TypeKind.ELABORATED
VkIndirectCommandsTokenTypeNV typedef dword

; enum VkIndirectCommandsTokenTypeNV {
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV equ 0
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV equ 1
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV equ 2
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV equ 3
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV equ 4
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV equ 5
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV equ 6
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV equ 7
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_MESH_TASKS_NV equ 1000328000
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NV equ 1000428003
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NV equ 1000428004
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NV equ 2147483647
; }

; enum VkIndirectStateFlagBitsNV {
    VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV equ 1
    VK_INDIRECT_STATE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkIndirectStateFlagBitsNV = enum VkIndirectStateFlagBitsNV, TypeKind.ELABORATED
VkIndirectStateFlagBitsNV typedef dword

; enum VkIndirectStateFlagBitsNV {
    VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV equ 1
    VK_INDIRECT_STATE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkIndirectStateFlagsNV = VkFlags, TypeKind.ELABORATED
VkIndirectStateFlagsNV typedef dword

; enum VkIndirectCommandsLayoutUsageFlagBitsNV {
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV equ 1
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV equ 2
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV equ 4
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkIndirectCommandsLayoutUsageFlagBitsNV = enum VkIndirectCommandsLayoutUsageFlagBitsNV, TypeKind.ELABORATED
VkIndirectCommandsLayoutUsageFlagBitsNV typedef dword

; enum VkIndirectCommandsLayoutUsageFlagBitsNV {
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV equ 1
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV equ 2
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV equ 4
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkIndirectCommandsLayoutUsageFlagsNV = VkFlags, TypeKind.ELABORATED
VkIndirectCommandsLayoutUsageFlagsNV typedef dword

VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxGraphicsShaderGroupCount, type = uint32_t, offset = 16, size = 4
    maxGraphicsShaderGroupCount dword ?
;   TypeKind.ELABORATED
;   name = maxIndirectSequenceCount, type = uint32_t, offset = 20, size = 4
    maxIndirectSequenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxIndirectCommandsTokenCount, type = uint32_t, offset = 24, size = 4
    maxIndirectCommandsTokenCount dword ?
;   TypeKind.ELABORATED
;   name = maxIndirectCommandsStreamCount, type = uint32_t, offset = 28, size = 4
    maxIndirectCommandsStreamCount dword ?
;   TypeKind.ELABORATED
;   name = maxIndirectCommandsTokenOffset, type = uint32_t, offset = 32, size = 4
    maxIndirectCommandsTokenOffset dword ?
;   TypeKind.ELABORATED
;   name = maxIndirectCommandsStreamStride, type = uint32_t, offset = 36, size = 4
    maxIndirectCommandsStreamStride dword ?
;   TypeKind.ELABORATED
;   name = minSequencesCountBufferOffsetAlignment, type = uint32_t, offset = 40, size = 4
    minSequencesCountBufferOffsetAlignment dword ?
;   TypeKind.ELABORATED
;   name = minSequencesIndexBufferOffsetAlignment, type = uint32_t, offset = 44, size = 4
    minSequencesIndexBufferOffsetAlignment dword ?
;   TypeKind.ELABORATED
;   name = minIndirectCommandsBufferOffsetAlignment, type = uint32_t, offset = 48, size = 4
    minIndirectCommandsBufferOffsetAlignment dword ?
VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV ends

; TYPEDEF VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV = struct VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxGraphicsShaderGroupCount, type = uint32_t, offset = 16, size = 4
    maxGraphicsShaderGroupCount dword ?
;   TypeKind.ELABORATED
;   name = maxIndirectSequenceCount, type = uint32_t, offset = 20, size = 4
    maxIndirectSequenceCount dword ?
;   TypeKind.ELABORATED
;   name = maxIndirectCommandsTokenCount, type = uint32_t, offset = 24, size = 4
    maxIndirectCommandsTokenCount dword ?
;   TypeKind.ELABORATED
;   name = maxIndirectCommandsStreamCount, type = uint32_t, offset = 28, size = 4
    maxIndirectCommandsStreamCount dword ?
;   TypeKind.ELABORATED
;   name = maxIndirectCommandsTokenOffset, type = uint32_t, offset = 32, size = 4
    maxIndirectCommandsTokenOffset dword ?
;   TypeKind.ELABORATED
;   name = maxIndirectCommandsStreamStride, type = uint32_t, offset = 36, size = 4
    maxIndirectCommandsStreamStride dword ?
;   TypeKind.ELABORATED
;   name = minSequencesCountBufferOffsetAlignment, type = uint32_t, offset = 40, size = 4
    minSequencesCountBufferOffsetAlignment dword ?
;   TypeKind.ELABORATED
;   name = minSequencesIndexBufferOffsetAlignment, type = uint32_t, offset = 44, size = 4
    minSequencesIndexBufferOffsetAlignment dword ?
;   TypeKind.ELABORATED
;   name = minIndirectCommandsBufferOffsetAlignment, type = uint32_t, offset = 48, size = 4
    minIndirectCommandsBufferOffsetAlignment dword ?
VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV ends

VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceGeneratedCommands, type = VkBool32, offset = 16, size = 4
    deviceGeneratedCommands VkBool32 <>
VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV ends

; TYPEDEF VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV = struct VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceGeneratedCommands, type = VkBool32, offset = 16, size = 4
    deviceGeneratedCommands VkBool32 <>
VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV ends

VkGraphicsShaderGroupCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stageCount, type = uint32_t, offset = 16, size = 4
    stageCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pStages, type = const VkPipelineShaderStageCreateInfo *, offset = 24, size = 8
    pStages qword ?
;   TypeKind.POINTER
;   name = pVertexInputState, type = const VkPipelineVertexInputStateCreateInfo *, offset = 32, size = 8
    pVertexInputState qword ?
;   TypeKind.POINTER
;   name = pTessellationState, type = const VkPipelineTessellationStateCreateInfo *, offset = 40, size = 8
    pTessellationState qword ?
VkGraphicsShaderGroupCreateInfoNV ends

; TYPEDEF VkGraphicsShaderGroupCreateInfoNV = struct VkGraphicsShaderGroupCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkGraphicsShaderGroupCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stageCount, type = uint32_t, offset = 16, size = 4
    stageCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pStages, type = const VkPipelineShaderStageCreateInfo *, offset = 24, size = 8
    pStages qword ?
;   TypeKind.POINTER
;   name = pVertexInputState, type = const VkPipelineVertexInputStateCreateInfo *, offset = 32, size = 8
    pVertexInputState qword ?
;   TypeKind.POINTER
;   name = pTessellationState, type = const VkPipelineTessellationStateCreateInfo *, offset = 40, size = 8
    pTessellationState qword ?
VkGraphicsShaderGroupCreateInfoNV ends

VkGraphicsPipelineShaderGroupsCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = groupCount, type = uint32_t, offset = 16, size = 4
    groupCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pGroups, type = const VkGraphicsShaderGroupCreateInfoNV *, offset = 24, size = 8
    pGroups qword ?
;   TypeKind.ELABORATED
;   name = pipelineCount, type = uint32_t, offset = 32, size = 4
    pipelineCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPipelines, type = const VkPipeline *, offset = 40, size = 8
    pPipelines qword ?
VkGraphicsPipelineShaderGroupsCreateInfoNV ends

; TYPEDEF VkGraphicsPipelineShaderGroupsCreateInfoNV = struct VkGraphicsPipelineShaderGroupsCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkGraphicsPipelineShaderGroupsCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = groupCount, type = uint32_t, offset = 16, size = 4
    groupCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pGroups, type = const VkGraphicsShaderGroupCreateInfoNV *, offset = 24, size = 8
    pGroups qword ?
;   TypeKind.ELABORATED
;   name = pipelineCount, type = uint32_t, offset = 32, size = 4
    pipelineCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPipelines, type = const VkPipeline *, offset = 40, size = 8
    pPipelines qword ?
VkGraphicsPipelineShaderGroupsCreateInfoNV ends

VkBindShaderGroupIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = groupIndex, type = uint32_t, offset = 0, size = 4
    groupIndex dword ?
VkBindShaderGroupIndirectCommandNV ends

; TYPEDEF VkBindShaderGroupIndirectCommandNV = struct VkBindShaderGroupIndirectCommandNV, TypeKind.ELABORATED
; remove struct typedef

VkBindShaderGroupIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = groupIndex, type = uint32_t, offset = 0, size = 4
    groupIndex dword ?
VkBindShaderGroupIndirectCommandNV ends

VkBindIndexBufferIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = bufferAddress, type = VkDeviceAddress, offset = 0, size = 8
    bufferAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = uint32_t, offset = 8, size = 4
    _size dword ?
;   TypeKind.ELABORATED
;   name = indexType, type = VkIndexType, offset = 12, size = 4
    indexType VkIndexType <>
VkBindIndexBufferIndirectCommandNV ends

; TYPEDEF VkBindIndexBufferIndirectCommandNV = struct VkBindIndexBufferIndirectCommandNV, TypeKind.ELABORATED
; remove struct typedef

VkBindIndexBufferIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = bufferAddress, type = VkDeviceAddress, offset = 0, size = 8
    bufferAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = uint32_t, offset = 8, size = 4
    _size dword ?
;   TypeKind.ELABORATED
;   name = indexType, type = VkIndexType, offset = 12, size = 4
    indexType VkIndexType <>
VkBindIndexBufferIndirectCommandNV ends

VkBindVertexBufferIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = bufferAddress, type = VkDeviceAddress, offset = 0, size = 8
    bufferAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = uint32_t, offset = 8, size = 4
    _size dword ?
;   TypeKind.ELABORATED
;   name = stride, type = uint32_t, offset = 12, size = 4
    stride dword ?
VkBindVertexBufferIndirectCommandNV ends

; TYPEDEF VkBindVertexBufferIndirectCommandNV = struct VkBindVertexBufferIndirectCommandNV, TypeKind.ELABORATED
; remove struct typedef

VkBindVertexBufferIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = bufferAddress, type = VkDeviceAddress, offset = 0, size = 8
    bufferAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = uint32_t, offset = 8, size = 4
    _size dword ?
;   TypeKind.ELABORATED
;   name = stride, type = uint32_t, offset = 12, size = 4
    stride dword ?
VkBindVertexBufferIndirectCommandNV ends

VkSetStateFlagsIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = data, type = uint32_t, offset = 0, size = 4
    data dword ?
VkSetStateFlagsIndirectCommandNV ends

; TYPEDEF VkSetStateFlagsIndirectCommandNV = struct VkSetStateFlagsIndirectCommandNV, TypeKind.ELABORATED
; remove struct typedef

VkSetStateFlagsIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = data, type = uint32_t, offset = 0, size = 4
    data dword ?
VkSetStateFlagsIndirectCommandNV ends

VkIndirectCommandsStreamNV struct
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 0, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 8, size = 8
    _offset VkDeviceSize <>
VkIndirectCommandsStreamNV ends

; TYPEDEF VkIndirectCommandsStreamNV = struct VkIndirectCommandsStreamNV, TypeKind.ELABORATED
; remove struct typedef

VkIndirectCommandsStreamNV struct
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 0, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 8, size = 8
    _offset VkDeviceSize <>
VkIndirectCommandsStreamNV ends

VkIndirectCommandsLayoutTokenNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = tokenType, type = VkIndirectCommandsTokenTypeNV, offset = 16, size = 4
    tokenType VkIndirectCommandsTokenTypeNV <>
;   TypeKind.ELABORATED
;   name = stream, type = uint32_t, offset = 20, size = 4
    stream dword ?
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 24, size = 4
    _offset dword ?
;   TypeKind.ELABORATED
;   name = vertexBindingUnit, type = uint32_t, offset = 28, size = 4
    vertexBindingUnit dword ?
;   TypeKind.ELABORATED
;   name = vertexDynamicStride, type = VkBool32, offset = 32, size = 4
    vertexDynamicStride VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pushconstantPipelineLayout, type = VkPipelineLayout, offset = 40, size = 8
    pushconstantPipelineLayout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = pushconstantShaderStageFlags, type = VkShaderStageFlags, offset = 48, size = 4
    pushconstantShaderStageFlags VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = pushconstantOffset, type = uint32_t, offset = 52, size = 4
    pushconstantOffset dword ?
;   TypeKind.ELABORATED
;   name = pushconstantSize, type = uint32_t, offset = 56, size = 4
    pushconstantSize dword ?
;   TypeKind.ELABORATED
;   name = indirectStateFlags, type = VkIndirectStateFlagsNV, offset = 60, size = 4
    indirectStateFlags VkIndirectStateFlagsNV <>
;   TypeKind.ELABORATED
;   name = indexTypeCount, type = uint32_t, offset = 64, size = 4
    indexTypeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pIndexTypes, type = const VkIndexType *, offset = 72, size = 8
    pIndexTypes qword ?
;   TypeKind.POINTER
;   name = pIndexTypeValues, type = const uint32_t *, offset = 80, size = 8
    pIndexTypeValues qword ?
VkIndirectCommandsLayoutTokenNV ends

; TYPEDEF VkIndirectCommandsLayoutTokenNV = struct VkIndirectCommandsLayoutTokenNV, TypeKind.ELABORATED
; remove struct typedef

VkIndirectCommandsLayoutTokenNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = tokenType, type = VkIndirectCommandsTokenTypeNV, offset = 16, size = 4
    tokenType VkIndirectCommandsTokenTypeNV <>
;   TypeKind.ELABORATED
;   name = stream, type = uint32_t, offset = 20, size = 4
    stream dword ?
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 24, size = 4
    _offset dword ?
;   TypeKind.ELABORATED
;   name = vertexBindingUnit, type = uint32_t, offset = 28, size = 4
    vertexBindingUnit dword ?
;   TypeKind.ELABORATED
;   name = vertexDynamicStride, type = VkBool32, offset = 32, size = 4
    vertexDynamicStride VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pushconstantPipelineLayout, type = VkPipelineLayout, offset = 40, size = 8
    pushconstantPipelineLayout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = pushconstantShaderStageFlags, type = VkShaderStageFlags, offset = 48, size = 4
    pushconstantShaderStageFlags VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = pushconstantOffset, type = uint32_t, offset = 52, size = 4
    pushconstantOffset dword ?
;   TypeKind.ELABORATED
;   name = pushconstantSize, type = uint32_t, offset = 56, size = 4
    pushconstantSize dword ?
;   TypeKind.ELABORATED
;   name = indirectStateFlags, type = VkIndirectStateFlagsNV, offset = 60, size = 4
    indirectStateFlags VkIndirectStateFlagsNV <>
;   TypeKind.ELABORATED
;   name = indexTypeCount, type = uint32_t, offset = 64, size = 4
    indexTypeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pIndexTypes, type = const VkIndexType *, offset = 72, size = 8
    pIndexTypes qword ?
;   TypeKind.POINTER
;   name = pIndexTypeValues, type = const uint32_t *, offset = 80, size = 8
    pIndexTypeValues qword ?
VkIndirectCommandsLayoutTokenNV ends

VkIndirectCommandsLayoutCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkIndirectCommandsLayoutUsageFlagsNV, offset = 16, size = 4
    flags VkIndirectCommandsLayoutUsageFlagsNV <>
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 20, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
;   TypeKind.ELABORATED
;   name = tokenCount, type = uint32_t, offset = 24, size = 4
    tokenCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pTokens, type = const VkIndirectCommandsLayoutTokenNV *, offset = 32, size = 8
    pTokens qword ?
;   TypeKind.ELABORATED
;   name = streamCount, type = uint32_t, offset = 40, size = 4
    streamCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pStreamStrides, type = const uint32_t *, offset = 48, size = 8
    pStreamStrides qword ?
VkIndirectCommandsLayoutCreateInfoNV ends

; TYPEDEF VkIndirectCommandsLayoutCreateInfoNV = struct VkIndirectCommandsLayoutCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkIndirectCommandsLayoutCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkIndirectCommandsLayoutUsageFlagsNV, offset = 16, size = 4
    flags VkIndirectCommandsLayoutUsageFlagsNV <>
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 20, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
;   TypeKind.ELABORATED
;   name = tokenCount, type = uint32_t, offset = 24, size = 4
    tokenCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pTokens, type = const VkIndirectCommandsLayoutTokenNV *, offset = 32, size = 8
    pTokens qword ?
;   TypeKind.ELABORATED
;   name = streamCount, type = uint32_t, offset = 40, size = 4
    streamCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pStreamStrides, type = const uint32_t *, offset = 48, size = 8
    pStreamStrides qword ?
VkIndirectCommandsLayoutCreateInfoNV ends

VkGeneratedCommandsInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 16, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pipeline, type = VkPipeline, offset = 24, size = 8
    pipeline VkPipeline <>
;   TypeKind.ELABORATED
;   name = indirectCommandsLayout, type = VkIndirectCommandsLayoutNV, offset = 32, size = 8
    indirectCommandsLayout VkIndirectCommandsLayoutNV <>
;   TypeKind.ELABORATED
;   name = streamCount, type = uint32_t, offset = 40, size = 4
    streamCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pStreams, type = const VkIndirectCommandsStreamNV *, offset = 48, size = 8
    pStreams qword ?
;   TypeKind.ELABORATED
;   name = sequencesCount, type = uint32_t, offset = 56, size = 4
    sequencesCount dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = preprocessBuffer, type = VkBuffer, offset = 64, size = 8
    preprocessBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = preprocessOffset, type = VkDeviceSize, offset = 72, size = 8
    preprocessOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = preprocessSize, type = VkDeviceSize, offset = 80, size = 8
    preprocessSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = sequencesCountBuffer, type = VkBuffer, offset = 88, size = 8
    sequencesCountBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = sequencesCountOffset, type = VkDeviceSize, offset = 96, size = 8
    sequencesCountOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = sequencesIndexBuffer, type = VkBuffer, offset = 104, size = 8
    sequencesIndexBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = sequencesIndexOffset, type = VkDeviceSize, offset = 112, size = 8
    sequencesIndexOffset VkDeviceSize <>
VkGeneratedCommandsInfoNV ends

; TYPEDEF VkGeneratedCommandsInfoNV = struct VkGeneratedCommandsInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkGeneratedCommandsInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 16, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pipeline, type = VkPipeline, offset = 24, size = 8
    pipeline VkPipeline <>
;   TypeKind.ELABORATED
;   name = indirectCommandsLayout, type = VkIndirectCommandsLayoutNV, offset = 32, size = 8
    indirectCommandsLayout VkIndirectCommandsLayoutNV <>
;   TypeKind.ELABORATED
;   name = streamCount, type = uint32_t, offset = 40, size = 4
    streamCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pStreams, type = const VkIndirectCommandsStreamNV *, offset = 48, size = 8
    pStreams qword ?
;   TypeKind.ELABORATED
;   name = sequencesCount, type = uint32_t, offset = 56, size = 4
    sequencesCount dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = preprocessBuffer, type = VkBuffer, offset = 64, size = 8
    preprocessBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = preprocessOffset, type = VkDeviceSize, offset = 72, size = 8
    preprocessOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = preprocessSize, type = VkDeviceSize, offset = 80, size = 8
    preprocessSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = sequencesCountBuffer, type = VkBuffer, offset = 88, size = 8
    sequencesCountBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = sequencesCountOffset, type = VkDeviceSize, offset = 96, size = 8
    sequencesCountOffset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = sequencesIndexBuffer, type = VkBuffer, offset = 104, size = 8
    sequencesIndexBuffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = sequencesIndexOffset, type = VkDeviceSize, offset = 112, size = 8
    sequencesIndexOffset VkDeviceSize <>
VkGeneratedCommandsInfoNV ends

VkGeneratedCommandsMemoryRequirementsInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 16, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pipeline, type = VkPipeline, offset = 24, size = 8
    pipeline VkPipeline <>
;   TypeKind.ELABORATED
;   name = indirectCommandsLayout, type = VkIndirectCommandsLayoutNV, offset = 32, size = 8
    indirectCommandsLayout VkIndirectCommandsLayoutNV <>
;   TypeKind.ELABORATED
;   name = maxSequencesCount, type = uint32_t, offset = 40, size = 4
    maxSequencesCount dword ?
VkGeneratedCommandsMemoryRequirementsInfoNV ends

; TYPEDEF VkGeneratedCommandsMemoryRequirementsInfoNV = struct VkGeneratedCommandsMemoryRequirementsInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkGeneratedCommandsMemoryRequirementsInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 16, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pipeline, type = VkPipeline, offset = 24, size = 8
    pipeline VkPipeline <>
;   TypeKind.ELABORATED
;   name = indirectCommandsLayout, type = VkIndirectCommandsLayoutNV, offset = 32, size = 8
    indirectCommandsLayout VkIndirectCommandsLayoutNV <>
;   TypeKind.ELABORATED
;   name = maxSequencesCount, type = uint32_t, offset = 40, size = 4
    maxSequencesCount dword ?
VkGeneratedCommandsMemoryRequirementsInfoNV ends

; TYPEDEF PFN_vkGetGeneratedCommandsMemoryRequirementsNV = void (*)(VkDevice, const VkGeneratedCommandsMemoryRequirementsInfoNV *, VkMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetGeneratedCommandsMemoryRequirementsNV typedef qword

; TYPEDEF PFN_vkCmdPreprocessGeneratedCommandsNV = void (*)(VkCommandBuffer, const VkGeneratedCommandsInfoNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdPreprocessGeneratedCommandsNV typedef qword

; TYPEDEF PFN_vkCmdExecuteGeneratedCommandsNV = void (*)(VkCommandBuffer, VkBool32, const VkGeneratedCommandsInfoNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdExecuteGeneratedCommandsNV typedef qword

; TYPEDEF PFN_vkCmdBindPipelineShaderGroupNV = void (*)(VkCommandBuffer, VkPipelineBindPoint, VkPipeline, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindPipelineShaderGroupNV typedef qword

; TYPEDEF PFN_vkCreateIndirectCommandsLayoutNV = VkResult (*)(VkDevice, const VkIndirectCommandsLayoutCreateInfoNV *, const VkAllocationCallbacks *, VkIndirectCommandsLayoutNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateIndirectCommandsLayoutNV typedef qword

; TYPEDEF PFN_vkDestroyIndirectCommandsLayoutNV = void (*)(VkDevice, VkIndirectCommandsLayoutNV, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyIndirectCommandsLayoutNV typedef qword

; void vkGetGeneratedCommandsMemoryRequirementsNV(VkDevice device, const VkGeneratedCommandsMemoryRequirementsInfoNV * pInfo, VkMemoryRequirements2 * pMemoryRequirements)
vkGetGeneratedCommandsMemoryRequirementsNV qword ?

; void vkCmdPreprocessGeneratedCommandsNV(VkCommandBuffer commandBuffer, const VkGeneratedCommandsInfoNV * pGeneratedCommandsInfo)
vkCmdPreprocessGeneratedCommandsNV qword ?

; void vkCmdExecuteGeneratedCommandsNV(VkCommandBuffer commandBuffer, VkBool32 isPreprocessed, const VkGeneratedCommandsInfoNV * pGeneratedCommandsInfo)
vkCmdExecuteGeneratedCommandsNV qword ?

; void vkCmdBindPipelineShaderGroupNV(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipeline pipeline, uint32_t groupIndex)
vkCmdBindPipelineShaderGroupNV qword ?

; VkResult vkCreateIndirectCommandsLayoutNV(VkDevice device, const VkIndirectCommandsLayoutCreateInfoNV * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkIndirectCommandsLayoutNV * pIndirectCommandsLayout)
vkCreateIndirectCommandsLayoutNV qword ?

; void vkDestroyIndirectCommandsLayoutNV(VkDevice device, VkIndirectCommandsLayoutNV indirectCommandsLayout, const VkAllocationCallbacks * pAllocator)
vkDestroyIndirectCommandsLayoutNV qword ?

VkPhysicalDeviceInheritedViewportScissorFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = inheritedViewportScissor2D, type = VkBool32, offset = 16, size = 4
    inheritedViewportScissor2D VkBool32 <>
VkPhysicalDeviceInheritedViewportScissorFeaturesNV ends

; TYPEDEF VkPhysicalDeviceInheritedViewportScissorFeaturesNV = struct VkPhysicalDeviceInheritedViewportScissorFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceInheritedViewportScissorFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = inheritedViewportScissor2D, type = VkBool32, offset = 16, size = 4
    inheritedViewportScissor2D VkBool32 <>
VkPhysicalDeviceInheritedViewportScissorFeaturesNV ends

VkCommandBufferInheritanceViewportScissorInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = viewportScissor2D, type = VkBool32, offset = 16, size = 4
    viewportScissor2D VkBool32 <>
;   TypeKind.ELABORATED
;   name = viewportDepthCount, type = uint32_t, offset = 20, size = 4
    viewportDepthCount dword ?
;   TypeKind.POINTER
;   name = pViewportDepths, type = const VkViewport *, offset = 24, size = 8
    pViewportDepths qword ?
VkCommandBufferInheritanceViewportScissorInfoNV ends

; TYPEDEF VkCommandBufferInheritanceViewportScissorInfoNV = struct VkCommandBufferInheritanceViewportScissorInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkCommandBufferInheritanceViewportScissorInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = viewportScissor2D, type = VkBool32, offset = 16, size = 4
    viewportScissor2D VkBool32 <>
;   TypeKind.ELABORATED
;   name = viewportDepthCount, type = uint32_t, offset = 20, size = 4
    viewportDepthCount dword ?
;   TypeKind.POINTER
;   name = pViewportDepths, type = const VkViewport *, offset = 24, size = 8
    pViewportDepths qword ?
VkCommandBufferInheritanceViewportScissorInfoNV ends

VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = texelBufferAlignment, type = VkBool32, offset = 16, size = 4
    texelBufferAlignment VkBool32 <>
VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT = struct VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = texelBufferAlignment, type = VkBool32, offset = 16, size = 4
    texelBufferAlignment VkBool32 <>
VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT = VkPhysicalDeviceTexelBufferAlignmentProperties, TypeKind.ELABORATED

VkRenderPassTransformBeginInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = transform, type = VkSurfaceTransformFlagBitsKHR, offset = 16, size = 4
    transform VkSurfaceTransformFlagBitsKHR <>
VkRenderPassTransformBeginInfoQCOM ends

; TYPEDEF VkRenderPassTransformBeginInfoQCOM = struct VkRenderPassTransformBeginInfoQCOM, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassTransformBeginInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = transform, type = VkSurfaceTransformFlagBitsKHR, offset = 16, size = 4
    transform VkSurfaceTransformFlagBitsKHR <>
VkRenderPassTransformBeginInfoQCOM ends

VkCommandBufferInheritanceRenderPassTransformInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = transform, type = VkSurfaceTransformFlagBitsKHR, offset = 16, size = 4
    transform VkSurfaceTransformFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = renderArea, type = VkRect2D, offset = 20, size = 16
    renderArea VkRect2D <>
VkCommandBufferInheritanceRenderPassTransformInfoQCOM ends

; TYPEDEF VkCommandBufferInheritanceRenderPassTransformInfoQCOM = struct VkCommandBufferInheritanceRenderPassTransformInfoQCOM, TypeKind.ELABORATED
; remove struct typedef

VkCommandBufferInheritanceRenderPassTransformInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = transform, type = VkSurfaceTransformFlagBitsKHR, offset = 16, size = 4
    transform VkSurfaceTransformFlagBitsKHR <>
;   TypeKind.ELABORATED
;   name = renderArea, type = VkRect2D, offset = 20, size = 16
    renderArea VkRect2D <>
VkCommandBufferInheritanceRenderPassTransformInfoQCOM ends

; enum VkDepthBiasRepresentationEXT {
    VK_DEPTH_BIAS_REPRESENTATION_LEAST_REPRESENTABLE_VALUE_FORMAT_EXT equ 0
    VK_DEPTH_BIAS_REPRESENTATION_LEAST_REPRESENTABLE_VALUE_FORCE_UNORM_EXT equ 1
    VK_DEPTH_BIAS_REPRESENTATION_FLOAT_EXT equ 2
    VK_DEPTH_BIAS_REPRESENTATION_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDepthBiasRepresentationEXT = enum VkDepthBiasRepresentationEXT, TypeKind.ELABORATED
VkDepthBiasRepresentationEXT typedef dword

; enum VkDepthBiasRepresentationEXT {
    VK_DEPTH_BIAS_REPRESENTATION_LEAST_REPRESENTABLE_VALUE_FORMAT_EXT equ 0
    VK_DEPTH_BIAS_REPRESENTATION_LEAST_REPRESENTABLE_VALUE_FORCE_UNORM_EXT equ 1
    VK_DEPTH_BIAS_REPRESENTATION_FLOAT_EXT equ 2
    VK_DEPTH_BIAS_REPRESENTATION_MAX_ENUM_EXT equ 2147483647
; }

VkPhysicalDeviceDepthBiasControlFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthBiasControl, type = VkBool32, offset = 16, size = 4
    depthBiasControl VkBool32 <>
;   TypeKind.ELABORATED
;   name = leastRepresentableValueForceUnormRepresentation, type = VkBool32, offset = 20, size = 4
    leastRepresentableValueForceUnormRepresentation VkBool32 <>
;   TypeKind.ELABORATED
;   name = floatRepresentation, type = VkBool32, offset = 24, size = 4
    floatRepresentation VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthBiasExact, type = VkBool32, offset = 28, size = 4
    depthBiasExact VkBool32 <>
VkPhysicalDeviceDepthBiasControlFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceDepthBiasControlFeaturesEXT = struct VkPhysicalDeviceDepthBiasControlFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDepthBiasControlFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthBiasControl, type = VkBool32, offset = 16, size = 4
    depthBiasControl VkBool32 <>
;   TypeKind.ELABORATED
;   name = leastRepresentableValueForceUnormRepresentation, type = VkBool32, offset = 20, size = 4
    leastRepresentableValueForceUnormRepresentation VkBool32 <>
;   TypeKind.ELABORATED
;   name = floatRepresentation, type = VkBool32, offset = 24, size = 4
    floatRepresentation VkBool32 <>
;   TypeKind.ELABORATED
;   name = depthBiasExact, type = VkBool32, offset = 28, size = 4
    depthBiasExact VkBool32 <>
VkPhysicalDeviceDepthBiasControlFeaturesEXT ends

VkDepthBiasInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.FLOAT
;   name = depthBiasConstantFactor, type = float, offset = 16, size = 4
    depthBiasConstantFactor real4 ?
;   TypeKind.FLOAT
;   name = depthBiasClamp, type = float, offset = 20, size = 4
    depthBiasClamp real4 ?
;   TypeKind.FLOAT
;   name = depthBiasSlopeFactor, type = float, offset = 24, size = 4
    depthBiasSlopeFactor real4 ?
VkDepthBiasInfoEXT ends

; TYPEDEF VkDepthBiasInfoEXT = struct VkDepthBiasInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDepthBiasInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.FLOAT
;   name = depthBiasConstantFactor, type = float, offset = 16, size = 4
    depthBiasConstantFactor real4 ?
;   TypeKind.FLOAT
;   name = depthBiasClamp, type = float, offset = 20, size = 4
    depthBiasClamp real4 ?
;   TypeKind.FLOAT
;   name = depthBiasSlopeFactor, type = float, offset = 24, size = 4
    depthBiasSlopeFactor real4 ?
VkDepthBiasInfoEXT ends

VkDepthBiasRepresentationInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthBiasRepresentation, type = VkDepthBiasRepresentationEXT, offset = 16, size = 4
    depthBiasRepresentation VkDepthBiasRepresentationEXT <>
;   TypeKind.ELABORATED
;   name = depthBiasExact, type = VkBool32, offset = 20, size = 4
    depthBiasExact VkBool32 <>
VkDepthBiasRepresentationInfoEXT ends

; TYPEDEF VkDepthBiasRepresentationInfoEXT = struct VkDepthBiasRepresentationInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDepthBiasRepresentationInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthBiasRepresentation, type = VkDepthBiasRepresentationEXT, offset = 16, size = 4
    depthBiasRepresentation VkDepthBiasRepresentationEXT <>
;   TypeKind.ELABORATED
;   name = depthBiasExact, type = VkBool32, offset = 20, size = 4
    depthBiasExact VkBool32 <>
VkDepthBiasRepresentationInfoEXT ends

; TYPEDEF PFN_vkCmdSetDepthBias2EXT = void (*)(VkCommandBuffer, const VkDepthBiasInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthBias2EXT typedef qword

; void vkCmdSetDepthBias2EXT(VkCommandBuffer commandBuffer, const VkDepthBiasInfoEXT * pDepthBiasInfo)
vkCmdSetDepthBias2EXT qword ?

; enum VkDeviceMemoryReportEventTypeEXT {
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT equ 0
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT equ 1
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT equ 2
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT equ 3
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT equ 4
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDeviceMemoryReportEventTypeEXT = enum VkDeviceMemoryReportEventTypeEXT, TypeKind.ELABORATED
VkDeviceMemoryReportEventTypeEXT typedef dword

; enum VkDeviceMemoryReportEventTypeEXT {
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT equ 0
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT equ 1
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT equ 2
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT equ 3
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT equ 4
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDeviceMemoryReportFlagsEXT = VkFlags, TypeKind.ELABORATED
VkDeviceMemoryReportFlagsEXT typedef dword

VkPhysicalDeviceDeviceMemoryReportFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceMemoryReport, type = VkBool32, offset = 16, size = 4
    deviceMemoryReport VkBool32 <>
VkPhysicalDeviceDeviceMemoryReportFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = struct VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDeviceMemoryReportFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceMemoryReport, type = VkBool32, offset = 16, size = 4
    deviceMemoryReport VkBool32 <>
VkPhysicalDeviceDeviceMemoryReportFeaturesEXT ends

VkDeviceMemoryReportCallbackDataEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceMemoryReportFlagsEXT, offset = 16, size = 4
    flags VkDeviceMemoryReportFlagsEXT <>
;   TypeKind.ELABORATED
;   name = type, type = VkDeviceMemoryReportEventTypeEXT, offset = 20, size = 4
    __type VkDeviceMemoryReportEventTypeEXT <>
;   TypeKind.ELABORATED
;   name = memoryObjectId, type = uint64_t, offset = 24, size = 8
    memoryObjectId qword ?
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 32, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = objectType, type = VkObjectType, offset = 40, size = 4
    objectType VkObjectType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = objectHandle, type = uint64_t, offset = 48, size = 8
    objectHandle qword ?
;   TypeKind.ELABORATED
;   name = heapIndex, type = uint32_t, offset = 56, size = 4
    heapIndex dword ?
VkDeviceMemoryReportCallbackDataEXT ends

; TYPEDEF VkDeviceMemoryReportCallbackDataEXT = struct VkDeviceMemoryReportCallbackDataEXT, TypeKind.ELABORATED
; remove struct typedef

VkDeviceMemoryReportCallbackDataEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceMemoryReportFlagsEXT, offset = 16, size = 4
    flags VkDeviceMemoryReportFlagsEXT <>
;   TypeKind.ELABORATED
;   name = type, type = VkDeviceMemoryReportEventTypeEXT, offset = 20, size = 4
    __type VkDeviceMemoryReportEventTypeEXT <>
;   TypeKind.ELABORATED
;   name = memoryObjectId, type = uint64_t, offset = 24, size = 8
    memoryObjectId qword ?
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 32, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = objectType, type = VkObjectType, offset = 40, size = 4
    objectType VkObjectType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = objectHandle, type = uint64_t, offset = 48, size = 8
    objectHandle qword ?
;   TypeKind.ELABORATED
;   name = heapIndex, type = uint32_t, offset = 56, size = 4
    heapIndex dword ?
VkDeviceMemoryReportCallbackDataEXT ends

; TYPEDEF PFN_vkDeviceMemoryReportCallbackEXT = void (*)(const VkDeviceMemoryReportCallbackDataEXT *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDeviceMemoryReportCallbackEXT typedef qword

VkDeviceDeviceMemoryReportCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceMemoryReportFlagsEXT, offset = 16, size = 4
    flags VkDeviceMemoryReportFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pfnUserCallback, type = PFN_vkDeviceMemoryReportCallbackEXT, offset = 24, size = 8
    pfnUserCallback PFN_vkDeviceMemoryReportCallbackEXT <>
;   TypeKind.POINTER
;   name = pUserData, type = void *, offset = 32, size = 8
    pUserData qword ?
VkDeviceDeviceMemoryReportCreateInfoEXT ends

; TYPEDEF VkDeviceDeviceMemoryReportCreateInfoEXT = struct VkDeviceDeviceMemoryReportCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDeviceDeviceMemoryReportCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceMemoryReportFlagsEXT, offset = 16, size = 4
    flags VkDeviceMemoryReportFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pfnUserCallback, type = PFN_vkDeviceMemoryReportCallbackEXT, offset = 24, size = 8
    pfnUserCallback PFN_vkDeviceMemoryReportCallbackEXT <>
;   TypeKind.POINTER
;   name = pUserData, type = void *, offset = 32, size = 8
    pUserData qword ?
VkDeviceDeviceMemoryReportCreateInfoEXT ends

; TYPEDEF PFN_vkAcquireDrmDisplayEXT = VkResult (*)(VkPhysicalDevice, int32_t, VkDisplayKHR) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkAcquireDrmDisplayEXT typedef qword

; TYPEDEF PFN_vkGetDrmDisplayEXT = VkResult (*)(VkPhysicalDevice, int32_t, uint32_t, VkDisplayKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDrmDisplayEXT typedef qword

; VkResult vkAcquireDrmDisplayEXT(VkPhysicalDevice physicalDevice, int32_t drmFd, VkDisplayKHR display)
vkAcquireDrmDisplayEXT qword ?

; VkResult vkGetDrmDisplayEXT(VkPhysicalDevice physicalDevice, int32_t drmFd, uint32_t connectorId, VkDisplayKHR * display)
vkGetDrmDisplayEXT qword ?

VkPhysicalDeviceRobustness2FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = robustBufferAccess2, type = VkBool32, offset = 16, size = 4
    robustBufferAccess2 VkBool32 <>
;   TypeKind.ELABORATED
;   name = robustImageAccess2, type = VkBool32, offset = 20, size = 4
    robustImageAccess2 VkBool32 <>
;   TypeKind.ELABORATED
;   name = nullDescriptor, type = VkBool32, offset = 24, size = 4
    nullDescriptor VkBool32 <>
VkPhysicalDeviceRobustness2FeaturesEXT ends

; TYPEDEF VkPhysicalDeviceRobustness2FeaturesEXT = struct VkPhysicalDeviceRobustness2FeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRobustness2FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = robustBufferAccess2, type = VkBool32, offset = 16, size = 4
    robustBufferAccess2 VkBool32 <>
;   TypeKind.ELABORATED
;   name = robustImageAccess2, type = VkBool32, offset = 20, size = 4
    robustImageAccess2 VkBool32 <>
;   TypeKind.ELABORATED
;   name = nullDescriptor, type = VkBool32, offset = 24, size = 4
    nullDescriptor VkBool32 <>
VkPhysicalDeviceRobustness2FeaturesEXT ends

VkPhysicalDeviceRobustness2PropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = robustStorageBufferAccessSizeAlignment, type = VkDeviceSize, offset = 16, size = 8
    robustStorageBufferAccessSizeAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = robustUniformBufferAccessSizeAlignment, type = VkDeviceSize, offset = 24, size = 8
    robustUniformBufferAccessSizeAlignment VkDeviceSize <>
VkPhysicalDeviceRobustness2PropertiesEXT ends

; TYPEDEF VkPhysicalDeviceRobustness2PropertiesEXT = struct VkPhysicalDeviceRobustness2PropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRobustness2PropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = robustStorageBufferAccessSizeAlignment, type = VkDeviceSize, offset = 16, size = 8
    robustStorageBufferAccessSizeAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = robustUniformBufferAccessSizeAlignment, type = VkDeviceSize, offset = 24, size = 8
    robustUniformBufferAccessSizeAlignment VkDeviceSize <>
VkPhysicalDeviceRobustness2PropertiesEXT ends

VkSamplerCustomBorderColorCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = customBorderColor, type = VkClearColorValue, offset = 16, size = 16
    customBorderColor VkClearColorValue <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 32, size = 4
    format VkFormat <>
VkSamplerCustomBorderColorCreateInfoEXT ends

; TYPEDEF VkSamplerCustomBorderColorCreateInfoEXT = struct VkSamplerCustomBorderColorCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkSamplerCustomBorderColorCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = customBorderColor, type = VkClearColorValue, offset = 16, size = 16
    customBorderColor VkClearColorValue <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 32, size = 4
    format VkFormat <>
VkSamplerCustomBorderColorCreateInfoEXT ends

VkPhysicalDeviceCustomBorderColorPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxCustomBorderColorSamplers, type = uint32_t, offset = 16, size = 4
    maxCustomBorderColorSamplers dword ?
VkPhysicalDeviceCustomBorderColorPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceCustomBorderColorPropertiesEXT = struct VkPhysicalDeviceCustomBorderColorPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCustomBorderColorPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxCustomBorderColorSamplers, type = uint32_t, offset = 16, size = 4
    maxCustomBorderColorSamplers dword ?
VkPhysicalDeviceCustomBorderColorPropertiesEXT ends

VkPhysicalDeviceCustomBorderColorFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = customBorderColors, type = VkBool32, offset = 16, size = 4
    customBorderColors VkBool32 <>
;   TypeKind.ELABORATED
;   name = customBorderColorWithoutFormat, type = VkBool32, offset = 20, size = 4
    customBorderColorWithoutFormat VkBool32 <>
VkPhysicalDeviceCustomBorderColorFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceCustomBorderColorFeaturesEXT = struct VkPhysicalDeviceCustomBorderColorFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCustomBorderColorFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = customBorderColors, type = VkBool32, offset = 16, size = 4
    customBorderColors VkBool32 <>
;   TypeKind.ELABORATED
;   name = customBorderColorWithoutFormat, type = VkBool32, offset = 20, size = 4
    customBorderColorWithoutFormat VkBool32 <>
VkPhysicalDeviceCustomBorderColorFeaturesEXT ends

VkPhysicalDevicePresentBarrierFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentBarrier, type = VkBool32, offset = 16, size = 4
    presentBarrier VkBool32 <>
VkPhysicalDevicePresentBarrierFeaturesNV ends

; TYPEDEF VkPhysicalDevicePresentBarrierFeaturesNV = struct VkPhysicalDevicePresentBarrierFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePresentBarrierFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentBarrier, type = VkBool32, offset = 16, size = 4
    presentBarrier VkBool32 <>
VkPhysicalDevicePresentBarrierFeaturesNV ends

VkSurfaceCapabilitiesPresentBarrierNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentBarrierSupported, type = VkBool32, offset = 16, size = 4
    presentBarrierSupported VkBool32 <>
VkSurfaceCapabilitiesPresentBarrierNV ends

; TYPEDEF VkSurfaceCapabilitiesPresentBarrierNV = struct VkSurfaceCapabilitiesPresentBarrierNV, TypeKind.ELABORATED
; remove struct typedef

VkSurfaceCapabilitiesPresentBarrierNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentBarrierSupported, type = VkBool32, offset = 16, size = 4
    presentBarrierSupported VkBool32 <>
VkSurfaceCapabilitiesPresentBarrierNV ends

VkSwapchainPresentBarrierCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentBarrierEnable, type = VkBool32, offset = 16, size = 4
    presentBarrierEnable VkBool32 <>
VkSwapchainPresentBarrierCreateInfoNV ends

; TYPEDEF VkSwapchainPresentBarrierCreateInfoNV = struct VkSwapchainPresentBarrierCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkSwapchainPresentBarrierCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentBarrierEnable, type = VkBool32, offset = 16, size = 4
    presentBarrierEnable VkBool32 <>
VkSwapchainPresentBarrierCreateInfoNV ends

; TYPEDEF VkPrivateDataSlotEXT = VkPrivateDataSlot, TypeKind.ELABORATED

; TYPEDEF VkPrivateDataSlotCreateFlagsEXT = VkPrivateDataSlotCreateFlags, TypeKind.ELABORATED

; TYPEDEF VkPhysicalDevicePrivateDataFeaturesEXT = VkPhysicalDevicePrivateDataFeatures, TypeKind.ELABORATED

; TYPEDEF VkDevicePrivateDataCreateInfoEXT = VkDevicePrivateDataCreateInfo, TypeKind.ELABORATED

; TYPEDEF VkPrivateDataSlotCreateInfoEXT = VkPrivateDataSlotCreateInfo, TypeKind.ELABORATED

; TYPEDEF PFN_vkCreatePrivateDataSlotEXT = VkResult (*)(VkDevice, const VkPrivateDataSlotCreateInfo *, const VkAllocationCallbacks *, VkPrivateDataSlot *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreatePrivateDataSlotEXT typedef qword

; TYPEDEF PFN_vkDestroyPrivateDataSlotEXT = void (*)(VkDevice, VkPrivateDataSlot, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyPrivateDataSlotEXT typedef qword

; TYPEDEF PFN_vkSetPrivateDataEXT = VkResult (*)(VkDevice, VkObjectType, uint64_t, VkPrivateDataSlot, uint64_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSetPrivateDataEXT typedef qword

; TYPEDEF PFN_vkGetPrivateDataEXT = void (*)(VkDevice, VkObjectType, uint64_t, VkPrivateDataSlot, uint64_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPrivateDataEXT typedef qword

; VkResult vkCreatePrivateDataSlotEXT(VkDevice device, const VkPrivateDataSlotCreateInfo * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkPrivateDataSlot * pPrivateDataSlot)
vkCreatePrivateDataSlotEXT qword ?

; void vkDestroyPrivateDataSlotEXT(VkDevice device, VkPrivateDataSlot privateDataSlot, const VkAllocationCallbacks * pAllocator)
vkDestroyPrivateDataSlotEXT qword ?

; VkResult vkSetPrivateDataEXT(VkDevice device, VkObjectType objectType, uint64_t objectHandle, VkPrivateDataSlot privateDataSlot, uint64_t data)
vkSetPrivateDataEXT qword ?

; void vkGetPrivateDataEXT(VkDevice device, VkObjectType objectType, uint64_t objectHandle, VkPrivateDataSlot privateDataSlot, uint64_t * pData)
vkGetPrivateDataEXT qword ?

; TYPEDEF VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT = VkPhysicalDevicePipelineCreationCacheControlFeatures, TypeKind.ELABORATED

; enum VkDeviceDiagnosticsConfigFlagBitsNV {
    VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV equ 1
    VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV equ 2
    VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV equ 4
    VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_ERROR_REPORTING_BIT_NV equ 8
    VK_DEVICE_DIAGNOSTICS_CONFIG_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkDeviceDiagnosticsConfigFlagBitsNV = enum VkDeviceDiagnosticsConfigFlagBitsNV, TypeKind.ELABORATED
VkDeviceDiagnosticsConfigFlagBitsNV typedef dword

; enum VkDeviceDiagnosticsConfigFlagBitsNV {
    VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV equ 1
    VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV equ 2
    VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV equ 4
    VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_ERROR_REPORTING_BIT_NV equ 8
    VK_DEVICE_DIAGNOSTICS_CONFIG_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkDeviceDiagnosticsConfigFlagsNV = VkFlags, TypeKind.ELABORATED
VkDeviceDiagnosticsConfigFlagsNV typedef dword

VkPhysicalDeviceDiagnosticsConfigFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = diagnosticsConfig, type = VkBool32, offset = 16, size = 4
    diagnosticsConfig VkBool32 <>
VkPhysicalDeviceDiagnosticsConfigFeaturesNV ends

; TYPEDEF VkPhysicalDeviceDiagnosticsConfigFeaturesNV = struct VkPhysicalDeviceDiagnosticsConfigFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDiagnosticsConfigFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = diagnosticsConfig, type = VkBool32, offset = 16, size = 4
    diagnosticsConfig VkBool32 <>
VkPhysicalDeviceDiagnosticsConfigFeaturesNV ends

VkDeviceDiagnosticsConfigCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceDiagnosticsConfigFlagsNV, offset = 16, size = 4
    flags VkDeviceDiagnosticsConfigFlagsNV <>
VkDeviceDiagnosticsConfigCreateInfoNV ends

; TYPEDEF VkDeviceDiagnosticsConfigCreateInfoNV = struct VkDeviceDiagnosticsConfigCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkDeviceDiagnosticsConfigCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceDiagnosticsConfigFlagsNV, offset = 16, size = 4
    flags VkDeviceDiagnosticsConfigFlagsNV <>
VkDeviceDiagnosticsConfigCreateInfoNV ends

; TYPEDEF VkCudaModuleNV = struct VkCudaModuleNV_T *, TypeKind.POINTER
VkCudaModuleNV typedef qword

; TYPEDEF VkCudaFunctionNV = struct VkCudaFunctionNV_T *, TypeKind.POINTER
VkCudaFunctionNV typedef qword

VkCudaModuleCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dataSize, type = size_t, offset = 16, size = 8
    dataSize qword ?
;   TypeKind.POINTER
;   name = pData, type = const void *, offset = 24, size = 8
    pData qword ?
VkCudaModuleCreateInfoNV ends

; TYPEDEF VkCudaModuleCreateInfoNV = struct VkCudaModuleCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkCudaModuleCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dataSize, type = size_t, offset = 16, size = 8
    dataSize qword ?
;   TypeKind.POINTER
;   name = pData, type = const void *, offset = 24, size = 8
    pData qword ?
VkCudaModuleCreateInfoNV ends

VkCudaFunctionCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = module, type = VkCudaModuleNV, offset = 16, size = 8
    module VkCudaModuleNV <>
;   TypeKind.POINTER
;   name = pName, type = const char *, offset = 24, size = 8
    pName qword ?
VkCudaFunctionCreateInfoNV ends

; TYPEDEF VkCudaFunctionCreateInfoNV = struct VkCudaFunctionCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkCudaFunctionCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = module, type = VkCudaModuleNV, offset = 16, size = 8
    module VkCudaModuleNV <>
;   TypeKind.POINTER
;   name = pName, type = const char *, offset = 24, size = 8
    pName qword ?
VkCudaFunctionCreateInfoNV ends

VkCudaLaunchInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = function, type = VkCudaFunctionNV, offset = 16, size = 8
    function VkCudaFunctionNV <>
;   TypeKind.ELABORATED
;   name = gridDimX, type = uint32_t, offset = 24, size = 4
    gridDimX dword ?
;   TypeKind.ELABORATED
;   name = gridDimY, type = uint32_t, offset = 28, size = 4
    gridDimY dword ?
;   TypeKind.ELABORATED
;   name = gridDimZ, type = uint32_t, offset = 32, size = 4
    gridDimZ dword ?
;   TypeKind.ELABORATED
;   name = blockDimX, type = uint32_t, offset = 36, size = 4
    blockDimX dword ?
;   TypeKind.ELABORATED
;   name = blockDimY, type = uint32_t, offset = 40, size = 4
    blockDimY dword ?
;   TypeKind.ELABORATED
;   name = blockDimZ, type = uint32_t, offset = 44, size = 4
    blockDimZ dword ?
;   TypeKind.ELABORATED
;   name = sharedMemBytes, type = uint32_t, offset = 48, size = 4
    sharedMemBytes dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = paramCount, type = size_t, offset = 56, size = 8
    paramCount qword ?
;   TypeKind.POINTER
;   name = pParams, type = const void *const *, offset = 64, size = 8
    pParams qword ?
;   TypeKind.ELABORATED
;   name = extraCount, type = size_t, offset = 72, size = 8
    extraCount qword ?
;   TypeKind.POINTER
;   name = pExtras, type = const void *const *, offset = 80, size = 8
    pExtras qword ?
VkCudaLaunchInfoNV ends

; TYPEDEF VkCudaLaunchInfoNV = struct VkCudaLaunchInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkCudaLaunchInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = function, type = VkCudaFunctionNV, offset = 16, size = 8
    function VkCudaFunctionNV <>
;   TypeKind.ELABORATED
;   name = gridDimX, type = uint32_t, offset = 24, size = 4
    gridDimX dword ?
;   TypeKind.ELABORATED
;   name = gridDimY, type = uint32_t, offset = 28, size = 4
    gridDimY dword ?
;   TypeKind.ELABORATED
;   name = gridDimZ, type = uint32_t, offset = 32, size = 4
    gridDimZ dword ?
;   TypeKind.ELABORATED
;   name = blockDimX, type = uint32_t, offset = 36, size = 4
    blockDimX dword ?
;   TypeKind.ELABORATED
;   name = blockDimY, type = uint32_t, offset = 40, size = 4
    blockDimY dword ?
;   TypeKind.ELABORATED
;   name = blockDimZ, type = uint32_t, offset = 44, size = 4
    blockDimZ dword ?
;   TypeKind.ELABORATED
;   name = sharedMemBytes, type = uint32_t, offset = 48, size = 4
    sharedMemBytes dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = paramCount, type = size_t, offset = 56, size = 8
    paramCount qword ?
;   TypeKind.POINTER
;   name = pParams, type = const void *const *, offset = 64, size = 8
    pParams qword ?
;   TypeKind.ELABORATED
;   name = extraCount, type = size_t, offset = 72, size = 8
    extraCount qword ?
;   TypeKind.POINTER
;   name = pExtras, type = const void *const *, offset = 80, size = 8
    pExtras qword ?
VkCudaLaunchInfoNV ends

VkPhysicalDeviceCudaKernelLaunchFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cudaKernelLaunchFeatures, type = VkBool32, offset = 16, size = 4
    cudaKernelLaunchFeatures VkBool32 <>
VkPhysicalDeviceCudaKernelLaunchFeaturesNV ends

; TYPEDEF VkPhysicalDeviceCudaKernelLaunchFeaturesNV = struct VkPhysicalDeviceCudaKernelLaunchFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCudaKernelLaunchFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cudaKernelLaunchFeatures, type = VkBool32, offset = 16, size = 4
    cudaKernelLaunchFeatures VkBool32 <>
VkPhysicalDeviceCudaKernelLaunchFeaturesNV ends

VkPhysicalDeviceCudaKernelLaunchPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = computeCapabilityMinor, type = uint32_t, offset = 16, size = 4
    computeCapabilityMinor dword ?
;   TypeKind.ELABORATED
;   name = computeCapabilityMajor, type = uint32_t, offset = 20, size = 4
    computeCapabilityMajor dword ?
VkPhysicalDeviceCudaKernelLaunchPropertiesNV ends

; TYPEDEF VkPhysicalDeviceCudaKernelLaunchPropertiesNV = struct VkPhysicalDeviceCudaKernelLaunchPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCudaKernelLaunchPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = computeCapabilityMinor, type = uint32_t, offset = 16, size = 4
    computeCapabilityMinor dword ?
;   TypeKind.ELABORATED
;   name = computeCapabilityMajor, type = uint32_t, offset = 20, size = 4
    computeCapabilityMajor dword ?
VkPhysicalDeviceCudaKernelLaunchPropertiesNV ends

; TYPEDEF PFN_vkCreateCudaModuleNV = VkResult (*)(VkDevice, const VkCudaModuleCreateInfoNV *, const VkAllocationCallbacks *, VkCudaModuleNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateCudaModuleNV typedef qword

; TYPEDEF PFN_vkGetCudaModuleCacheNV = VkResult (*)(VkDevice, VkCudaModuleNV, size_t *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetCudaModuleCacheNV typedef qword

; TYPEDEF PFN_vkCreateCudaFunctionNV = VkResult (*)(VkDevice, const VkCudaFunctionCreateInfoNV *, const VkAllocationCallbacks *, VkCudaFunctionNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateCudaFunctionNV typedef qword

; TYPEDEF PFN_vkDestroyCudaModuleNV = void (*)(VkDevice, VkCudaModuleNV, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyCudaModuleNV typedef qword

; TYPEDEF PFN_vkDestroyCudaFunctionNV = void (*)(VkDevice, VkCudaFunctionNV, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyCudaFunctionNV typedef qword

; TYPEDEF PFN_vkCmdCudaLaunchKernelNV = void (*)(VkCommandBuffer, const VkCudaLaunchInfoNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCudaLaunchKernelNV typedef qword

; VkResult vkCreateCudaModuleNV(VkDevice device, const VkCudaModuleCreateInfoNV * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkCudaModuleNV * pModule)
vkCreateCudaModuleNV qword ?

; VkResult vkGetCudaModuleCacheNV(VkDevice device, VkCudaModuleNV module, size_t * pCacheSize, void * pCacheData)
vkGetCudaModuleCacheNV qword ?

; VkResult vkCreateCudaFunctionNV(VkDevice device, const VkCudaFunctionCreateInfoNV * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkCudaFunctionNV * pFunction)
vkCreateCudaFunctionNV qword ?

; void vkDestroyCudaModuleNV(VkDevice device, VkCudaModuleNV module, const VkAllocationCallbacks * pAllocator)
vkDestroyCudaModuleNV qword ?

; void vkDestroyCudaFunctionNV(VkDevice device, VkCudaFunctionNV function, const VkAllocationCallbacks * pAllocator)
vkDestroyCudaFunctionNV qword ?

; void vkCmdCudaLaunchKernelNV(VkCommandBuffer commandBuffer, const VkCudaLaunchInfoNV * pLaunchInfo)
vkCmdCudaLaunchKernelNV qword ?

VkQueryLowLatencySupportNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pQueriedLowLatencyData, type = void *, offset = 16, size = 8
    pQueriedLowLatencyData qword ?
VkQueryLowLatencySupportNV ends

; TYPEDEF VkQueryLowLatencySupportNV = struct VkQueryLowLatencySupportNV, TypeKind.ELABORATED
; remove struct typedef

VkQueryLowLatencySupportNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pQueriedLowLatencyData, type = void *, offset = 16, size = 8
    pQueriedLowLatencyData qword ?
VkQueryLowLatencySupportNV ends

; TYPEDEF VkAccelerationStructureKHR = struct VkAccelerationStructureKHR_T *, TypeKind.POINTER
VkAccelerationStructureKHR typedef qword

VkPhysicalDeviceDescriptorBufferPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = combinedImageSamplerDescriptorSingleArray, type = VkBool32, offset = 16, size = 4
    combinedImageSamplerDescriptorSingleArray VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferlessPushDescriptors, type = VkBool32, offset = 20, size = 4
    bufferlessPushDescriptors VkBool32 <>
;   TypeKind.ELABORATED
;   name = allowSamplerImageViewPostSubmitCreation, type = VkBool32, offset = 24, size = 4
    allowSamplerImageViewPostSubmitCreation VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = descriptorBufferOffsetAlignment, type = VkDeviceSize, offset = 32, size = 8
    descriptorBufferOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = maxDescriptorBufferBindings, type = uint32_t, offset = 40, size = 4
    maxDescriptorBufferBindings dword ?
;   TypeKind.ELABORATED
;   name = maxResourceDescriptorBufferBindings, type = uint32_t, offset = 44, size = 4
    maxResourceDescriptorBufferBindings dword ?
;   TypeKind.ELABORATED
;   name = maxSamplerDescriptorBufferBindings, type = uint32_t, offset = 48, size = 4
    maxSamplerDescriptorBufferBindings dword ?
;   TypeKind.ELABORATED
;   name = maxEmbeddedImmutableSamplerBindings, type = uint32_t, offset = 52, size = 4
    maxEmbeddedImmutableSamplerBindings dword ?
;   TypeKind.ELABORATED
;   name = maxEmbeddedImmutableSamplers, type = uint32_t, offset = 56, size = 4
    maxEmbeddedImmutableSamplers dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = bufferCaptureReplayDescriptorDataSize, type = size_t, offset = 64, size = 8
    bufferCaptureReplayDescriptorDataSize qword ?
;   TypeKind.ELABORATED
;   name = imageCaptureReplayDescriptorDataSize, type = size_t, offset = 72, size = 8
    imageCaptureReplayDescriptorDataSize qword ?
;   TypeKind.ELABORATED
;   name = imageViewCaptureReplayDescriptorDataSize, type = size_t, offset = 80, size = 8
    imageViewCaptureReplayDescriptorDataSize qword ?
;   TypeKind.ELABORATED
;   name = samplerCaptureReplayDescriptorDataSize, type = size_t, offset = 88, size = 8
    samplerCaptureReplayDescriptorDataSize qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructureCaptureReplayDescriptorDataSize, type = size_t, offset = 96, size = 8
    accelerationStructureCaptureReplayDescriptorDataSize qword ?
;   TypeKind.ELABORATED
;   name = samplerDescriptorSize, type = size_t, offset = 104, size = 8
    samplerDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = combinedImageSamplerDescriptorSize, type = size_t, offset = 112, size = 8
    combinedImageSamplerDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = sampledImageDescriptorSize, type = size_t, offset = 120, size = 8
    sampledImageDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = storageImageDescriptorSize, type = size_t, offset = 128, size = 8
    storageImageDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = uniformTexelBufferDescriptorSize, type = size_t, offset = 136, size = 8
    uniformTexelBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = robustUniformTexelBufferDescriptorSize, type = size_t, offset = 144, size = 8
    robustUniformTexelBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = storageTexelBufferDescriptorSize, type = size_t, offset = 152, size = 8
    storageTexelBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = robustStorageTexelBufferDescriptorSize, type = size_t, offset = 160, size = 8
    robustStorageTexelBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = uniformBufferDescriptorSize, type = size_t, offset = 168, size = 8
    uniformBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = robustUniformBufferDescriptorSize, type = size_t, offset = 176, size = 8
    robustUniformBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = storageBufferDescriptorSize, type = size_t, offset = 184, size = 8
    storageBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = robustStorageBufferDescriptorSize, type = size_t, offset = 192, size = 8
    robustStorageBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = inputAttachmentDescriptorSize, type = size_t, offset = 200, size = 8
    inputAttachmentDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructureDescriptorSize, type = size_t, offset = 208, size = 8
    accelerationStructureDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = maxSamplerDescriptorBufferRange, type = VkDeviceSize, offset = 216, size = 8
    maxSamplerDescriptorBufferRange VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = maxResourceDescriptorBufferRange, type = VkDeviceSize, offset = 224, size = 8
    maxResourceDescriptorBufferRange VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = samplerDescriptorBufferAddressSpaceSize, type = VkDeviceSize, offset = 232, size = 8
    samplerDescriptorBufferAddressSpaceSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = resourceDescriptorBufferAddressSpaceSize, type = VkDeviceSize, offset = 240, size = 8
    resourceDescriptorBufferAddressSpaceSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = descriptorBufferAddressSpaceSize, type = VkDeviceSize, offset = 248, size = 8
    descriptorBufferAddressSpaceSize VkDeviceSize <>
VkPhysicalDeviceDescriptorBufferPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceDescriptorBufferPropertiesEXT = struct VkPhysicalDeviceDescriptorBufferPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDescriptorBufferPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = combinedImageSamplerDescriptorSingleArray, type = VkBool32, offset = 16, size = 4
    combinedImageSamplerDescriptorSingleArray VkBool32 <>
;   TypeKind.ELABORATED
;   name = bufferlessPushDescriptors, type = VkBool32, offset = 20, size = 4
    bufferlessPushDescriptors VkBool32 <>
;   TypeKind.ELABORATED
;   name = allowSamplerImageViewPostSubmitCreation, type = VkBool32, offset = 24, size = 4
    allowSamplerImageViewPostSubmitCreation VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = descriptorBufferOffsetAlignment, type = VkDeviceSize, offset = 32, size = 8
    descriptorBufferOffsetAlignment VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = maxDescriptorBufferBindings, type = uint32_t, offset = 40, size = 4
    maxDescriptorBufferBindings dword ?
;   TypeKind.ELABORATED
;   name = maxResourceDescriptorBufferBindings, type = uint32_t, offset = 44, size = 4
    maxResourceDescriptorBufferBindings dword ?
;   TypeKind.ELABORATED
;   name = maxSamplerDescriptorBufferBindings, type = uint32_t, offset = 48, size = 4
    maxSamplerDescriptorBufferBindings dword ?
;   TypeKind.ELABORATED
;   name = maxEmbeddedImmutableSamplerBindings, type = uint32_t, offset = 52, size = 4
    maxEmbeddedImmutableSamplerBindings dword ?
;   TypeKind.ELABORATED
;   name = maxEmbeddedImmutableSamplers, type = uint32_t, offset = 56, size = 4
    maxEmbeddedImmutableSamplers dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = bufferCaptureReplayDescriptorDataSize, type = size_t, offset = 64, size = 8
    bufferCaptureReplayDescriptorDataSize qword ?
;   TypeKind.ELABORATED
;   name = imageCaptureReplayDescriptorDataSize, type = size_t, offset = 72, size = 8
    imageCaptureReplayDescriptorDataSize qword ?
;   TypeKind.ELABORATED
;   name = imageViewCaptureReplayDescriptorDataSize, type = size_t, offset = 80, size = 8
    imageViewCaptureReplayDescriptorDataSize qword ?
;   TypeKind.ELABORATED
;   name = samplerCaptureReplayDescriptorDataSize, type = size_t, offset = 88, size = 8
    samplerCaptureReplayDescriptorDataSize qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructureCaptureReplayDescriptorDataSize, type = size_t, offset = 96, size = 8
    accelerationStructureCaptureReplayDescriptorDataSize qword ?
;   TypeKind.ELABORATED
;   name = samplerDescriptorSize, type = size_t, offset = 104, size = 8
    samplerDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = combinedImageSamplerDescriptorSize, type = size_t, offset = 112, size = 8
    combinedImageSamplerDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = sampledImageDescriptorSize, type = size_t, offset = 120, size = 8
    sampledImageDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = storageImageDescriptorSize, type = size_t, offset = 128, size = 8
    storageImageDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = uniformTexelBufferDescriptorSize, type = size_t, offset = 136, size = 8
    uniformTexelBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = robustUniformTexelBufferDescriptorSize, type = size_t, offset = 144, size = 8
    robustUniformTexelBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = storageTexelBufferDescriptorSize, type = size_t, offset = 152, size = 8
    storageTexelBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = robustStorageTexelBufferDescriptorSize, type = size_t, offset = 160, size = 8
    robustStorageTexelBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = uniformBufferDescriptorSize, type = size_t, offset = 168, size = 8
    uniformBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = robustUniformBufferDescriptorSize, type = size_t, offset = 176, size = 8
    robustUniformBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = storageBufferDescriptorSize, type = size_t, offset = 184, size = 8
    storageBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = robustStorageBufferDescriptorSize, type = size_t, offset = 192, size = 8
    robustStorageBufferDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = inputAttachmentDescriptorSize, type = size_t, offset = 200, size = 8
    inputAttachmentDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructureDescriptorSize, type = size_t, offset = 208, size = 8
    accelerationStructureDescriptorSize qword ?
;   TypeKind.ELABORATED
;   name = maxSamplerDescriptorBufferRange, type = VkDeviceSize, offset = 216, size = 8
    maxSamplerDescriptorBufferRange VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = maxResourceDescriptorBufferRange, type = VkDeviceSize, offset = 224, size = 8
    maxResourceDescriptorBufferRange VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = samplerDescriptorBufferAddressSpaceSize, type = VkDeviceSize, offset = 232, size = 8
    samplerDescriptorBufferAddressSpaceSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = resourceDescriptorBufferAddressSpaceSize, type = VkDeviceSize, offset = 240, size = 8
    resourceDescriptorBufferAddressSpaceSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = descriptorBufferAddressSpaceSize, type = VkDeviceSize, offset = 248, size = 8
    descriptorBufferAddressSpaceSize VkDeviceSize <>
VkPhysicalDeviceDescriptorBufferPropertiesEXT ends

VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = combinedImageSamplerDensityMapDescriptorSize, type = size_t, offset = 16, size = 8
    combinedImageSamplerDensityMapDescriptorSize qword ?
VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT = struct VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = combinedImageSamplerDensityMapDescriptorSize, type = size_t, offset = 16, size = 8
    combinedImageSamplerDensityMapDescriptorSize qword ?
VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT ends

VkPhysicalDeviceDescriptorBufferFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorBuffer, type = VkBool32, offset = 16, size = 4
    descriptorBuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBufferCaptureReplay, type = VkBool32, offset = 20, size = 4
    descriptorBufferCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBufferImageLayoutIgnored, type = VkBool32, offset = 24, size = 4
    descriptorBufferImageLayoutIgnored VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBufferPushDescriptors, type = VkBool32, offset = 28, size = 4
    descriptorBufferPushDescriptors VkBool32 <>
VkPhysicalDeviceDescriptorBufferFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceDescriptorBufferFeaturesEXT = struct VkPhysicalDeviceDescriptorBufferFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDescriptorBufferFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorBuffer, type = VkBool32, offset = 16, size = 4
    descriptorBuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBufferCaptureReplay, type = VkBool32, offset = 20, size = 4
    descriptorBufferCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBufferImageLayoutIgnored, type = VkBool32, offset = 24, size = 4
    descriptorBufferImageLayoutIgnored VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBufferPushDescriptors, type = VkBool32, offset = 28, size = 4
    descriptorBufferPushDescriptors VkBool32 <>
VkPhysicalDeviceDescriptorBufferFeaturesEXT ends

VkDescriptorAddressInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = address, type = VkDeviceAddress, offset = 16, size = 8
    address VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = range, type = VkDeviceSize, offset = 24, size = 8
    range VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 32, size = 4
    format VkFormat <>
VkDescriptorAddressInfoEXT ends

; TYPEDEF VkDescriptorAddressInfoEXT = struct VkDescriptorAddressInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorAddressInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = address, type = VkDeviceAddress, offset = 16, size = 8
    address VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = range, type = VkDeviceSize, offset = 24, size = 8
    range VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 32, size = 4
    format VkFormat <>
VkDescriptorAddressInfoEXT ends

VkDescriptorBufferBindingInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = address, type = VkDeviceAddress, offset = 16, size = 8
    address VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = usage, type = VkBufferUsageFlags, offset = 24, size = 4
    usage VkBufferUsageFlags <>
VkDescriptorBufferBindingInfoEXT ends

; TYPEDEF VkDescriptorBufferBindingInfoEXT = struct VkDescriptorBufferBindingInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorBufferBindingInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = address, type = VkDeviceAddress, offset = 16, size = 8
    address VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = usage, type = VkBufferUsageFlags, offset = 24, size = 4
    usage VkBufferUsageFlags <>
VkDescriptorBufferBindingInfoEXT ends

VkDescriptorBufferBindingPushDescriptorBufferHandleEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
VkDescriptorBufferBindingPushDescriptorBufferHandleEXT ends

; TYPEDEF VkDescriptorBufferBindingPushDescriptorBufferHandleEXT = struct VkDescriptorBufferBindingPushDescriptorBufferHandleEXT, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorBufferBindingPushDescriptorBufferHandleEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
VkDescriptorBufferBindingPushDescriptorBufferHandleEXT ends

; TYPEDEF VkDescriptorDataEXT = union VkDescriptorDataEXT, TypeKind.ELABORATED
; remove union typedef

VkDescriptorGetInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkDescriptorType, offset = 16, size = 4
    __type VkDescriptorType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = data, type = VkDescriptorDataEXT, offset = 24, size = 8
    data VkDescriptorDataEXT <>
VkDescriptorGetInfoEXT ends

; TYPEDEF VkDescriptorGetInfoEXT = struct VkDescriptorGetInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorGetInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkDescriptorType, offset = 16, size = 4
    __type VkDescriptorType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = data, type = VkDescriptorDataEXT, offset = 24, size = 8
    data VkDescriptorDataEXT <>
VkDescriptorGetInfoEXT ends

VkBufferCaptureDescriptorDataInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
VkBufferCaptureDescriptorDataInfoEXT ends

; TYPEDEF VkBufferCaptureDescriptorDataInfoEXT = struct VkBufferCaptureDescriptorDataInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkBufferCaptureDescriptorDataInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 16, size = 8
    _buffer VkBuffer <>
VkBufferCaptureDescriptorDataInfoEXT ends

VkImageCaptureDescriptorDataInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
VkImageCaptureDescriptorDataInfoEXT ends

; TYPEDEF VkImageCaptureDescriptorDataInfoEXT = struct VkImageCaptureDescriptorDataInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkImageCaptureDescriptorDataInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image, type = VkImage, offset = 16, size = 8
    image VkImage <>
VkImageCaptureDescriptorDataInfoEXT ends

VkImageViewCaptureDescriptorDataInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 16, size = 8
    imageView VkImageView <>
VkImageViewCaptureDescriptorDataInfoEXT ends

; TYPEDEF VkImageViewCaptureDescriptorDataInfoEXT = struct VkImageViewCaptureDescriptorDataInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkImageViewCaptureDescriptorDataInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageView, type = VkImageView, offset = 16, size = 8
    imageView VkImageView <>
VkImageViewCaptureDescriptorDataInfoEXT ends

VkSamplerCaptureDescriptorDataInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampler, type = VkSampler, offset = 16, size = 8
    sampler VkSampler <>
VkSamplerCaptureDescriptorDataInfoEXT ends

; TYPEDEF VkSamplerCaptureDescriptorDataInfoEXT = struct VkSamplerCaptureDescriptorDataInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkSamplerCaptureDescriptorDataInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sampler, type = VkSampler, offset = 16, size = 8
    sampler VkSampler <>
VkSamplerCaptureDescriptorDataInfoEXT ends

VkOpaqueCaptureDescriptorDataCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = opaqueCaptureDescriptorData, type = const void *, offset = 16, size = 8
    opaqueCaptureDescriptorData qword ?
VkOpaqueCaptureDescriptorDataCreateInfoEXT ends

; TYPEDEF VkOpaqueCaptureDescriptorDataCreateInfoEXT = struct VkOpaqueCaptureDescriptorDataCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkOpaqueCaptureDescriptorDataCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = opaqueCaptureDescriptorData, type = const void *, offset = 16, size = 8
    opaqueCaptureDescriptorData qword ?
VkOpaqueCaptureDescriptorDataCreateInfoEXT ends

VkAccelerationStructureCaptureDescriptorDataInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructure, type = VkAccelerationStructureKHR, offset = 16, size = 8
    accelerationStructure VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = accelerationStructureNV, type = VkAccelerationStructureNV, offset = 24, size = 8
    accelerationStructureNV VkAccelerationStructureNV <>
VkAccelerationStructureCaptureDescriptorDataInfoEXT ends

; TYPEDEF VkAccelerationStructureCaptureDescriptorDataInfoEXT = struct VkAccelerationStructureCaptureDescriptorDataInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureCaptureDescriptorDataInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructure, type = VkAccelerationStructureKHR, offset = 16, size = 8
    accelerationStructure VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = accelerationStructureNV, type = VkAccelerationStructureNV, offset = 24, size = 8
    accelerationStructureNV VkAccelerationStructureNV <>
VkAccelerationStructureCaptureDescriptorDataInfoEXT ends

; TYPEDEF PFN_vkGetDescriptorSetLayoutSizeEXT = void (*)(VkDevice, VkDescriptorSetLayout, VkDeviceSize *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDescriptorSetLayoutSizeEXT typedef qword

; TYPEDEF PFN_vkGetDescriptorSetLayoutBindingOffsetEXT = void (*)(VkDevice, VkDescriptorSetLayout, uint32_t, VkDeviceSize *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDescriptorSetLayoutBindingOffsetEXT typedef qword

; TYPEDEF PFN_vkGetDescriptorEXT = void (*)(VkDevice, const VkDescriptorGetInfoEXT *, size_t, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDescriptorEXT typedef qword

; TYPEDEF PFN_vkCmdBindDescriptorBuffersEXT = void (*)(VkCommandBuffer, uint32_t, const VkDescriptorBufferBindingInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindDescriptorBuffersEXT typedef qword

; TYPEDEF PFN_vkCmdSetDescriptorBufferOffsetsEXT = void (*)(VkCommandBuffer, VkPipelineBindPoint, VkPipelineLayout, uint32_t, uint32_t, const uint32_t *, const VkDeviceSize *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDescriptorBufferOffsetsEXT typedef qword

; TYPEDEF PFN_vkCmdBindDescriptorBufferEmbeddedSamplersEXT = void (*)(VkCommandBuffer, VkPipelineBindPoint, VkPipelineLayout, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindDescriptorBufferEmbeddedSamplersEXT typedef qword

; TYPEDEF PFN_vkGetBufferOpaqueCaptureDescriptorDataEXT = VkResult (*)(VkDevice, const VkBufferCaptureDescriptorDataInfoEXT *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetBufferOpaqueCaptureDescriptorDataEXT typedef qword

; TYPEDEF PFN_vkGetImageOpaqueCaptureDescriptorDataEXT = VkResult (*)(VkDevice, const VkImageCaptureDescriptorDataInfoEXT *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageOpaqueCaptureDescriptorDataEXT typedef qword

; TYPEDEF PFN_vkGetImageViewOpaqueCaptureDescriptorDataEXT = VkResult (*)(VkDevice, const VkImageViewCaptureDescriptorDataInfoEXT *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetImageViewOpaqueCaptureDescriptorDataEXT typedef qword

; TYPEDEF PFN_vkGetSamplerOpaqueCaptureDescriptorDataEXT = VkResult (*)(VkDevice, const VkSamplerCaptureDescriptorDataInfoEXT *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetSamplerOpaqueCaptureDescriptorDataEXT typedef qword

; TYPEDEF PFN_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = VkResult (*)(VkDevice, const VkAccelerationStructureCaptureDescriptorDataInfoEXT *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT typedef qword

; void vkGetDescriptorSetLayoutSizeEXT(VkDevice device, VkDescriptorSetLayout layout, VkDeviceSize * pLayoutSizeInBytes)
vkGetDescriptorSetLayoutSizeEXT qword ?

; void vkGetDescriptorSetLayoutBindingOffsetEXT(VkDevice device, VkDescriptorSetLayout layout, uint32_t binding, VkDeviceSize * pOffset)
vkGetDescriptorSetLayoutBindingOffsetEXT qword ?

; void vkGetDescriptorEXT(VkDevice device, const VkDescriptorGetInfoEXT * pDescriptorInfo, size_t dataSize, void * pDescriptor)
vkGetDescriptorEXT qword ?

; void vkCmdBindDescriptorBuffersEXT(VkCommandBuffer commandBuffer, uint32_t bufferCount, const VkDescriptorBufferBindingInfoEXT * pBindingInfos)
vkCmdBindDescriptorBuffersEXT qword ?

; void vkCmdSetDescriptorBufferOffsetsEXT(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipelineLayout layout, uint32_t firstSet, uint32_t setCount, const uint32_t * pBufferIndices, const VkDeviceSize * pOffsets)
vkCmdSetDescriptorBufferOffsetsEXT qword ?

; void vkCmdBindDescriptorBufferEmbeddedSamplersEXT(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipelineLayout layout, uint32_t set)
vkCmdBindDescriptorBufferEmbeddedSamplersEXT qword ?

; VkResult vkGetBufferOpaqueCaptureDescriptorDataEXT(VkDevice device, const VkBufferCaptureDescriptorDataInfoEXT * pInfo, void * pData)
vkGetBufferOpaqueCaptureDescriptorDataEXT qword ?

; VkResult vkGetImageOpaqueCaptureDescriptorDataEXT(VkDevice device, const VkImageCaptureDescriptorDataInfoEXT * pInfo, void * pData)
vkGetImageOpaqueCaptureDescriptorDataEXT qword ?

; VkResult vkGetImageViewOpaqueCaptureDescriptorDataEXT(VkDevice device, const VkImageViewCaptureDescriptorDataInfoEXT * pInfo, void * pData)
vkGetImageViewOpaqueCaptureDescriptorDataEXT qword ?

; VkResult vkGetSamplerOpaqueCaptureDescriptorDataEXT(VkDevice device, const VkSamplerCaptureDescriptorDataInfoEXT * pInfo, void * pData)
vkGetSamplerOpaqueCaptureDescriptorDataEXT qword ?

; VkResult vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT(VkDevice device, const VkAccelerationStructureCaptureDescriptorDataInfoEXT * pInfo, void * pData)
vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT qword ?

; enum VkGraphicsPipelineLibraryFlagBitsEXT {
    VK_GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT equ 1
    VK_GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT equ 2
    VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT equ 4
    VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT equ 8
    VK_GRAPHICS_PIPELINE_LIBRARY_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkGraphicsPipelineLibraryFlagBitsEXT = enum VkGraphicsPipelineLibraryFlagBitsEXT, TypeKind.ELABORATED
VkGraphicsPipelineLibraryFlagBitsEXT typedef dword

; enum VkGraphicsPipelineLibraryFlagBitsEXT {
    VK_GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT equ 1
    VK_GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT equ 2
    VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT equ 4
    VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT equ 8
    VK_GRAPHICS_PIPELINE_LIBRARY_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkGraphicsPipelineLibraryFlagsEXT = VkFlags, TypeKind.ELABORATED
VkGraphicsPipelineLibraryFlagsEXT typedef dword

VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = graphicsPipelineLibrary, type = VkBool32, offset = 16, size = 4
    graphicsPipelineLibrary VkBool32 <>
VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT = struct VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = graphicsPipelineLibrary, type = VkBool32, offset = 16, size = 4
    graphicsPipelineLibrary VkBool32 <>
VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT ends

VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = graphicsPipelineLibraryFastLinking, type = VkBool32, offset = 16, size = 4
    graphicsPipelineLibraryFastLinking VkBool32 <>
;   TypeKind.ELABORATED
;   name = graphicsPipelineLibraryIndependentInterpolationDecoration, type = VkBool32, offset = 20, size = 4
    graphicsPipelineLibraryIndependentInterpolationDecoration VkBool32 <>
VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT = struct VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = graphicsPipelineLibraryFastLinking, type = VkBool32, offset = 16, size = 4
    graphicsPipelineLibraryFastLinking VkBool32 <>
;   TypeKind.ELABORATED
;   name = graphicsPipelineLibraryIndependentInterpolationDecoration, type = VkBool32, offset = 20, size = 4
    graphicsPipelineLibraryIndependentInterpolationDecoration VkBool32 <>
VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT ends

VkGraphicsPipelineLibraryCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkGraphicsPipelineLibraryFlagsEXT, offset = 16, size = 4
    flags VkGraphicsPipelineLibraryFlagsEXT <>
VkGraphicsPipelineLibraryCreateInfoEXT ends

; TYPEDEF VkGraphicsPipelineLibraryCreateInfoEXT = struct VkGraphicsPipelineLibraryCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkGraphicsPipelineLibraryCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkGraphicsPipelineLibraryFlagsEXT, offset = 16, size = 4
    flags VkGraphicsPipelineLibraryFlagsEXT <>
VkGraphicsPipelineLibraryCreateInfoEXT ends

VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderEarlyAndLateFragmentTests, type = VkBool32, offset = 16, size = 4
    shaderEarlyAndLateFragmentTests VkBool32 <>
VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD ends

; TYPEDEF VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD = struct VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderEarlyAndLateFragmentTests, type = VkBool32, offset = 16, size = 4
    shaderEarlyAndLateFragmentTests VkBool32 <>
VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD ends

; enum VkFragmentShadingRateTypeNV {
    VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV equ 0
    VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV equ 1
    VK_FRAGMENT_SHADING_RATE_TYPE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkFragmentShadingRateTypeNV = enum VkFragmentShadingRateTypeNV, TypeKind.ELABORATED
VkFragmentShadingRateTypeNV typedef dword

; enum VkFragmentShadingRateTypeNV {
    VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV equ 0
    VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV equ 1
    VK_FRAGMENT_SHADING_RATE_TYPE_MAX_ENUM_NV equ 2147483647
; }

; enum VkFragmentShadingRateNV {
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV equ 0
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV equ 1
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV equ 4
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV equ 5
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV equ 6
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV equ 9
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV equ 10
    VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV equ 11
    VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV equ 12
    VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV equ 13
    VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV equ 14
    VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV equ 15
    VK_FRAGMENT_SHADING_RATE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkFragmentShadingRateNV = enum VkFragmentShadingRateNV, TypeKind.ELABORATED
VkFragmentShadingRateNV typedef dword

; enum VkFragmentShadingRateNV {
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV equ 0
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV equ 1
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV equ 4
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV equ 5
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV equ 6
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV equ 9
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV equ 10
    VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV equ 11
    VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV equ 12
    VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV equ 13
    VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV equ 14
    VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV equ 15
    VK_FRAGMENT_SHADING_RATE_MAX_ENUM_NV equ 2147483647
; }

VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentShadingRateEnums, type = VkBool32, offset = 16, size = 4
    fragmentShadingRateEnums VkBool32 <>
;   TypeKind.ELABORATED
;   name = supersampleFragmentShadingRates, type = VkBool32, offset = 20, size = 4
    supersampleFragmentShadingRates VkBool32 <>
;   TypeKind.ELABORATED
;   name = noInvocationFragmentShadingRates, type = VkBool32, offset = 24, size = 4
    noInvocationFragmentShadingRates VkBool32 <>
VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV ends

; TYPEDEF VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV = struct VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentShadingRateEnums, type = VkBool32, offset = 16, size = 4
    fragmentShadingRateEnums VkBool32 <>
;   TypeKind.ELABORATED
;   name = supersampleFragmentShadingRates, type = VkBool32, offset = 20, size = 4
    supersampleFragmentShadingRates VkBool32 <>
;   TypeKind.ELABORATED
;   name = noInvocationFragmentShadingRates, type = VkBool32, offset = 24, size = 4
    noInvocationFragmentShadingRates VkBool32 <>
VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV ends

VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxFragmentShadingRateInvocationCount, type = VkSampleCountFlagBits, offset = 16, size = 4
    maxFragmentShadingRateInvocationCount VkSampleCountFlagBits <>
VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV ends

; TYPEDEF VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV = struct VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxFragmentShadingRateInvocationCount, type = VkSampleCountFlagBits, offset = 16, size = 4
    maxFragmentShadingRateInvocationCount VkSampleCountFlagBits <>
VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV ends

VkPipelineFragmentShadingRateEnumStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shadingRateType, type = VkFragmentShadingRateTypeNV, offset = 16, size = 4
    shadingRateType VkFragmentShadingRateTypeNV <>
;   TypeKind.ELABORATED
;   name = shadingRate, type = VkFragmentShadingRateNV, offset = 20, size = 4
    shadingRate VkFragmentShadingRateNV <>
;   TypeKind.CONSTANTARRAY
;   name = combinerOps, type = VkFragmentShadingRateCombinerOpKHR[2], offset = 24, size = 8
    combinerOps VkFragmentShadingRateCombinerOpKHR 2 dup(<>)
VkPipelineFragmentShadingRateEnumStateCreateInfoNV ends

; TYPEDEF VkPipelineFragmentShadingRateEnumStateCreateInfoNV = struct VkPipelineFragmentShadingRateEnumStateCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkPipelineFragmentShadingRateEnumStateCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shadingRateType, type = VkFragmentShadingRateTypeNV, offset = 16, size = 4
    shadingRateType VkFragmentShadingRateTypeNV <>
;   TypeKind.ELABORATED
;   name = shadingRate, type = VkFragmentShadingRateNV, offset = 20, size = 4
    shadingRate VkFragmentShadingRateNV <>
;   TypeKind.CONSTANTARRAY
;   name = combinerOps, type = VkFragmentShadingRateCombinerOpKHR[2], offset = 24, size = 8
    combinerOps VkFragmentShadingRateCombinerOpKHR 2 dup(<>)
VkPipelineFragmentShadingRateEnumStateCreateInfoNV ends

; TYPEDEF PFN_vkCmdSetFragmentShadingRateEnumNV = void (*)(VkCommandBuffer, VkFragmentShadingRateNV, const VkFragmentShadingRateCombinerOpKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetFragmentShadingRateEnumNV typedef qword

; void vkCmdSetFragmentShadingRateEnumNV(VkCommandBuffer commandBuffer, VkFragmentShadingRateNV shadingRate, const VkFragmentShadingRateCombinerOpKHR[2] combinerOps)
vkCmdSetFragmentShadingRateEnumNV qword ?

; enum VkAccelerationStructureMotionInstanceTypeNV {
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV equ 0
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV equ 1
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV equ 2
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkAccelerationStructureMotionInstanceTypeNV = enum VkAccelerationStructureMotionInstanceTypeNV, TypeKind.ELABORATED
VkAccelerationStructureMotionInstanceTypeNV typedef dword

; enum VkAccelerationStructureMotionInstanceTypeNV {
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV equ 0
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV equ 1
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV equ 2
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkAccelerationStructureMotionInfoFlagsNV = VkFlags, TypeKind.ELABORATED
VkAccelerationStructureMotionInfoFlagsNV typedef dword

; TYPEDEF VkAccelerationStructureMotionInstanceFlagsNV = VkFlags, TypeKind.ELABORATED
VkAccelerationStructureMotionInstanceFlagsNV typedef dword

; TYPEDEF VkDeviceOrHostAddressConstKHR = union VkDeviceOrHostAddressConstKHR, TypeKind.ELABORATED
; remove union typedef

VkAccelerationStructureGeometryMotionTrianglesDataNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexData, type = VkDeviceOrHostAddressConstKHR, offset = 16, size = 8
    vertexData VkDeviceOrHostAddressConstKHR <>
VkAccelerationStructureGeometryMotionTrianglesDataNV ends

; TYPEDEF VkAccelerationStructureGeometryMotionTrianglesDataNV = struct VkAccelerationStructureGeometryMotionTrianglesDataNV, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureGeometryMotionTrianglesDataNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexData, type = VkDeviceOrHostAddressConstKHR, offset = 16, size = 8
    vertexData VkDeviceOrHostAddressConstKHR <>
VkAccelerationStructureGeometryMotionTrianglesDataNV ends

VkAccelerationStructureMotionInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxInstances, type = uint32_t, offset = 16, size = 4
    maxInstances dword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkAccelerationStructureMotionInfoFlagsNV, offset = 20, size = 4
    flags VkAccelerationStructureMotionInfoFlagsNV <>
VkAccelerationStructureMotionInfoNV ends

; TYPEDEF VkAccelerationStructureMotionInfoNV = struct VkAccelerationStructureMotionInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureMotionInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxInstances, type = uint32_t, offset = 16, size = 4
    maxInstances dword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkAccelerationStructureMotionInfoFlagsNV, offset = 20, size = 4
    flags VkAccelerationStructureMotionInfoFlagsNV <>
VkAccelerationStructureMotionInfoNV ends

VkAccelerationStructureMatrixMotionInstanceNV struct
;   TypeKind.ELABORATED
;   name = transformT0, type = VkTransformMatrixKHR, offset = 0, size = 48
    transformT0 VkTransformMatrixKHR <>
;   TypeKind.ELABORATED
;   name = transformT1, type = VkTransformMatrixKHR, offset = 48, size = 48
    transformT1 VkTransformMatrixKHR <>
;   TypeKind.ELABORATED
;   name = instanceCustomIndex, type = uint32_t, offset = 96, size = 4
    instanceCustomIndex dword ?
;   TypeKind.ELABORATED
;   name = mask, type = uint32_t, offset = 99, size = 4
    _mask dword ?
;   TypeKind.ELABORATED
;   name = instanceShaderBindingTableRecordOffset, type = uint32_t, offset = 100, size = 4
    instanceShaderBindingTableRecordOffset dword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkGeometryInstanceFlagsKHR, offset = 103, size = 4
    flags VkGeometryInstanceFlagsKHR <>
;   TypeKind.ELABORATED
;   name = accelerationStructureReference, type = uint64_t, offset = 104, size = 8
    accelerationStructureReference qword ?
VkAccelerationStructureMatrixMotionInstanceNV ends

; TYPEDEF VkAccelerationStructureMatrixMotionInstanceNV = struct VkAccelerationStructureMatrixMotionInstanceNV, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureMatrixMotionInstanceNV struct
;   TypeKind.ELABORATED
;   name = transformT0, type = VkTransformMatrixKHR, offset = 0, size = 48
    transformT0 VkTransformMatrixKHR <>
;   TypeKind.ELABORATED
;   name = transformT1, type = VkTransformMatrixKHR, offset = 48, size = 48
    transformT1 VkTransformMatrixKHR <>
;   TypeKind.ELABORATED
;   name = instanceCustomIndex, type = uint32_t, offset = 96, size = 4
    instanceCustomIndex dword ?
;   TypeKind.ELABORATED
;   name = mask, type = uint32_t, offset = 99, size = 4
    _mask dword ?
;   TypeKind.ELABORATED
;   name = instanceShaderBindingTableRecordOffset, type = uint32_t, offset = 100, size = 4
    instanceShaderBindingTableRecordOffset dword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkGeometryInstanceFlagsKHR, offset = 103, size = 4
    flags VkGeometryInstanceFlagsKHR <>
;   TypeKind.ELABORATED
;   name = accelerationStructureReference, type = uint64_t, offset = 104, size = 8
    accelerationStructureReference qword ?
VkAccelerationStructureMatrixMotionInstanceNV ends

VkSRTDataNV struct
;   TypeKind.FLOAT
;   name = sx, type = float, offset = 0, size = 4
    sx real4 ?
;   TypeKind.FLOAT
;   name = a, type = float, offset = 4, size = 4
    a real4 ?
;   TypeKind.FLOAT
;   name = b, type = float, offset = 8, size = 4
    b real4 ?
;   TypeKind.FLOAT
;   name = pvx, type = float, offset = 12, size = 4
    pvx real4 ?
;   TypeKind.FLOAT
;   name = sy, type = float, offset = 16, size = 4
    sy real4 ?
;   TypeKind.FLOAT
;   name = c, type = float, offset = 20, size = 4
    c real4 ?
;   TypeKind.FLOAT
;   name = pvy, type = float, offset = 24, size = 4
    pvy real4 ?
;   TypeKind.FLOAT
;   name = sz, type = float, offset = 28, size = 4
    sz real4 ?
;   TypeKind.FLOAT
;   name = pvz, type = float, offset = 32, size = 4
    pvz real4 ?
;   TypeKind.FLOAT
;   name = qx, type = float, offset = 36, size = 4
    qx real4 ?
;   TypeKind.FLOAT
;   name = qy, type = float, offset = 40, size = 4
    qy real4 ?
;   TypeKind.FLOAT
;   name = qz, type = float, offset = 44, size = 4
    qz real4 ?
;   TypeKind.FLOAT
;   name = qw, type = float, offset = 48, size = 4
    qw real4 ?
;   TypeKind.FLOAT
;   name = tx, type = float, offset = 52, size = 4
    tx real4 ?
;   TypeKind.FLOAT
;   name = ty, type = float, offset = 56, size = 4
    ty real4 ?
;   TypeKind.FLOAT
;   name = tz, type = float, offset = 60, size = 4
    tz real4 ?
VkSRTDataNV ends

; TYPEDEF VkSRTDataNV = struct VkSRTDataNV, TypeKind.ELABORATED
; remove struct typedef

VkSRTDataNV struct
;   TypeKind.FLOAT
;   name = sx, type = float, offset = 0, size = 4
    sx real4 ?
;   TypeKind.FLOAT
;   name = a, type = float, offset = 4, size = 4
    a real4 ?
;   TypeKind.FLOAT
;   name = b, type = float, offset = 8, size = 4
    b real4 ?
;   TypeKind.FLOAT
;   name = pvx, type = float, offset = 12, size = 4
    pvx real4 ?
;   TypeKind.FLOAT
;   name = sy, type = float, offset = 16, size = 4
    sy real4 ?
;   TypeKind.FLOAT
;   name = c, type = float, offset = 20, size = 4
    c real4 ?
;   TypeKind.FLOAT
;   name = pvy, type = float, offset = 24, size = 4
    pvy real4 ?
;   TypeKind.FLOAT
;   name = sz, type = float, offset = 28, size = 4
    sz real4 ?
;   TypeKind.FLOAT
;   name = pvz, type = float, offset = 32, size = 4
    pvz real4 ?
;   TypeKind.FLOAT
;   name = qx, type = float, offset = 36, size = 4
    qx real4 ?
;   TypeKind.FLOAT
;   name = qy, type = float, offset = 40, size = 4
    qy real4 ?
;   TypeKind.FLOAT
;   name = qz, type = float, offset = 44, size = 4
    qz real4 ?
;   TypeKind.FLOAT
;   name = qw, type = float, offset = 48, size = 4
    qw real4 ?
;   TypeKind.FLOAT
;   name = tx, type = float, offset = 52, size = 4
    tx real4 ?
;   TypeKind.FLOAT
;   name = ty, type = float, offset = 56, size = 4
    ty real4 ?
;   TypeKind.FLOAT
;   name = tz, type = float, offset = 60, size = 4
    tz real4 ?
VkSRTDataNV ends

VkAccelerationStructureSRTMotionInstanceNV struct
;   TypeKind.ELABORATED
;   name = transformT0, type = VkSRTDataNV, offset = 0, size = 64
    transformT0 VkSRTDataNV <>
;   TypeKind.ELABORATED
;   name = transformT1, type = VkSRTDataNV, offset = 64, size = 64
    transformT1 VkSRTDataNV <>
;   TypeKind.ELABORATED
;   name = instanceCustomIndex, type = uint32_t, offset = 128, size = 4
    instanceCustomIndex dword ?
;   TypeKind.ELABORATED
;   name = mask, type = uint32_t, offset = 131, size = 4
    _mask dword ?
;   TypeKind.ELABORATED
;   name = instanceShaderBindingTableRecordOffset, type = uint32_t, offset = 132, size = 4
    instanceShaderBindingTableRecordOffset dword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkGeometryInstanceFlagsKHR, offset = 135, size = 4
    flags VkGeometryInstanceFlagsKHR <>
;   TypeKind.ELABORATED
;   name = accelerationStructureReference, type = uint64_t, offset = 136, size = 8
    accelerationStructureReference qword ?
VkAccelerationStructureSRTMotionInstanceNV ends

; TYPEDEF VkAccelerationStructureSRTMotionInstanceNV = struct VkAccelerationStructureSRTMotionInstanceNV, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureSRTMotionInstanceNV struct
;   TypeKind.ELABORATED
;   name = transformT0, type = VkSRTDataNV, offset = 0, size = 64
    transformT0 VkSRTDataNV <>
;   TypeKind.ELABORATED
;   name = transformT1, type = VkSRTDataNV, offset = 64, size = 64
    transformT1 VkSRTDataNV <>
;   TypeKind.ELABORATED
;   name = instanceCustomIndex, type = uint32_t, offset = 128, size = 4
    instanceCustomIndex dword ?
;   TypeKind.ELABORATED
;   name = mask, type = uint32_t, offset = 131, size = 4
    _mask dword ?
;   TypeKind.ELABORATED
;   name = instanceShaderBindingTableRecordOffset, type = uint32_t, offset = 132, size = 4
    instanceShaderBindingTableRecordOffset dword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkGeometryInstanceFlagsKHR, offset = 135, size = 4
    flags VkGeometryInstanceFlagsKHR <>
;   TypeKind.ELABORATED
;   name = accelerationStructureReference, type = uint64_t, offset = 136, size = 8
    accelerationStructureReference qword ?
VkAccelerationStructureSRTMotionInstanceNV ends

; TYPEDEF VkAccelerationStructureMotionInstanceDataNV = union VkAccelerationStructureMotionInstanceDataNV, TypeKind.ELABORATED
; remove union typedef

VkAccelerationStructureMotionInstanceNV struct
;   TypeKind.ELABORATED
;   name = type, type = VkAccelerationStructureMotionInstanceTypeNV, offset = 0, size = 4
    __type VkAccelerationStructureMotionInstanceTypeNV <>
;   TypeKind.ELABORATED
;   name = flags, type = VkAccelerationStructureMotionInstanceFlagsNV, offset = 4, size = 4
    flags VkAccelerationStructureMotionInstanceFlagsNV <>
;   TypeKind.ELABORATED
;   name = data, type = VkAccelerationStructureMotionInstanceDataNV, offset = 8, size = 144
    data VkAccelerationStructureMotionInstanceDataNV <>
VkAccelerationStructureMotionInstanceNV ends

; TYPEDEF VkAccelerationStructureMotionInstanceNV = struct VkAccelerationStructureMotionInstanceNV, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureMotionInstanceNV struct
;   TypeKind.ELABORATED
;   name = type, type = VkAccelerationStructureMotionInstanceTypeNV, offset = 0, size = 4
    __type VkAccelerationStructureMotionInstanceTypeNV <>
;   TypeKind.ELABORATED
;   name = flags, type = VkAccelerationStructureMotionInstanceFlagsNV, offset = 4, size = 4
    flags VkAccelerationStructureMotionInstanceFlagsNV <>
;   TypeKind.ELABORATED
;   name = data, type = VkAccelerationStructureMotionInstanceDataNV, offset = 8, size = 144
    data VkAccelerationStructureMotionInstanceDataNV <>
VkAccelerationStructureMotionInstanceNV ends

VkPhysicalDeviceRayTracingMotionBlurFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingMotionBlur, type = VkBool32, offset = 16, size = 4
    rayTracingMotionBlur VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTracingMotionBlurPipelineTraceRaysIndirect, type = VkBool32, offset = 20, size = 4
    rayTracingMotionBlurPipelineTraceRaysIndirect VkBool32 <>
VkPhysicalDeviceRayTracingMotionBlurFeaturesNV ends

; TYPEDEF VkPhysicalDeviceRayTracingMotionBlurFeaturesNV = struct VkPhysicalDeviceRayTracingMotionBlurFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRayTracingMotionBlurFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingMotionBlur, type = VkBool32, offset = 16, size = 4
    rayTracingMotionBlur VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTracingMotionBlurPipelineTraceRaysIndirect, type = VkBool32, offset = 20, size = 4
    rayTracingMotionBlurPipelineTraceRaysIndirect VkBool32 <>
VkPhysicalDeviceRayTracingMotionBlurFeaturesNV ends

VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = ycbcr2plane444Formats, type = VkBool32, offset = 16, size = 4
    ycbcr2plane444Formats VkBool32 <>
VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT = struct VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = ycbcr2plane444Formats, type = VkBool32, offset = 16, size = 4
    ycbcr2plane444Formats VkBool32 <>
VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT ends

VkPhysicalDeviceFragmentDensityMap2FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityMapDeferred, type = VkBool32, offset = 16, size = 4
    fragmentDensityMapDeferred VkBool32 <>
VkPhysicalDeviceFragmentDensityMap2FeaturesEXT ends

; TYPEDEF VkPhysicalDeviceFragmentDensityMap2FeaturesEXT = struct VkPhysicalDeviceFragmentDensityMap2FeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentDensityMap2FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityMapDeferred, type = VkBool32, offset = 16, size = 4
    fragmentDensityMapDeferred VkBool32 <>
VkPhysicalDeviceFragmentDensityMap2FeaturesEXT ends

VkPhysicalDeviceFragmentDensityMap2PropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subsampledLoads, type = VkBool32, offset = 16, size = 4
    subsampledLoads VkBool32 <>
;   TypeKind.ELABORATED
;   name = subsampledCoarseReconstructionEarlyAccess, type = VkBool32, offset = 20, size = 4
    subsampledCoarseReconstructionEarlyAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxSubsampledArrayLayers, type = uint32_t, offset = 24, size = 4
    maxSubsampledArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetSubsampledSamplers, type = uint32_t, offset = 28, size = 4
    maxDescriptorSetSubsampledSamplers dword ?
VkPhysicalDeviceFragmentDensityMap2PropertiesEXT ends

; TYPEDEF VkPhysicalDeviceFragmentDensityMap2PropertiesEXT = struct VkPhysicalDeviceFragmentDensityMap2PropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentDensityMap2PropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subsampledLoads, type = VkBool32, offset = 16, size = 4
    subsampledLoads VkBool32 <>
;   TypeKind.ELABORATED
;   name = subsampledCoarseReconstructionEarlyAccess, type = VkBool32, offset = 20, size = 4
    subsampledCoarseReconstructionEarlyAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = maxSubsampledArrayLayers, type = uint32_t, offset = 24, size = 4
    maxSubsampledArrayLayers dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetSubsampledSamplers, type = uint32_t, offset = 28, size = 4
    maxDescriptorSetSubsampledSamplers dword ?
VkPhysicalDeviceFragmentDensityMap2PropertiesEXT ends

VkCopyCommandTransformInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = transform, type = VkSurfaceTransformFlagBitsKHR, offset = 16, size = 4
    transform VkSurfaceTransformFlagBitsKHR <>
VkCopyCommandTransformInfoQCOM ends

; TYPEDEF VkCopyCommandTransformInfoQCOM = struct VkCopyCommandTransformInfoQCOM, TypeKind.ELABORATED
; remove struct typedef

VkCopyCommandTransformInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = transform, type = VkSurfaceTransformFlagBitsKHR, offset = 16, size = 4
    transform VkSurfaceTransformFlagBitsKHR <>
VkCopyCommandTransformInfoQCOM ends

; TYPEDEF VkPhysicalDeviceImageRobustnessFeaturesEXT = VkPhysicalDeviceImageRobustnessFeatures, TypeKind.ELABORATED

; enum VkImageCompressionFlagBitsEXT {
    VK_IMAGE_COMPRESSION_DEFAULT_EXT equ 0
    VK_IMAGE_COMPRESSION_FIXED_RATE_DEFAULT_EXT equ 1
    VK_IMAGE_COMPRESSION_FIXED_RATE_EXPLICIT_EXT equ 2
    VK_IMAGE_COMPRESSION_DISABLED_EXT equ 4
    VK_IMAGE_COMPRESSION_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkImageCompressionFlagBitsEXT = enum VkImageCompressionFlagBitsEXT, TypeKind.ELABORATED
VkImageCompressionFlagBitsEXT typedef dword

; enum VkImageCompressionFlagBitsEXT {
    VK_IMAGE_COMPRESSION_DEFAULT_EXT equ 0
    VK_IMAGE_COMPRESSION_FIXED_RATE_DEFAULT_EXT equ 1
    VK_IMAGE_COMPRESSION_FIXED_RATE_EXPLICIT_EXT equ 2
    VK_IMAGE_COMPRESSION_DISABLED_EXT equ 4
    VK_IMAGE_COMPRESSION_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkImageCompressionFlagsEXT = VkFlags, TypeKind.ELABORATED
VkImageCompressionFlagsEXT typedef dword

; enum VkImageCompressionFixedRateFlagBitsEXT {
    VK_IMAGE_COMPRESSION_FIXED_RATE_NONE_EXT equ 0
    VK_IMAGE_COMPRESSION_FIXED_RATE_1BPC_BIT_EXT equ 1
    VK_IMAGE_COMPRESSION_FIXED_RATE_2BPC_BIT_EXT equ 2
    VK_IMAGE_COMPRESSION_FIXED_RATE_3BPC_BIT_EXT equ 4
    VK_IMAGE_COMPRESSION_FIXED_RATE_4BPC_BIT_EXT equ 8
    VK_IMAGE_COMPRESSION_FIXED_RATE_5BPC_BIT_EXT equ 16
    VK_IMAGE_COMPRESSION_FIXED_RATE_6BPC_BIT_EXT equ 32
    VK_IMAGE_COMPRESSION_FIXED_RATE_7BPC_BIT_EXT equ 64
    VK_IMAGE_COMPRESSION_FIXED_RATE_8BPC_BIT_EXT equ 128
    VK_IMAGE_COMPRESSION_FIXED_RATE_9BPC_BIT_EXT equ 256
    VK_IMAGE_COMPRESSION_FIXED_RATE_10BPC_BIT_EXT equ 512
    VK_IMAGE_COMPRESSION_FIXED_RATE_11BPC_BIT_EXT equ 1024
    VK_IMAGE_COMPRESSION_FIXED_RATE_12BPC_BIT_EXT equ 2048
    VK_IMAGE_COMPRESSION_FIXED_RATE_13BPC_BIT_EXT equ 4096
    VK_IMAGE_COMPRESSION_FIXED_RATE_14BPC_BIT_EXT equ 8192
    VK_IMAGE_COMPRESSION_FIXED_RATE_15BPC_BIT_EXT equ 16384
    VK_IMAGE_COMPRESSION_FIXED_RATE_16BPC_BIT_EXT equ 32768
    VK_IMAGE_COMPRESSION_FIXED_RATE_17BPC_BIT_EXT equ 65536
    VK_IMAGE_COMPRESSION_FIXED_RATE_18BPC_BIT_EXT equ 131072
    VK_IMAGE_COMPRESSION_FIXED_RATE_19BPC_BIT_EXT equ 262144
    VK_IMAGE_COMPRESSION_FIXED_RATE_20BPC_BIT_EXT equ 524288
    VK_IMAGE_COMPRESSION_FIXED_RATE_21BPC_BIT_EXT equ 1048576
    VK_IMAGE_COMPRESSION_FIXED_RATE_22BPC_BIT_EXT equ 2097152
    VK_IMAGE_COMPRESSION_FIXED_RATE_23BPC_BIT_EXT equ 4194304
    VK_IMAGE_COMPRESSION_FIXED_RATE_24BPC_BIT_EXT equ 8388608
    VK_IMAGE_COMPRESSION_FIXED_RATE_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkImageCompressionFixedRateFlagBitsEXT = enum VkImageCompressionFixedRateFlagBitsEXT, TypeKind.ELABORATED
VkImageCompressionFixedRateFlagBitsEXT typedef dword

; enum VkImageCompressionFixedRateFlagBitsEXT {
    VK_IMAGE_COMPRESSION_FIXED_RATE_NONE_EXT equ 0
    VK_IMAGE_COMPRESSION_FIXED_RATE_1BPC_BIT_EXT equ 1
    VK_IMAGE_COMPRESSION_FIXED_RATE_2BPC_BIT_EXT equ 2
    VK_IMAGE_COMPRESSION_FIXED_RATE_3BPC_BIT_EXT equ 4
    VK_IMAGE_COMPRESSION_FIXED_RATE_4BPC_BIT_EXT equ 8
    VK_IMAGE_COMPRESSION_FIXED_RATE_5BPC_BIT_EXT equ 16
    VK_IMAGE_COMPRESSION_FIXED_RATE_6BPC_BIT_EXT equ 32
    VK_IMAGE_COMPRESSION_FIXED_RATE_7BPC_BIT_EXT equ 64
    VK_IMAGE_COMPRESSION_FIXED_RATE_8BPC_BIT_EXT equ 128
    VK_IMAGE_COMPRESSION_FIXED_RATE_9BPC_BIT_EXT equ 256
    VK_IMAGE_COMPRESSION_FIXED_RATE_10BPC_BIT_EXT equ 512
    VK_IMAGE_COMPRESSION_FIXED_RATE_11BPC_BIT_EXT equ 1024
    VK_IMAGE_COMPRESSION_FIXED_RATE_12BPC_BIT_EXT equ 2048
    VK_IMAGE_COMPRESSION_FIXED_RATE_13BPC_BIT_EXT equ 4096
    VK_IMAGE_COMPRESSION_FIXED_RATE_14BPC_BIT_EXT equ 8192
    VK_IMAGE_COMPRESSION_FIXED_RATE_15BPC_BIT_EXT equ 16384
    VK_IMAGE_COMPRESSION_FIXED_RATE_16BPC_BIT_EXT equ 32768
    VK_IMAGE_COMPRESSION_FIXED_RATE_17BPC_BIT_EXT equ 65536
    VK_IMAGE_COMPRESSION_FIXED_RATE_18BPC_BIT_EXT equ 131072
    VK_IMAGE_COMPRESSION_FIXED_RATE_19BPC_BIT_EXT equ 262144
    VK_IMAGE_COMPRESSION_FIXED_RATE_20BPC_BIT_EXT equ 524288
    VK_IMAGE_COMPRESSION_FIXED_RATE_21BPC_BIT_EXT equ 1048576
    VK_IMAGE_COMPRESSION_FIXED_RATE_22BPC_BIT_EXT equ 2097152
    VK_IMAGE_COMPRESSION_FIXED_RATE_23BPC_BIT_EXT equ 4194304
    VK_IMAGE_COMPRESSION_FIXED_RATE_24BPC_BIT_EXT equ 8388608
    VK_IMAGE_COMPRESSION_FIXED_RATE_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkImageCompressionFixedRateFlagsEXT = VkFlags, TypeKind.ELABORATED
VkImageCompressionFixedRateFlagsEXT typedef dword

VkPhysicalDeviceImageCompressionControlFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageCompressionControl, type = VkBool32, offset = 16, size = 4
    imageCompressionControl VkBool32 <>
VkPhysicalDeviceImageCompressionControlFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceImageCompressionControlFeaturesEXT = struct VkPhysicalDeviceImageCompressionControlFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageCompressionControlFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageCompressionControl, type = VkBool32, offset = 16, size = 4
    imageCompressionControl VkBool32 <>
VkPhysicalDeviceImageCompressionControlFeaturesEXT ends

VkImageCompressionControlEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkImageCompressionFlagsEXT, offset = 16, size = 4
    flags VkImageCompressionFlagsEXT <>
;   TypeKind.ELABORATED
;   name = compressionControlPlaneCount, type = uint32_t, offset = 20, size = 4
    compressionControlPlaneCount dword ?
;   TypeKind.POINTER
;   name = pFixedRateFlags, type = VkImageCompressionFixedRateFlagsEXT *, offset = 24, size = 8
    pFixedRateFlags qword ?
VkImageCompressionControlEXT ends

; TYPEDEF VkImageCompressionControlEXT = struct VkImageCompressionControlEXT, TypeKind.ELABORATED
; remove struct typedef

VkImageCompressionControlEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkImageCompressionFlagsEXT, offset = 16, size = 4
    flags VkImageCompressionFlagsEXT <>
;   TypeKind.ELABORATED
;   name = compressionControlPlaneCount, type = uint32_t, offset = 20, size = 4
    compressionControlPlaneCount dword ?
;   TypeKind.POINTER
;   name = pFixedRateFlags, type = VkImageCompressionFixedRateFlagsEXT *, offset = 24, size = 8
    pFixedRateFlags qword ?
VkImageCompressionControlEXT ends

VkImageCompressionPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageCompressionFlags, type = VkImageCompressionFlagsEXT, offset = 16, size = 4
    imageCompressionFlags VkImageCompressionFlagsEXT <>
;   TypeKind.ELABORATED
;   name = imageCompressionFixedRateFlags, type = VkImageCompressionFixedRateFlagsEXT, offset = 20, size = 4
    imageCompressionFixedRateFlags VkImageCompressionFixedRateFlagsEXT <>
VkImageCompressionPropertiesEXT ends

; TYPEDEF VkImageCompressionPropertiesEXT = struct VkImageCompressionPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkImageCompressionPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageCompressionFlags, type = VkImageCompressionFlagsEXT, offset = 16, size = 4
    imageCompressionFlags VkImageCompressionFlagsEXT <>
;   TypeKind.ELABORATED
;   name = imageCompressionFixedRateFlags, type = VkImageCompressionFixedRateFlagsEXT, offset = 20, size = 4
    imageCompressionFixedRateFlags VkImageCompressionFixedRateFlagsEXT <>
VkImageCompressionPropertiesEXT ends

VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentFeedbackLoopLayout, type = VkBool32, offset = 16, size = 4
    attachmentFeedbackLoopLayout VkBool32 <>
VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT = struct VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentFeedbackLoopLayout, type = VkBool32, offset = 16, size = 4
    attachmentFeedbackLoopLayout VkBool32 <>
VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT ends

VkPhysicalDevice4444FormatsFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = formatA4R4G4B4, type = VkBool32, offset = 16, size = 4
    formatA4R4G4B4 VkBool32 <>
;   TypeKind.ELABORATED
;   name = formatA4B4G4R4, type = VkBool32, offset = 20, size = 4
    formatA4B4G4R4 VkBool32 <>
VkPhysicalDevice4444FormatsFeaturesEXT ends

; TYPEDEF VkPhysicalDevice4444FormatsFeaturesEXT = struct VkPhysicalDevice4444FormatsFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevice4444FormatsFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = formatA4R4G4B4, type = VkBool32, offset = 16, size = 4
    formatA4R4G4B4 VkBool32 <>
;   TypeKind.ELABORATED
;   name = formatA4B4G4R4, type = VkBool32, offset = 20, size = 4
    formatA4B4G4R4 VkBool32 <>
VkPhysicalDevice4444FormatsFeaturesEXT ends

; enum VkDeviceFaultAddressTypeEXT {
    VK_DEVICE_FAULT_ADDRESS_TYPE_NONE_EXT equ 0
    VK_DEVICE_FAULT_ADDRESS_TYPE_READ_INVALID_EXT equ 1
    VK_DEVICE_FAULT_ADDRESS_TYPE_WRITE_INVALID_EXT equ 2
    VK_DEVICE_FAULT_ADDRESS_TYPE_EXECUTE_INVALID_EXT equ 3
    VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_UNKNOWN_EXT equ 4
    VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_INVALID_EXT equ 5
    VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_FAULT_EXT equ 6
    VK_DEVICE_FAULT_ADDRESS_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDeviceFaultAddressTypeEXT = enum VkDeviceFaultAddressTypeEXT, TypeKind.ELABORATED
VkDeviceFaultAddressTypeEXT typedef dword

; enum VkDeviceFaultAddressTypeEXT {
    VK_DEVICE_FAULT_ADDRESS_TYPE_NONE_EXT equ 0
    VK_DEVICE_FAULT_ADDRESS_TYPE_READ_INVALID_EXT equ 1
    VK_DEVICE_FAULT_ADDRESS_TYPE_WRITE_INVALID_EXT equ 2
    VK_DEVICE_FAULT_ADDRESS_TYPE_EXECUTE_INVALID_EXT equ 3
    VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_UNKNOWN_EXT equ 4
    VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_INVALID_EXT equ 5
    VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_FAULT_EXT equ 6
    VK_DEVICE_FAULT_ADDRESS_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; enum VkDeviceFaultVendorBinaryHeaderVersionEXT {
    VK_DEVICE_FAULT_VENDOR_BINARY_HEADER_VERSION_ONE_EXT equ 1
    VK_DEVICE_FAULT_VENDOR_BINARY_HEADER_VERSION_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDeviceFaultVendorBinaryHeaderVersionEXT = enum VkDeviceFaultVendorBinaryHeaderVersionEXT, TypeKind.ELABORATED
VkDeviceFaultVendorBinaryHeaderVersionEXT typedef dword

; enum VkDeviceFaultVendorBinaryHeaderVersionEXT {
    VK_DEVICE_FAULT_VENDOR_BINARY_HEADER_VERSION_ONE_EXT equ 1
    VK_DEVICE_FAULT_VENDOR_BINARY_HEADER_VERSION_MAX_ENUM_EXT equ 2147483647
; }

VkPhysicalDeviceFaultFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceFault, type = VkBool32, offset = 16, size = 4
    deviceFault VkBool32 <>
;   TypeKind.ELABORATED
;   name = deviceFaultVendorBinary, type = VkBool32, offset = 20, size = 4
    deviceFaultVendorBinary VkBool32 <>
VkPhysicalDeviceFaultFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceFaultFeaturesEXT = struct VkPhysicalDeviceFaultFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFaultFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceFault, type = VkBool32, offset = 16, size = 4
    deviceFault VkBool32 <>
;   TypeKind.ELABORATED
;   name = deviceFaultVendorBinary, type = VkBool32, offset = 20, size = 4
    deviceFaultVendorBinary VkBool32 <>
VkPhysicalDeviceFaultFeaturesEXT ends

VkDeviceFaultCountsEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = addressInfoCount, type = uint32_t, offset = 16, size = 4
    addressInfoCount dword ?
;   TypeKind.ELABORATED
;   name = vendorInfoCount, type = uint32_t, offset = 20, size = 4
    vendorInfoCount dword ?
;   TypeKind.ELABORATED
;   name = vendorBinarySize, type = VkDeviceSize, offset = 24, size = 8
    vendorBinarySize VkDeviceSize <>
VkDeviceFaultCountsEXT ends

; TYPEDEF VkDeviceFaultCountsEXT = struct VkDeviceFaultCountsEXT, TypeKind.ELABORATED
; remove struct typedef

VkDeviceFaultCountsEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = addressInfoCount, type = uint32_t, offset = 16, size = 4
    addressInfoCount dword ?
;   TypeKind.ELABORATED
;   name = vendorInfoCount, type = uint32_t, offset = 20, size = 4
    vendorInfoCount dword ?
;   TypeKind.ELABORATED
;   name = vendorBinarySize, type = VkDeviceSize, offset = 24, size = 8
    vendorBinarySize VkDeviceSize <>
VkDeviceFaultCountsEXT ends

VkDeviceFaultAddressInfoEXT struct
;   TypeKind.ELABORATED
;   name = addressType, type = VkDeviceFaultAddressTypeEXT, offset = 0, size = 4
    addressType VkDeviceFaultAddressTypeEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = reportedAddress, type = VkDeviceAddress, offset = 8, size = 8
    reportedAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = addressPrecision, type = VkDeviceSize, offset = 16, size = 8
    addressPrecision VkDeviceSize <>
VkDeviceFaultAddressInfoEXT ends

; TYPEDEF VkDeviceFaultAddressInfoEXT = struct VkDeviceFaultAddressInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDeviceFaultAddressInfoEXT struct
;   TypeKind.ELABORATED
;   name = addressType, type = VkDeviceFaultAddressTypeEXT, offset = 0, size = 4
    addressType VkDeviceFaultAddressTypeEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = reportedAddress, type = VkDeviceAddress, offset = 8, size = 8
    reportedAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = addressPrecision, type = VkDeviceSize, offset = 16, size = 8
    addressPrecision VkDeviceSize <>
VkDeviceFaultAddressInfoEXT ends

VkDeviceFaultVendorInfoEXT struct
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 0, size = 256
    description byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = vendorFaultCode, type = uint64_t, offset = 256, size = 8
    vendorFaultCode qword ?
;   TypeKind.ELABORATED
;   name = vendorFaultData, type = uint64_t, offset = 264, size = 8
    vendorFaultData qword ?
VkDeviceFaultVendorInfoEXT ends

; TYPEDEF VkDeviceFaultVendorInfoEXT = struct VkDeviceFaultVendorInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDeviceFaultVendorInfoEXT struct
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 0, size = 256
    description byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = vendorFaultCode, type = uint64_t, offset = 256, size = 8
    vendorFaultCode qword ?
;   TypeKind.ELABORATED
;   name = vendorFaultData, type = uint64_t, offset = 264, size = 8
    vendorFaultData qword ?
VkDeviceFaultVendorInfoEXT ends

VkDeviceFaultInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 16, size = 256
    description byte 256 dup(?)
;   TypeKind.POINTER
;   name = pAddressInfos, type = VkDeviceFaultAddressInfoEXT *, offset = 272, size = 8
    pAddressInfos qword ?
;   TypeKind.POINTER
;   name = pVendorInfos, type = VkDeviceFaultVendorInfoEXT *, offset = 280, size = 8
    pVendorInfos qword ?
;   TypeKind.POINTER
;   name = pVendorBinaryData, type = void *, offset = 288, size = 8
    pVendorBinaryData qword ?
VkDeviceFaultInfoEXT ends

; TYPEDEF VkDeviceFaultInfoEXT = struct VkDeviceFaultInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkDeviceFaultInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 16, size = 256
    description byte 256 dup(?)
;   TypeKind.POINTER
;   name = pAddressInfos, type = VkDeviceFaultAddressInfoEXT *, offset = 272, size = 8
    pAddressInfos qword ?
;   TypeKind.POINTER
;   name = pVendorInfos, type = VkDeviceFaultVendorInfoEXT *, offset = 280, size = 8
    pVendorInfos qword ?
;   TypeKind.POINTER
;   name = pVendorBinaryData, type = void *, offset = 288, size = 8
    pVendorBinaryData qword ?
VkDeviceFaultInfoEXT ends

VkDeviceFaultVendorBinaryHeaderVersionOneEXT struct
;   TypeKind.ELABORATED
;   name = headerSize, type = uint32_t, offset = 0, size = 4
    headerSize dword ?
;   TypeKind.ELABORATED
;   name = headerVersion, type = VkDeviceFaultVendorBinaryHeaderVersionEXT, offset = 4, size = 4
    headerVersion VkDeviceFaultVendorBinaryHeaderVersionEXT <>
;   TypeKind.ELABORATED
;   name = vendorID, type = uint32_t, offset = 8, size = 4
    vendorID dword ?
;   TypeKind.ELABORATED
;   name = deviceID, type = uint32_t, offset = 12, size = 4
    deviceID dword ?
;   TypeKind.ELABORATED
;   name = driverVersion, type = uint32_t, offset = 16, size = 4
    driverVersion dword ?
;   TypeKind.CONSTANTARRAY
;   name = pipelineCacheUUID, type = uint8_t[16], offset = 20, size = 16
    pipelineCacheUUID byte 16 dup(?)
;   TypeKind.ELABORATED
;   name = applicationNameOffset, type = uint32_t, offset = 36, size = 4
    applicationNameOffset dword ?
;   TypeKind.ELABORATED
;   name = applicationVersion, type = uint32_t, offset = 40, size = 4
    applicationVersion dword ?
;   TypeKind.ELABORATED
;   name = engineNameOffset, type = uint32_t, offset = 44, size = 4
    engineNameOffset dword ?
;   TypeKind.ELABORATED
;   name = engineVersion, type = uint32_t, offset = 48, size = 4
    engineVersion dword ?
;   TypeKind.ELABORATED
;   name = apiVersion, type = uint32_t, offset = 52, size = 4
    apiVersion dword ?
VkDeviceFaultVendorBinaryHeaderVersionOneEXT ends

; TYPEDEF VkDeviceFaultVendorBinaryHeaderVersionOneEXT = struct VkDeviceFaultVendorBinaryHeaderVersionOneEXT, TypeKind.ELABORATED
; remove struct typedef

VkDeviceFaultVendorBinaryHeaderVersionOneEXT struct
;   TypeKind.ELABORATED
;   name = headerSize, type = uint32_t, offset = 0, size = 4
    headerSize dword ?
;   TypeKind.ELABORATED
;   name = headerVersion, type = VkDeviceFaultVendorBinaryHeaderVersionEXT, offset = 4, size = 4
    headerVersion VkDeviceFaultVendorBinaryHeaderVersionEXT <>
;   TypeKind.ELABORATED
;   name = vendorID, type = uint32_t, offset = 8, size = 4
    vendorID dword ?
;   TypeKind.ELABORATED
;   name = deviceID, type = uint32_t, offset = 12, size = 4
    deviceID dword ?
;   TypeKind.ELABORATED
;   name = driverVersion, type = uint32_t, offset = 16, size = 4
    driverVersion dword ?
;   TypeKind.CONSTANTARRAY
;   name = pipelineCacheUUID, type = uint8_t[16], offset = 20, size = 16
    pipelineCacheUUID byte 16 dup(?)
;   TypeKind.ELABORATED
;   name = applicationNameOffset, type = uint32_t, offset = 36, size = 4
    applicationNameOffset dword ?
;   TypeKind.ELABORATED
;   name = applicationVersion, type = uint32_t, offset = 40, size = 4
    applicationVersion dword ?
;   TypeKind.ELABORATED
;   name = engineNameOffset, type = uint32_t, offset = 44, size = 4
    engineNameOffset dword ?
;   TypeKind.ELABORATED
;   name = engineVersion, type = uint32_t, offset = 48, size = 4
    engineVersion dword ?
;   TypeKind.ELABORATED
;   name = apiVersion, type = uint32_t, offset = 52, size = 4
    apiVersion dword ?
VkDeviceFaultVendorBinaryHeaderVersionOneEXT ends

; TYPEDEF PFN_vkGetDeviceFaultInfoEXT = VkResult (*)(VkDevice, VkDeviceFaultCountsEXT *, VkDeviceFaultInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceFaultInfoEXT typedef qword

; VkResult vkGetDeviceFaultInfoEXT(VkDevice device, VkDeviceFaultCountsEXT * pFaultCounts, VkDeviceFaultInfoEXT * pFaultInfo)
vkGetDeviceFaultInfoEXT qword ?

VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rasterizationOrderColorAttachmentAccess, type = VkBool32, offset = 16, size = 4
    rasterizationOrderColorAttachmentAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = rasterizationOrderDepthAttachmentAccess, type = VkBool32, offset = 20, size = 4
    rasterizationOrderDepthAttachmentAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = rasterizationOrderStencilAttachmentAccess, type = VkBool32, offset = 24, size = 4
    rasterizationOrderStencilAttachmentAccess VkBool32 <>
VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT = struct VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rasterizationOrderColorAttachmentAccess, type = VkBool32, offset = 16, size = 4
    rasterizationOrderColorAttachmentAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = rasterizationOrderDepthAttachmentAccess, type = VkBool32, offset = 20, size = 4
    rasterizationOrderDepthAttachmentAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = rasterizationOrderStencilAttachmentAccess, type = VkBool32, offset = 24, size = 4
    rasterizationOrderStencilAttachmentAccess VkBool32 <>
VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM = VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT, TypeKind.ELABORATED

VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = formatRgba10x6WithoutYCbCrSampler, type = VkBool32, offset = 16, size = 4
    formatRgba10x6WithoutYCbCrSampler VkBool32 <>
VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT = struct VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = formatRgba10x6WithoutYCbCrSampler, type = VkBool32, offset = 16, size = 4
    formatRgba10x6WithoutYCbCrSampler VkBool32 <>
VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT ends

VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = mutableDescriptorType, type = VkBool32, offset = 16, size = 4
    mutableDescriptorType VkBool32 <>
VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT = struct VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = mutableDescriptorType, type = VkBool32, offset = 16, size = 4
    mutableDescriptorType VkBool32 <>
VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE = VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT, TypeKind.ELABORATED

VkMutableDescriptorTypeListEXT struct
;   TypeKind.ELABORATED
;   name = descriptorTypeCount, type = uint32_t, offset = 0, size = 4
    descriptorTypeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDescriptorTypes, type = const VkDescriptorType *, offset = 8, size = 8
    pDescriptorTypes qword ?
VkMutableDescriptorTypeListEXT ends

; TYPEDEF VkMutableDescriptorTypeListEXT = struct VkMutableDescriptorTypeListEXT, TypeKind.ELABORATED
; remove struct typedef

VkMutableDescriptorTypeListEXT struct
;   TypeKind.ELABORATED
;   name = descriptorTypeCount, type = uint32_t, offset = 0, size = 4
    descriptorTypeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pDescriptorTypes, type = const VkDescriptorType *, offset = 8, size = 8
    pDescriptorTypes qword ?
VkMutableDescriptorTypeListEXT ends

; TYPEDEF VkMutableDescriptorTypeListVALVE = VkMutableDescriptorTypeListEXT, TypeKind.ELABORATED

VkMutableDescriptorTypeCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = mutableDescriptorTypeListCount, type = uint32_t, offset = 16, size = 4
    mutableDescriptorTypeListCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pMutableDescriptorTypeLists, type = const VkMutableDescriptorTypeListEXT *, offset = 24, size = 8
    pMutableDescriptorTypeLists qword ?
VkMutableDescriptorTypeCreateInfoEXT ends

; TYPEDEF VkMutableDescriptorTypeCreateInfoEXT = struct VkMutableDescriptorTypeCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkMutableDescriptorTypeCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = mutableDescriptorTypeListCount, type = uint32_t, offset = 16, size = 4
    mutableDescriptorTypeListCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pMutableDescriptorTypeLists, type = const VkMutableDescriptorTypeListEXT *, offset = 24, size = 8
    pMutableDescriptorTypeLists qword ?
VkMutableDescriptorTypeCreateInfoEXT ends

; TYPEDEF VkMutableDescriptorTypeCreateInfoVALVE = VkMutableDescriptorTypeCreateInfoEXT, TypeKind.ELABORATED

VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexInputDynamicState, type = VkBool32, offset = 16, size = 4
    vertexInputDynamicState VkBool32 <>
VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT = struct VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexInputDynamicState, type = VkBool32, offset = 16, size = 4
    vertexInputDynamicState VkBool32 <>
VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT ends

VkVertexInputBindingDescription2EXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 16, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = stride, type = uint32_t, offset = 20, size = 4
    stride dword ?
;   TypeKind.ELABORATED
;   name = inputRate, type = VkVertexInputRate, offset = 24, size = 4
    inputRate VkVertexInputRate <>
;   TypeKind.ELABORATED
;   name = divisor, type = uint32_t, offset = 28, size = 4
    divisor dword ?
VkVertexInputBindingDescription2EXT ends

; TYPEDEF VkVertexInputBindingDescription2EXT = struct VkVertexInputBindingDescription2EXT, TypeKind.ELABORATED
; remove struct typedef

VkVertexInputBindingDescription2EXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 16, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = stride, type = uint32_t, offset = 20, size = 4
    stride dword ?
;   TypeKind.ELABORATED
;   name = inputRate, type = VkVertexInputRate, offset = 24, size = 4
    inputRate VkVertexInputRate <>
;   TypeKind.ELABORATED
;   name = divisor, type = uint32_t, offset = 28, size = 4
    divisor dword ?
VkVertexInputBindingDescription2EXT ends

VkVertexInputAttributeDescription2EXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = location, type = uint32_t, offset = 16, size = 4
    location dword ?
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 20, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 24, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 28, size = 4
    _offset dword ?
VkVertexInputAttributeDescription2EXT ends

; TYPEDEF VkVertexInputAttributeDescription2EXT = struct VkVertexInputAttributeDescription2EXT, TypeKind.ELABORATED
; remove struct typedef

VkVertexInputAttributeDescription2EXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = location, type = uint32_t, offset = 16, size = 4
    location dword ?
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 20, size = 4
    binding dword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 24, size = 4
    format VkFormat <>
;   TypeKind.ELABORATED
;   name = offset, type = uint32_t, offset = 28, size = 4
    _offset dword ?
VkVertexInputAttributeDescription2EXT ends

; TYPEDEF PFN_vkCmdSetVertexInputEXT = void (*)(VkCommandBuffer, uint32_t, const VkVertexInputBindingDescription2EXT *, uint32_t, const VkVertexInputAttributeDescription2EXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetVertexInputEXT typedef qword

; void vkCmdSetVertexInputEXT(VkCommandBuffer commandBuffer, uint32_t vertexBindingDescriptionCount, const VkVertexInputBindingDescription2EXT * pVertexBindingDescriptions, uint32_t vertexAttributeDescriptionCount, const VkVertexInputAttributeDescription2EXT * pVertexAttributeDescriptions)
vkCmdSetVertexInputEXT qword ?

VkPhysicalDeviceDrmPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hasPrimary, type = VkBool32, offset = 16, size = 4
    hasPrimary VkBool32 <>
;   TypeKind.ELABORATED
;   name = hasRender, type = VkBool32, offset = 20, size = 4
    hasRender VkBool32 <>
;   TypeKind.ELABORATED
;   name = primaryMajor, type = int64_t, offset = 24, size = 8
    primaryMajor sqword ?
;   TypeKind.ELABORATED
;   name = primaryMinor, type = int64_t, offset = 32, size = 8
    primaryMinor sqword ?
;   TypeKind.ELABORATED
;   name = renderMajor, type = int64_t, offset = 40, size = 8
    renderMajor sqword ?
;   TypeKind.ELABORATED
;   name = renderMinor, type = int64_t, offset = 48, size = 8
    renderMinor sqword ?
VkPhysicalDeviceDrmPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceDrmPropertiesEXT = struct VkPhysicalDeviceDrmPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDrmPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = hasPrimary, type = VkBool32, offset = 16, size = 4
    hasPrimary VkBool32 <>
;   TypeKind.ELABORATED
;   name = hasRender, type = VkBool32, offset = 20, size = 4
    hasRender VkBool32 <>
;   TypeKind.ELABORATED
;   name = primaryMajor, type = int64_t, offset = 24, size = 8
    primaryMajor sqword ?
;   TypeKind.ELABORATED
;   name = primaryMinor, type = int64_t, offset = 32, size = 8
    primaryMinor sqword ?
;   TypeKind.ELABORATED
;   name = renderMajor, type = int64_t, offset = 40, size = 8
    renderMajor sqword ?
;   TypeKind.ELABORATED
;   name = renderMinor, type = int64_t, offset = 48, size = 8
    renderMinor sqword ?
VkPhysicalDeviceDrmPropertiesEXT ends

; enum VkDeviceAddressBindingTypeEXT {
    VK_DEVICE_ADDRESS_BINDING_TYPE_BIND_EXT equ 0
    VK_DEVICE_ADDRESS_BINDING_TYPE_UNBIND_EXT equ 1
    VK_DEVICE_ADDRESS_BINDING_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDeviceAddressBindingTypeEXT = enum VkDeviceAddressBindingTypeEXT, TypeKind.ELABORATED
VkDeviceAddressBindingTypeEXT typedef dword

; enum VkDeviceAddressBindingTypeEXT {
    VK_DEVICE_ADDRESS_BINDING_TYPE_BIND_EXT equ 0
    VK_DEVICE_ADDRESS_BINDING_TYPE_UNBIND_EXT equ 1
    VK_DEVICE_ADDRESS_BINDING_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; enum VkDeviceAddressBindingFlagBitsEXT {
    VK_DEVICE_ADDRESS_BINDING_INTERNAL_OBJECT_BIT_EXT equ 1
    VK_DEVICE_ADDRESS_BINDING_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDeviceAddressBindingFlagBitsEXT = enum VkDeviceAddressBindingFlagBitsEXT, TypeKind.ELABORATED
VkDeviceAddressBindingFlagBitsEXT typedef dword

; enum VkDeviceAddressBindingFlagBitsEXT {
    VK_DEVICE_ADDRESS_BINDING_INTERNAL_OBJECT_BIT_EXT equ 1
    VK_DEVICE_ADDRESS_BINDING_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkDeviceAddressBindingFlagsEXT = VkFlags, TypeKind.ELABORATED
VkDeviceAddressBindingFlagsEXT typedef dword

VkPhysicalDeviceAddressBindingReportFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = reportAddressBinding, type = VkBool32, offset = 16, size = 4
    reportAddressBinding VkBool32 <>
VkPhysicalDeviceAddressBindingReportFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceAddressBindingReportFeaturesEXT = struct VkPhysicalDeviceAddressBindingReportFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceAddressBindingReportFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = reportAddressBinding, type = VkBool32, offset = 16, size = 4
    reportAddressBinding VkBool32 <>
VkPhysicalDeviceAddressBindingReportFeaturesEXT ends

VkDeviceAddressBindingCallbackDataEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceAddressBindingFlagsEXT, offset = 16, size = 4
    flags VkDeviceAddressBindingFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = baseAddress, type = VkDeviceAddress, offset = 24, size = 8
    baseAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 32, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = bindingType, type = VkDeviceAddressBindingTypeEXT, offset = 40, size = 4
    bindingType VkDeviceAddressBindingTypeEXT <>
VkDeviceAddressBindingCallbackDataEXT ends

; TYPEDEF VkDeviceAddressBindingCallbackDataEXT = struct VkDeviceAddressBindingCallbackDataEXT, TypeKind.ELABORATED
; remove struct typedef

VkDeviceAddressBindingCallbackDataEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDeviceAddressBindingFlagsEXT, offset = 16, size = 4
    flags VkDeviceAddressBindingFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = baseAddress, type = VkDeviceAddress, offset = 24, size = 8
    baseAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 32, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = bindingType, type = VkDeviceAddressBindingTypeEXT, offset = 40, size = 4
    bindingType VkDeviceAddressBindingTypeEXT <>
VkDeviceAddressBindingCallbackDataEXT ends

VkPhysicalDeviceDepthClipControlFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthClipControl, type = VkBool32, offset = 16, size = 4
    depthClipControl VkBool32 <>
VkPhysicalDeviceDepthClipControlFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceDepthClipControlFeaturesEXT = struct VkPhysicalDeviceDepthClipControlFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDepthClipControlFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthClipControl, type = VkBool32, offset = 16, size = 4
    depthClipControl VkBool32 <>
VkPhysicalDeviceDepthClipControlFeaturesEXT ends

VkPipelineViewportDepthClipControlCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = negativeOneToOne, type = VkBool32, offset = 16, size = 4
    negativeOneToOne VkBool32 <>
VkPipelineViewportDepthClipControlCreateInfoEXT ends

; TYPEDEF VkPipelineViewportDepthClipControlCreateInfoEXT = struct VkPipelineViewportDepthClipControlCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelineViewportDepthClipControlCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = negativeOneToOne, type = VkBool32, offset = 16, size = 4
    negativeOneToOne VkBool32 <>
VkPipelineViewportDepthClipControlCreateInfoEXT ends

VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = primitiveTopologyListRestart, type = VkBool32, offset = 16, size = 4
    primitiveTopologyListRestart VkBool32 <>
;   TypeKind.ELABORATED
;   name = primitiveTopologyPatchListRestart, type = VkBool32, offset = 20, size = 4
    primitiveTopologyPatchListRestart VkBool32 <>
VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT ends

; TYPEDEF VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT = struct VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = primitiveTopologyListRestart, type = VkBool32, offset = 16, size = 4
    primitiveTopologyListRestart VkBool32 <>
;   TypeKind.ELABORATED
;   name = primitiveTopologyPatchListRestart, type = VkBool32, offset = 20, size = 4
    primitiveTopologyPatchListRestart VkBool32 <>
VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT ends

VkSubpassShadingPipelineCreateInfoHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = renderPass, type = VkRenderPass, offset = 16, size = 8
    renderPass VkRenderPass <>
;   TypeKind.ELABORATED
;   name = subpass, type = uint32_t, offset = 24, size = 4
    subpass dword ?
VkSubpassShadingPipelineCreateInfoHUAWEI ends

; TYPEDEF VkSubpassShadingPipelineCreateInfoHUAWEI = struct VkSubpassShadingPipelineCreateInfoHUAWEI, TypeKind.ELABORATED
; remove struct typedef

VkSubpassShadingPipelineCreateInfoHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = renderPass, type = VkRenderPass, offset = 16, size = 8
    renderPass VkRenderPass <>
;   TypeKind.ELABORATED
;   name = subpass, type = uint32_t, offset = 24, size = 4
    subpass dword ?
VkSubpassShadingPipelineCreateInfoHUAWEI ends

VkPhysicalDeviceSubpassShadingFeaturesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subpassShading, type = VkBool32, offset = 16, size = 4
    subpassShading VkBool32 <>
VkPhysicalDeviceSubpassShadingFeaturesHUAWEI ends

; TYPEDEF VkPhysicalDeviceSubpassShadingFeaturesHUAWEI = struct VkPhysicalDeviceSubpassShadingFeaturesHUAWEI, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSubpassShadingFeaturesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subpassShading, type = VkBool32, offset = 16, size = 4
    subpassShading VkBool32 <>
VkPhysicalDeviceSubpassShadingFeaturesHUAWEI ends

VkPhysicalDeviceSubpassShadingPropertiesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxSubpassShadingWorkgroupSizeAspectRatio, type = uint32_t, offset = 16, size = 4
    maxSubpassShadingWorkgroupSizeAspectRatio dword ?
VkPhysicalDeviceSubpassShadingPropertiesHUAWEI ends

; TYPEDEF VkPhysicalDeviceSubpassShadingPropertiesHUAWEI = struct VkPhysicalDeviceSubpassShadingPropertiesHUAWEI, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSubpassShadingPropertiesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxSubpassShadingWorkgroupSizeAspectRatio, type = uint32_t, offset = 16, size = 4
    maxSubpassShadingWorkgroupSizeAspectRatio dword ?
VkPhysicalDeviceSubpassShadingPropertiesHUAWEI ends

; TYPEDEF PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = VkResult (*)(VkDevice, VkRenderPass, VkExtent2D *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI typedef qword

; TYPEDEF PFN_vkCmdSubpassShadingHUAWEI = void (*)(VkCommandBuffer) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSubpassShadingHUAWEI typedef qword

; VkResult vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI(VkDevice device, VkRenderPass renderpass, VkExtent2D * pMaxWorkgroupSize)
vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI qword ?

; void vkCmdSubpassShadingHUAWEI(VkCommandBuffer commandBuffer)
vkCmdSubpassShadingHUAWEI qword ?

VkPhysicalDeviceInvocationMaskFeaturesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = invocationMask, type = VkBool32, offset = 16, size = 4
    invocationMask VkBool32 <>
VkPhysicalDeviceInvocationMaskFeaturesHUAWEI ends

; TYPEDEF VkPhysicalDeviceInvocationMaskFeaturesHUAWEI = struct VkPhysicalDeviceInvocationMaskFeaturesHUAWEI, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceInvocationMaskFeaturesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = invocationMask, type = VkBool32, offset = 16, size = 4
    invocationMask VkBool32 <>
VkPhysicalDeviceInvocationMaskFeaturesHUAWEI ends

; TYPEDEF PFN_vkCmdBindInvocationMaskHUAWEI = void (*)(VkCommandBuffer, VkImageView, VkImageLayout) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindInvocationMaskHUAWEI typedef qword

; void vkCmdBindInvocationMaskHUAWEI(VkCommandBuffer commandBuffer, VkImageView imageView, VkImageLayout imageLayout)
vkCmdBindInvocationMaskHUAWEI qword ?

; TYPEDEF VkRemoteAddressNV = void *, TypeKind.POINTER
VkRemoteAddressNV typedef qword

VkMemoryGetRemoteAddressInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 16, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 24, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
VkMemoryGetRemoteAddressInfoNV ends

; TYPEDEF VkMemoryGetRemoteAddressInfoNV = struct VkMemoryGetRemoteAddressInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkMemoryGetRemoteAddressInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memory, type = VkDeviceMemory, offset = 16, size = 8
    memory VkDeviceMemory <>
;   TypeKind.ELABORATED
;   name = handleType, type = VkExternalMemoryHandleTypeFlagBits, offset = 24, size = 4
    handleType VkExternalMemoryHandleTypeFlagBits <>
VkMemoryGetRemoteAddressInfoNV ends

VkPhysicalDeviceExternalMemoryRDMAFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = externalMemoryRDMA, type = VkBool32, offset = 16, size = 4
    externalMemoryRDMA VkBool32 <>
VkPhysicalDeviceExternalMemoryRDMAFeaturesNV ends

; TYPEDEF VkPhysicalDeviceExternalMemoryRDMAFeaturesNV = struct VkPhysicalDeviceExternalMemoryRDMAFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExternalMemoryRDMAFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = externalMemoryRDMA, type = VkBool32, offset = 16, size = 4
    externalMemoryRDMA VkBool32 <>
VkPhysicalDeviceExternalMemoryRDMAFeaturesNV ends

; TYPEDEF PFN_vkGetMemoryRemoteAddressNV = VkResult (*)(VkDevice, const VkMemoryGetRemoteAddressInfoNV *, VkRemoteAddressNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetMemoryRemoteAddressNV typedef qword

; VkResult vkGetMemoryRemoteAddressNV(VkDevice device, const VkMemoryGetRemoteAddressInfoNV * pMemoryGetRemoteAddressInfo, VkRemoteAddressNV * pAddress)
vkGetMemoryRemoteAddressNV qword ?

; TYPEDEF VkPipelineInfoEXT = VkPipelineInfoKHR, TypeKind.ELABORATED

VkPipelinePropertiesIdentifierEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = pipelineIdentifier, type = uint8_t[16], offset = 16, size = 16
    pipelineIdentifier byte 16 dup(?)
VkPipelinePropertiesIdentifierEXT ends

; TYPEDEF VkPipelinePropertiesIdentifierEXT = struct VkPipelinePropertiesIdentifierEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelinePropertiesIdentifierEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = pipelineIdentifier, type = uint8_t[16], offset = 16, size = 16
    pipelineIdentifier byte 16 dup(?)
VkPipelinePropertiesIdentifierEXT ends

VkPhysicalDevicePipelinePropertiesFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelinePropertiesIdentifier, type = VkBool32, offset = 16, size = 4
    pipelinePropertiesIdentifier VkBool32 <>
VkPhysicalDevicePipelinePropertiesFeaturesEXT ends

; TYPEDEF VkPhysicalDevicePipelinePropertiesFeaturesEXT = struct VkPhysicalDevicePipelinePropertiesFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePipelinePropertiesFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelinePropertiesIdentifier, type = VkBool32, offset = 16, size = 4
    pipelinePropertiesIdentifier VkBool32 <>
VkPhysicalDevicePipelinePropertiesFeaturesEXT ends

; TYPEDEF PFN_vkGetPipelinePropertiesEXT = VkResult (*)(VkDevice, const VkPipelineInfoEXT *, VkBaseOutStructure *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPipelinePropertiesEXT typedef qword

; VkResult vkGetPipelinePropertiesEXT(VkDevice device, const VkPipelineInfoEXT * pPipelineInfo, VkBaseOutStructure * pPipelineProperties)
vkGetPipelinePropertiesEXT qword ?

; enum VkFrameBoundaryFlagBitsEXT {
    VK_FRAME_BOUNDARY_FRAME_END_BIT_EXT equ 1
    VK_FRAME_BOUNDARY_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkFrameBoundaryFlagBitsEXT = enum VkFrameBoundaryFlagBitsEXT, TypeKind.ELABORATED
VkFrameBoundaryFlagBitsEXT typedef dword

; enum VkFrameBoundaryFlagBitsEXT {
    VK_FRAME_BOUNDARY_FRAME_END_BIT_EXT equ 1
    VK_FRAME_BOUNDARY_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkFrameBoundaryFlagsEXT = VkFlags, TypeKind.ELABORATED
VkFrameBoundaryFlagsEXT typedef dword

VkPhysicalDeviceFrameBoundaryFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = frameBoundary, type = VkBool32, offset = 16, size = 4
    frameBoundary VkBool32 <>
VkPhysicalDeviceFrameBoundaryFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceFrameBoundaryFeaturesEXT = struct VkPhysicalDeviceFrameBoundaryFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFrameBoundaryFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = frameBoundary, type = VkBool32, offset = 16, size = 4
    frameBoundary VkBool32 <>
VkPhysicalDeviceFrameBoundaryFeaturesEXT ends

VkFrameBoundaryEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkFrameBoundaryFlagsEXT, offset = 16, size = 4
    flags VkFrameBoundaryFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = frameID, type = uint64_t, offset = 24, size = 8
    frameID qword ?
;   TypeKind.ELABORATED
;   name = imageCount, type = uint32_t, offset = 32, size = 4
    imageCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pImages, type = const VkImage *, offset = 40, size = 8
    pImages qword ?
;   TypeKind.ELABORATED
;   name = bufferCount, type = uint32_t, offset = 48, size = 4
    bufferCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBuffers, type = const VkBuffer *, offset = 56, size = 8
    pBuffers qword ?
;   TypeKind.ELABORATED
;   name = tagName, type = uint64_t, offset = 64, size = 8
    tagName qword ?
;   TypeKind.ELABORATED
;   name = tagSize, type = size_t, offset = 72, size = 8
    tagSize qword ?
;   TypeKind.POINTER
;   name = pTag, type = const void *, offset = 80, size = 8
    pTag qword ?
VkFrameBoundaryEXT ends

; TYPEDEF VkFrameBoundaryEXT = struct VkFrameBoundaryEXT, TypeKind.ELABORATED
; remove struct typedef

VkFrameBoundaryEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkFrameBoundaryFlagsEXT, offset = 16, size = 4
    flags VkFrameBoundaryFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = frameID, type = uint64_t, offset = 24, size = 8
    frameID qword ?
;   TypeKind.ELABORATED
;   name = imageCount, type = uint32_t, offset = 32, size = 4
    imageCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pImages, type = const VkImage *, offset = 40, size = 8
    pImages qword ?
;   TypeKind.ELABORATED
;   name = bufferCount, type = uint32_t, offset = 48, size = 4
    bufferCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pBuffers, type = const VkBuffer *, offset = 56, size = 8
    pBuffers qword ?
;   TypeKind.ELABORATED
;   name = tagName, type = uint64_t, offset = 64, size = 8
    tagName qword ?
;   TypeKind.ELABORATED
;   name = tagSize, type = size_t, offset = 72, size = 8
    tagSize qword ?
;   TypeKind.POINTER
;   name = pTag, type = const void *, offset = 80, size = 8
    pTag qword ?
VkFrameBoundaryEXT ends

VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multisampledRenderToSingleSampled, type = VkBool32, offset = 16, size = 4
    multisampledRenderToSingleSampled VkBool32 <>
VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = struct VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multisampledRenderToSingleSampled, type = VkBool32, offset = 16, size = 4
    multisampledRenderToSingleSampled VkBool32 <>
VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT ends

VkSubpassResolvePerformanceQueryEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = optimal, type = VkBool32, offset = 16, size = 4
    optimal VkBool32 <>
VkSubpassResolvePerformanceQueryEXT ends

; TYPEDEF VkSubpassResolvePerformanceQueryEXT = struct VkSubpassResolvePerformanceQueryEXT, TypeKind.ELABORATED
; remove struct typedef

VkSubpassResolvePerformanceQueryEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = optimal, type = VkBool32, offset = 16, size = 4
    optimal VkBool32 <>
VkSubpassResolvePerformanceQueryEXT ends

VkMultisampledRenderToSingleSampledInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multisampledRenderToSingleSampledEnable, type = VkBool32, offset = 16, size = 4
    multisampledRenderToSingleSampledEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = rasterizationSamples, type = VkSampleCountFlagBits, offset = 20, size = 4
    rasterizationSamples VkSampleCountFlagBits <>
VkMultisampledRenderToSingleSampledInfoEXT ends

; TYPEDEF VkMultisampledRenderToSingleSampledInfoEXT = struct VkMultisampledRenderToSingleSampledInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkMultisampledRenderToSingleSampledInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multisampledRenderToSingleSampledEnable, type = VkBool32, offset = 16, size = 4
    multisampledRenderToSingleSampledEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = rasterizationSamples, type = VkSampleCountFlagBits, offset = 20, size = 4
    rasterizationSamples VkSampleCountFlagBits <>
VkMultisampledRenderToSingleSampledInfoEXT ends

VkPhysicalDeviceExtendedDynamicState2FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = extendedDynamicState2, type = VkBool32, offset = 16, size = 4
    extendedDynamicState2 VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState2LogicOp, type = VkBool32, offset = 20, size = 4
    extendedDynamicState2LogicOp VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState2PatchControlPoints, type = VkBool32, offset = 24, size = 4
    extendedDynamicState2PatchControlPoints VkBool32 <>
VkPhysicalDeviceExtendedDynamicState2FeaturesEXT ends

; TYPEDEF VkPhysicalDeviceExtendedDynamicState2FeaturesEXT = struct VkPhysicalDeviceExtendedDynamicState2FeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExtendedDynamicState2FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = extendedDynamicState2, type = VkBool32, offset = 16, size = 4
    extendedDynamicState2 VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState2LogicOp, type = VkBool32, offset = 20, size = 4
    extendedDynamicState2LogicOp VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState2PatchControlPoints, type = VkBool32, offset = 24, size = 4
    extendedDynamicState2PatchControlPoints VkBool32 <>
VkPhysicalDeviceExtendedDynamicState2FeaturesEXT ends

; TYPEDEF PFN_vkCmdSetPatchControlPointsEXT = void (*)(VkCommandBuffer, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetPatchControlPointsEXT typedef qword

; TYPEDEF PFN_vkCmdSetRasterizerDiscardEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetRasterizerDiscardEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetDepthBiasEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthBiasEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetLogicOpEXT = void (*)(VkCommandBuffer, VkLogicOp) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetLogicOpEXT typedef qword

; TYPEDEF PFN_vkCmdSetPrimitiveRestartEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetPrimitiveRestartEnableEXT typedef qword

; void vkCmdSetPatchControlPointsEXT(VkCommandBuffer commandBuffer, uint32_t patchControlPoints)
vkCmdSetPatchControlPointsEXT qword ?

; void vkCmdSetRasterizerDiscardEnableEXT(VkCommandBuffer commandBuffer, VkBool32 rasterizerDiscardEnable)
vkCmdSetRasterizerDiscardEnableEXT qword ?

; void vkCmdSetDepthBiasEnableEXT(VkCommandBuffer commandBuffer, VkBool32 depthBiasEnable)
vkCmdSetDepthBiasEnableEXT qword ?

; void vkCmdSetLogicOpEXT(VkCommandBuffer commandBuffer, VkLogicOp logicOp)
vkCmdSetLogicOpEXT qword ?

; void vkCmdSetPrimitiveRestartEnableEXT(VkCommandBuffer commandBuffer, VkBool32 primitiveRestartEnable)
vkCmdSetPrimitiveRestartEnableEXT qword ?

VkPhysicalDeviceColorWriteEnableFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = colorWriteEnable, type = VkBool32, offset = 16, size = 4
    colorWriteEnable VkBool32 <>
VkPhysicalDeviceColorWriteEnableFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceColorWriteEnableFeaturesEXT = struct VkPhysicalDeviceColorWriteEnableFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceColorWriteEnableFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = colorWriteEnable, type = VkBool32, offset = 16, size = 4
    colorWriteEnable VkBool32 <>
VkPhysicalDeviceColorWriteEnableFeaturesEXT ends

VkPipelineColorWriteCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 16, size = 4
    attachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorWriteEnables, type = const VkBool32 *, offset = 24, size = 8
    pColorWriteEnables qword ?
VkPipelineColorWriteCreateInfoEXT ends

; TYPEDEF VkPipelineColorWriteCreateInfoEXT = struct VkPipelineColorWriteCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelineColorWriteCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentCount, type = uint32_t, offset = 16, size = 4
    attachmentCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pColorWriteEnables, type = const VkBool32 *, offset = 24, size = 8
    pColorWriteEnables qword ?
VkPipelineColorWriteCreateInfoEXT ends

; TYPEDEF PFN_vkCmdSetColorWriteEnableEXT = void (*)(VkCommandBuffer, uint32_t, const VkBool32 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetColorWriteEnableEXT typedef qword

; void vkCmdSetColorWriteEnableEXT(VkCommandBuffer commandBuffer, uint32_t attachmentCount, const VkBool32 * pColorWriteEnables)
vkCmdSetColorWriteEnableEXT qword ?

VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = primitivesGeneratedQuery, type = VkBool32, offset = 16, size = 4
    primitivesGeneratedQuery VkBool32 <>
;   TypeKind.ELABORATED
;   name = primitivesGeneratedQueryWithRasterizerDiscard, type = VkBool32, offset = 20, size = 4
    primitivesGeneratedQueryWithRasterizerDiscard VkBool32 <>
;   TypeKind.ELABORATED
;   name = primitivesGeneratedQueryWithNonZeroStreams, type = VkBool32, offset = 24, size = 4
    primitivesGeneratedQueryWithNonZeroStreams VkBool32 <>
VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT ends

; TYPEDEF VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT = struct VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = primitivesGeneratedQuery, type = VkBool32, offset = 16, size = 4
    primitivesGeneratedQuery VkBool32 <>
;   TypeKind.ELABORATED
;   name = primitivesGeneratedQueryWithRasterizerDiscard, type = VkBool32, offset = 20, size = 4
    primitivesGeneratedQueryWithRasterizerDiscard VkBool32 <>
;   TypeKind.ELABORATED
;   name = primitivesGeneratedQueryWithNonZeroStreams, type = VkBool32, offset = 24, size = 4
    primitivesGeneratedQueryWithNonZeroStreams VkBool32 <>
VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT = VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR, TypeKind.ELABORATED

; TYPEDEF VkQueueFamilyGlobalPriorityPropertiesEXT = VkQueueFamilyGlobalPriorityPropertiesKHR, TypeKind.ELABORATED

VkPhysicalDeviceImageViewMinLodFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minLod, type = VkBool32, offset = 16, size = 4
    minLod VkBool32 <>
VkPhysicalDeviceImageViewMinLodFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceImageViewMinLodFeaturesEXT = struct VkPhysicalDeviceImageViewMinLodFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageViewMinLodFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = minLod, type = VkBool32, offset = 16, size = 4
    minLod VkBool32 <>
VkPhysicalDeviceImageViewMinLodFeaturesEXT ends

VkImageViewMinLodCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.FLOAT
;   name = minLod, type = float, offset = 16, size = 4
    minLod real4 ?
VkImageViewMinLodCreateInfoEXT ends

; TYPEDEF VkImageViewMinLodCreateInfoEXT = struct VkImageViewMinLodCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkImageViewMinLodCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.FLOAT
;   name = minLod, type = float, offset = 16, size = 4
    minLod real4 ?
VkImageViewMinLodCreateInfoEXT ends

VkPhysicalDeviceMultiDrawFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multiDraw, type = VkBool32, offset = 16, size = 4
    multiDraw VkBool32 <>
VkPhysicalDeviceMultiDrawFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceMultiDrawFeaturesEXT = struct VkPhysicalDeviceMultiDrawFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMultiDrawFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multiDraw, type = VkBool32, offset = 16, size = 4
    multiDraw VkBool32 <>
VkPhysicalDeviceMultiDrawFeaturesEXT ends

VkPhysicalDeviceMultiDrawPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxMultiDrawCount, type = uint32_t, offset = 16, size = 4
    maxMultiDrawCount dword ?
VkPhysicalDeviceMultiDrawPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceMultiDrawPropertiesEXT = struct VkPhysicalDeviceMultiDrawPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMultiDrawPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxMultiDrawCount, type = uint32_t, offset = 16, size = 4
    maxMultiDrawCount dword ?
VkPhysicalDeviceMultiDrawPropertiesEXT ends

VkMultiDrawInfoEXT struct
;   TypeKind.ELABORATED
;   name = firstVertex, type = uint32_t, offset = 0, size = 4
    firstVertex dword ?
;   TypeKind.ELABORATED
;   name = vertexCount, type = uint32_t, offset = 4, size = 4
    vertexCount dword ?
VkMultiDrawInfoEXT ends

; TYPEDEF VkMultiDrawInfoEXT = struct VkMultiDrawInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkMultiDrawInfoEXT struct
;   TypeKind.ELABORATED
;   name = firstVertex, type = uint32_t, offset = 0, size = 4
    firstVertex dword ?
;   TypeKind.ELABORATED
;   name = vertexCount, type = uint32_t, offset = 4, size = 4
    vertexCount dword ?
VkMultiDrawInfoEXT ends

VkMultiDrawIndexedInfoEXT struct
;   TypeKind.ELABORATED
;   name = firstIndex, type = uint32_t, offset = 0, size = 4
    firstIndex dword ?
;   TypeKind.ELABORATED
;   name = indexCount, type = uint32_t, offset = 4, size = 4
    indexCount dword ?
;   TypeKind.ELABORATED
;   name = vertexOffset, type = int32_t, offset = 8, size = 4
    vertexOffset sdword ?
VkMultiDrawIndexedInfoEXT ends

; TYPEDEF VkMultiDrawIndexedInfoEXT = struct VkMultiDrawIndexedInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkMultiDrawIndexedInfoEXT struct
;   TypeKind.ELABORATED
;   name = firstIndex, type = uint32_t, offset = 0, size = 4
    firstIndex dword ?
;   TypeKind.ELABORATED
;   name = indexCount, type = uint32_t, offset = 4, size = 4
    indexCount dword ?
;   TypeKind.ELABORATED
;   name = vertexOffset, type = int32_t, offset = 8, size = 4
    vertexOffset sdword ?
VkMultiDrawIndexedInfoEXT ends

; TYPEDEF PFN_vkCmdDrawMultiEXT = void (*)(VkCommandBuffer, uint32_t, const VkMultiDrawInfoEXT *, uint32_t, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawMultiEXT typedef qword

; TYPEDEF PFN_vkCmdDrawMultiIndexedEXT = void (*)(VkCommandBuffer, uint32_t, const VkMultiDrawIndexedInfoEXT *, uint32_t, uint32_t, uint32_t, const int32_t *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawMultiIndexedEXT typedef qword

; void vkCmdDrawMultiEXT(VkCommandBuffer commandBuffer, uint32_t drawCount, const VkMultiDrawInfoEXT * pVertexInfo, uint32_t instanceCount, uint32_t firstInstance, uint32_t stride)
vkCmdDrawMultiEXT qword ?

; void vkCmdDrawMultiIndexedEXT(VkCommandBuffer commandBuffer, uint32_t drawCount, const VkMultiDrawIndexedInfoEXT * pIndexInfo, uint32_t instanceCount, uint32_t firstInstance, uint32_t stride, const int32_t * pVertexOffset)
vkCmdDrawMultiIndexedEXT qword ?

VkPhysicalDeviceImage2DViewOf3DFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image2DViewOf3D, type = VkBool32, offset = 16, size = 4
    image2DViewOf3D VkBool32 <>
;   TypeKind.ELABORATED
;   name = sampler2DViewOf3D, type = VkBool32, offset = 20, size = 4
    sampler2DViewOf3D VkBool32 <>
VkPhysicalDeviceImage2DViewOf3DFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceImage2DViewOf3DFeaturesEXT = struct VkPhysicalDeviceImage2DViewOf3DFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImage2DViewOf3DFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = image2DViewOf3D, type = VkBool32, offset = 16, size = 4
    image2DViewOf3D VkBool32 <>
;   TypeKind.ELABORATED
;   name = sampler2DViewOf3D, type = VkBool32, offset = 20, size = 4
    sampler2DViewOf3D VkBool32 <>
VkPhysicalDeviceImage2DViewOf3DFeaturesEXT ends

VkPhysicalDeviceShaderTileImageFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderTileImageColorReadAccess, type = VkBool32, offset = 16, size = 4
    shaderTileImageColorReadAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTileImageDepthReadAccess, type = VkBool32, offset = 20, size = 4
    shaderTileImageDepthReadAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTileImageStencilReadAccess, type = VkBool32, offset = 24, size = 4
    shaderTileImageStencilReadAccess VkBool32 <>
VkPhysicalDeviceShaderTileImageFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceShaderTileImageFeaturesEXT = struct VkPhysicalDeviceShaderTileImageFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderTileImageFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderTileImageColorReadAccess, type = VkBool32, offset = 16, size = 4
    shaderTileImageColorReadAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTileImageDepthReadAccess, type = VkBool32, offset = 20, size = 4
    shaderTileImageDepthReadAccess VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTileImageStencilReadAccess, type = VkBool32, offset = 24, size = 4
    shaderTileImageStencilReadAccess VkBool32 <>
VkPhysicalDeviceShaderTileImageFeaturesEXT ends

VkPhysicalDeviceShaderTileImagePropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderTileImageCoherentReadAccelerated, type = VkBool32, offset = 16, size = 4
    shaderTileImageCoherentReadAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTileImageReadSampleFromPixelRateInvocation, type = VkBool32, offset = 20, size = 4
    shaderTileImageReadSampleFromPixelRateInvocation VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTileImageReadFromHelperInvocation, type = VkBool32, offset = 24, size = 4
    shaderTileImageReadFromHelperInvocation VkBool32 <>
VkPhysicalDeviceShaderTileImagePropertiesEXT ends

; TYPEDEF VkPhysicalDeviceShaderTileImagePropertiesEXT = struct VkPhysicalDeviceShaderTileImagePropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderTileImagePropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderTileImageCoherentReadAccelerated, type = VkBool32, offset = 16, size = 4
    shaderTileImageCoherentReadAccelerated VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTileImageReadSampleFromPixelRateInvocation, type = VkBool32, offset = 20, size = 4
    shaderTileImageReadSampleFromPixelRateInvocation VkBool32 <>
;   TypeKind.ELABORATED
;   name = shaderTileImageReadFromHelperInvocation, type = VkBool32, offset = 24, size = 4
    shaderTileImageReadFromHelperInvocation VkBool32 <>
VkPhysicalDeviceShaderTileImagePropertiesEXT ends

; TYPEDEF VkMicromapEXT = struct VkMicromapEXT_T *, TypeKind.POINTER
VkMicromapEXT typedef qword

; enum VkMicromapTypeEXT {
    VK_MICROMAP_TYPE_OPACITY_MICROMAP_EXT equ 0
    VK_MICROMAP_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkMicromapTypeEXT = enum VkMicromapTypeEXT, TypeKind.ELABORATED
VkMicromapTypeEXT typedef dword

; enum VkMicromapTypeEXT {
    VK_MICROMAP_TYPE_OPACITY_MICROMAP_EXT equ 0
    VK_MICROMAP_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; enum VkBuildMicromapModeEXT {
    VK_BUILD_MICROMAP_MODE_BUILD_EXT equ 0
    VK_BUILD_MICROMAP_MODE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkBuildMicromapModeEXT = enum VkBuildMicromapModeEXT, TypeKind.ELABORATED
VkBuildMicromapModeEXT typedef dword

; enum VkBuildMicromapModeEXT {
    VK_BUILD_MICROMAP_MODE_BUILD_EXT equ 0
    VK_BUILD_MICROMAP_MODE_MAX_ENUM_EXT equ 2147483647
; }

; enum VkCopyMicromapModeEXT {
    VK_COPY_MICROMAP_MODE_CLONE_EXT equ 0
    VK_COPY_MICROMAP_MODE_SERIALIZE_EXT equ 1
    VK_COPY_MICROMAP_MODE_DESERIALIZE_EXT equ 2
    VK_COPY_MICROMAP_MODE_COMPACT_EXT equ 3
    VK_COPY_MICROMAP_MODE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkCopyMicromapModeEXT = enum VkCopyMicromapModeEXT, TypeKind.ELABORATED
VkCopyMicromapModeEXT typedef dword

; enum VkCopyMicromapModeEXT {
    VK_COPY_MICROMAP_MODE_CLONE_EXT equ 0
    VK_COPY_MICROMAP_MODE_SERIALIZE_EXT equ 1
    VK_COPY_MICROMAP_MODE_DESERIALIZE_EXT equ 2
    VK_COPY_MICROMAP_MODE_COMPACT_EXT equ 3
    VK_COPY_MICROMAP_MODE_MAX_ENUM_EXT equ 2147483647
; }

; enum VkOpacityMicromapFormatEXT {
    VK_OPACITY_MICROMAP_FORMAT_2_STATE_EXT equ 1
    VK_OPACITY_MICROMAP_FORMAT_4_STATE_EXT equ 2
    VK_OPACITY_MICROMAP_FORMAT_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkOpacityMicromapFormatEXT = enum VkOpacityMicromapFormatEXT, TypeKind.ELABORATED
VkOpacityMicromapFormatEXT typedef dword

; enum VkOpacityMicromapFormatEXT {
    VK_OPACITY_MICROMAP_FORMAT_2_STATE_EXT equ 1
    VK_OPACITY_MICROMAP_FORMAT_4_STATE_EXT equ 2
    VK_OPACITY_MICROMAP_FORMAT_MAX_ENUM_EXT equ 2147483647
; }

; enum VkOpacityMicromapSpecialIndexEXT {
    VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_TRANSPARENT_EXT equ -1
    VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_OPAQUE_EXT equ -2
    VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_UNKNOWN_TRANSPARENT_EXT equ -3
    VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_UNKNOWN_OPAQUE_EXT equ -4
    VK_OPACITY_MICROMAP_SPECIAL_INDEX_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkOpacityMicromapSpecialIndexEXT = enum VkOpacityMicromapSpecialIndexEXT, TypeKind.ELABORATED
VkOpacityMicromapSpecialIndexEXT typedef dword

; enum VkOpacityMicromapSpecialIndexEXT {
    VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_TRANSPARENT_EXT equ -1
    VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_OPAQUE_EXT equ -2
    VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_UNKNOWN_TRANSPARENT_EXT equ -3
    VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_UNKNOWN_OPAQUE_EXT equ -4
    VK_OPACITY_MICROMAP_SPECIAL_INDEX_MAX_ENUM_EXT equ 2147483647
; }

; enum VkAccelerationStructureCompatibilityKHR {
    VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR equ 0
    VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR equ 1
    VK_ACCELERATION_STRUCTURE_COMPATIBILITY_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkAccelerationStructureCompatibilityKHR = enum VkAccelerationStructureCompatibilityKHR, TypeKind.ELABORATED
VkAccelerationStructureCompatibilityKHR typedef dword

; enum VkAccelerationStructureCompatibilityKHR {
    VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR equ 0
    VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR equ 1
    VK_ACCELERATION_STRUCTURE_COMPATIBILITY_MAX_ENUM_KHR equ 2147483647
; }

; enum VkAccelerationStructureBuildTypeKHR {
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR equ 0
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR equ 1
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR equ 2
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkAccelerationStructureBuildTypeKHR = enum VkAccelerationStructureBuildTypeKHR, TypeKind.ELABORATED
VkAccelerationStructureBuildTypeKHR typedef dword

; enum VkAccelerationStructureBuildTypeKHR {
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR equ 0
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR equ 1
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR equ 2
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_MAX_ENUM_KHR equ 2147483647
; }

; enum VkBuildMicromapFlagBitsEXT {
    VK_BUILD_MICROMAP_PREFER_FAST_TRACE_BIT_EXT equ 1
    VK_BUILD_MICROMAP_PREFER_FAST_BUILD_BIT_EXT equ 2
    VK_BUILD_MICROMAP_ALLOW_COMPACTION_BIT_EXT equ 4
    VK_BUILD_MICROMAP_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkBuildMicromapFlagBitsEXT = enum VkBuildMicromapFlagBitsEXT, TypeKind.ELABORATED
VkBuildMicromapFlagBitsEXT typedef dword

; enum VkBuildMicromapFlagBitsEXT {
    VK_BUILD_MICROMAP_PREFER_FAST_TRACE_BIT_EXT equ 1
    VK_BUILD_MICROMAP_PREFER_FAST_BUILD_BIT_EXT equ 2
    VK_BUILD_MICROMAP_ALLOW_COMPACTION_BIT_EXT equ 4
    VK_BUILD_MICROMAP_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkBuildMicromapFlagsEXT = VkFlags, TypeKind.ELABORATED
VkBuildMicromapFlagsEXT typedef dword

; enum VkMicromapCreateFlagBitsEXT {
    VK_MICROMAP_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT equ 1
    VK_MICROMAP_CREATE_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkMicromapCreateFlagBitsEXT = enum VkMicromapCreateFlagBitsEXT, TypeKind.ELABORATED
VkMicromapCreateFlagBitsEXT typedef dword

; enum VkMicromapCreateFlagBitsEXT {
    VK_MICROMAP_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT equ 1
    VK_MICROMAP_CREATE_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkMicromapCreateFlagsEXT = VkFlags, TypeKind.ELABORATED
VkMicromapCreateFlagsEXT typedef dword

VkMicromapUsageEXT struct
;   TypeKind.ELABORATED
;   name = count, type = uint32_t, offset = 0, size = 4
    count dword ?
;   TypeKind.ELABORATED
;   name = subdivisionLevel, type = uint32_t, offset = 4, size = 4
    subdivisionLevel dword ?
;   TypeKind.ELABORATED
;   name = format, type = uint32_t, offset = 8, size = 4
    format dword ?
VkMicromapUsageEXT ends

; TYPEDEF VkMicromapUsageEXT = struct VkMicromapUsageEXT, TypeKind.ELABORATED
; remove struct typedef

VkMicromapUsageEXT struct
;   TypeKind.ELABORATED
;   name = count, type = uint32_t, offset = 0, size = 4
    count dword ?
;   TypeKind.ELABORATED
;   name = subdivisionLevel, type = uint32_t, offset = 4, size = 4
    subdivisionLevel dword ?
;   TypeKind.ELABORATED
;   name = format, type = uint32_t, offset = 8, size = 4
    format dword ?
VkMicromapUsageEXT ends

; TYPEDEF VkDeviceOrHostAddressKHR = union VkDeviceOrHostAddressKHR, TypeKind.ELABORATED
; remove union typedef

VkMicromapBuildInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkMicromapTypeEXT, offset = 16, size = 4
    __type VkMicromapTypeEXT <>
;   TypeKind.ELABORATED
;   name = flags, type = VkBuildMicromapFlagsEXT, offset = 20, size = 4
    flags VkBuildMicromapFlagsEXT <>
;   TypeKind.ELABORATED
;   name = mode, type = VkBuildMicromapModeEXT, offset = 24, size = 4
    mode VkBuildMicromapModeEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstMicromap, type = VkMicromapEXT, offset = 32, size = 8
    dstMicromap VkMicromapEXT <>
;   TypeKind.ELABORATED
;   name = usageCountsCount, type = uint32_t, offset = 40, size = 4
    usageCountsCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pUsageCounts, type = const VkMicromapUsageEXT *, offset = 48, size = 8
    pUsageCounts qword ?
;   TypeKind.POINTER
;   name = ppUsageCounts, type = const VkMicromapUsageEXT *const *, offset = 56, size = 8
    ppUsageCounts qword ?
;   TypeKind.ELABORATED
;   name = data, type = VkDeviceOrHostAddressConstKHR, offset = 64, size = 8
    data VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = scratchData, type = VkDeviceOrHostAddressKHR, offset = 72, size = 8
    scratchData VkDeviceOrHostAddressKHR <>
;   TypeKind.ELABORATED
;   name = triangleArray, type = VkDeviceOrHostAddressConstKHR, offset = 80, size = 8
    triangleArray VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = triangleArrayStride, type = VkDeviceSize, offset = 88, size = 8
    triangleArrayStride VkDeviceSize <>
VkMicromapBuildInfoEXT ends

; TYPEDEF VkMicromapBuildInfoEXT = struct VkMicromapBuildInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkMicromapBuildInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkMicromapTypeEXT, offset = 16, size = 4
    __type VkMicromapTypeEXT <>
;   TypeKind.ELABORATED
;   name = flags, type = VkBuildMicromapFlagsEXT, offset = 20, size = 4
    flags VkBuildMicromapFlagsEXT <>
;   TypeKind.ELABORATED
;   name = mode, type = VkBuildMicromapModeEXT, offset = 24, size = 4
    mode VkBuildMicromapModeEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = dstMicromap, type = VkMicromapEXT, offset = 32, size = 8
    dstMicromap VkMicromapEXT <>
;   TypeKind.ELABORATED
;   name = usageCountsCount, type = uint32_t, offset = 40, size = 4
    usageCountsCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pUsageCounts, type = const VkMicromapUsageEXT *, offset = 48, size = 8
    pUsageCounts qword ?
;   TypeKind.POINTER
;   name = ppUsageCounts, type = const VkMicromapUsageEXT *const *, offset = 56, size = 8
    ppUsageCounts qword ?
;   TypeKind.ELABORATED
;   name = data, type = VkDeviceOrHostAddressConstKHR, offset = 64, size = 8
    data VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = scratchData, type = VkDeviceOrHostAddressKHR, offset = 72, size = 8
    scratchData VkDeviceOrHostAddressKHR <>
;   TypeKind.ELABORATED
;   name = triangleArray, type = VkDeviceOrHostAddressConstKHR, offset = 80, size = 8
    triangleArray VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = triangleArrayStride, type = VkDeviceSize, offset = 88, size = 8
    triangleArrayStride VkDeviceSize <>
VkMicromapBuildInfoEXT ends

VkMicromapCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = createFlags, type = VkMicromapCreateFlagsEXT, offset = 16, size = 4
    createFlags VkMicromapCreateFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 24, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 32, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 40, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = type, type = VkMicromapTypeEXT, offset = 48, size = 4
    __type VkMicromapTypeEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 56, size = 8
    deviceAddress VkDeviceAddress <>
VkMicromapCreateInfoEXT ends

; TYPEDEF VkMicromapCreateInfoEXT = struct VkMicromapCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkMicromapCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = createFlags, type = VkMicromapCreateFlagsEXT, offset = 16, size = 4
    createFlags VkMicromapCreateFlagsEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 24, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 32, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 40, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = type, type = VkMicromapTypeEXT, offset = 48, size = 4
    __type VkMicromapTypeEXT <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 56, size = 8
    deviceAddress VkDeviceAddress <>
VkMicromapCreateInfoEXT ends

VkPhysicalDeviceOpacityMicromapFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = micromap, type = VkBool32, offset = 16, size = 4
    micromap VkBool32 <>
;   TypeKind.ELABORATED
;   name = micromapCaptureReplay, type = VkBool32, offset = 20, size = 4
    micromapCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = micromapHostCommands, type = VkBool32, offset = 24, size = 4
    micromapHostCommands VkBool32 <>
VkPhysicalDeviceOpacityMicromapFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceOpacityMicromapFeaturesEXT = struct VkPhysicalDeviceOpacityMicromapFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceOpacityMicromapFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = micromap, type = VkBool32, offset = 16, size = 4
    micromap VkBool32 <>
;   TypeKind.ELABORATED
;   name = micromapCaptureReplay, type = VkBool32, offset = 20, size = 4
    micromapCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = micromapHostCommands, type = VkBool32, offset = 24, size = 4
    micromapHostCommands VkBool32 <>
VkPhysicalDeviceOpacityMicromapFeaturesEXT ends

VkPhysicalDeviceOpacityMicromapPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxOpacity2StateSubdivisionLevel, type = uint32_t, offset = 16, size = 4
    maxOpacity2StateSubdivisionLevel dword ?
;   TypeKind.ELABORATED
;   name = maxOpacity4StateSubdivisionLevel, type = uint32_t, offset = 20, size = 4
    maxOpacity4StateSubdivisionLevel dword ?
VkPhysicalDeviceOpacityMicromapPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceOpacityMicromapPropertiesEXT = struct VkPhysicalDeviceOpacityMicromapPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceOpacityMicromapPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxOpacity2StateSubdivisionLevel, type = uint32_t, offset = 16, size = 4
    maxOpacity2StateSubdivisionLevel dword ?
;   TypeKind.ELABORATED
;   name = maxOpacity4StateSubdivisionLevel, type = uint32_t, offset = 20, size = 4
    maxOpacity4StateSubdivisionLevel dword ?
VkPhysicalDeviceOpacityMicromapPropertiesEXT ends

VkMicromapVersionInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pVersionData, type = const uint8_t *, offset = 16, size = 8
    pVersionData qword ?
VkMicromapVersionInfoEXT ends

; TYPEDEF VkMicromapVersionInfoEXT = struct VkMicromapVersionInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkMicromapVersionInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pVersionData, type = const uint8_t *, offset = 16, size = 8
    pVersionData qword ?
VkMicromapVersionInfoEXT ends

VkCopyMicromapToMemoryInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkMicromapEXT, offset = 16, size = 8
    src VkMicromapEXT <>
;   TypeKind.ELABORATED
;   name = dst, type = VkDeviceOrHostAddressKHR, offset = 24, size = 8
    dst VkDeviceOrHostAddressKHR <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyMicromapModeEXT, offset = 32, size = 4
    mode VkCopyMicromapModeEXT <>
VkCopyMicromapToMemoryInfoEXT ends

; TYPEDEF VkCopyMicromapToMemoryInfoEXT = struct VkCopyMicromapToMemoryInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkCopyMicromapToMemoryInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkMicromapEXT, offset = 16, size = 8
    src VkMicromapEXT <>
;   TypeKind.ELABORATED
;   name = dst, type = VkDeviceOrHostAddressKHR, offset = 24, size = 8
    dst VkDeviceOrHostAddressKHR <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyMicromapModeEXT, offset = 32, size = 4
    mode VkCopyMicromapModeEXT <>
VkCopyMicromapToMemoryInfoEXT ends

VkCopyMemoryToMicromapInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkDeviceOrHostAddressConstKHR, offset = 16, size = 8
    src VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = dst, type = VkMicromapEXT, offset = 24, size = 8
    dst VkMicromapEXT <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyMicromapModeEXT, offset = 32, size = 4
    mode VkCopyMicromapModeEXT <>
VkCopyMemoryToMicromapInfoEXT ends

; TYPEDEF VkCopyMemoryToMicromapInfoEXT = struct VkCopyMemoryToMicromapInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkCopyMemoryToMicromapInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkDeviceOrHostAddressConstKHR, offset = 16, size = 8
    src VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = dst, type = VkMicromapEXT, offset = 24, size = 8
    dst VkMicromapEXT <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyMicromapModeEXT, offset = 32, size = 4
    mode VkCopyMicromapModeEXT <>
VkCopyMemoryToMicromapInfoEXT ends

VkCopyMicromapInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkMicromapEXT, offset = 16, size = 8
    src VkMicromapEXT <>
;   TypeKind.ELABORATED
;   name = dst, type = VkMicromapEXT, offset = 24, size = 8
    dst VkMicromapEXT <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyMicromapModeEXT, offset = 32, size = 4
    mode VkCopyMicromapModeEXT <>
VkCopyMicromapInfoEXT ends

; TYPEDEF VkCopyMicromapInfoEXT = struct VkCopyMicromapInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkCopyMicromapInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkMicromapEXT, offset = 16, size = 8
    src VkMicromapEXT <>
;   TypeKind.ELABORATED
;   name = dst, type = VkMicromapEXT, offset = 24, size = 8
    dst VkMicromapEXT <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyMicromapModeEXT, offset = 32, size = 4
    mode VkCopyMicromapModeEXT <>
VkCopyMicromapInfoEXT ends

VkMicromapBuildSizesInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = micromapSize, type = VkDeviceSize, offset = 16, size = 8
    micromapSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = buildScratchSize, type = VkDeviceSize, offset = 24, size = 8
    buildScratchSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = discardable, type = VkBool32, offset = 32, size = 4
    discardable VkBool32 <>
VkMicromapBuildSizesInfoEXT ends

; TYPEDEF VkMicromapBuildSizesInfoEXT = struct VkMicromapBuildSizesInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkMicromapBuildSizesInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = micromapSize, type = VkDeviceSize, offset = 16, size = 8
    micromapSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = buildScratchSize, type = VkDeviceSize, offset = 24, size = 8
    buildScratchSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = discardable, type = VkBool32, offset = 32, size = 4
    discardable VkBool32 <>
VkMicromapBuildSizesInfoEXT ends

VkAccelerationStructureTrianglesOpacityMicromapEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = indexType, type = VkIndexType, offset = 16, size = 4
    indexType VkIndexType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = indexBuffer, type = VkDeviceOrHostAddressConstKHR, offset = 24, size = 8
    indexBuffer VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = indexStride, type = VkDeviceSize, offset = 32, size = 8
    indexStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = baseTriangle, type = uint32_t, offset = 40, size = 4
    baseTriangle dword ?
;   TypeKind.ELABORATED
;   name = usageCountsCount, type = uint32_t, offset = 44, size = 4
    usageCountsCount dword ?
;   TypeKind.POINTER
;   name = pUsageCounts, type = const VkMicromapUsageEXT *, offset = 48, size = 8
    pUsageCounts qword ?
;   TypeKind.POINTER
;   name = ppUsageCounts, type = const VkMicromapUsageEXT *const *, offset = 56, size = 8
    ppUsageCounts qword ?
;   TypeKind.ELABORATED
;   name = micromap, type = VkMicromapEXT, offset = 64, size = 8
    micromap VkMicromapEXT <>
VkAccelerationStructureTrianglesOpacityMicromapEXT ends

; TYPEDEF VkAccelerationStructureTrianglesOpacityMicromapEXT = struct VkAccelerationStructureTrianglesOpacityMicromapEXT, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureTrianglesOpacityMicromapEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = indexType, type = VkIndexType, offset = 16, size = 4
    indexType VkIndexType <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = indexBuffer, type = VkDeviceOrHostAddressConstKHR, offset = 24, size = 8
    indexBuffer VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = indexStride, type = VkDeviceSize, offset = 32, size = 8
    indexStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = baseTriangle, type = uint32_t, offset = 40, size = 4
    baseTriangle dword ?
;   TypeKind.ELABORATED
;   name = usageCountsCount, type = uint32_t, offset = 44, size = 4
    usageCountsCount dword ?
;   TypeKind.POINTER
;   name = pUsageCounts, type = const VkMicromapUsageEXT *, offset = 48, size = 8
    pUsageCounts qword ?
;   TypeKind.POINTER
;   name = ppUsageCounts, type = const VkMicromapUsageEXT *const *, offset = 56, size = 8
    ppUsageCounts qword ?
;   TypeKind.ELABORATED
;   name = micromap, type = VkMicromapEXT, offset = 64, size = 8
    micromap VkMicromapEXT <>
VkAccelerationStructureTrianglesOpacityMicromapEXT ends

VkMicromapTriangleEXT struct
;   TypeKind.ELABORATED
;   name = dataOffset, type = uint32_t, offset = 0, size = 4
    dataOffset dword ?
;   TypeKind.ELABORATED
;   name = subdivisionLevel, type = uint16_t, offset = 4, size = 2
    subdivisionLevel word ?
;   TypeKind.ELABORATED
;   name = format, type = uint16_t, offset = 6, size = 2
    format word ?
VkMicromapTriangleEXT ends

; TYPEDEF VkMicromapTriangleEXT = struct VkMicromapTriangleEXT, TypeKind.ELABORATED
; remove struct typedef

VkMicromapTriangleEXT struct
;   TypeKind.ELABORATED
;   name = dataOffset, type = uint32_t, offset = 0, size = 4
    dataOffset dword ?
;   TypeKind.ELABORATED
;   name = subdivisionLevel, type = uint16_t, offset = 4, size = 2
    subdivisionLevel word ?
;   TypeKind.ELABORATED
;   name = format, type = uint16_t, offset = 6, size = 2
    format word ?
VkMicromapTriangleEXT ends

; TYPEDEF PFN_vkCreateMicromapEXT = VkResult (*)(VkDevice, const VkMicromapCreateInfoEXT *, const VkAllocationCallbacks *, VkMicromapEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateMicromapEXT typedef qword

; TYPEDEF PFN_vkDestroyMicromapEXT = void (*)(VkDevice, VkMicromapEXT, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyMicromapEXT typedef qword

; TYPEDEF PFN_vkCmdBuildMicromapsEXT = void (*)(VkCommandBuffer, uint32_t, const VkMicromapBuildInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBuildMicromapsEXT typedef qword

; TYPEDEF PFN_vkBuildMicromapsEXT = VkResult (*)(VkDevice, VkDeferredOperationKHR, uint32_t, const VkMicromapBuildInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBuildMicromapsEXT typedef qword

; TYPEDEF PFN_vkCopyMicromapEXT = VkResult (*)(VkDevice, VkDeferredOperationKHR, const VkCopyMicromapInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCopyMicromapEXT typedef qword

; TYPEDEF PFN_vkCopyMicromapToMemoryEXT = VkResult (*)(VkDevice, VkDeferredOperationKHR, const VkCopyMicromapToMemoryInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCopyMicromapToMemoryEXT typedef qword

; TYPEDEF PFN_vkCopyMemoryToMicromapEXT = VkResult (*)(VkDevice, VkDeferredOperationKHR, const VkCopyMemoryToMicromapInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCopyMemoryToMicromapEXT typedef qword

; TYPEDEF PFN_vkWriteMicromapsPropertiesEXT = VkResult (*)(VkDevice, uint32_t, const VkMicromapEXT *, VkQueryType, size_t, void *, size_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkWriteMicromapsPropertiesEXT typedef qword

; TYPEDEF PFN_vkCmdCopyMicromapEXT = void (*)(VkCommandBuffer, const VkCopyMicromapInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyMicromapEXT typedef qword

; TYPEDEF PFN_vkCmdCopyMicromapToMemoryEXT = void (*)(VkCommandBuffer, const VkCopyMicromapToMemoryInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyMicromapToMemoryEXT typedef qword

; TYPEDEF PFN_vkCmdCopyMemoryToMicromapEXT = void (*)(VkCommandBuffer, const VkCopyMemoryToMicromapInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyMemoryToMicromapEXT typedef qword

; TYPEDEF PFN_vkCmdWriteMicromapsPropertiesEXT = void (*)(VkCommandBuffer, uint32_t, const VkMicromapEXT *, VkQueryType, VkQueryPool, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdWriteMicromapsPropertiesEXT typedef qword

; TYPEDEF PFN_vkGetDeviceMicromapCompatibilityEXT = void (*)(VkDevice, const VkMicromapVersionInfoEXT *, VkAccelerationStructureCompatibilityKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceMicromapCompatibilityEXT typedef qword

; TYPEDEF PFN_vkGetMicromapBuildSizesEXT = void (*)(VkDevice, VkAccelerationStructureBuildTypeKHR, const VkMicromapBuildInfoEXT *, VkMicromapBuildSizesInfoEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetMicromapBuildSizesEXT typedef qword

; VkResult vkCreateMicromapEXT(VkDevice device, const VkMicromapCreateInfoEXT * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkMicromapEXT * pMicromap)
vkCreateMicromapEXT qword ?

; void vkDestroyMicromapEXT(VkDevice device, VkMicromapEXT micromap, const VkAllocationCallbacks * pAllocator)
vkDestroyMicromapEXT qword ?

; void vkCmdBuildMicromapsEXT(VkCommandBuffer commandBuffer, uint32_t infoCount, const VkMicromapBuildInfoEXT * pInfos)
vkCmdBuildMicromapsEXT qword ?

; VkResult vkBuildMicromapsEXT(VkDevice device, VkDeferredOperationKHR deferredOperation, uint32_t infoCount, const VkMicromapBuildInfoEXT * pInfos)
vkBuildMicromapsEXT qword ?

; VkResult vkCopyMicromapEXT(VkDevice device, VkDeferredOperationKHR deferredOperation, const VkCopyMicromapInfoEXT * pInfo)
vkCopyMicromapEXT qword ?

; VkResult vkCopyMicromapToMemoryEXT(VkDevice device, VkDeferredOperationKHR deferredOperation, const VkCopyMicromapToMemoryInfoEXT * pInfo)
vkCopyMicromapToMemoryEXT qword ?

; VkResult vkCopyMemoryToMicromapEXT(VkDevice device, VkDeferredOperationKHR deferredOperation, const VkCopyMemoryToMicromapInfoEXT * pInfo)
vkCopyMemoryToMicromapEXT qword ?

; VkResult vkWriteMicromapsPropertiesEXT(VkDevice device, uint32_t micromapCount, const VkMicromapEXT * pMicromaps, VkQueryType queryType, size_t dataSize, void * pData, size_t stride)
vkWriteMicromapsPropertiesEXT qword ?

; void vkCmdCopyMicromapEXT(VkCommandBuffer commandBuffer, const VkCopyMicromapInfoEXT * pInfo)
vkCmdCopyMicromapEXT qword ?

; void vkCmdCopyMicromapToMemoryEXT(VkCommandBuffer commandBuffer, const VkCopyMicromapToMemoryInfoEXT * pInfo)
vkCmdCopyMicromapToMemoryEXT qword ?

; void vkCmdCopyMemoryToMicromapEXT(VkCommandBuffer commandBuffer, const VkCopyMemoryToMicromapInfoEXT * pInfo)
vkCmdCopyMemoryToMicromapEXT qword ?

; void vkCmdWriteMicromapsPropertiesEXT(VkCommandBuffer commandBuffer, uint32_t micromapCount, const VkMicromapEXT * pMicromaps, VkQueryType queryType, VkQueryPool queryPool, uint32_t firstQuery)
vkCmdWriteMicromapsPropertiesEXT qword ?

; void vkGetDeviceMicromapCompatibilityEXT(VkDevice device, const VkMicromapVersionInfoEXT * pVersionInfo, VkAccelerationStructureCompatibilityKHR * pCompatibility)
vkGetDeviceMicromapCompatibilityEXT qword ?

; void vkGetMicromapBuildSizesEXT(VkDevice device, VkAccelerationStructureBuildTypeKHR buildType, const VkMicromapBuildInfoEXT * pBuildInfo, VkMicromapBuildSizesInfoEXT * pSizeInfo)
vkGetMicromapBuildSizesEXT qword ?

VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = clustercullingShader, type = VkBool32, offset = 16, size = 4
    clustercullingShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewClusterCullingShader, type = VkBool32, offset = 20, size = 4
    multiviewClusterCullingShader VkBool32 <>
VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI ends

; TYPEDEF VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI = struct VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = clustercullingShader, type = VkBool32, offset = 16, size = 4
    clustercullingShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewClusterCullingShader, type = VkBool32, offset = 20, size = 4
    multiviewClusterCullingShader VkBool32 <>
VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI ends

VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = maxWorkGroupCount, type = uint32_t[3], offset = 16, size = 12
    maxWorkGroupCount dword 3 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = maxWorkGroupSize, type = uint32_t[3], offset = 28, size = 12
    maxWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxOutputClusterCount, type = uint32_t, offset = 40, size = 4
    maxOutputClusterCount dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = indirectBufferOffsetAlignment, type = VkDeviceSize, offset = 48, size = 8
    indirectBufferOffsetAlignment VkDeviceSize <>
VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI ends

; TYPEDEF VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI = struct VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = maxWorkGroupCount, type = uint32_t[3], offset = 16, size = 12
    maxWorkGroupCount dword 3 dup(?)
;   TypeKind.CONSTANTARRAY
;   name = maxWorkGroupSize, type = uint32_t[3], offset = 28, size = 12
    maxWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxOutputClusterCount, type = uint32_t, offset = 40, size = 4
    maxOutputClusterCount dword ?
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = indirectBufferOffsetAlignment, type = VkDeviceSize, offset = 48, size = 8
    indirectBufferOffsetAlignment VkDeviceSize <>
VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI ends

VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = clusterShadingRate, type = VkBool32, offset = 16, size = 4
    clusterShadingRate VkBool32 <>
VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI ends

; TYPEDEF VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI = struct VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = clusterShadingRate, type = VkBool32, offset = 16, size = 4
    clusterShadingRate VkBool32 <>
VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI ends

; TYPEDEF PFN_vkCmdDrawClusterHUAWEI = void (*)(VkCommandBuffer, uint32_t, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawClusterHUAWEI typedef qword

; TYPEDEF PFN_vkCmdDrawClusterIndirectHUAWEI = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawClusterIndirectHUAWEI typedef qword

; void vkCmdDrawClusterHUAWEI(VkCommandBuffer commandBuffer, uint32_t groupCountX, uint32_t groupCountY, uint32_t groupCountZ)
vkCmdDrawClusterHUAWEI qword ?

; void vkCmdDrawClusterIndirectHUAWEI(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset)
vkCmdDrawClusterIndirectHUAWEI qword ?

VkPhysicalDeviceBorderColorSwizzleFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = borderColorSwizzle, type = VkBool32, offset = 16, size = 4
    borderColorSwizzle VkBool32 <>
;   TypeKind.ELABORATED
;   name = borderColorSwizzleFromImage, type = VkBool32, offset = 20, size = 4
    borderColorSwizzleFromImage VkBool32 <>
VkPhysicalDeviceBorderColorSwizzleFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceBorderColorSwizzleFeaturesEXT = struct VkPhysicalDeviceBorderColorSwizzleFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceBorderColorSwizzleFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = borderColorSwizzle, type = VkBool32, offset = 16, size = 4
    borderColorSwizzle VkBool32 <>
;   TypeKind.ELABORATED
;   name = borderColorSwizzleFromImage, type = VkBool32, offset = 20, size = 4
    borderColorSwizzleFromImage VkBool32 <>
VkPhysicalDeviceBorderColorSwizzleFeaturesEXT ends

VkSamplerBorderColorComponentMappingCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = components, type = VkComponentMapping, offset = 16, size = 16
    components VkComponentMapping <>
;   TypeKind.ELABORATED
;   name = srgb, type = VkBool32, offset = 32, size = 4
    srgb VkBool32 <>
VkSamplerBorderColorComponentMappingCreateInfoEXT ends

; TYPEDEF VkSamplerBorderColorComponentMappingCreateInfoEXT = struct VkSamplerBorderColorComponentMappingCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkSamplerBorderColorComponentMappingCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = components, type = VkComponentMapping, offset = 16, size = 16
    components VkComponentMapping <>
;   TypeKind.ELABORATED
;   name = srgb, type = VkBool32, offset = 32, size = 4
    srgb VkBool32 <>
VkSamplerBorderColorComponentMappingCreateInfoEXT ends

VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pageableDeviceLocalMemory, type = VkBool32, offset = 16, size = 4
    pageableDeviceLocalMemory VkBool32 <>
VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT ends

; TYPEDEF VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT = struct VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pageableDeviceLocalMemory, type = VkBool32, offset = 16, size = 4
    pageableDeviceLocalMemory VkBool32 <>
VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT ends

; TYPEDEF PFN_vkSetDeviceMemoryPriorityEXT = void (*)(VkDevice, VkDeviceMemory, float) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSetDeviceMemoryPriorityEXT typedef qword

; void vkSetDeviceMemoryPriorityEXT(VkDevice device, VkDeviceMemory memory, float priority)
vkSetDeviceMemoryPriorityEXT qword ?

VkPhysicalDeviceShaderCorePropertiesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pixelRate, type = uint32_t, offset = 16, size = 4
    pixelRate dword ?
;   TypeKind.ELABORATED
;   name = texelRate, type = uint32_t, offset = 20, size = 4
    texelRate dword ?
;   TypeKind.ELABORATED
;   name = fmaRate, type = uint32_t, offset = 24, size = 4
    fmaRate dword ?
VkPhysicalDeviceShaderCorePropertiesARM ends

; TYPEDEF VkPhysicalDeviceShaderCorePropertiesARM = struct VkPhysicalDeviceShaderCorePropertiesARM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderCorePropertiesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pixelRate, type = uint32_t, offset = 16, size = 4
    pixelRate dword ?
;   TypeKind.ELABORATED
;   name = texelRate, type = uint32_t, offset = 20, size = 4
    texelRate dword ?
;   TypeKind.ELABORATED
;   name = fmaRate, type = uint32_t, offset = 24, size = 4
    fmaRate dword ?
VkPhysicalDeviceShaderCorePropertiesARM ends

; TYPEDEF VkPhysicalDeviceSchedulingControlsFlagsARM = VkFlags64, TypeKind.ELABORATED
VkPhysicalDeviceSchedulingControlsFlagsARM typedef dword

; TYPEDEF VkPhysicalDeviceSchedulingControlsFlagBitsARM = VkFlags64, TypeKind.ELABORATED
VkPhysicalDeviceSchedulingControlsFlagBitsARM typedef dword

VkDeviceQueueShaderCoreControlCreateInfoARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderCoreCount, type = uint32_t, offset = 16, size = 4
    shaderCoreCount dword ?
VkDeviceQueueShaderCoreControlCreateInfoARM ends

; TYPEDEF VkDeviceQueueShaderCoreControlCreateInfoARM = struct VkDeviceQueueShaderCoreControlCreateInfoARM, TypeKind.ELABORATED
; remove struct typedef

VkDeviceQueueShaderCoreControlCreateInfoARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderCoreCount, type = uint32_t, offset = 16, size = 4
    shaderCoreCount dword ?
VkDeviceQueueShaderCoreControlCreateInfoARM ends

VkPhysicalDeviceSchedulingControlsFeaturesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = schedulingControls, type = VkBool32, offset = 16, size = 4
    schedulingControls VkBool32 <>
VkPhysicalDeviceSchedulingControlsFeaturesARM ends

; TYPEDEF VkPhysicalDeviceSchedulingControlsFeaturesARM = struct VkPhysicalDeviceSchedulingControlsFeaturesARM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSchedulingControlsFeaturesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = schedulingControls, type = VkBool32, offset = 16, size = 4
    schedulingControls VkBool32 <>
VkPhysicalDeviceSchedulingControlsFeaturesARM ends

VkPhysicalDeviceSchedulingControlsPropertiesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = schedulingControlsFlags, type = VkPhysicalDeviceSchedulingControlsFlagsARM, offset = 16, size = 8
    schedulingControlsFlags VkPhysicalDeviceSchedulingControlsFlagsARM <>
VkPhysicalDeviceSchedulingControlsPropertiesARM ends

; TYPEDEF VkPhysicalDeviceSchedulingControlsPropertiesARM = struct VkPhysicalDeviceSchedulingControlsPropertiesARM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSchedulingControlsPropertiesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = schedulingControlsFlags, type = VkPhysicalDeviceSchedulingControlsFlagsARM, offset = 16, size = 8
    schedulingControlsFlags VkPhysicalDeviceSchedulingControlsFlagsARM <>
VkPhysicalDeviceSchedulingControlsPropertiesARM ends

VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageSlicedViewOf3D, type = VkBool32, offset = 16, size = 4
    imageSlicedViewOf3D VkBool32 <>
VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT = struct VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageSlicedViewOf3D, type = VkBool32, offset = 16, size = 4
    imageSlicedViewOf3D VkBool32 <>
VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT ends

VkImageViewSlicedCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sliceOffset, type = uint32_t, offset = 16, size = 4
    sliceOffset dword ?
;   TypeKind.ELABORATED
;   name = sliceCount, type = uint32_t, offset = 20, size = 4
    sliceCount dword ?
VkImageViewSlicedCreateInfoEXT ends

; TYPEDEF VkImageViewSlicedCreateInfoEXT = struct VkImageViewSlicedCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkImageViewSlicedCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = sliceOffset, type = uint32_t, offset = 16, size = 4
    sliceOffset dword ?
;   TypeKind.ELABORATED
;   name = sliceCount, type = uint32_t, offset = 20, size = 4
    sliceCount dword ?
VkImageViewSlicedCreateInfoEXT ends

VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorSetHostMapping, type = VkBool32, offset = 16, size = 4
    descriptorSetHostMapping VkBool32 <>
VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE ends

; TYPEDEF VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE = struct VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorSetHostMapping, type = VkBool32, offset = 16, size = 4
    descriptorSetHostMapping VkBool32 <>
VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE ends

VkDescriptorSetBindingReferenceVALVE struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorSetLayout, type = VkDescriptorSetLayout, offset = 16, size = 8
    descriptorSetLayout VkDescriptorSetLayout <>
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 24, size = 4
    binding dword ?
VkDescriptorSetBindingReferenceVALVE ends

; TYPEDEF VkDescriptorSetBindingReferenceVALVE = struct VkDescriptorSetBindingReferenceVALVE, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorSetBindingReferenceVALVE struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorSetLayout, type = VkDescriptorSetLayout, offset = 16, size = 8
    descriptorSetLayout VkDescriptorSetLayout <>
;   TypeKind.ELABORATED
;   name = binding, type = uint32_t, offset = 24, size = 4
    binding dword ?
VkDescriptorSetBindingReferenceVALVE ends

VkDescriptorSetLayoutHostMappingInfoVALVE struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorOffset, type = size_t, offset = 16, size = 8
    descriptorOffset qword ?
;   TypeKind.ELABORATED
;   name = descriptorSize, type = uint32_t, offset = 24, size = 4
    descriptorSize dword ?
VkDescriptorSetLayoutHostMappingInfoVALVE ends

; TYPEDEF VkDescriptorSetLayoutHostMappingInfoVALVE = struct VkDescriptorSetLayoutHostMappingInfoVALVE, TypeKind.ELABORATED
; remove struct typedef

VkDescriptorSetLayoutHostMappingInfoVALVE struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorOffset, type = size_t, offset = 16, size = 8
    descriptorOffset qword ?
;   TypeKind.ELABORATED
;   name = descriptorSize, type = uint32_t, offset = 24, size = 4
    descriptorSize dword ?
VkDescriptorSetLayoutHostMappingInfoVALVE ends

; TYPEDEF PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE = void (*)(VkDevice, const VkDescriptorSetBindingReferenceVALVE *, VkDescriptorSetLayoutHostMappingInfoVALVE *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE typedef qword

; TYPEDEF PFN_vkGetDescriptorSetHostMappingVALVE = void (*)(VkDevice, VkDescriptorSet, void **) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDescriptorSetHostMappingVALVE typedef qword

; void vkGetDescriptorSetLayoutHostMappingInfoVALVE(VkDevice device, const VkDescriptorSetBindingReferenceVALVE * pBindingReference, VkDescriptorSetLayoutHostMappingInfoVALVE * pHostMapping)
vkGetDescriptorSetLayoutHostMappingInfoVALVE qword ?

; void vkGetDescriptorSetHostMappingVALVE(VkDevice device, VkDescriptorSet descriptorSet, void ** ppData)
vkGetDescriptorSetHostMappingVALVE qword ?

VkPhysicalDeviceDepthClampZeroOneFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthClampZeroOne, type = VkBool32, offset = 16, size = 4
    depthClampZeroOne VkBool32 <>
VkPhysicalDeviceDepthClampZeroOneFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceDepthClampZeroOneFeaturesEXT = struct VkPhysicalDeviceDepthClampZeroOneFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDepthClampZeroOneFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = depthClampZeroOne, type = VkBool32, offset = 16, size = 4
    depthClampZeroOne VkBool32 <>
VkPhysicalDeviceDepthClampZeroOneFeaturesEXT ends

VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = nonSeamlessCubeMap, type = VkBool32, offset = 16, size = 4
    nonSeamlessCubeMap VkBool32 <>
VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT = struct VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = nonSeamlessCubeMap, type = VkBool32, offset = 16, size = 4
    nonSeamlessCubeMap VkBool32 <>
VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT ends

VkPhysicalDeviceRenderPassStripedFeaturesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = renderPassStriped, type = VkBool32, offset = 16, size = 4
    renderPassStriped VkBool32 <>
VkPhysicalDeviceRenderPassStripedFeaturesARM ends

; TYPEDEF VkPhysicalDeviceRenderPassStripedFeaturesARM = struct VkPhysicalDeviceRenderPassStripedFeaturesARM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRenderPassStripedFeaturesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = renderPassStriped, type = VkBool32, offset = 16, size = 4
    renderPassStriped VkBool32 <>
VkPhysicalDeviceRenderPassStripedFeaturesARM ends

VkPhysicalDeviceRenderPassStripedPropertiesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = renderPassStripeGranularity, type = VkExtent2D, offset = 16, size = 8
    renderPassStripeGranularity VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxRenderPassStripes, type = uint32_t, offset = 24, size = 4
    maxRenderPassStripes dword ?
VkPhysicalDeviceRenderPassStripedPropertiesARM ends

; TYPEDEF VkPhysicalDeviceRenderPassStripedPropertiesARM = struct VkPhysicalDeviceRenderPassStripedPropertiesARM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRenderPassStripedPropertiesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = renderPassStripeGranularity, type = VkExtent2D, offset = 16, size = 8
    renderPassStripeGranularity VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxRenderPassStripes, type = uint32_t, offset = 24, size = 4
    maxRenderPassStripes dword ?
VkPhysicalDeviceRenderPassStripedPropertiesARM ends

VkRenderPassStripeInfoARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stripeArea, type = VkRect2D, offset = 16, size = 16
    stripeArea VkRect2D <>
VkRenderPassStripeInfoARM ends

; TYPEDEF VkRenderPassStripeInfoARM = struct VkRenderPassStripeInfoARM, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassStripeInfoARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stripeArea, type = VkRect2D, offset = 16, size = 16
    stripeArea VkRect2D <>
VkRenderPassStripeInfoARM ends

VkRenderPassStripeBeginInfoARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stripeInfoCount, type = uint32_t, offset = 16, size = 4
    stripeInfoCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pStripeInfos, type = const VkRenderPassStripeInfoARM *, offset = 24, size = 8
    pStripeInfos qword ?
VkRenderPassStripeBeginInfoARM ends

; TYPEDEF VkRenderPassStripeBeginInfoARM = struct VkRenderPassStripeBeginInfoARM, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassStripeBeginInfoARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stripeInfoCount, type = uint32_t, offset = 16, size = 4
    stripeInfoCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pStripeInfos, type = const VkRenderPassStripeInfoARM *, offset = 24, size = 8
    pStripeInfos qword ?
VkRenderPassStripeBeginInfoARM ends

VkRenderPassStripeSubmitInfoARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stripeSemaphoreInfoCount, type = uint32_t, offset = 16, size = 4
    stripeSemaphoreInfoCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pStripeSemaphoreInfos, type = const VkSemaphoreSubmitInfo *, offset = 24, size = 8
    pStripeSemaphoreInfos qword ?
VkRenderPassStripeSubmitInfoARM ends

; TYPEDEF VkRenderPassStripeSubmitInfoARM = struct VkRenderPassStripeSubmitInfoARM, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassStripeSubmitInfoARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = stripeSemaphoreInfoCount, type = uint32_t, offset = 16, size = 4
    stripeSemaphoreInfoCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pStripeSemaphoreInfos, type = const VkSemaphoreSubmitInfo *, offset = 24, size = 8
    pStripeSemaphoreInfos qword ?
VkRenderPassStripeSubmitInfoARM ends

VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityMapOffset, type = VkBool32, offset = 16, size = 4
    fragmentDensityMapOffset VkBool32 <>
VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM ends

; TYPEDEF VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM = struct VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityMapOffset, type = VkBool32, offset = 16, size = 4
    fragmentDensityMapOffset VkBool32 <>
VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM ends

VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityOffsetGranularity, type = VkExtent2D, offset = 16, size = 8
    fragmentDensityOffsetGranularity VkExtent2D <>
VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM ends

; TYPEDEF VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM = struct VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityOffsetGranularity, type = VkExtent2D, offset = 16, size = 8
    fragmentDensityOffsetGranularity VkExtent2D <>
VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM ends

VkSubpassFragmentDensityMapOffsetEndInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityOffsetCount, type = uint32_t, offset = 16, size = 4
    fragmentDensityOffsetCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pFragmentDensityOffsets, type = const VkOffset2D *, offset = 24, size = 8
    pFragmentDensityOffsets qword ?
VkSubpassFragmentDensityMapOffsetEndInfoQCOM ends

; TYPEDEF VkSubpassFragmentDensityMapOffsetEndInfoQCOM = struct VkSubpassFragmentDensityMapOffsetEndInfoQCOM, TypeKind.ELABORATED
; remove struct typedef

VkSubpassFragmentDensityMapOffsetEndInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = fragmentDensityOffsetCount, type = uint32_t, offset = 16, size = 4
    fragmentDensityOffsetCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pFragmentDensityOffsets, type = const VkOffset2D *, offset = 24, size = 8
    pFragmentDensityOffsets qword ?
VkSubpassFragmentDensityMapOffsetEndInfoQCOM ends

VkCopyMemoryIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = srcAddress, type = VkDeviceAddress, offset = 0, size = 8
    srcAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = dstAddress, type = VkDeviceAddress, offset = 8, size = 8
    dstAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 16, size = 8
    _size VkDeviceSize <>
VkCopyMemoryIndirectCommandNV ends

; TYPEDEF VkCopyMemoryIndirectCommandNV = struct VkCopyMemoryIndirectCommandNV, TypeKind.ELABORATED
; remove struct typedef

VkCopyMemoryIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = srcAddress, type = VkDeviceAddress, offset = 0, size = 8
    srcAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = dstAddress, type = VkDeviceAddress, offset = 8, size = 8
    dstAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 16, size = 8
    _size VkDeviceSize <>
VkCopyMemoryIndirectCommandNV ends

VkCopyMemoryToImageIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = srcAddress, type = VkDeviceAddress, offset = 0, size = 8
    srcAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = bufferRowLength, type = uint32_t, offset = 8, size = 4
    bufferRowLength dword ?
;   TypeKind.ELABORATED
;   name = bufferImageHeight, type = uint32_t, offset = 12, size = 4
    bufferImageHeight dword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresourceLayers, offset = 16, size = 16
    imageSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = imageOffset, type = VkOffset3D, offset = 32, size = 12
    imageOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent3D, offset = 44, size = 12
    imageExtent VkExtent3D <>
VkCopyMemoryToImageIndirectCommandNV ends

; TYPEDEF VkCopyMemoryToImageIndirectCommandNV = struct VkCopyMemoryToImageIndirectCommandNV, TypeKind.ELABORATED
; remove struct typedef

VkCopyMemoryToImageIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = srcAddress, type = VkDeviceAddress, offset = 0, size = 8
    srcAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = bufferRowLength, type = uint32_t, offset = 8, size = 4
    bufferRowLength dword ?
;   TypeKind.ELABORATED
;   name = bufferImageHeight, type = uint32_t, offset = 12, size = 4
    bufferImageHeight dword ?
;   TypeKind.ELABORATED
;   name = imageSubresource, type = VkImageSubresourceLayers, offset = 16, size = 16
    imageSubresource VkImageSubresourceLayers <>
;   TypeKind.ELABORATED
;   name = imageOffset, type = VkOffset3D, offset = 32, size = 12
    imageOffset VkOffset3D <>
;   TypeKind.ELABORATED
;   name = imageExtent, type = VkExtent3D, offset = 44, size = 12
    imageExtent VkExtent3D <>
VkCopyMemoryToImageIndirectCommandNV ends

VkPhysicalDeviceCopyMemoryIndirectFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = indirectCopy, type = VkBool32, offset = 16, size = 4
    indirectCopy VkBool32 <>
VkPhysicalDeviceCopyMemoryIndirectFeaturesNV ends

; TYPEDEF VkPhysicalDeviceCopyMemoryIndirectFeaturesNV = struct VkPhysicalDeviceCopyMemoryIndirectFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCopyMemoryIndirectFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = indirectCopy, type = VkBool32, offset = 16, size = 4
    indirectCopy VkBool32 <>
VkPhysicalDeviceCopyMemoryIndirectFeaturesNV ends

VkPhysicalDeviceCopyMemoryIndirectPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportedQueues, type = VkQueueFlags, offset = 16, size = 4
    supportedQueues VkQueueFlags <>
VkPhysicalDeviceCopyMemoryIndirectPropertiesNV ends

; TYPEDEF VkPhysicalDeviceCopyMemoryIndirectPropertiesNV = struct VkPhysicalDeviceCopyMemoryIndirectPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCopyMemoryIndirectPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportedQueues, type = VkQueueFlags, offset = 16, size = 4
    supportedQueues VkQueueFlags <>
VkPhysicalDeviceCopyMemoryIndirectPropertiesNV ends

; TYPEDEF PFN_vkCmdCopyMemoryIndirectNV = void (*)(VkCommandBuffer, VkDeviceAddress, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyMemoryIndirectNV typedef qword

; TYPEDEF PFN_vkCmdCopyMemoryToImageIndirectNV = void (*)(VkCommandBuffer, VkDeviceAddress, uint32_t, uint32_t, VkImage, VkImageLayout, const VkImageSubresourceLayers *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyMemoryToImageIndirectNV typedef qword

; void vkCmdCopyMemoryIndirectNV(VkCommandBuffer commandBuffer, VkDeviceAddress copyBufferAddress, uint32_t copyCount, uint32_t stride)
vkCmdCopyMemoryIndirectNV qword ?

; void vkCmdCopyMemoryToImageIndirectNV(VkCommandBuffer commandBuffer, VkDeviceAddress copyBufferAddress, uint32_t copyCount, uint32_t stride, VkImage dstImage, VkImageLayout dstImageLayout, const VkImageSubresourceLayers * pImageSubresources)
vkCmdCopyMemoryToImageIndirectNV qword ?

; TYPEDEF VkMemoryDecompressionMethodFlagBitsNV = VkFlags64, TypeKind.ELABORATED
VkMemoryDecompressionMethodFlagBitsNV typedef dword

; TYPEDEF VkMemoryDecompressionMethodFlagsNV = VkFlags64, TypeKind.ELABORATED
VkMemoryDecompressionMethodFlagsNV typedef dword

VkDecompressMemoryRegionNV struct
;   TypeKind.ELABORATED
;   name = srcAddress, type = VkDeviceAddress, offset = 0, size = 8
    srcAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = dstAddress, type = VkDeviceAddress, offset = 8, size = 8
    dstAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = compressedSize, type = VkDeviceSize, offset = 16, size = 8
    compressedSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = decompressedSize, type = VkDeviceSize, offset = 24, size = 8
    decompressedSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = decompressionMethod, type = VkMemoryDecompressionMethodFlagsNV, offset = 32, size = 8
    decompressionMethod VkMemoryDecompressionMethodFlagsNV <>
VkDecompressMemoryRegionNV ends

; TYPEDEF VkDecompressMemoryRegionNV = struct VkDecompressMemoryRegionNV, TypeKind.ELABORATED
; remove struct typedef

VkDecompressMemoryRegionNV struct
;   TypeKind.ELABORATED
;   name = srcAddress, type = VkDeviceAddress, offset = 0, size = 8
    srcAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = dstAddress, type = VkDeviceAddress, offset = 8, size = 8
    dstAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = compressedSize, type = VkDeviceSize, offset = 16, size = 8
    compressedSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = decompressedSize, type = VkDeviceSize, offset = 24, size = 8
    decompressedSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = decompressionMethod, type = VkMemoryDecompressionMethodFlagsNV, offset = 32, size = 8
    decompressionMethod VkMemoryDecompressionMethodFlagsNV <>
VkDecompressMemoryRegionNV ends

VkPhysicalDeviceMemoryDecompressionFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryDecompression, type = VkBool32, offset = 16, size = 4
    memoryDecompression VkBool32 <>
VkPhysicalDeviceMemoryDecompressionFeaturesNV ends

; TYPEDEF VkPhysicalDeviceMemoryDecompressionFeaturesNV = struct VkPhysicalDeviceMemoryDecompressionFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMemoryDecompressionFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = memoryDecompression, type = VkBool32, offset = 16, size = 4
    memoryDecompression VkBool32 <>
VkPhysicalDeviceMemoryDecompressionFeaturesNV ends

VkPhysicalDeviceMemoryDecompressionPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = decompressionMethods, type = VkMemoryDecompressionMethodFlagsNV, offset = 16, size = 8
    decompressionMethods VkMemoryDecompressionMethodFlagsNV <>
;   TypeKind.ELABORATED
;   name = maxDecompressionIndirectCount, type = uint64_t, offset = 24, size = 8
    maxDecompressionIndirectCount qword ?
VkPhysicalDeviceMemoryDecompressionPropertiesNV ends

; TYPEDEF VkPhysicalDeviceMemoryDecompressionPropertiesNV = struct VkPhysicalDeviceMemoryDecompressionPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMemoryDecompressionPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = decompressionMethods, type = VkMemoryDecompressionMethodFlagsNV, offset = 16, size = 8
    decompressionMethods VkMemoryDecompressionMethodFlagsNV <>
;   TypeKind.ELABORATED
;   name = maxDecompressionIndirectCount, type = uint64_t, offset = 24, size = 8
    maxDecompressionIndirectCount qword ?
VkPhysicalDeviceMemoryDecompressionPropertiesNV ends

; TYPEDEF PFN_vkCmdDecompressMemoryNV = void (*)(VkCommandBuffer, uint32_t, const VkDecompressMemoryRegionNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDecompressMemoryNV typedef qword

; TYPEDEF PFN_vkCmdDecompressMemoryIndirectCountNV = void (*)(VkCommandBuffer, VkDeviceAddress, VkDeviceAddress, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDecompressMemoryIndirectCountNV typedef qword

; void vkCmdDecompressMemoryNV(VkCommandBuffer commandBuffer, uint32_t decompressRegionCount, const VkDecompressMemoryRegionNV * pDecompressMemoryRegions)
vkCmdDecompressMemoryNV qword ?

; void vkCmdDecompressMemoryIndirectCountNV(VkCommandBuffer commandBuffer, VkDeviceAddress indirectCommandsAddress, VkDeviceAddress indirectCommandsCountAddress, uint32_t stride)
vkCmdDecompressMemoryIndirectCountNV qword ?

VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceGeneratedCompute, type = VkBool32, offset = 16, size = 4
    deviceGeneratedCompute VkBool32 <>
;   TypeKind.ELABORATED
;   name = deviceGeneratedComputePipelines, type = VkBool32, offset = 20, size = 4
    deviceGeneratedComputePipelines VkBool32 <>
;   TypeKind.ELABORATED
;   name = deviceGeneratedComputeCaptureReplay, type = VkBool32, offset = 24, size = 4
    deviceGeneratedComputeCaptureReplay VkBool32 <>
VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV ends

; TYPEDEF VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV = struct VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceGeneratedCompute, type = VkBool32, offset = 16, size = 4
    deviceGeneratedCompute VkBool32 <>
;   TypeKind.ELABORATED
;   name = deviceGeneratedComputePipelines, type = VkBool32, offset = 20, size = 4
    deviceGeneratedComputePipelines VkBool32 <>
;   TypeKind.ELABORATED
;   name = deviceGeneratedComputeCaptureReplay, type = VkBool32, offset = 24, size = 4
    deviceGeneratedComputeCaptureReplay VkBool32 <>
VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV ends

VkComputePipelineIndirectBufferInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 16, size = 8
    deviceAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 24, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = pipelineDeviceAddressCaptureReplay, type = VkDeviceAddress, offset = 32, size = 8
    pipelineDeviceAddressCaptureReplay VkDeviceAddress <>
VkComputePipelineIndirectBufferInfoNV ends

; TYPEDEF VkComputePipelineIndirectBufferInfoNV = struct VkComputePipelineIndirectBufferInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkComputePipelineIndirectBufferInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 16, size = 8
    deviceAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 24, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = pipelineDeviceAddressCaptureReplay, type = VkDeviceAddress, offset = 32, size = 8
    pipelineDeviceAddressCaptureReplay VkDeviceAddress <>
VkComputePipelineIndirectBufferInfoNV ends

VkPipelineIndirectDeviceAddressInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 16, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pipeline, type = VkPipeline, offset = 24, size = 8
    pipeline VkPipeline <>
VkPipelineIndirectDeviceAddressInfoNV ends

; TYPEDEF VkPipelineIndirectDeviceAddressInfoNV = struct VkPipelineIndirectDeviceAddressInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkPipelineIndirectDeviceAddressInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineBindPoint, type = VkPipelineBindPoint, offset = 16, size = 4
    pipelineBindPoint VkPipelineBindPoint <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pipeline, type = VkPipeline, offset = 24, size = 8
    pipeline VkPipeline <>
VkPipelineIndirectDeviceAddressInfoNV ends

VkBindPipelineIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = pipelineAddress, type = VkDeviceAddress, offset = 0, size = 8
    pipelineAddress VkDeviceAddress <>
VkBindPipelineIndirectCommandNV ends

; TYPEDEF VkBindPipelineIndirectCommandNV = struct VkBindPipelineIndirectCommandNV, TypeKind.ELABORATED
; remove struct typedef

VkBindPipelineIndirectCommandNV struct
;   TypeKind.ELABORATED
;   name = pipelineAddress, type = VkDeviceAddress, offset = 0, size = 8
    pipelineAddress VkDeviceAddress <>
VkBindPipelineIndirectCommandNV ends

; TYPEDEF PFN_vkGetPipelineIndirectMemoryRequirementsNV = void (*)(VkDevice, const VkComputePipelineCreateInfo *, VkMemoryRequirements2 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPipelineIndirectMemoryRequirementsNV typedef qword

; TYPEDEF PFN_vkCmdUpdatePipelineIndirectBufferNV = void (*)(VkCommandBuffer, VkPipelineBindPoint, VkPipeline) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdUpdatePipelineIndirectBufferNV typedef qword

; TYPEDEF PFN_vkGetPipelineIndirectDeviceAddressNV = VkDeviceAddress (*)(VkDevice, const VkPipelineIndirectDeviceAddressInfoNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPipelineIndirectDeviceAddressNV typedef qword

; void vkGetPipelineIndirectMemoryRequirementsNV(VkDevice device, const VkComputePipelineCreateInfo * pCreateInfo, VkMemoryRequirements2 * pMemoryRequirements)
vkGetPipelineIndirectMemoryRequirementsNV qword ?

; void vkCmdUpdatePipelineIndirectBufferNV(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipeline pipeline)
vkCmdUpdatePipelineIndirectBufferNV qword ?

; VkDeviceAddress vkGetPipelineIndirectDeviceAddressNV(VkDevice device, const VkPipelineIndirectDeviceAddressInfoNV * pInfo)
vkGetPipelineIndirectDeviceAddressNV qword ?

VkPhysicalDeviceLinearColorAttachmentFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = linearColorAttachment, type = VkBool32, offset = 16, size = 4
    linearColorAttachment VkBool32 <>
VkPhysicalDeviceLinearColorAttachmentFeaturesNV ends

; TYPEDEF VkPhysicalDeviceLinearColorAttachmentFeaturesNV = struct VkPhysicalDeviceLinearColorAttachmentFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceLinearColorAttachmentFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = linearColorAttachment, type = VkBool32, offset = 16, size = 4
    linearColorAttachment VkBool32 <>
VkPhysicalDeviceLinearColorAttachmentFeaturesNV ends

VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageCompressionControlSwapchain, type = VkBool32, offset = 16, size = 4
    imageCompressionControlSwapchain VkBool32 <>
VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT = struct VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = imageCompressionControlSwapchain, type = VkBool32, offset = 16, size = 4
    imageCompressionControlSwapchain VkBool32 <>
VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT ends

VkImageViewSampleWeightCreateInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = filterCenter, type = VkOffset2D, offset = 16, size = 8
    filterCenter VkOffset2D <>
;   TypeKind.ELABORATED
;   name = filterSize, type = VkExtent2D, offset = 24, size = 8
    filterSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = numPhases, type = uint32_t, offset = 32, size = 4
    numPhases dword ?
VkImageViewSampleWeightCreateInfoQCOM ends

; TYPEDEF VkImageViewSampleWeightCreateInfoQCOM = struct VkImageViewSampleWeightCreateInfoQCOM, TypeKind.ELABORATED
; remove struct typedef

VkImageViewSampleWeightCreateInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = filterCenter, type = VkOffset2D, offset = 16, size = 8
    filterCenter VkOffset2D <>
;   TypeKind.ELABORATED
;   name = filterSize, type = VkExtent2D, offset = 24, size = 8
    filterSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = numPhases, type = uint32_t, offset = 32, size = 4
    numPhases dword ?
VkImageViewSampleWeightCreateInfoQCOM ends

VkPhysicalDeviceImageProcessingFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = textureSampleWeighted, type = VkBool32, offset = 16, size = 4
    textureSampleWeighted VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureBoxFilter, type = VkBool32, offset = 20, size = 4
    textureBoxFilter VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureBlockMatch, type = VkBool32, offset = 24, size = 4
    textureBlockMatch VkBool32 <>
VkPhysicalDeviceImageProcessingFeaturesQCOM ends

; TYPEDEF VkPhysicalDeviceImageProcessingFeaturesQCOM = struct VkPhysicalDeviceImageProcessingFeaturesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageProcessingFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = textureSampleWeighted, type = VkBool32, offset = 16, size = 4
    textureSampleWeighted VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureBoxFilter, type = VkBool32, offset = 20, size = 4
    textureBoxFilter VkBool32 <>
;   TypeKind.ELABORATED
;   name = textureBlockMatch, type = VkBool32, offset = 24, size = 4
    textureBlockMatch VkBool32 <>
VkPhysicalDeviceImageProcessingFeaturesQCOM ends

VkPhysicalDeviceImageProcessingPropertiesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxWeightFilterPhases, type = uint32_t, offset = 16, size = 4
    maxWeightFilterPhases dword ?
;   TypeKind.ELABORATED
;   name = maxWeightFilterDimension, type = VkExtent2D, offset = 20, size = 8
    maxWeightFilterDimension VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxBlockMatchRegion, type = VkExtent2D, offset = 28, size = 8
    maxBlockMatchRegion VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxBoxFilterBlockSize, type = VkExtent2D, offset = 36, size = 8
    maxBoxFilterBlockSize VkExtent2D <>
VkPhysicalDeviceImageProcessingPropertiesQCOM ends

; TYPEDEF VkPhysicalDeviceImageProcessingPropertiesQCOM = struct VkPhysicalDeviceImageProcessingPropertiesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageProcessingPropertiesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxWeightFilterPhases, type = uint32_t, offset = 16, size = 4
    maxWeightFilterPhases dword ?
;   TypeKind.ELABORATED
;   name = maxWeightFilterDimension, type = VkExtent2D, offset = 20, size = 8
    maxWeightFilterDimension VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxBlockMatchRegion, type = VkExtent2D, offset = 28, size = 8
    maxBlockMatchRegion VkExtent2D <>
;   TypeKind.ELABORATED
;   name = maxBoxFilterBlockSize, type = VkExtent2D, offset = 36, size = 8
    maxBoxFilterBlockSize VkExtent2D <>
VkPhysicalDeviceImageProcessingPropertiesQCOM ends

VkPhysicalDeviceNestedCommandBufferFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = nestedCommandBuffer, type = VkBool32, offset = 16, size = 4
    nestedCommandBuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = nestedCommandBufferRendering, type = VkBool32, offset = 20, size = 4
    nestedCommandBufferRendering VkBool32 <>
;   TypeKind.ELABORATED
;   name = nestedCommandBufferSimultaneousUse, type = VkBool32, offset = 24, size = 4
    nestedCommandBufferSimultaneousUse VkBool32 <>
VkPhysicalDeviceNestedCommandBufferFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceNestedCommandBufferFeaturesEXT = struct VkPhysicalDeviceNestedCommandBufferFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceNestedCommandBufferFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = nestedCommandBuffer, type = VkBool32, offset = 16, size = 4
    nestedCommandBuffer VkBool32 <>
;   TypeKind.ELABORATED
;   name = nestedCommandBufferRendering, type = VkBool32, offset = 20, size = 4
    nestedCommandBufferRendering VkBool32 <>
;   TypeKind.ELABORATED
;   name = nestedCommandBufferSimultaneousUse, type = VkBool32, offset = 24, size = 4
    nestedCommandBufferSimultaneousUse VkBool32 <>
VkPhysicalDeviceNestedCommandBufferFeaturesEXT ends

VkPhysicalDeviceNestedCommandBufferPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxCommandBufferNestingLevel, type = uint32_t, offset = 16, size = 4
    maxCommandBufferNestingLevel dword ?
VkPhysicalDeviceNestedCommandBufferPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceNestedCommandBufferPropertiesEXT = struct VkPhysicalDeviceNestedCommandBufferPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceNestedCommandBufferPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxCommandBufferNestingLevel, type = uint32_t, offset = 16, size = 4
    maxCommandBufferNestingLevel dword ?
VkPhysicalDeviceNestedCommandBufferPropertiesEXT ends

VkExternalMemoryAcquireUnmodifiedEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = acquireUnmodifiedMemory, type = VkBool32, offset = 16, size = 4
    acquireUnmodifiedMemory VkBool32 <>
VkExternalMemoryAcquireUnmodifiedEXT ends

; TYPEDEF VkExternalMemoryAcquireUnmodifiedEXT = struct VkExternalMemoryAcquireUnmodifiedEXT, TypeKind.ELABORATED
; remove struct typedef

VkExternalMemoryAcquireUnmodifiedEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = acquireUnmodifiedMemory, type = VkBool32, offset = 16, size = 4
    acquireUnmodifiedMemory VkBool32 <>
VkExternalMemoryAcquireUnmodifiedEXT ends

VkPhysicalDeviceExtendedDynamicState3FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = extendedDynamicState3TessellationDomainOrigin, type = VkBool32, offset = 16, size = 4
    extendedDynamicState3TessellationDomainOrigin VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3DepthClampEnable, type = VkBool32, offset = 20, size = 4
    extendedDynamicState3DepthClampEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3PolygonMode, type = VkBool32, offset = 24, size = 4
    extendedDynamicState3PolygonMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3RasterizationSamples, type = VkBool32, offset = 28, size = 4
    extendedDynamicState3RasterizationSamples VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3SampleMask, type = VkBool32, offset = 32, size = 4
    extendedDynamicState3SampleMask VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3AlphaToCoverageEnable, type = VkBool32, offset = 36, size = 4
    extendedDynamicState3AlphaToCoverageEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3AlphaToOneEnable, type = VkBool32, offset = 40, size = 4
    extendedDynamicState3AlphaToOneEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3LogicOpEnable, type = VkBool32, offset = 44, size = 4
    extendedDynamicState3LogicOpEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ColorBlendEnable, type = VkBool32, offset = 48, size = 4
    extendedDynamicState3ColorBlendEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ColorBlendEquation, type = VkBool32, offset = 52, size = 4
    extendedDynamicState3ColorBlendEquation VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ColorWriteMask, type = VkBool32, offset = 56, size = 4
    extendedDynamicState3ColorWriteMask VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3RasterizationStream, type = VkBool32, offset = 60, size = 4
    extendedDynamicState3RasterizationStream VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ConservativeRasterizationMode, type = VkBool32, offset = 64, size = 4
    extendedDynamicState3ConservativeRasterizationMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ExtraPrimitiveOverestimationSize, type = VkBool32, offset = 68, size = 4
    extendedDynamicState3ExtraPrimitiveOverestimationSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3DepthClipEnable, type = VkBool32, offset = 72, size = 4
    extendedDynamicState3DepthClipEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3SampleLocationsEnable, type = VkBool32, offset = 76, size = 4
    extendedDynamicState3SampleLocationsEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ColorBlendAdvanced, type = VkBool32, offset = 80, size = 4
    extendedDynamicState3ColorBlendAdvanced VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ProvokingVertexMode, type = VkBool32, offset = 84, size = 4
    extendedDynamicState3ProvokingVertexMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3LineRasterizationMode, type = VkBool32, offset = 88, size = 4
    extendedDynamicState3LineRasterizationMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3LineStippleEnable, type = VkBool32, offset = 92, size = 4
    extendedDynamicState3LineStippleEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3DepthClipNegativeOneToOne, type = VkBool32, offset = 96, size = 4
    extendedDynamicState3DepthClipNegativeOneToOne VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ViewportWScalingEnable, type = VkBool32, offset = 100, size = 4
    extendedDynamicState3ViewportWScalingEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ViewportSwizzle, type = VkBool32, offset = 104, size = 4
    extendedDynamicState3ViewportSwizzle VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageToColorEnable, type = VkBool32, offset = 108, size = 4
    extendedDynamicState3CoverageToColorEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageToColorLocation, type = VkBool32, offset = 112, size = 4
    extendedDynamicState3CoverageToColorLocation VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageModulationMode, type = VkBool32, offset = 116, size = 4
    extendedDynamicState3CoverageModulationMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageModulationTableEnable, type = VkBool32, offset = 120, size = 4
    extendedDynamicState3CoverageModulationTableEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageModulationTable, type = VkBool32, offset = 124, size = 4
    extendedDynamicState3CoverageModulationTable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageReductionMode, type = VkBool32, offset = 128, size = 4
    extendedDynamicState3CoverageReductionMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3RepresentativeFragmentTestEnable, type = VkBool32, offset = 132, size = 4
    extendedDynamicState3RepresentativeFragmentTestEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ShadingRateImageEnable, type = VkBool32, offset = 136, size = 4
    extendedDynamicState3ShadingRateImageEnable VkBool32 <>
VkPhysicalDeviceExtendedDynamicState3FeaturesEXT ends

; TYPEDEF VkPhysicalDeviceExtendedDynamicState3FeaturesEXT = struct VkPhysicalDeviceExtendedDynamicState3FeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExtendedDynamicState3FeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = extendedDynamicState3TessellationDomainOrigin, type = VkBool32, offset = 16, size = 4
    extendedDynamicState3TessellationDomainOrigin VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3DepthClampEnable, type = VkBool32, offset = 20, size = 4
    extendedDynamicState3DepthClampEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3PolygonMode, type = VkBool32, offset = 24, size = 4
    extendedDynamicState3PolygonMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3RasterizationSamples, type = VkBool32, offset = 28, size = 4
    extendedDynamicState3RasterizationSamples VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3SampleMask, type = VkBool32, offset = 32, size = 4
    extendedDynamicState3SampleMask VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3AlphaToCoverageEnable, type = VkBool32, offset = 36, size = 4
    extendedDynamicState3AlphaToCoverageEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3AlphaToOneEnable, type = VkBool32, offset = 40, size = 4
    extendedDynamicState3AlphaToOneEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3LogicOpEnable, type = VkBool32, offset = 44, size = 4
    extendedDynamicState3LogicOpEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ColorBlendEnable, type = VkBool32, offset = 48, size = 4
    extendedDynamicState3ColorBlendEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ColorBlendEquation, type = VkBool32, offset = 52, size = 4
    extendedDynamicState3ColorBlendEquation VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ColorWriteMask, type = VkBool32, offset = 56, size = 4
    extendedDynamicState3ColorWriteMask VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3RasterizationStream, type = VkBool32, offset = 60, size = 4
    extendedDynamicState3RasterizationStream VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ConservativeRasterizationMode, type = VkBool32, offset = 64, size = 4
    extendedDynamicState3ConservativeRasterizationMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ExtraPrimitiveOverestimationSize, type = VkBool32, offset = 68, size = 4
    extendedDynamicState3ExtraPrimitiveOverestimationSize VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3DepthClipEnable, type = VkBool32, offset = 72, size = 4
    extendedDynamicState3DepthClipEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3SampleLocationsEnable, type = VkBool32, offset = 76, size = 4
    extendedDynamicState3SampleLocationsEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ColorBlendAdvanced, type = VkBool32, offset = 80, size = 4
    extendedDynamicState3ColorBlendAdvanced VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ProvokingVertexMode, type = VkBool32, offset = 84, size = 4
    extendedDynamicState3ProvokingVertexMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3LineRasterizationMode, type = VkBool32, offset = 88, size = 4
    extendedDynamicState3LineRasterizationMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3LineStippleEnable, type = VkBool32, offset = 92, size = 4
    extendedDynamicState3LineStippleEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3DepthClipNegativeOneToOne, type = VkBool32, offset = 96, size = 4
    extendedDynamicState3DepthClipNegativeOneToOne VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ViewportWScalingEnable, type = VkBool32, offset = 100, size = 4
    extendedDynamicState3ViewportWScalingEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ViewportSwizzle, type = VkBool32, offset = 104, size = 4
    extendedDynamicState3ViewportSwizzle VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageToColorEnable, type = VkBool32, offset = 108, size = 4
    extendedDynamicState3CoverageToColorEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageToColorLocation, type = VkBool32, offset = 112, size = 4
    extendedDynamicState3CoverageToColorLocation VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageModulationMode, type = VkBool32, offset = 116, size = 4
    extendedDynamicState3CoverageModulationMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageModulationTableEnable, type = VkBool32, offset = 120, size = 4
    extendedDynamicState3CoverageModulationTableEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageModulationTable, type = VkBool32, offset = 124, size = 4
    extendedDynamicState3CoverageModulationTable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3CoverageReductionMode, type = VkBool32, offset = 128, size = 4
    extendedDynamicState3CoverageReductionMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3RepresentativeFragmentTestEnable, type = VkBool32, offset = 132, size = 4
    extendedDynamicState3RepresentativeFragmentTestEnable VkBool32 <>
;   TypeKind.ELABORATED
;   name = extendedDynamicState3ShadingRateImageEnable, type = VkBool32, offset = 136, size = 4
    extendedDynamicState3ShadingRateImageEnable VkBool32 <>
VkPhysicalDeviceExtendedDynamicState3FeaturesEXT ends

VkPhysicalDeviceExtendedDynamicState3PropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dynamicPrimitiveTopologyUnrestricted, type = VkBool32, offset = 16, size = 4
    dynamicPrimitiveTopologyUnrestricted VkBool32 <>
VkPhysicalDeviceExtendedDynamicState3PropertiesEXT ends

; TYPEDEF VkPhysicalDeviceExtendedDynamicState3PropertiesEXT = struct VkPhysicalDeviceExtendedDynamicState3PropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExtendedDynamicState3PropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dynamicPrimitiveTopologyUnrestricted, type = VkBool32, offset = 16, size = 4
    dynamicPrimitiveTopologyUnrestricted VkBool32 <>
VkPhysicalDeviceExtendedDynamicState3PropertiesEXT ends

VkColorBlendEquationEXT struct
;   TypeKind.ELABORATED
;   name = srcColorBlendFactor, type = VkBlendFactor, offset = 0, size = 4
    srcColorBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = dstColorBlendFactor, type = VkBlendFactor, offset = 4, size = 4
    dstColorBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = colorBlendOp, type = VkBlendOp, offset = 8, size = 4
    colorBlendOp VkBlendOp <>
;   TypeKind.ELABORATED
;   name = srcAlphaBlendFactor, type = VkBlendFactor, offset = 12, size = 4
    srcAlphaBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = dstAlphaBlendFactor, type = VkBlendFactor, offset = 16, size = 4
    dstAlphaBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = alphaBlendOp, type = VkBlendOp, offset = 20, size = 4
    alphaBlendOp VkBlendOp <>
VkColorBlendEquationEXT ends

; TYPEDEF VkColorBlendEquationEXT = struct VkColorBlendEquationEXT, TypeKind.ELABORATED
; remove struct typedef

VkColorBlendEquationEXT struct
;   TypeKind.ELABORATED
;   name = srcColorBlendFactor, type = VkBlendFactor, offset = 0, size = 4
    srcColorBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = dstColorBlendFactor, type = VkBlendFactor, offset = 4, size = 4
    dstColorBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = colorBlendOp, type = VkBlendOp, offset = 8, size = 4
    colorBlendOp VkBlendOp <>
;   TypeKind.ELABORATED
;   name = srcAlphaBlendFactor, type = VkBlendFactor, offset = 12, size = 4
    srcAlphaBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = dstAlphaBlendFactor, type = VkBlendFactor, offset = 16, size = 4
    dstAlphaBlendFactor VkBlendFactor <>
;   TypeKind.ELABORATED
;   name = alphaBlendOp, type = VkBlendOp, offset = 20, size = 4
    alphaBlendOp VkBlendOp <>
VkColorBlendEquationEXT ends

VkColorBlendAdvancedEXT struct
;   TypeKind.ELABORATED
;   name = advancedBlendOp, type = VkBlendOp, offset = 0, size = 4
    advancedBlendOp VkBlendOp <>
;   TypeKind.ELABORATED
;   name = srcPremultiplied, type = VkBool32, offset = 4, size = 4
    srcPremultiplied VkBool32 <>
;   TypeKind.ELABORATED
;   name = dstPremultiplied, type = VkBool32, offset = 8, size = 4
    dstPremultiplied VkBool32 <>
;   TypeKind.ELABORATED
;   name = blendOverlap, type = VkBlendOverlapEXT, offset = 12, size = 4
    blendOverlap VkBlendOverlapEXT <>
;   TypeKind.ELABORATED
;   name = clampResults, type = VkBool32, offset = 16, size = 4
    clampResults VkBool32 <>
VkColorBlendAdvancedEXT ends

; TYPEDEF VkColorBlendAdvancedEXT = struct VkColorBlendAdvancedEXT, TypeKind.ELABORATED
; remove struct typedef

VkColorBlendAdvancedEXT struct
;   TypeKind.ELABORATED
;   name = advancedBlendOp, type = VkBlendOp, offset = 0, size = 4
    advancedBlendOp VkBlendOp <>
;   TypeKind.ELABORATED
;   name = srcPremultiplied, type = VkBool32, offset = 4, size = 4
    srcPremultiplied VkBool32 <>
;   TypeKind.ELABORATED
;   name = dstPremultiplied, type = VkBool32, offset = 8, size = 4
    dstPremultiplied VkBool32 <>
;   TypeKind.ELABORATED
;   name = blendOverlap, type = VkBlendOverlapEXT, offset = 12, size = 4
    blendOverlap VkBlendOverlapEXT <>
;   TypeKind.ELABORATED
;   name = clampResults, type = VkBool32, offset = 16, size = 4
    clampResults VkBool32 <>
VkColorBlendAdvancedEXT ends

; TYPEDEF PFN_vkCmdSetDepthClampEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthClampEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetPolygonModeEXT = void (*)(VkCommandBuffer, VkPolygonMode) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetPolygonModeEXT typedef qword

; TYPEDEF PFN_vkCmdSetRasterizationSamplesEXT = void (*)(VkCommandBuffer, VkSampleCountFlagBits) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetRasterizationSamplesEXT typedef qword

; TYPEDEF PFN_vkCmdSetSampleMaskEXT = void (*)(VkCommandBuffer, VkSampleCountFlagBits, const VkSampleMask *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetSampleMaskEXT typedef qword

; TYPEDEF PFN_vkCmdSetAlphaToCoverageEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetAlphaToCoverageEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetAlphaToOneEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetAlphaToOneEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetLogicOpEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetLogicOpEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetColorBlendEnableEXT = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkBool32 *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetColorBlendEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetColorBlendEquationEXT = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkColorBlendEquationEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetColorBlendEquationEXT typedef qword

; TYPEDEF PFN_vkCmdSetColorWriteMaskEXT = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkColorComponentFlags *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetColorWriteMaskEXT typedef qword

; TYPEDEF PFN_vkCmdSetTessellationDomainOriginEXT = void (*)(VkCommandBuffer, VkTessellationDomainOrigin) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetTessellationDomainOriginEXT typedef qword

; TYPEDEF PFN_vkCmdSetRasterizationStreamEXT = void (*)(VkCommandBuffer, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetRasterizationStreamEXT typedef qword

; TYPEDEF PFN_vkCmdSetConservativeRasterizationModeEXT = void (*)(VkCommandBuffer, VkConservativeRasterizationModeEXT) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetConservativeRasterizationModeEXT typedef qword

; TYPEDEF PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT = void (*)(VkCommandBuffer, float) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT typedef qword

; TYPEDEF PFN_vkCmdSetDepthClipEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthClipEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetSampleLocationsEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetSampleLocationsEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetColorBlendAdvancedEXT = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkColorBlendAdvancedEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetColorBlendAdvancedEXT typedef qword

; TYPEDEF PFN_vkCmdSetProvokingVertexModeEXT = void (*)(VkCommandBuffer, VkProvokingVertexModeEXT) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetProvokingVertexModeEXT typedef qword

; TYPEDEF PFN_vkCmdSetLineRasterizationModeEXT = void (*)(VkCommandBuffer, VkLineRasterizationModeEXT) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetLineRasterizationModeEXT typedef qword

; TYPEDEF PFN_vkCmdSetLineStippleEnableEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetLineStippleEnableEXT typedef qword

; TYPEDEF PFN_vkCmdSetDepthClipNegativeOneToOneEXT = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetDepthClipNegativeOneToOneEXT typedef qword

; TYPEDEF PFN_vkCmdSetViewportWScalingEnableNV = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetViewportWScalingEnableNV typedef qword

; TYPEDEF PFN_vkCmdSetViewportSwizzleNV = void (*)(VkCommandBuffer, uint32_t, uint32_t, const VkViewportSwizzleNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetViewportSwizzleNV typedef qword

; TYPEDEF PFN_vkCmdSetCoverageToColorEnableNV = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetCoverageToColorEnableNV typedef qword

; TYPEDEF PFN_vkCmdSetCoverageToColorLocationNV = void (*)(VkCommandBuffer, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetCoverageToColorLocationNV typedef qword

; TYPEDEF PFN_vkCmdSetCoverageModulationModeNV = void (*)(VkCommandBuffer, VkCoverageModulationModeNV) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetCoverageModulationModeNV typedef qword

; TYPEDEF PFN_vkCmdSetCoverageModulationTableEnableNV = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetCoverageModulationTableEnableNV typedef qword

; TYPEDEF PFN_vkCmdSetCoverageModulationTableNV = void (*)(VkCommandBuffer, uint32_t, const float *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetCoverageModulationTableNV typedef qword

; TYPEDEF PFN_vkCmdSetShadingRateImageEnableNV = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetShadingRateImageEnableNV typedef qword

; TYPEDEF PFN_vkCmdSetRepresentativeFragmentTestEnableNV = void (*)(VkCommandBuffer, VkBool32) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetRepresentativeFragmentTestEnableNV typedef qword

; TYPEDEF PFN_vkCmdSetCoverageReductionModeNV = void (*)(VkCommandBuffer, VkCoverageReductionModeNV) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetCoverageReductionModeNV typedef qword

; void vkCmdSetDepthClampEnableEXT(VkCommandBuffer commandBuffer, VkBool32 depthClampEnable)
vkCmdSetDepthClampEnableEXT qword ?

; void vkCmdSetPolygonModeEXT(VkCommandBuffer commandBuffer, VkPolygonMode polygonMode)
vkCmdSetPolygonModeEXT qword ?

; void vkCmdSetRasterizationSamplesEXT(VkCommandBuffer commandBuffer, VkSampleCountFlagBits rasterizationSamples)
vkCmdSetRasterizationSamplesEXT qword ?

; void vkCmdSetSampleMaskEXT(VkCommandBuffer commandBuffer, VkSampleCountFlagBits samples, const VkSampleMask * pSampleMask)
vkCmdSetSampleMaskEXT qword ?

; void vkCmdSetAlphaToCoverageEnableEXT(VkCommandBuffer commandBuffer, VkBool32 alphaToCoverageEnable)
vkCmdSetAlphaToCoverageEnableEXT qword ?

; void vkCmdSetAlphaToOneEnableEXT(VkCommandBuffer commandBuffer, VkBool32 alphaToOneEnable)
vkCmdSetAlphaToOneEnableEXT qword ?

; void vkCmdSetLogicOpEnableEXT(VkCommandBuffer commandBuffer, VkBool32 logicOpEnable)
vkCmdSetLogicOpEnableEXT qword ?

; void vkCmdSetColorBlendEnableEXT(VkCommandBuffer commandBuffer, uint32_t firstAttachment, uint32_t attachmentCount, const VkBool32 * pColorBlendEnables)
vkCmdSetColorBlendEnableEXT qword ?

; void vkCmdSetColorBlendEquationEXT(VkCommandBuffer commandBuffer, uint32_t firstAttachment, uint32_t attachmentCount, const VkColorBlendEquationEXT * pColorBlendEquations)
vkCmdSetColorBlendEquationEXT qword ?

; void vkCmdSetColorWriteMaskEXT(VkCommandBuffer commandBuffer, uint32_t firstAttachment, uint32_t attachmentCount, const VkColorComponentFlags * pColorWriteMasks)
vkCmdSetColorWriteMaskEXT qword ?

; void vkCmdSetTessellationDomainOriginEXT(VkCommandBuffer commandBuffer, VkTessellationDomainOrigin domainOrigin)
vkCmdSetTessellationDomainOriginEXT qword ?

; void vkCmdSetRasterizationStreamEXT(VkCommandBuffer commandBuffer, uint32_t rasterizationStream)
vkCmdSetRasterizationStreamEXT qword ?

; void vkCmdSetConservativeRasterizationModeEXT(VkCommandBuffer commandBuffer, VkConservativeRasterizationModeEXT conservativeRasterizationMode)
vkCmdSetConservativeRasterizationModeEXT qword ?

; void vkCmdSetExtraPrimitiveOverestimationSizeEXT(VkCommandBuffer commandBuffer, float extraPrimitiveOverestimationSize)
vkCmdSetExtraPrimitiveOverestimationSizeEXT qword ?

; void vkCmdSetDepthClipEnableEXT(VkCommandBuffer commandBuffer, VkBool32 depthClipEnable)
vkCmdSetDepthClipEnableEXT qword ?

; void vkCmdSetSampleLocationsEnableEXT(VkCommandBuffer commandBuffer, VkBool32 sampleLocationsEnable)
vkCmdSetSampleLocationsEnableEXT qword ?

; void vkCmdSetColorBlendAdvancedEXT(VkCommandBuffer commandBuffer, uint32_t firstAttachment, uint32_t attachmentCount, const VkColorBlendAdvancedEXT * pColorBlendAdvanced)
vkCmdSetColorBlendAdvancedEXT qword ?

; void vkCmdSetProvokingVertexModeEXT(VkCommandBuffer commandBuffer, VkProvokingVertexModeEXT provokingVertexMode)
vkCmdSetProvokingVertexModeEXT qword ?

; void vkCmdSetLineRasterizationModeEXT(VkCommandBuffer commandBuffer, VkLineRasterizationModeEXT lineRasterizationMode)
vkCmdSetLineRasterizationModeEXT qword ?

; void vkCmdSetLineStippleEnableEXT(VkCommandBuffer commandBuffer, VkBool32 stippledLineEnable)
vkCmdSetLineStippleEnableEXT qword ?

; void vkCmdSetDepthClipNegativeOneToOneEXT(VkCommandBuffer commandBuffer, VkBool32 negativeOneToOne)
vkCmdSetDepthClipNegativeOneToOneEXT qword ?

; void vkCmdSetViewportWScalingEnableNV(VkCommandBuffer commandBuffer, VkBool32 viewportWScalingEnable)
vkCmdSetViewportWScalingEnableNV qword ?

; void vkCmdSetViewportSwizzleNV(VkCommandBuffer commandBuffer, uint32_t firstViewport, uint32_t viewportCount, const VkViewportSwizzleNV * pViewportSwizzles)
vkCmdSetViewportSwizzleNV qword ?

; void vkCmdSetCoverageToColorEnableNV(VkCommandBuffer commandBuffer, VkBool32 coverageToColorEnable)
vkCmdSetCoverageToColorEnableNV qword ?

; void vkCmdSetCoverageToColorLocationNV(VkCommandBuffer commandBuffer, uint32_t coverageToColorLocation)
vkCmdSetCoverageToColorLocationNV qword ?

; void vkCmdSetCoverageModulationModeNV(VkCommandBuffer commandBuffer, VkCoverageModulationModeNV coverageModulationMode)
vkCmdSetCoverageModulationModeNV qword ?

; void vkCmdSetCoverageModulationTableEnableNV(VkCommandBuffer commandBuffer, VkBool32 coverageModulationTableEnable)
vkCmdSetCoverageModulationTableEnableNV qword ?

; void vkCmdSetCoverageModulationTableNV(VkCommandBuffer commandBuffer, uint32_t coverageModulationTableCount, const float * pCoverageModulationTable)
vkCmdSetCoverageModulationTableNV qword ?

; void vkCmdSetShadingRateImageEnableNV(VkCommandBuffer commandBuffer, VkBool32 shadingRateImageEnable)
vkCmdSetShadingRateImageEnableNV qword ?

; void vkCmdSetRepresentativeFragmentTestEnableNV(VkCommandBuffer commandBuffer, VkBool32 representativeFragmentTestEnable)
vkCmdSetRepresentativeFragmentTestEnableNV qword ?

; void vkCmdSetCoverageReductionModeNV(VkCommandBuffer commandBuffer, VkCoverageReductionModeNV coverageReductionMode)
vkCmdSetCoverageReductionModeNV qword ?

; enum VkSubpassMergeStatusEXT {
    VK_SUBPASS_MERGE_STATUS_MERGED_EXT equ 0
    VK_SUBPASS_MERGE_STATUS_DISALLOWED_EXT equ 1
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SIDE_EFFECTS_EXT equ 2
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SAMPLES_MISMATCH_EXT equ 3
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_VIEWS_MISMATCH_EXT equ 4
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_ALIASING_EXT equ 5
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_DEPENDENCIES_EXT equ 6
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_INCOMPATIBLE_INPUT_ATTACHMENT_EXT equ 7
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_TOO_MANY_ATTACHMENTS_EXT equ 8
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_INSUFFICIENT_STORAGE_EXT equ 9
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_DEPTH_STENCIL_COUNT_EXT equ 10
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_RESOLVE_ATTACHMENT_REUSE_EXT equ 11
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SINGLE_SUBPASS_EXT equ 12
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_UNSPECIFIED_EXT equ 13
    VK_SUBPASS_MERGE_STATUS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkSubpassMergeStatusEXT = enum VkSubpassMergeStatusEXT, TypeKind.ELABORATED
VkSubpassMergeStatusEXT typedef dword

; enum VkSubpassMergeStatusEXT {
    VK_SUBPASS_MERGE_STATUS_MERGED_EXT equ 0
    VK_SUBPASS_MERGE_STATUS_DISALLOWED_EXT equ 1
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SIDE_EFFECTS_EXT equ 2
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SAMPLES_MISMATCH_EXT equ 3
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_VIEWS_MISMATCH_EXT equ 4
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_ALIASING_EXT equ 5
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_DEPENDENCIES_EXT equ 6
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_INCOMPATIBLE_INPUT_ATTACHMENT_EXT equ 7
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_TOO_MANY_ATTACHMENTS_EXT equ 8
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_INSUFFICIENT_STORAGE_EXT equ 9
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_DEPTH_STENCIL_COUNT_EXT equ 10
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_RESOLVE_ATTACHMENT_REUSE_EXT equ 11
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SINGLE_SUBPASS_EXT equ 12
    VK_SUBPASS_MERGE_STATUS_NOT_MERGED_UNSPECIFIED_EXT equ 13
    VK_SUBPASS_MERGE_STATUS_MAX_ENUM_EXT equ 2147483647
; }

VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subpassMergeFeedback, type = VkBool32, offset = 16, size = 4
    subpassMergeFeedback VkBool32 <>
VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT = struct VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = subpassMergeFeedback, type = VkBool32, offset = 16, size = 4
    subpassMergeFeedback VkBool32 <>
VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT ends

VkRenderPassCreationControlEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = disallowMerging, type = VkBool32, offset = 16, size = 4
    disallowMerging VkBool32 <>
VkRenderPassCreationControlEXT ends

; TYPEDEF VkRenderPassCreationControlEXT = struct VkRenderPassCreationControlEXT, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassCreationControlEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = disallowMerging, type = VkBool32, offset = 16, size = 4
    disallowMerging VkBool32 <>
VkRenderPassCreationControlEXT ends

VkRenderPassCreationFeedbackInfoEXT struct
;   TypeKind.ELABORATED
;   name = postMergeSubpassCount, type = uint32_t, offset = 0, size = 4
    postMergeSubpassCount dword ?
VkRenderPassCreationFeedbackInfoEXT ends

; TYPEDEF VkRenderPassCreationFeedbackInfoEXT = struct VkRenderPassCreationFeedbackInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassCreationFeedbackInfoEXT struct
;   TypeKind.ELABORATED
;   name = postMergeSubpassCount, type = uint32_t, offset = 0, size = 4
    postMergeSubpassCount dword ?
VkRenderPassCreationFeedbackInfoEXT ends

VkRenderPassCreationFeedbackCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pRenderPassFeedback, type = VkRenderPassCreationFeedbackInfoEXT *, offset = 16, size = 8
    pRenderPassFeedback qword ?
VkRenderPassCreationFeedbackCreateInfoEXT ends

; TYPEDEF VkRenderPassCreationFeedbackCreateInfoEXT = struct VkRenderPassCreationFeedbackCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassCreationFeedbackCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pRenderPassFeedback, type = VkRenderPassCreationFeedbackInfoEXT *, offset = 16, size = 8
    pRenderPassFeedback qword ?
VkRenderPassCreationFeedbackCreateInfoEXT ends

VkRenderPassSubpassFeedbackInfoEXT struct
;   TypeKind.ELABORATED
;   name = subpassMergeStatus, type = VkSubpassMergeStatusEXT, offset = 0, size = 4
    subpassMergeStatus VkSubpassMergeStatusEXT <>
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 4, size = 256
    description byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = postMergeIndex, type = uint32_t, offset = 260, size = 4
    postMergeIndex dword ?
VkRenderPassSubpassFeedbackInfoEXT ends

; TYPEDEF VkRenderPassSubpassFeedbackInfoEXT = struct VkRenderPassSubpassFeedbackInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassSubpassFeedbackInfoEXT struct
;   TypeKind.ELABORATED
;   name = subpassMergeStatus, type = VkSubpassMergeStatusEXT, offset = 0, size = 4
    subpassMergeStatus VkSubpassMergeStatusEXT <>
;   TypeKind.CONSTANTARRAY
;   name = description, type = char[256], offset = 4, size = 256
    description byte 256 dup(?)
;   TypeKind.ELABORATED
;   name = postMergeIndex, type = uint32_t, offset = 260, size = 4
    postMergeIndex dword ?
VkRenderPassSubpassFeedbackInfoEXT ends

VkRenderPassSubpassFeedbackCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pSubpassFeedback, type = VkRenderPassSubpassFeedbackInfoEXT *, offset = 16, size = 8
    pSubpassFeedback qword ?
VkRenderPassSubpassFeedbackCreateInfoEXT ends

; TYPEDEF VkRenderPassSubpassFeedbackCreateInfoEXT = struct VkRenderPassSubpassFeedbackCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkRenderPassSubpassFeedbackCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pSubpassFeedback, type = VkRenderPassSubpassFeedbackInfoEXT *, offset = 16, size = 8
    pSubpassFeedback qword ?
VkRenderPassSubpassFeedbackCreateInfoEXT ends

; enum VkDirectDriverLoadingModeLUNARG {
    VK_DIRECT_DRIVER_LOADING_MODE_EXCLUSIVE_LUNARG equ 0
    VK_DIRECT_DRIVER_LOADING_MODE_INCLUSIVE_LUNARG equ 1
    VK_DIRECT_DRIVER_LOADING_MODE_MAX_ENUM_LUNARG equ 2147483647
; }

; TYPEDEF VkDirectDriverLoadingModeLUNARG = enum VkDirectDriverLoadingModeLUNARG, TypeKind.ELABORATED
VkDirectDriverLoadingModeLUNARG typedef dword

; enum VkDirectDriverLoadingModeLUNARG {
    VK_DIRECT_DRIVER_LOADING_MODE_EXCLUSIVE_LUNARG equ 0
    VK_DIRECT_DRIVER_LOADING_MODE_INCLUSIVE_LUNARG equ 1
    VK_DIRECT_DRIVER_LOADING_MODE_MAX_ENUM_LUNARG equ 2147483647
; }

; TYPEDEF VkDirectDriverLoadingFlagsLUNARG = VkFlags, TypeKind.ELABORATED
VkDirectDriverLoadingFlagsLUNARG typedef dword

; TYPEDEF PFN_vkGetInstanceProcAddrLUNARG = PFN_vkVoidFunction (*)(VkInstance, const char *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetInstanceProcAddrLUNARG typedef qword

VkDirectDriverLoadingInfoLUNARG struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDirectDriverLoadingFlagsLUNARG, offset = 16, size = 4
    flags VkDirectDriverLoadingFlagsLUNARG <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pfnGetInstanceProcAddr, type = PFN_vkGetInstanceProcAddrLUNARG, offset = 24, size = 8
    pfnGetInstanceProcAddr PFN_vkGetInstanceProcAddrLUNARG <>
VkDirectDriverLoadingInfoLUNARG ends

; TYPEDEF VkDirectDriverLoadingInfoLUNARG = struct VkDirectDriverLoadingInfoLUNARG, TypeKind.ELABORATED
; remove struct typedef

VkDirectDriverLoadingInfoLUNARG struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkDirectDriverLoadingFlagsLUNARG, offset = 16, size = 4
    flags VkDirectDriverLoadingFlagsLUNARG <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = pfnGetInstanceProcAddr, type = PFN_vkGetInstanceProcAddrLUNARG, offset = 24, size = 8
    pfnGetInstanceProcAddr PFN_vkGetInstanceProcAddrLUNARG <>
VkDirectDriverLoadingInfoLUNARG ends

VkDirectDriverLoadingListLUNARG struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = mode, type = VkDirectDriverLoadingModeLUNARG, offset = 16, size = 4
    mode VkDirectDriverLoadingModeLUNARG <>
;   TypeKind.ELABORATED
;   name = driverCount, type = uint32_t, offset = 20, size = 4
    driverCount dword ?
;   TypeKind.POINTER
;   name = pDrivers, type = const VkDirectDriverLoadingInfoLUNARG *, offset = 24, size = 8
    pDrivers qword ?
VkDirectDriverLoadingListLUNARG ends

; TYPEDEF VkDirectDriverLoadingListLUNARG = struct VkDirectDriverLoadingListLUNARG, TypeKind.ELABORATED
; remove struct typedef

VkDirectDriverLoadingListLUNARG struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = mode, type = VkDirectDriverLoadingModeLUNARG, offset = 16, size = 4
    mode VkDirectDriverLoadingModeLUNARG <>
;   TypeKind.ELABORATED
;   name = driverCount, type = uint32_t, offset = 20, size = 4
    driverCount dword ?
;   TypeKind.POINTER
;   name = pDrivers, type = const VkDirectDriverLoadingInfoLUNARG *, offset = 24, size = 8
    pDrivers qword ?
VkDirectDriverLoadingListLUNARG ends

VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderModuleIdentifier, type = VkBool32, offset = 16, size = 4
    shaderModuleIdentifier VkBool32 <>
VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT = struct VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderModuleIdentifier, type = VkBool32, offset = 16, size = 4
    shaderModuleIdentifier VkBool32 <>
VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT ends

VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = shaderModuleIdentifierAlgorithmUUID, type = uint8_t[16], offset = 16, size = 16
    shaderModuleIdentifierAlgorithmUUID byte 16 dup(?)
VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT = struct VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = shaderModuleIdentifierAlgorithmUUID, type = uint8_t[16], offset = 16, size = 16
    shaderModuleIdentifierAlgorithmUUID byte 16 dup(?)
VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT ends

VkPipelineShaderStageModuleIdentifierCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = identifierSize, type = uint32_t, offset = 16, size = 4
    identifierSize dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pIdentifier, type = const uint8_t *, offset = 24, size = 8
    pIdentifier qword ?
VkPipelineShaderStageModuleIdentifierCreateInfoEXT ends

; TYPEDEF VkPipelineShaderStageModuleIdentifierCreateInfoEXT = struct VkPipelineShaderStageModuleIdentifierCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkPipelineShaderStageModuleIdentifierCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = identifierSize, type = uint32_t, offset = 16, size = 4
    identifierSize dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pIdentifier, type = const uint8_t *, offset = 24, size = 8
    pIdentifier qword ?
VkPipelineShaderStageModuleIdentifierCreateInfoEXT ends

VkShaderModuleIdentifierEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = identifierSize, type = uint32_t, offset = 16, size = 4
    identifierSize dword ?
;   TypeKind.CONSTANTARRAY
;   name = identifier, type = uint8_t[32], offset = 20, size = 32
    identifier byte 32 dup(?)
VkShaderModuleIdentifierEXT ends

; TYPEDEF VkShaderModuleIdentifierEXT = struct VkShaderModuleIdentifierEXT, TypeKind.ELABORATED
; remove struct typedef

VkShaderModuleIdentifierEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = identifierSize, type = uint32_t, offset = 16, size = 4
    identifierSize dword ?
;   TypeKind.CONSTANTARRAY
;   name = identifier, type = uint8_t[32], offset = 20, size = 32
    identifier byte 32 dup(?)
VkShaderModuleIdentifierEXT ends

; TYPEDEF PFN_vkGetShaderModuleIdentifierEXT = void (*)(VkDevice, VkShaderModule, VkShaderModuleIdentifierEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetShaderModuleIdentifierEXT typedef qword

; TYPEDEF PFN_vkGetShaderModuleCreateInfoIdentifierEXT = void (*)(VkDevice, const VkShaderModuleCreateInfo *, VkShaderModuleIdentifierEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetShaderModuleCreateInfoIdentifierEXT typedef qword

; void vkGetShaderModuleIdentifierEXT(VkDevice device, VkShaderModule shaderModule, VkShaderModuleIdentifierEXT * pIdentifier)
vkGetShaderModuleIdentifierEXT qword ?

; void vkGetShaderModuleCreateInfoIdentifierEXT(VkDevice device, const VkShaderModuleCreateInfo * pCreateInfo, VkShaderModuleIdentifierEXT * pIdentifier)
vkGetShaderModuleCreateInfoIdentifierEXT qword ?

; TYPEDEF VkOpticalFlowSessionNV = struct VkOpticalFlowSessionNV_T *, TypeKind.POINTER
VkOpticalFlowSessionNV typedef qword

; enum VkOpticalFlowPerformanceLevelNV {
    VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_UNKNOWN_NV equ 0
    VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_SLOW_NV equ 1
    VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_MEDIUM_NV equ 2
    VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_FAST_NV equ 3
    VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkOpticalFlowPerformanceLevelNV = enum VkOpticalFlowPerformanceLevelNV, TypeKind.ELABORATED
VkOpticalFlowPerformanceLevelNV typedef dword

; enum VkOpticalFlowPerformanceLevelNV {
    VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_UNKNOWN_NV equ 0
    VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_SLOW_NV equ 1
    VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_MEDIUM_NV equ 2
    VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_FAST_NV equ 3
    VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_MAX_ENUM_NV equ 2147483647
; }

; enum VkOpticalFlowSessionBindingPointNV {
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_UNKNOWN_NV equ 0
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_INPUT_NV equ 1
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_REFERENCE_NV equ 2
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_HINT_NV equ 3
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_FLOW_VECTOR_NV equ 4
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_BACKWARD_FLOW_VECTOR_NV equ 5
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_COST_NV equ 6
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_BACKWARD_COST_NV equ 7
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_GLOBAL_FLOW_NV equ 8
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkOpticalFlowSessionBindingPointNV = enum VkOpticalFlowSessionBindingPointNV, TypeKind.ELABORATED
VkOpticalFlowSessionBindingPointNV typedef dword

; enum VkOpticalFlowSessionBindingPointNV {
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_UNKNOWN_NV equ 0
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_INPUT_NV equ 1
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_REFERENCE_NV equ 2
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_HINT_NV equ 3
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_FLOW_VECTOR_NV equ 4
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_BACKWARD_FLOW_VECTOR_NV equ 5
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_COST_NV equ 6
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_BACKWARD_COST_NV equ 7
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_GLOBAL_FLOW_NV equ 8
    VK_OPTICAL_FLOW_SESSION_BINDING_POINT_MAX_ENUM_NV equ 2147483647
; }

; enum VkOpticalFlowGridSizeFlagBitsNV {
    VK_OPTICAL_FLOW_GRID_SIZE_UNKNOWN_NV equ 0
    VK_OPTICAL_FLOW_GRID_SIZE_1X1_BIT_NV equ 1
    VK_OPTICAL_FLOW_GRID_SIZE_2X2_BIT_NV equ 2
    VK_OPTICAL_FLOW_GRID_SIZE_4X4_BIT_NV equ 4
    VK_OPTICAL_FLOW_GRID_SIZE_8X8_BIT_NV equ 8
    VK_OPTICAL_FLOW_GRID_SIZE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkOpticalFlowGridSizeFlagBitsNV = enum VkOpticalFlowGridSizeFlagBitsNV, TypeKind.ELABORATED
VkOpticalFlowGridSizeFlagBitsNV typedef dword

; enum VkOpticalFlowGridSizeFlagBitsNV {
    VK_OPTICAL_FLOW_GRID_SIZE_UNKNOWN_NV equ 0
    VK_OPTICAL_FLOW_GRID_SIZE_1X1_BIT_NV equ 1
    VK_OPTICAL_FLOW_GRID_SIZE_2X2_BIT_NV equ 2
    VK_OPTICAL_FLOW_GRID_SIZE_4X4_BIT_NV equ 4
    VK_OPTICAL_FLOW_GRID_SIZE_8X8_BIT_NV equ 8
    VK_OPTICAL_FLOW_GRID_SIZE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkOpticalFlowGridSizeFlagsNV = VkFlags, TypeKind.ELABORATED
VkOpticalFlowGridSizeFlagsNV typedef dword

; enum VkOpticalFlowUsageFlagBitsNV {
    VK_OPTICAL_FLOW_USAGE_UNKNOWN_NV equ 0
    VK_OPTICAL_FLOW_USAGE_INPUT_BIT_NV equ 1
    VK_OPTICAL_FLOW_USAGE_OUTPUT_BIT_NV equ 2
    VK_OPTICAL_FLOW_USAGE_HINT_BIT_NV equ 4
    VK_OPTICAL_FLOW_USAGE_COST_BIT_NV equ 8
    VK_OPTICAL_FLOW_USAGE_GLOBAL_FLOW_BIT_NV equ 16
    VK_OPTICAL_FLOW_USAGE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkOpticalFlowUsageFlagBitsNV = enum VkOpticalFlowUsageFlagBitsNV, TypeKind.ELABORATED
VkOpticalFlowUsageFlagBitsNV typedef dword

; enum VkOpticalFlowUsageFlagBitsNV {
    VK_OPTICAL_FLOW_USAGE_UNKNOWN_NV equ 0
    VK_OPTICAL_FLOW_USAGE_INPUT_BIT_NV equ 1
    VK_OPTICAL_FLOW_USAGE_OUTPUT_BIT_NV equ 2
    VK_OPTICAL_FLOW_USAGE_HINT_BIT_NV equ 4
    VK_OPTICAL_FLOW_USAGE_COST_BIT_NV equ 8
    VK_OPTICAL_FLOW_USAGE_GLOBAL_FLOW_BIT_NV equ 16
    VK_OPTICAL_FLOW_USAGE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkOpticalFlowUsageFlagsNV = VkFlags, TypeKind.ELABORATED
VkOpticalFlowUsageFlagsNV typedef dword

; enum VkOpticalFlowSessionCreateFlagBitsNV {
    VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_HINT_BIT_NV equ 1
    VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_COST_BIT_NV equ 2
    VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_GLOBAL_FLOW_BIT_NV equ 4
    VK_OPTICAL_FLOW_SESSION_CREATE_ALLOW_REGIONS_BIT_NV equ 8
    VK_OPTICAL_FLOW_SESSION_CREATE_BOTH_DIRECTIONS_BIT_NV equ 16
    VK_OPTICAL_FLOW_SESSION_CREATE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkOpticalFlowSessionCreateFlagBitsNV = enum VkOpticalFlowSessionCreateFlagBitsNV, TypeKind.ELABORATED
VkOpticalFlowSessionCreateFlagBitsNV typedef dword

; enum VkOpticalFlowSessionCreateFlagBitsNV {
    VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_HINT_BIT_NV equ 1
    VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_COST_BIT_NV equ 2
    VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_GLOBAL_FLOW_BIT_NV equ 4
    VK_OPTICAL_FLOW_SESSION_CREATE_ALLOW_REGIONS_BIT_NV equ 8
    VK_OPTICAL_FLOW_SESSION_CREATE_BOTH_DIRECTIONS_BIT_NV equ 16
    VK_OPTICAL_FLOW_SESSION_CREATE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkOpticalFlowSessionCreateFlagsNV = VkFlags, TypeKind.ELABORATED
VkOpticalFlowSessionCreateFlagsNV typedef dword

; enum VkOpticalFlowExecuteFlagBitsNV {
    VK_OPTICAL_FLOW_EXECUTE_DISABLE_TEMPORAL_HINTS_BIT_NV equ 1
    VK_OPTICAL_FLOW_EXECUTE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkOpticalFlowExecuteFlagBitsNV = enum VkOpticalFlowExecuteFlagBitsNV, TypeKind.ELABORATED
VkOpticalFlowExecuteFlagBitsNV typedef dword

; enum VkOpticalFlowExecuteFlagBitsNV {
    VK_OPTICAL_FLOW_EXECUTE_DISABLE_TEMPORAL_HINTS_BIT_NV equ 1
    VK_OPTICAL_FLOW_EXECUTE_FLAG_BITS_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkOpticalFlowExecuteFlagsNV = VkFlags, TypeKind.ELABORATED
VkOpticalFlowExecuteFlagsNV typedef dword

VkPhysicalDeviceOpticalFlowFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = opticalFlow, type = VkBool32, offset = 16, size = 4
    opticalFlow VkBool32 <>
VkPhysicalDeviceOpticalFlowFeaturesNV ends

; TYPEDEF VkPhysicalDeviceOpticalFlowFeaturesNV = struct VkPhysicalDeviceOpticalFlowFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceOpticalFlowFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = opticalFlow, type = VkBool32, offset = 16, size = 4
    opticalFlow VkBool32 <>
VkPhysicalDeviceOpticalFlowFeaturesNV ends

VkPhysicalDeviceOpticalFlowPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportedOutputGridSizes, type = VkOpticalFlowGridSizeFlagsNV, offset = 16, size = 4
    supportedOutputGridSizes VkOpticalFlowGridSizeFlagsNV <>
;   TypeKind.ELABORATED
;   name = supportedHintGridSizes, type = VkOpticalFlowGridSizeFlagsNV, offset = 20, size = 4
    supportedHintGridSizes VkOpticalFlowGridSizeFlagsNV <>
;   TypeKind.ELABORATED
;   name = hintSupported, type = VkBool32, offset = 24, size = 4
    hintSupported VkBool32 <>
;   TypeKind.ELABORATED
;   name = costSupported, type = VkBool32, offset = 28, size = 4
    costSupported VkBool32 <>
;   TypeKind.ELABORATED
;   name = bidirectionalFlowSupported, type = VkBool32, offset = 32, size = 4
    bidirectionalFlowSupported VkBool32 <>
;   TypeKind.ELABORATED
;   name = globalFlowSupported, type = VkBool32, offset = 36, size = 4
    globalFlowSupported VkBool32 <>
;   TypeKind.ELABORATED
;   name = minWidth, type = uint32_t, offset = 40, size = 4
    minWidth dword ?
;   TypeKind.ELABORATED
;   name = minHeight, type = uint32_t, offset = 44, size = 4
    minHeight dword ?
;   TypeKind.ELABORATED
;   name = maxWidth, type = uint32_t, offset = 48, size = 4
    maxWidth dword ?
;   TypeKind.ELABORATED
;   name = maxHeight, type = uint32_t, offset = 52, size = 4
    maxHeight dword ?
;   TypeKind.ELABORATED
;   name = maxNumRegionsOfInterest, type = uint32_t, offset = 56, size = 4
    maxNumRegionsOfInterest dword ?
VkPhysicalDeviceOpticalFlowPropertiesNV ends

; TYPEDEF VkPhysicalDeviceOpticalFlowPropertiesNV = struct VkPhysicalDeviceOpticalFlowPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceOpticalFlowPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = supportedOutputGridSizes, type = VkOpticalFlowGridSizeFlagsNV, offset = 16, size = 4
    supportedOutputGridSizes VkOpticalFlowGridSizeFlagsNV <>
;   TypeKind.ELABORATED
;   name = supportedHintGridSizes, type = VkOpticalFlowGridSizeFlagsNV, offset = 20, size = 4
    supportedHintGridSizes VkOpticalFlowGridSizeFlagsNV <>
;   TypeKind.ELABORATED
;   name = hintSupported, type = VkBool32, offset = 24, size = 4
    hintSupported VkBool32 <>
;   TypeKind.ELABORATED
;   name = costSupported, type = VkBool32, offset = 28, size = 4
    costSupported VkBool32 <>
;   TypeKind.ELABORATED
;   name = bidirectionalFlowSupported, type = VkBool32, offset = 32, size = 4
    bidirectionalFlowSupported VkBool32 <>
;   TypeKind.ELABORATED
;   name = globalFlowSupported, type = VkBool32, offset = 36, size = 4
    globalFlowSupported VkBool32 <>
;   TypeKind.ELABORATED
;   name = minWidth, type = uint32_t, offset = 40, size = 4
    minWidth dword ?
;   TypeKind.ELABORATED
;   name = minHeight, type = uint32_t, offset = 44, size = 4
    minHeight dword ?
;   TypeKind.ELABORATED
;   name = maxWidth, type = uint32_t, offset = 48, size = 4
    maxWidth dword ?
;   TypeKind.ELABORATED
;   name = maxHeight, type = uint32_t, offset = 52, size = 4
    maxHeight dword ?
;   TypeKind.ELABORATED
;   name = maxNumRegionsOfInterest, type = uint32_t, offset = 56, size = 4
    maxNumRegionsOfInterest dword ?
VkPhysicalDeviceOpticalFlowPropertiesNV ends

VkOpticalFlowImageFormatInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = usage, type = VkOpticalFlowUsageFlagsNV, offset = 16, size = 4
    usage VkOpticalFlowUsageFlagsNV <>
VkOpticalFlowImageFormatInfoNV ends

; TYPEDEF VkOpticalFlowImageFormatInfoNV = struct VkOpticalFlowImageFormatInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkOpticalFlowImageFormatInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = usage, type = VkOpticalFlowUsageFlagsNV, offset = 16, size = 4
    usage VkOpticalFlowUsageFlagsNV <>
VkOpticalFlowImageFormatInfoNV ends

VkOpticalFlowImageFormatPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 16, size = 4
    format VkFormat <>
VkOpticalFlowImageFormatPropertiesNV ends

; TYPEDEF VkOpticalFlowImageFormatPropertiesNV = struct VkOpticalFlowImageFormatPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkOpticalFlowImageFormatPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = format, type = VkFormat, offset = 16, size = 4
    format VkFormat <>
VkOpticalFlowImageFormatPropertiesNV ends

VkOpticalFlowSessionCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 16, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 20, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = imageFormat, type = VkFormat, offset = 24, size = 4
    imageFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = flowVectorFormat, type = VkFormat, offset = 28, size = 4
    flowVectorFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = costFormat, type = VkFormat, offset = 32, size = 4
    costFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = outputGridSize, type = VkOpticalFlowGridSizeFlagsNV, offset = 36, size = 4
    outputGridSize VkOpticalFlowGridSizeFlagsNV <>
;   TypeKind.ELABORATED
;   name = hintGridSize, type = VkOpticalFlowGridSizeFlagsNV, offset = 40, size = 4
    hintGridSize VkOpticalFlowGridSizeFlagsNV <>
;   TypeKind.ELABORATED
;   name = performanceLevel, type = VkOpticalFlowPerformanceLevelNV, offset = 44, size = 4
    performanceLevel VkOpticalFlowPerformanceLevelNV <>
;   TypeKind.ELABORATED
;   name = flags, type = VkOpticalFlowSessionCreateFlagsNV, offset = 48, size = 4
    flags VkOpticalFlowSessionCreateFlagsNV <>
VkOpticalFlowSessionCreateInfoNV ends

; TYPEDEF VkOpticalFlowSessionCreateInfoNV = struct VkOpticalFlowSessionCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkOpticalFlowSessionCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 16, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 20, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = imageFormat, type = VkFormat, offset = 24, size = 4
    imageFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = flowVectorFormat, type = VkFormat, offset = 28, size = 4
    flowVectorFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = costFormat, type = VkFormat, offset = 32, size = 4
    costFormat VkFormat <>
;   TypeKind.ELABORATED
;   name = outputGridSize, type = VkOpticalFlowGridSizeFlagsNV, offset = 36, size = 4
    outputGridSize VkOpticalFlowGridSizeFlagsNV <>
;   TypeKind.ELABORATED
;   name = hintGridSize, type = VkOpticalFlowGridSizeFlagsNV, offset = 40, size = 4
    hintGridSize VkOpticalFlowGridSizeFlagsNV <>
;   TypeKind.ELABORATED
;   name = performanceLevel, type = VkOpticalFlowPerformanceLevelNV, offset = 44, size = 4
    performanceLevel VkOpticalFlowPerformanceLevelNV <>
;   TypeKind.ELABORATED
;   name = flags, type = VkOpticalFlowSessionCreateFlagsNV, offset = 48, size = 4
    flags VkOpticalFlowSessionCreateFlagsNV <>
VkOpticalFlowSessionCreateInfoNV ends

VkOpticalFlowSessionCreatePrivateDataInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = id, type = uint32_t, offset = 16, size = 4
    id dword ?
;   TypeKind.ELABORATED
;   name = size, type = uint32_t, offset = 20, size = 4
    _size dword ?
;   TypeKind.POINTER
;   name = pPrivateData, type = const void *, offset = 24, size = 8
    pPrivateData qword ?
VkOpticalFlowSessionCreatePrivateDataInfoNV ends

; TYPEDEF VkOpticalFlowSessionCreatePrivateDataInfoNV = struct VkOpticalFlowSessionCreatePrivateDataInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkOpticalFlowSessionCreatePrivateDataInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = id, type = uint32_t, offset = 16, size = 4
    id dword ?
;   TypeKind.ELABORATED
;   name = size, type = uint32_t, offset = 20, size = 4
    _size dword ?
;   TypeKind.POINTER
;   name = pPrivateData, type = const void *, offset = 24, size = 8
    pPrivateData qword ?
VkOpticalFlowSessionCreatePrivateDataInfoNV ends

VkOpticalFlowExecuteInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkOpticalFlowExecuteFlagsNV, offset = 16, size = 4
    flags VkOpticalFlowExecuteFlagsNV <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 20, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkRect2D *, offset = 24, size = 8
    pRegions qword ?
VkOpticalFlowExecuteInfoNV ends

; TYPEDEF VkOpticalFlowExecuteInfoNV = struct VkOpticalFlowExecuteInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkOpticalFlowExecuteInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkOpticalFlowExecuteFlagsNV, offset = 16, size = 4
    flags VkOpticalFlowExecuteFlagsNV <>
;   TypeKind.ELABORATED
;   name = regionCount, type = uint32_t, offset = 20, size = 4
    regionCount dword ?
;   TypeKind.POINTER
;   name = pRegions, type = const VkRect2D *, offset = 24, size = 8
    pRegions qword ?
VkOpticalFlowExecuteInfoNV ends

; TYPEDEF PFN_vkGetPhysicalDeviceOpticalFlowImageFormatsNV = VkResult (*)(VkPhysicalDevice, const VkOpticalFlowImageFormatInfoNV *, uint32_t *, VkOpticalFlowImageFormatPropertiesNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetPhysicalDeviceOpticalFlowImageFormatsNV typedef qword

; TYPEDEF PFN_vkCreateOpticalFlowSessionNV = VkResult (*)(VkDevice, const VkOpticalFlowSessionCreateInfoNV *, const VkAllocationCallbacks *, VkOpticalFlowSessionNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateOpticalFlowSessionNV typedef qword

; TYPEDEF PFN_vkDestroyOpticalFlowSessionNV = void (*)(VkDevice, VkOpticalFlowSessionNV, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyOpticalFlowSessionNV typedef qword

; TYPEDEF PFN_vkBindOpticalFlowSessionImageNV = VkResult (*)(VkDevice, VkOpticalFlowSessionNV, VkOpticalFlowSessionBindingPointNV, VkImageView, VkImageLayout) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBindOpticalFlowSessionImageNV typedef qword

; TYPEDEF PFN_vkCmdOpticalFlowExecuteNV = void (*)(VkCommandBuffer, VkOpticalFlowSessionNV, const VkOpticalFlowExecuteInfoNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdOpticalFlowExecuteNV typedef qword

; VkResult vkGetPhysicalDeviceOpticalFlowImageFormatsNV(VkPhysicalDevice physicalDevice, const VkOpticalFlowImageFormatInfoNV * pOpticalFlowImageFormatInfo, uint32_t * pFormatCount, VkOpticalFlowImageFormatPropertiesNV * pImageFormatProperties)
vkGetPhysicalDeviceOpticalFlowImageFormatsNV qword ?

; VkResult vkCreateOpticalFlowSessionNV(VkDevice device, const VkOpticalFlowSessionCreateInfoNV * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkOpticalFlowSessionNV * pSession)
vkCreateOpticalFlowSessionNV qword ?

; void vkDestroyOpticalFlowSessionNV(VkDevice device, VkOpticalFlowSessionNV session, const VkAllocationCallbacks * pAllocator)
vkDestroyOpticalFlowSessionNV qword ?

; VkResult vkBindOpticalFlowSessionImageNV(VkDevice device, VkOpticalFlowSessionNV session, VkOpticalFlowSessionBindingPointNV bindingPoint, VkImageView view, VkImageLayout layout)
vkBindOpticalFlowSessionImageNV qword ?

; void vkCmdOpticalFlowExecuteNV(VkCommandBuffer commandBuffer, VkOpticalFlowSessionNV session, const VkOpticalFlowExecuteInfoNV * pExecuteInfo)
vkCmdOpticalFlowExecuteNV qword ?

VkPhysicalDeviceLegacyDitheringFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = legacyDithering, type = VkBool32, offset = 16, size = 4
    legacyDithering VkBool32 <>
VkPhysicalDeviceLegacyDitheringFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceLegacyDitheringFeaturesEXT = struct VkPhysicalDeviceLegacyDitheringFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceLegacyDitheringFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = legacyDithering, type = VkBool32, offset = 16, size = 4
    legacyDithering VkBool32 <>
VkPhysicalDeviceLegacyDitheringFeaturesEXT ends

VkPhysicalDevicePipelineProtectedAccessFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineProtectedAccess, type = VkBool32, offset = 16, size = 4
    pipelineProtectedAccess VkBool32 <>
VkPhysicalDevicePipelineProtectedAccessFeaturesEXT ends

; TYPEDEF VkPhysicalDevicePipelineProtectedAccessFeaturesEXT = struct VkPhysicalDevicePipelineProtectedAccessFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePipelineProtectedAccessFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineProtectedAccess, type = VkBool32, offset = 16, size = 4
    pipelineProtectedAccess VkBool32 <>
VkPhysicalDevicePipelineProtectedAccessFeaturesEXT ends

; TYPEDEF VkShaderEXT = struct VkShaderEXT_T *, TypeKind.POINTER
VkShaderEXT typedef qword

; enum VkShaderCodeTypeEXT {
    VK_SHADER_CODE_TYPE_BINARY_EXT equ 0
    VK_SHADER_CODE_TYPE_SPIRV_EXT equ 1
    VK_SHADER_CODE_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkShaderCodeTypeEXT = enum VkShaderCodeTypeEXT, TypeKind.ELABORATED
VkShaderCodeTypeEXT typedef dword

; enum VkShaderCodeTypeEXT {
    VK_SHADER_CODE_TYPE_BINARY_EXT equ 0
    VK_SHADER_CODE_TYPE_SPIRV_EXT equ 1
    VK_SHADER_CODE_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; enum VkShaderCreateFlagBitsEXT {
    VK_SHADER_CREATE_LINK_STAGE_BIT_EXT equ 1
    VK_SHADER_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT equ 2
    VK_SHADER_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT equ 4
    VK_SHADER_CREATE_NO_TASK_SHADER_BIT_EXT equ 8
    VK_SHADER_CREATE_DISPATCH_BASE_BIT_EXT equ 16
    VK_SHADER_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_EXT equ 32
    VK_SHADER_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT equ 64
    VK_SHADER_CREATE_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkShaderCreateFlagBitsEXT = enum VkShaderCreateFlagBitsEXT, TypeKind.ELABORATED
VkShaderCreateFlagBitsEXT typedef dword

; enum VkShaderCreateFlagBitsEXT {
    VK_SHADER_CREATE_LINK_STAGE_BIT_EXT equ 1
    VK_SHADER_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT equ 2
    VK_SHADER_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT equ 4
    VK_SHADER_CREATE_NO_TASK_SHADER_BIT_EXT equ 8
    VK_SHADER_CREATE_DISPATCH_BASE_BIT_EXT equ 16
    VK_SHADER_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_EXT equ 32
    VK_SHADER_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT equ 64
    VK_SHADER_CREATE_FLAG_BITS_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkShaderCreateFlagsEXT = VkFlags, TypeKind.ELABORATED
VkShaderCreateFlagsEXT typedef dword

VkPhysicalDeviceShaderObjectFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderObject, type = VkBool32, offset = 16, size = 4
    shaderObject VkBool32 <>
VkPhysicalDeviceShaderObjectFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceShaderObjectFeaturesEXT = struct VkPhysicalDeviceShaderObjectFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderObjectFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderObject, type = VkBool32, offset = 16, size = 4
    shaderObject VkBool32 <>
VkPhysicalDeviceShaderObjectFeaturesEXT ends

VkPhysicalDeviceShaderObjectPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = shaderBinaryUUID, type = uint8_t[16], offset = 16, size = 16
    shaderBinaryUUID byte 16 dup(?)
;   TypeKind.ELABORATED
;   name = shaderBinaryVersion, type = uint32_t, offset = 32, size = 4
    shaderBinaryVersion dword ?
VkPhysicalDeviceShaderObjectPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceShaderObjectPropertiesEXT = struct VkPhysicalDeviceShaderObjectPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderObjectPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.CONSTANTARRAY
;   name = shaderBinaryUUID, type = uint8_t[16], offset = 16, size = 16
    shaderBinaryUUID byte 16 dup(?)
;   TypeKind.ELABORATED
;   name = shaderBinaryVersion, type = uint32_t, offset = 32, size = 4
    shaderBinaryVersion dword ?
VkPhysicalDeviceShaderObjectPropertiesEXT ends

VkShaderCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkShaderCreateFlagsEXT, offset = 16, size = 4
    flags VkShaderCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = stage, type = VkShaderStageFlagBits, offset = 20, size = 4
    stage VkShaderStageFlagBits <>
;   TypeKind.ELABORATED
;   name = nextStage, type = VkShaderStageFlags, offset = 24, size = 4
    nextStage VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = codeType, type = VkShaderCodeTypeEXT, offset = 28, size = 4
    codeType VkShaderCodeTypeEXT <>
;   TypeKind.ELABORATED
;   name = codeSize, type = size_t, offset = 32, size = 8
    codeSize qword ?
;   TypeKind.POINTER
;   name = pCode, type = const void *, offset = 40, size = 8
    pCode qword ?
;   TypeKind.POINTER
;   name = pName, type = const char *, offset = 48, size = 8
    pName qword ?
;   TypeKind.ELABORATED
;   name = setLayoutCount, type = uint32_t, offset = 56, size = 4
    setLayoutCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSetLayouts, type = const VkDescriptorSetLayout *, offset = 64, size = 8
    pSetLayouts qword ?
;   TypeKind.ELABORATED
;   name = pushConstantRangeCount, type = uint32_t, offset = 72, size = 4
    pushConstantRangeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPushConstantRanges, type = const VkPushConstantRange *, offset = 80, size = 8
    pPushConstantRanges qword ?
;   TypeKind.POINTER
;   name = pSpecializationInfo, type = const VkSpecializationInfo *, offset = 88, size = 8
    pSpecializationInfo qword ?
VkShaderCreateInfoEXT ends

; TYPEDEF VkShaderCreateInfoEXT = struct VkShaderCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkShaderCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkShaderCreateFlagsEXT, offset = 16, size = 4
    flags VkShaderCreateFlagsEXT <>
;   TypeKind.ELABORATED
;   name = stage, type = VkShaderStageFlagBits, offset = 20, size = 4
    stage VkShaderStageFlagBits <>
;   TypeKind.ELABORATED
;   name = nextStage, type = VkShaderStageFlags, offset = 24, size = 4
    nextStage VkShaderStageFlags <>
;   TypeKind.ELABORATED
;   name = codeType, type = VkShaderCodeTypeEXT, offset = 28, size = 4
    codeType VkShaderCodeTypeEXT <>
;   TypeKind.ELABORATED
;   name = codeSize, type = size_t, offset = 32, size = 8
    codeSize qword ?
;   TypeKind.POINTER
;   name = pCode, type = const void *, offset = 40, size = 8
    pCode qword ?
;   TypeKind.POINTER
;   name = pName, type = const char *, offset = 48, size = 8
    pName qword ?
;   TypeKind.ELABORATED
;   name = setLayoutCount, type = uint32_t, offset = 56, size = 4
    setLayoutCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSetLayouts, type = const VkDescriptorSetLayout *, offset = 64, size = 8
    pSetLayouts qword ?
;   TypeKind.ELABORATED
;   name = pushConstantRangeCount, type = uint32_t, offset = 72, size = 4
    pushConstantRangeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPushConstantRanges, type = const VkPushConstantRange *, offset = 80, size = 8
    pPushConstantRanges qword ?
;   TypeKind.POINTER
;   name = pSpecializationInfo, type = const VkSpecializationInfo *, offset = 88, size = 8
    pSpecializationInfo qword ?
VkShaderCreateInfoEXT ends

; TYPEDEF VkShaderRequiredSubgroupSizeCreateInfoEXT = VkPipelineShaderStageRequiredSubgroupSizeCreateInfo, TypeKind.ELABORATED

; TYPEDEF PFN_vkCreateShadersEXT = VkResult (*)(VkDevice, uint32_t, const VkShaderCreateInfoEXT *, const VkAllocationCallbacks *, VkShaderEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateShadersEXT typedef qword

; TYPEDEF PFN_vkDestroyShaderEXT = void (*)(VkDevice, VkShaderEXT, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyShaderEXT typedef qword

; TYPEDEF PFN_vkGetShaderBinaryDataEXT = VkResult (*)(VkDevice, VkShaderEXT, size_t *, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetShaderBinaryDataEXT typedef qword

; TYPEDEF PFN_vkCmdBindShadersEXT = void (*)(VkCommandBuffer, uint32_t, const VkShaderStageFlagBits *, const VkShaderEXT *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBindShadersEXT typedef qword

; VkResult vkCreateShadersEXT(VkDevice device, uint32_t createInfoCount, const VkShaderCreateInfoEXT * pCreateInfos, const VkAllocationCallbacks * pAllocator, VkShaderEXT * pShaders)
vkCreateShadersEXT qword ?

; void vkDestroyShaderEXT(VkDevice device, VkShaderEXT shader, const VkAllocationCallbacks * pAllocator)
vkDestroyShaderEXT qword ?

; VkResult vkGetShaderBinaryDataEXT(VkDevice device, VkShaderEXT shader, size_t * pDataSize, void * pData)
vkGetShaderBinaryDataEXT qword ?

; void vkCmdBindShadersEXT(VkCommandBuffer commandBuffer, uint32_t stageCount, const VkShaderStageFlagBits * pStages, const VkShaderEXT * pShaders)
vkCmdBindShadersEXT qword ?

VkPhysicalDeviceTilePropertiesFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = tileProperties, type = VkBool32, offset = 16, size = 4
    tileProperties VkBool32 <>
VkPhysicalDeviceTilePropertiesFeaturesQCOM ends

; TYPEDEF VkPhysicalDeviceTilePropertiesFeaturesQCOM = struct VkPhysicalDeviceTilePropertiesFeaturesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceTilePropertiesFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = tileProperties, type = VkBool32, offset = 16, size = 4
    tileProperties VkBool32 <>
VkPhysicalDeviceTilePropertiesFeaturesQCOM ends

VkTilePropertiesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = tileSize, type = VkExtent3D, offset = 16, size = 12
    tileSize VkExtent3D <>
;   TypeKind.ELABORATED
;   name = apronSize, type = VkExtent2D, offset = 28, size = 8
    apronSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = origin, type = VkOffset2D, offset = 36, size = 8
    origin VkOffset2D <>
VkTilePropertiesQCOM ends

; TYPEDEF VkTilePropertiesQCOM = struct VkTilePropertiesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkTilePropertiesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = tileSize, type = VkExtent3D, offset = 16, size = 12
    tileSize VkExtent3D <>
;   TypeKind.ELABORATED
;   name = apronSize, type = VkExtent2D, offset = 28, size = 8
    apronSize VkExtent2D <>
;   TypeKind.ELABORATED
;   name = origin, type = VkOffset2D, offset = 36, size = 8
    origin VkOffset2D <>
VkTilePropertiesQCOM ends

; TYPEDEF PFN_vkGetFramebufferTilePropertiesQCOM = VkResult (*)(VkDevice, VkFramebuffer, uint32_t *, VkTilePropertiesQCOM *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetFramebufferTilePropertiesQCOM typedef qword

; TYPEDEF PFN_vkGetDynamicRenderingTilePropertiesQCOM = VkResult (*)(VkDevice, const VkRenderingInfo *, VkTilePropertiesQCOM *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDynamicRenderingTilePropertiesQCOM typedef qword

; VkResult vkGetFramebufferTilePropertiesQCOM(VkDevice device, VkFramebuffer framebuffer, uint32_t * pPropertiesCount, VkTilePropertiesQCOM * pProperties)
vkGetFramebufferTilePropertiesQCOM qword ?

; VkResult vkGetDynamicRenderingTilePropertiesQCOM(VkDevice device, const VkRenderingInfo * pRenderingInfo, VkTilePropertiesQCOM * pProperties)
vkGetDynamicRenderingTilePropertiesQCOM qword ?

VkPhysicalDeviceAmigoProfilingFeaturesSEC struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = amigoProfiling, type = VkBool32, offset = 16, size = 4
    amigoProfiling VkBool32 <>
VkPhysicalDeviceAmigoProfilingFeaturesSEC ends

; TYPEDEF VkPhysicalDeviceAmigoProfilingFeaturesSEC = struct VkPhysicalDeviceAmigoProfilingFeaturesSEC, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceAmigoProfilingFeaturesSEC struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = amigoProfiling, type = VkBool32, offset = 16, size = 4
    amigoProfiling VkBool32 <>
VkPhysicalDeviceAmigoProfilingFeaturesSEC ends

VkAmigoProfilingSubmitInfoSEC struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = firstDrawTimestamp, type = uint64_t, offset = 16, size = 8
    firstDrawTimestamp qword ?
;   TypeKind.ELABORATED
;   name = swapBufferTimestamp, type = uint64_t, offset = 24, size = 8
    swapBufferTimestamp qword ?
VkAmigoProfilingSubmitInfoSEC ends

; TYPEDEF VkAmigoProfilingSubmitInfoSEC = struct VkAmigoProfilingSubmitInfoSEC, TypeKind.ELABORATED
; remove struct typedef

VkAmigoProfilingSubmitInfoSEC struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = firstDrawTimestamp, type = uint64_t, offset = 16, size = 8
    firstDrawTimestamp qword ?
;   TypeKind.ELABORATED
;   name = swapBufferTimestamp, type = uint64_t, offset = 24, size = 8
    swapBufferTimestamp qword ?
VkAmigoProfilingSubmitInfoSEC ends

VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multiviewPerViewViewports, type = VkBool32, offset = 16, size = 4
    multiviewPerViewViewports VkBool32 <>
VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM ends

; TYPEDEF VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM = struct VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multiviewPerViewViewports, type = VkBool32, offset = 16, size = 4
    multiviewPerViewViewports VkBool32 <>
VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM ends

; enum VkRayTracingInvocationReorderModeNV {
    VK_RAY_TRACING_INVOCATION_REORDER_MODE_NONE_NV equ 0
    VK_RAY_TRACING_INVOCATION_REORDER_MODE_REORDER_NV equ 1
    VK_RAY_TRACING_INVOCATION_REORDER_MODE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkRayTracingInvocationReorderModeNV = enum VkRayTracingInvocationReorderModeNV, TypeKind.ELABORATED
VkRayTracingInvocationReorderModeNV typedef dword

; enum VkRayTracingInvocationReorderModeNV {
    VK_RAY_TRACING_INVOCATION_REORDER_MODE_NONE_NV equ 0
    VK_RAY_TRACING_INVOCATION_REORDER_MODE_REORDER_NV equ 1
    VK_RAY_TRACING_INVOCATION_REORDER_MODE_MAX_ENUM_NV equ 2147483647
; }

VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingInvocationReorderReorderingHint, type = VkRayTracingInvocationReorderModeNV, offset = 16, size = 4
    rayTracingInvocationReorderReorderingHint VkRayTracingInvocationReorderModeNV <>
VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV ends

; TYPEDEF VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV = struct VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingInvocationReorderReorderingHint, type = VkRayTracingInvocationReorderModeNV, offset = 16, size = 4
    rayTracingInvocationReorderReorderingHint VkRayTracingInvocationReorderModeNV <>
VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV ends

VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingInvocationReorder, type = VkBool32, offset = 16, size = 4
    rayTracingInvocationReorder VkBool32 <>
VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV ends

; TYPEDEF VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV = struct VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingInvocationReorder, type = VkBool32, offset = 16, size = 4
    rayTracingInvocationReorder VkBool32 <>
VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV ends

VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = extendedSparseAddressSpace, type = VkBool32, offset = 16, size = 4
    extendedSparseAddressSpace VkBool32 <>
VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV ends

; TYPEDEF VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV = struct VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = extendedSparseAddressSpace, type = VkBool32, offset = 16, size = 4
    extendedSparseAddressSpace VkBool32 <>
VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV ends

VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = extendedSparseAddressSpaceSize, type = VkDeviceSize, offset = 16, size = 8
    extendedSparseAddressSpaceSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = extendedSparseImageUsageFlags, type = VkImageUsageFlags, offset = 24, size = 4
    extendedSparseImageUsageFlags VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = extendedSparseBufferUsageFlags, type = VkBufferUsageFlags, offset = 28, size = 4
    extendedSparseBufferUsageFlags VkBufferUsageFlags <>
VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV ends

; TYPEDEF VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV = struct VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = extendedSparseAddressSpaceSize, type = VkDeviceSize, offset = 16, size = 8
    extendedSparseAddressSpaceSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = extendedSparseImageUsageFlags, type = VkImageUsageFlags, offset = 24, size = 4
    extendedSparseImageUsageFlags VkImageUsageFlags <>
;   TypeKind.ELABORATED
;   name = extendedSparseBufferUsageFlags, type = VkBufferUsageFlags, offset = 28, size = 4
    extendedSparseBufferUsageFlags VkBufferUsageFlags <>
VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV ends

; enum VkLayerSettingTypeEXT {
    VK_LAYER_SETTING_TYPE_BOOL32_EXT equ 0
    VK_LAYER_SETTING_TYPE_INT32_EXT equ 1
    VK_LAYER_SETTING_TYPE_INT64_EXT equ 2
    VK_LAYER_SETTING_TYPE_UINT32_EXT equ 3
    VK_LAYER_SETTING_TYPE_UINT64_EXT equ 4
    VK_LAYER_SETTING_TYPE_FLOAT32_EXT equ 5
    VK_LAYER_SETTING_TYPE_FLOAT64_EXT equ 6
    VK_LAYER_SETTING_TYPE_STRING_EXT equ 7
    VK_LAYER_SETTING_TYPE_MAX_ENUM_EXT equ 2147483647
; }

; TYPEDEF VkLayerSettingTypeEXT = enum VkLayerSettingTypeEXT, TypeKind.ELABORATED
VkLayerSettingTypeEXT typedef dword

; enum VkLayerSettingTypeEXT {
    VK_LAYER_SETTING_TYPE_BOOL32_EXT equ 0
    VK_LAYER_SETTING_TYPE_INT32_EXT equ 1
    VK_LAYER_SETTING_TYPE_INT64_EXT equ 2
    VK_LAYER_SETTING_TYPE_UINT32_EXT equ 3
    VK_LAYER_SETTING_TYPE_UINT64_EXT equ 4
    VK_LAYER_SETTING_TYPE_FLOAT32_EXT equ 5
    VK_LAYER_SETTING_TYPE_FLOAT64_EXT equ 6
    VK_LAYER_SETTING_TYPE_STRING_EXT equ 7
    VK_LAYER_SETTING_TYPE_MAX_ENUM_EXT equ 2147483647
; }

VkLayerSettingEXT struct
;   TypeKind.POINTER
;   name = pLayerName, type = const char *, offset = 0, size = 8
    pLayerName qword ?
;   TypeKind.POINTER
;   name = pSettingName, type = const char *, offset = 8, size = 8
    pSettingName qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkLayerSettingTypeEXT, offset = 16, size = 4
    __type VkLayerSettingTypeEXT <>
;   TypeKind.ELABORATED
;   name = valueCount, type = uint32_t, offset = 20, size = 4
    valueCount dword ?
;   TypeKind.POINTER
;   name = pValues, type = const void *, offset = 24, size = 8
    pValues qword ?
VkLayerSettingEXT ends

; TYPEDEF VkLayerSettingEXT = struct VkLayerSettingEXT, TypeKind.ELABORATED
; remove struct typedef

VkLayerSettingEXT struct
;   TypeKind.POINTER
;   name = pLayerName, type = const char *, offset = 0, size = 8
    pLayerName qword ?
;   TypeKind.POINTER
;   name = pSettingName, type = const char *, offset = 8, size = 8
    pSettingName qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkLayerSettingTypeEXT, offset = 16, size = 4
    __type VkLayerSettingTypeEXT <>
;   TypeKind.ELABORATED
;   name = valueCount, type = uint32_t, offset = 20, size = 4
    valueCount dword ?
;   TypeKind.POINTER
;   name = pValues, type = const void *, offset = 24, size = 8
    pValues qword ?
VkLayerSettingEXT ends

VkLayerSettingsCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = settingCount, type = uint32_t, offset = 16, size = 4
    settingCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSettings, type = const VkLayerSettingEXT *, offset = 24, size = 8
    pSettings qword ?
VkLayerSettingsCreateInfoEXT ends

; TYPEDEF VkLayerSettingsCreateInfoEXT = struct VkLayerSettingsCreateInfoEXT, TypeKind.ELABORATED
; remove struct typedef

VkLayerSettingsCreateInfoEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = settingCount, type = uint32_t, offset = 16, size = 4
    settingCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pSettings, type = const VkLayerSettingEXT *, offset = 24, size = 8
    pSettings qword ?
VkLayerSettingsCreateInfoEXT ends

VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderCoreBuiltins, type = VkBool32, offset = 16, size = 4
    shaderCoreBuiltins VkBool32 <>
VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM ends

; TYPEDEF VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM = struct VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderCoreBuiltins, type = VkBool32, offset = 16, size = 4
    shaderCoreBuiltins VkBool32 <>
VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM ends

VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderCoreMask, type = uint64_t, offset = 16, size = 8
    shaderCoreMask qword ?
;   TypeKind.ELABORATED
;   name = shaderCoreCount, type = uint32_t, offset = 24, size = 4
    shaderCoreCount dword ?
;   TypeKind.ELABORATED
;   name = shaderWarpsPerCore, type = uint32_t, offset = 28, size = 4
    shaderWarpsPerCore dword ?
VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM ends

; TYPEDEF VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM = struct VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderCoreMask, type = uint64_t, offset = 16, size = 8
    shaderCoreMask qword ?
;   TypeKind.ELABORATED
;   name = shaderCoreCount, type = uint32_t, offset = 24, size = 4
    shaderCoreCount dword ?
;   TypeKind.ELABORATED
;   name = shaderWarpsPerCore, type = uint32_t, offset = 28, size = 4
    shaderWarpsPerCore dword ?
VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM ends

VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineLibraryGroupHandles, type = VkBool32, offset = 16, size = 4
    pipelineLibraryGroupHandles VkBool32 <>
VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT ends

; TYPEDEF VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT = struct VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = pipelineLibraryGroupHandles, type = VkBool32, offset = 16, size = 4
    pipelineLibraryGroupHandles VkBool32 <>
VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT ends

VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dynamicRenderingUnusedAttachments, type = VkBool32, offset = 16, size = 4
    dynamicRenderingUnusedAttachments VkBool32 <>
VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT = struct VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = dynamicRenderingUnusedAttachments, type = VkBool32, offset = 16, size = 4
    dynamicRenderingUnusedAttachments VkBool32 <>
VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT ends

; enum VkLatencyMarkerNV {
    VK_LATENCY_MARKER_SIMULATION_START_NV equ 0
    VK_LATENCY_MARKER_SIMULATION_END_NV equ 1
    VK_LATENCY_MARKER_RENDERSUBMIT_START_NV equ 2
    VK_LATENCY_MARKER_RENDERSUBMIT_END_NV equ 3
    VK_LATENCY_MARKER_PRESENT_START_NV equ 4
    VK_LATENCY_MARKER_PRESENT_END_NV equ 5
    VK_LATENCY_MARKER_INPUT_SAMPLE_NV equ 6
    VK_LATENCY_MARKER_TRIGGER_FLASH_NV equ 7
    VK_LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_START_NV equ 8
    VK_LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_END_NV equ 9
    VK_LATENCY_MARKER_OUT_OF_BAND_PRESENT_START_NV equ 10
    VK_LATENCY_MARKER_OUT_OF_BAND_PRESENT_END_NV equ 11
    VK_LATENCY_MARKER_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkLatencyMarkerNV = enum VkLatencyMarkerNV, TypeKind.ELABORATED
VkLatencyMarkerNV typedef dword

; enum VkLatencyMarkerNV {
    VK_LATENCY_MARKER_SIMULATION_START_NV equ 0
    VK_LATENCY_MARKER_SIMULATION_END_NV equ 1
    VK_LATENCY_MARKER_RENDERSUBMIT_START_NV equ 2
    VK_LATENCY_MARKER_RENDERSUBMIT_END_NV equ 3
    VK_LATENCY_MARKER_PRESENT_START_NV equ 4
    VK_LATENCY_MARKER_PRESENT_END_NV equ 5
    VK_LATENCY_MARKER_INPUT_SAMPLE_NV equ 6
    VK_LATENCY_MARKER_TRIGGER_FLASH_NV equ 7
    VK_LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_START_NV equ 8
    VK_LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_END_NV equ 9
    VK_LATENCY_MARKER_OUT_OF_BAND_PRESENT_START_NV equ 10
    VK_LATENCY_MARKER_OUT_OF_BAND_PRESENT_END_NV equ 11
    VK_LATENCY_MARKER_MAX_ENUM_NV equ 2147483647
; }

; enum VkOutOfBandQueueTypeNV {
    VK_OUT_OF_BAND_QUEUE_TYPE_RENDER_NV equ 0
    VK_OUT_OF_BAND_QUEUE_TYPE_PRESENT_NV equ 1
    VK_OUT_OF_BAND_QUEUE_TYPE_MAX_ENUM_NV equ 2147483647
; }

; TYPEDEF VkOutOfBandQueueTypeNV = enum VkOutOfBandQueueTypeNV, TypeKind.ELABORATED
VkOutOfBandQueueTypeNV typedef dword

; enum VkOutOfBandQueueTypeNV {
    VK_OUT_OF_BAND_QUEUE_TYPE_RENDER_NV equ 0
    VK_OUT_OF_BAND_QUEUE_TYPE_PRESENT_NV equ 1
    VK_OUT_OF_BAND_QUEUE_TYPE_MAX_ENUM_NV equ 2147483647
; }

VkLatencySleepModeInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = lowLatencyMode, type = VkBool32, offset = 16, size = 4
    lowLatencyMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = lowLatencyBoost, type = VkBool32, offset = 20, size = 4
    lowLatencyBoost VkBool32 <>
;   TypeKind.ELABORATED
;   name = minimumIntervalUs, type = uint32_t, offset = 24, size = 4
    minimumIntervalUs dword ?
VkLatencySleepModeInfoNV ends

; TYPEDEF VkLatencySleepModeInfoNV = struct VkLatencySleepModeInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkLatencySleepModeInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = lowLatencyMode, type = VkBool32, offset = 16, size = 4
    lowLatencyMode VkBool32 <>
;   TypeKind.ELABORATED
;   name = lowLatencyBoost, type = VkBool32, offset = 20, size = 4
    lowLatencyBoost VkBool32 <>
;   TypeKind.ELABORATED
;   name = minimumIntervalUs, type = uint32_t, offset = 24, size = 4
    minimumIntervalUs dword ?
VkLatencySleepModeInfoNV ends

VkLatencySleepInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphore, type = VkSemaphore, offset = 16, size = 8
    signalSemaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = value, type = uint64_t, offset = 24, size = 8
    value qword ?
VkLatencySleepInfoNV ends

; TYPEDEF VkLatencySleepInfoNV = struct VkLatencySleepInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkLatencySleepInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = signalSemaphore, type = VkSemaphore, offset = 16, size = 8
    signalSemaphore VkSemaphore <>
;   TypeKind.ELABORATED
;   name = value, type = uint64_t, offset = 24, size = 8
    value qword ?
VkLatencySleepInfoNV ends

VkSetLatencyMarkerInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentID, type = uint64_t, offset = 16, size = 8
    presentID qword ?
;   TypeKind.ELABORATED
;   name = marker, type = VkLatencyMarkerNV, offset = 24, size = 4
    marker VkLatencyMarkerNV <>
VkSetLatencyMarkerInfoNV ends

; TYPEDEF VkSetLatencyMarkerInfoNV = struct VkSetLatencyMarkerInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkSetLatencyMarkerInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentID, type = uint64_t, offset = 16, size = 8
    presentID qword ?
;   TypeKind.ELABORATED
;   name = marker, type = VkLatencyMarkerNV, offset = 24, size = 4
    marker VkLatencyMarkerNV <>
VkSetLatencyMarkerInfoNV ends

VkLatencyTimingsFrameReportNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentID, type = uint64_t, offset = 16, size = 8
    presentID qword ?
;   TypeKind.ELABORATED
;   name = inputSampleTimeUs, type = uint64_t, offset = 24, size = 8
    inputSampleTimeUs qword ?
;   TypeKind.ELABORATED
;   name = simStartTimeUs, type = uint64_t, offset = 32, size = 8
    simStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = simEndTimeUs, type = uint64_t, offset = 40, size = 8
    simEndTimeUs qword ?
;   TypeKind.ELABORATED
;   name = renderSubmitStartTimeUs, type = uint64_t, offset = 48, size = 8
    renderSubmitStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = renderSubmitEndTimeUs, type = uint64_t, offset = 56, size = 8
    renderSubmitEndTimeUs qword ?
;   TypeKind.ELABORATED
;   name = presentStartTimeUs, type = uint64_t, offset = 64, size = 8
    presentStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = presentEndTimeUs, type = uint64_t, offset = 72, size = 8
    presentEndTimeUs qword ?
;   TypeKind.ELABORATED
;   name = driverStartTimeUs, type = uint64_t, offset = 80, size = 8
    driverStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = driverEndTimeUs, type = uint64_t, offset = 88, size = 8
    driverEndTimeUs qword ?
;   TypeKind.ELABORATED
;   name = osRenderQueueStartTimeUs, type = uint64_t, offset = 96, size = 8
    osRenderQueueStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = osRenderQueueEndTimeUs, type = uint64_t, offset = 104, size = 8
    osRenderQueueEndTimeUs qword ?
;   TypeKind.ELABORATED
;   name = gpuRenderStartTimeUs, type = uint64_t, offset = 112, size = 8
    gpuRenderStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = gpuRenderEndTimeUs, type = uint64_t, offset = 120, size = 8
    gpuRenderEndTimeUs qword ?
VkLatencyTimingsFrameReportNV ends

; TYPEDEF VkLatencyTimingsFrameReportNV = struct VkLatencyTimingsFrameReportNV, TypeKind.ELABORATED
; remove struct typedef

VkLatencyTimingsFrameReportNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentID, type = uint64_t, offset = 16, size = 8
    presentID qword ?
;   TypeKind.ELABORATED
;   name = inputSampleTimeUs, type = uint64_t, offset = 24, size = 8
    inputSampleTimeUs qword ?
;   TypeKind.ELABORATED
;   name = simStartTimeUs, type = uint64_t, offset = 32, size = 8
    simStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = simEndTimeUs, type = uint64_t, offset = 40, size = 8
    simEndTimeUs qword ?
;   TypeKind.ELABORATED
;   name = renderSubmitStartTimeUs, type = uint64_t, offset = 48, size = 8
    renderSubmitStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = renderSubmitEndTimeUs, type = uint64_t, offset = 56, size = 8
    renderSubmitEndTimeUs qword ?
;   TypeKind.ELABORATED
;   name = presentStartTimeUs, type = uint64_t, offset = 64, size = 8
    presentStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = presentEndTimeUs, type = uint64_t, offset = 72, size = 8
    presentEndTimeUs qword ?
;   TypeKind.ELABORATED
;   name = driverStartTimeUs, type = uint64_t, offset = 80, size = 8
    driverStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = driverEndTimeUs, type = uint64_t, offset = 88, size = 8
    driverEndTimeUs qword ?
;   TypeKind.ELABORATED
;   name = osRenderQueueStartTimeUs, type = uint64_t, offset = 96, size = 8
    osRenderQueueStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = osRenderQueueEndTimeUs, type = uint64_t, offset = 104, size = 8
    osRenderQueueEndTimeUs qword ?
;   TypeKind.ELABORATED
;   name = gpuRenderStartTimeUs, type = uint64_t, offset = 112, size = 8
    gpuRenderStartTimeUs qword ?
;   TypeKind.ELABORATED
;   name = gpuRenderEndTimeUs, type = uint64_t, offset = 120, size = 8
    gpuRenderEndTimeUs qword ?
VkLatencyTimingsFrameReportNV ends

VkGetLatencyMarkerInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = timingCount, type = uint32_t, offset = 16, size = 4
    timingCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pTimings, type = VkLatencyTimingsFrameReportNV *, offset = 24, size = 8
    pTimings qword ?
VkGetLatencyMarkerInfoNV ends

; TYPEDEF VkGetLatencyMarkerInfoNV = struct VkGetLatencyMarkerInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkGetLatencyMarkerInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = timingCount, type = uint32_t, offset = 16, size = 4
    timingCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pTimings, type = VkLatencyTimingsFrameReportNV *, offset = 24, size = 8
    pTimings qword ?
VkGetLatencyMarkerInfoNV ends

VkLatencySubmissionPresentIdNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentID, type = uint64_t, offset = 16, size = 8
    presentID qword ?
VkLatencySubmissionPresentIdNV ends

; TYPEDEF VkLatencySubmissionPresentIdNV = struct VkLatencySubmissionPresentIdNV, TypeKind.ELABORATED
; remove struct typedef

VkLatencySubmissionPresentIdNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentID, type = uint64_t, offset = 16, size = 8
    presentID qword ?
VkLatencySubmissionPresentIdNV ends

VkSwapchainLatencyCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = latencyModeEnable, type = VkBool32, offset = 16, size = 4
    latencyModeEnable VkBool32 <>
VkSwapchainLatencyCreateInfoNV ends

; TYPEDEF VkSwapchainLatencyCreateInfoNV = struct VkSwapchainLatencyCreateInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkSwapchainLatencyCreateInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = latencyModeEnable, type = VkBool32, offset = 16, size = 4
    latencyModeEnable VkBool32 <>
VkSwapchainLatencyCreateInfoNV ends

VkOutOfBandQueueTypeInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queueType, type = VkOutOfBandQueueTypeNV, offset = 16, size = 4
    queueType VkOutOfBandQueueTypeNV <>
VkOutOfBandQueueTypeInfoNV ends

; TYPEDEF VkOutOfBandQueueTypeInfoNV = struct VkOutOfBandQueueTypeInfoNV, TypeKind.ELABORATED
; remove struct typedef

VkOutOfBandQueueTypeInfoNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = queueType, type = VkOutOfBandQueueTypeNV, offset = 16, size = 4
    queueType VkOutOfBandQueueTypeNV <>
VkOutOfBandQueueTypeInfoNV ends

VkLatencySurfaceCapabilitiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentModeCount, type = uint32_t, offset = 16, size = 4
    presentModeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPresentModes, type = VkPresentModeKHR *, offset = 24, size = 8
    pPresentModes qword ?
VkLatencySurfaceCapabilitiesNV ends

; TYPEDEF VkLatencySurfaceCapabilitiesNV = struct VkLatencySurfaceCapabilitiesNV, TypeKind.ELABORATED
; remove struct typedef

VkLatencySurfaceCapabilitiesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = presentModeCount, type = uint32_t, offset = 16, size = 4
    presentModeCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPresentModes, type = VkPresentModeKHR *, offset = 24, size = 8
    pPresentModes qword ?
VkLatencySurfaceCapabilitiesNV ends

; TYPEDEF PFN_vkSetLatencySleepModeNV = VkResult (*)(VkDevice, VkSwapchainKHR, const VkLatencySleepModeInfoNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSetLatencySleepModeNV typedef qword

; TYPEDEF PFN_vkLatencySleepNV = VkResult (*)(VkDevice, VkSwapchainKHR, const VkLatencySleepInfoNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkLatencySleepNV typedef qword

; TYPEDEF PFN_vkSetLatencyMarkerNV = void (*)(VkDevice, VkSwapchainKHR, const VkSetLatencyMarkerInfoNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkSetLatencyMarkerNV typedef qword

; TYPEDEF PFN_vkGetLatencyTimingsNV = void (*)(VkDevice, VkSwapchainKHR, VkGetLatencyMarkerInfoNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetLatencyTimingsNV typedef qword

; TYPEDEF PFN_vkQueueNotifyOutOfBandNV = void (*)(VkQueue, const VkOutOfBandQueueTypeInfoNV *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkQueueNotifyOutOfBandNV typedef qword

; VkResult vkSetLatencySleepModeNV(VkDevice device, VkSwapchainKHR swapchain, const VkLatencySleepModeInfoNV * pSleepModeInfo)
vkSetLatencySleepModeNV qword ?

; VkResult vkLatencySleepNV(VkDevice device, VkSwapchainKHR swapchain, const VkLatencySleepInfoNV * pSleepInfo)
vkLatencySleepNV qword ?

; void vkSetLatencyMarkerNV(VkDevice device, VkSwapchainKHR swapchain, const VkSetLatencyMarkerInfoNV * pLatencyMarkerInfo)
vkSetLatencyMarkerNV qword ?

; void vkGetLatencyTimingsNV(VkDevice device, VkSwapchainKHR swapchain, VkGetLatencyMarkerInfoNV * pLatencyMarkerInfo)
vkGetLatencyTimingsNV qword ?

; void vkQueueNotifyOutOfBandNV(VkQueue queue, const VkOutOfBandQueueTypeInfoNV * pQueueTypeInfo)
vkQueueNotifyOutOfBandNV qword ?

VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multiviewPerViewRenderAreas, type = VkBool32, offset = 16, size = 4
    multiviewPerViewRenderAreas VkBool32 <>
VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM ends

; TYPEDEF VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM = struct VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = multiviewPerViewRenderAreas, type = VkBool32, offset = 16, size = 4
    multiviewPerViewRenderAreas VkBool32 <>
VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM ends

VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = perViewRenderAreaCount, type = uint32_t, offset = 16, size = 4
    perViewRenderAreaCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPerViewRenderAreas, type = const VkRect2D *, offset = 24, size = 8
    pPerViewRenderAreas qword ?
VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM ends

; TYPEDEF VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM = struct VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM, TypeKind.ELABORATED
; remove struct typedef

VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = perViewRenderAreaCount, type = uint32_t, offset = 16, size = 4
    perViewRenderAreaCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pPerViewRenderAreas, type = const VkRect2D *, offset = 24, size = 8
    pPerViewRenderAreas qword ?
VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM ends

VkPhysicalDevicePerStageDescriptorSetFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = perStageDescriptorSet, type = VkBool32, offset = 16, size = 4
    perStageDescriptorSet VkBool32 <>
;   TypeKind.ELABORATED
;   name = dynamicPipelineLayout, type = VkBool32, offset = 20, size = 4
    dynamicPipelineLayout VkBool32 <>
VkPhysicalDevicePerStageDescriptorSetFeaturesNV ends

; TYPEDEF VkPhysicalDevicePerStageDescriptorSetFeaturesNV = struct VkPhysicalDevicePerStageDescriptorSetFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDevicePerStageDescriptorSetFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = perStageDescriptorSet, type = VkBool32, offset = 16, size = 4
    perStageDescriptorSet VkBool32 <>
;   TypeKind.ELABORATED
;   name = dynamicPipelineLayout, type = VkBool32, offset = 20, size = 4
    dynamicPipelineLayout VkBool32 <>
VkPhysicalDevicePerStageDescriptorSetFeaturesNV ends

; enum VkBlockMatchWindowCompareModeQCOM {
    VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MIN_QCOM equ 0
    VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MAX_QCOM equ 1
    VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MAX_ENUM_QCOM equ 2147483647
; }

; TYPEDEF VkBlockMatchWindowCompareModeQCOM = enum VkBlockMatchWindowCompareModeQCOM, TypeKind.ELABORATED
VkBlockMatchWindowCompareModeQCOM typedef dword

; enum VkBlockMatchWindowCompareModeQCOM {
    VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MIN_QCOM equ 0
    VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MAX_QCOM equ 1
    VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MAX_ENUM_QCOM equ 2147483647
; }

VkPhysicalDeviceImageProcessing2FeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = textureBlockMatch2, type = VkBool32, offset = 16, size = 4
    textureBlockMatch2 VkBool32 <>
VkPhysicalDeviceImageProcessing2FeaturesQCOM ends

; TYPEDEF VkPhysicalDeviceImageProcessing2FeaturesQCOM = struct VkPhysicalDeviceImageProcessing2FeaturesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageProcessing2FeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = textureBlockMatch2, type = VkBool32, offset = 16, size = 4
    textureBlockMatch2 VkBool32 <>
VkPhysicalDeviceImageProcessing2FeaturesQCOM ends

VkPhysicalDeviceImageProcessing2PropertiesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxBlockMatchWindow, type = VkExtent2D, offset = 16, size = 8
    maxBlockMatchWindow VkExtent2D <>
VkPhysicalDeviceImageProcessing2PropertiesQCOM ends

; TYPEDEF VkPhysicalDeviceImageProcessing2PropertiesQCOM = struct VkPhysicalDeviceImageProcessing2PropertiesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceImageProcessing2PropertiesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxBlockMatchWindow, type = VkExtent2D, offset = 16, size = 8
    maxBlockMatchWindow VkExtent2D <>
VkPhysicalDeviceImageProcessing2PropertiesQCOM ends

VkSamplerBlockMatchWindowCreateInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = windowExtent, type = VkExtent2D, offset = 16, size = 8
    windowExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = windowCompareMode, type = VkBlockMatchWindowCompareModeQCOM, offset = 24, size = 4
    windowCompareMode VkBlockMatchWindowCompareModeQCOM <>
VkSamplerBlockMatchWindowCreateInfoQCOM ends

; TYPEDEF VkSamplerBlockMatchWindowCreateInfoQCOM = struct VkSamplerBlockMatchWindowCreateInfoQCOM, TypeKind.ELABORATED
; remove struct typedef

VkSamplerBlockMatchWindowCreateInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = windowExtent, type = VkExtent2D, offset = 16, size = 8
    windowExtent VkExtent2D <>
;   TypeKind.ELABORATED
;   name = windowCompareMode, type = VkBlockMatchWindowCompareModeQCOM, offset = 24, size = 4
    windowCompareMode VkBlockMatchWindowCompareModeQCOM <>
VkSamplerBlockMatchWindowCreateInfoQCOM ends

; enum VkCubicFilterWeightsQCOM {
    VK_CUBIC_FILTER_WEIGHTS_CATMULL_ROM_QCOM equ 0
    VK_CUBIC_FILTER_WEIGHTS_ZERO_TANGENT_CARDINAL_QCOM equ 1
    VK_CUBIC_FILTER_WEIGHTS_B_SPLINE_QCOM equ 2
    VK_CUBIC_FILTER_WEIGHTS_MITCHELL_NETRAVALI_QCOM equ 3
    VK_CUBIC_FILTER_WEIGHTS_MAX_ENUM_QCOM equ 2147483647
; }

; TYPEDEF VkCubicFilterWeightsQCOM = enum VkCubicFilterWeightsQCOM, TypeKind.ELABORATED
VkCubicFilterWeightsQCOM typedef dword

; enum VkCubicFilterWeightsQCOM {
    VK_CUBIC_FILTER_WEIGHTS_CATMULL_ROM_QCOM equ 0
    VK_CUBIC_FILTER_WEIGHTS_ZERO_TANGENT_CARDINAL_QCOM equ 1
    VK_CUBIC_FILTER_WEIGHTS_B_SPLINE_QCOM equ 2
    VK_CUBIC_FILTER_WEIGHTS_MITCHELL_NETRAVALI_QCOM equ 3
    VK_CUBIC_FILTER_WEIGHTS_MAX_ENUM_QCOM equ 2147483647
; }

VkPhysicalDeviceCubicWeightsFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = selectableCubicWeights, type = VkBool32, offset = 16, size = 4
    selectableCubicWeights VkBool32 <>
VkPhysicalDeviceCubicWeightsFeaturesQCOM ends

; TYPEDEF VkPhysicalDeviceCubicWeightsFeaturesQCOM = struct VkPhysicalDeviceCubicWeightsFeaturesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCubicWeightsFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = selectableCubicWeights, type = VkBool32, offset = 16, size = 4
    selectableCubicWeights VkBool32 <>
VkPhysicalDeviceCubicWeightsFeaturesQCOM ends

VkSamplerCubicWeightsCreateInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cubicWeights, type = VkCubicFilterWeightsQCOM, offset = 16, size = 4
    cubicWeights VkCubicFilterWeightsQCOM <>
VkSamplerCubicWeightsCreateInfoQCOM ends

; TYPEDEF VkSamplerCubicWeightsCreateInfoQCOM = struct VkSamplerCubicWeightsCreateInfoQCOM, TypeKind.ELABORATED
; remove struct typedef

VkSamplerCubicWeightsCreateInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cubicWeights, type = VkCubicFilterWeightsQCOM, offset = 16, size = 4
    cubicWeights VkCubicFilterWeightsQCOM <>
VkSamplerCubicWeightsCreateInfoQCOM ends

VkBlitImageCubicWeightsInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cubicWeights, type = VkCubicFilterWeightsQCOM, offset = 16, size = 4
    cubicWeights VkCubicFilterWeightsQCOM <>
VkBlitImageCubicWeightsInfoQCOM ends

; TYPEDEF VkBlitImageCubicWeightsInfoQCOM = struct VkBlitImageCubicWeightsInfoQCOM, TypeKind.ELABORATED
; remove struct typedef

VkBlitImageCubicWeightsInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cubicWeights, type = VkCubicFilterWeightsQCOM, offset = 16, size = 4
    cubicWeights VkCubicFilterWeightsQCOM <>
VkBlitImageCubicWeightsInfoQCOM ends

VkPhysicalDeviceYcbcrDegammaFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = ycbcrDegamma, type = VkBool32, offset = 16, size = 4
    ycbcrDegamma VkBool32 <>
VkPhysicalDeviceYcbcrDegammaFeaturesQCOM ends

; TYPEDEF VkPhysicalDeviceYcbcrDegammaFeaturesQCOM = struct VkPhysicalDeviceYcbcrDegammaFeaturesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceYcbcrDegammaFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = ycbcrDegamma, type = VkBool32, offset = 16, size = 4
    ycbcrDegamma VkBool32 <>
VkPhysicalDeviceYcbcrDegammaFeaturesQCOM ends

VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = enableYDegamma, type = VkBool32, offset = 16, size = 4
    enableYDegamma VkBool32 <>
;   TypeKind.ELABORATED
;   name = enableCbCrDegamma, type = VkBool32, offset = 20, size = 4
    enableCbCrDegamma VkBool32 <>
VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM ends

; TYPEDEF VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM = struct VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM, TypeKind.ELABORATED
; remove struct typedef

VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = enableYDegamma, type = VkBool32, offset = 16, size = 4
    enableYDegamma VkBool32 <>
;   TypeKind.ELABORATED
;   name = enableCbCrDegamma, type = VkBool32, offset = 20, size = 4
    enableCbCrDegamma VkBool32 <>
VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM ends

VkPhysicalDeviceCubicClampFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cubicRangeClamp, type = VkBool32, offset = 16, size = 4
    cubicRangeClamp VkBool32 <>
VkPhysicalDeviceCubicClampFeaturesQCOM ends

; TYPEDEF VkPhysicalDeviceCubicClampFeaturesQCOM = struct VkPhysicalDeviceCubicClampFeaturesQCOM, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceCubicClampFeaturesQCOM struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = cubicRangeClamp, type = VkBool32, offset = 16, size = 4
    cubicRangeClamp VkBool32 <>
VkPhysicalDeviceCubicClampFeaturesQCOM ends

VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentFeedbackLoopDynamicState, type = VkBool32, offset = 16, size = 4
    attachmentFeedbackLoopDynamicState VkBool32 <>
VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT = struct VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = attachmentFeedbackLoopDynamicState, type = VkBool32, offset = 16, size = 4
    attachmentFeedbackLoopDynamicState VkBool32 <>
VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT ends

; TYPEDEF PFN_vkCmdSetAttachmentFeedbackLoopEnableEXT = void (*)(VkCommandBuffer, VkImageAspectFlags) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetAttachmentFeedbackLoopEnableEXT typedef qword

; void vkCmdSetAttachmentFeedbackLoopEnableEXT(VkCommandBuffer commandBuffer, VkImageAspectFlags aspectMask)
vkCmdSetAttachmentFeedbackLoopEnableEXT qword ?

; enum VkLayeredDriverUnderlyingApiMSFT {
    VK_LAYERED_DRIVER_UNDERLYING_API_NONE_MSFT equ 0
    VK_LAYERED_DRIVER_UNDERLYING_API_D3D12_MSFT equ 1
    VK_LAYERED_DRIVER_UNDERLYING_API_MAX_ENUM_MSFT equ 2147483647
; }

; TYPEDEF VkLayeredDriverUnderlyingApiMSFT = enum VkLayeredDriverUnderlyingApiMSFT, TypeKind.ELABORATED
VkLayeredDriverUnderlyingApiMSFT typedef dword

; enum VkLayeredDriverUnderlyingApiMSFT {
    VK_LAYERED_DRIVER_UNDERLYING_API_NONE_MSFT equ 0
    VK_LAYERED_DRIVER_UNDERLYING_API_D3D12_MSFT equ 1
    VK_LAYERED_DRIVER_UNDERLYING_API_MAX_ENUM_MSFT equ 2147483647
; }

VkPhysicalDeviceLayeredDriverPropertiesMSFT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = underlyingAPI, type = VkLayeredDriverUnderlyingApiMSFT, offset = 16, size = 4
    underlyingAPI VkLayeredDriverUnderlyingApiMSFT <>
VkPhysicalDeviceLayeredDriverPropertiesMSFT ends

; TYPEDEF VkPhysicalDeviceLayeredDriverPropertiesMSFT = struct VkPhysicalDeviceLayeredDriverPropertiesMSFT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceLayeredDriverPropertiesMSFT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = underlyingAPI, type = VkLayeredDriverUnderlyingApiMSFT, offset = 16, size = 4
    underlyingAPI VkLayeredDriverUnderlyingApiMSFT <>
VkPhysicalDeviceLayeredDriverPropertiesMSFT ends

VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorPoolOverallocation, type = VkBool32, offset = 16, size = 4
    descriptorPoolOverallocation VkBool32 <>
VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV ends

; TYPEDEF VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV = struct VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = descriptorPoolOverallocation, type = VkBool32, offset = 16, size = 4
    descriptorPoolOverallocation VkBool32 <>
VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV ends

VkPhysicalDeviceRawAccessChainsFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderRawAccessChains, type = VkBool32, offset = 16, size = 4
    shaderRawAccessChains VkBool32 <>
VkPhysicalDeviceRawAccessChainsFeaturesNV ends

; TYPEDEF VkPhysicalDeviceRawAccessChainsFeaturesNV = struct VkPhysicalDeviceRawAccessChainsFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRawAccessChainsFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderRawAccessChains, type = VkBool32, offset = 16, size = 4
    shaderRawAccessChains VkBool32 <>
VkPhysicalDeviceRawAccessChainsFeaturesNV ends

VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderFloat16VectorAtomics, type = VkBool32, offset = 16, size = 4
    shaderFloat16VectorAtomics VkBool32 <>
VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV ends

; TYPEDEF VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV = struct VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderFloat16VectorAtomics, type = VkBool32, offset = 16, size = 4
    shaderFloat16VectorAtomics VkBool32 <>
VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV ends

VkPhysicalDeviceRayTracingValidationFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingValidation, type = VkBool32, offset = 16, size = 4
    rayTracingValidation VkBool32 <>
VkPhysicalDeviceRayTracingValidationFeaturesNV ends

; TYPEDEF VkPhysicalDeviceRayTracingValidationFeaturesNV = struct VkPhysicalDeviceRayTracingValidationFeaturesNV, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRayTracingValidationFeaturesNV struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingValidation, type = VkBool32, offset = 16, size = 4
    rayTracingValidation VkBool32 <>
VkPhysicalDeviceRayTracingValidationFeaturesNV ends

; enum VkBuildAccelerationStructureModeKHR {
    VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR equ 0
    VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR equ 1
    VK_BUILD_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkBuildAccelerationStructureModeKHR = enum VkBuildAccelerationStructureModeKHR, TypeKind.ELABORATED
VkBuildAccelerationStructureModeKHR typedef dword

; enum VkBuildAccelerationStructureModeKHR {
    VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR equ 0
    VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR equ 1
    VK_BUILD_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR equ 2147483647
; }

; enum VkAccelerationStructureCreateFlagBitsKHR {
    VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR equ 1
    VK_ACCELERATION_STRUCTURE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT equ 8
    VK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV equ 4
    VK_ACCELERATION_STRUCTURE_CREATE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkAccelerationStructureCreateFlagBitsKHR = enum VkAccelerationStructureCreateFlagBitsKHR, TypeKind.ELABORATED
VkAccelerationStructureCreateFlagBitsKHR typedef dword

; enum VkAccelerationStructureCreateFlagBitsKHR {
    VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR equ 1
    VK_ACCELERATION_STRUCTURE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT equ 8
    VK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV equ 4
    VK_ACCELERATION_STRUCTURE_CREATE_FLAG_BITS_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkAccelerationStructureCreateFlagsKHR = VkFlags, TypeKind.ELABORATED
VkAccelerationStructureCreateFlagsKHR typedef dword

VkAccelerationStructureBuildRangeInfoKHR struct
;   TypeKind.ELABORATED
;   name = primitiveCount, type = uint32_t, offset = 0, size = 4
    primitiveCount dword ?
;   TypeKind.ELABORATED
;   name = primitiveOffset, type = uint32_t, offset = 4, size = 4
    primitiveOffset dword ?
;   TypeKind.ELABORATED
;   name = firstVertex, type = uint32_t, offset = 8, size = 4
    firstVertex dword ?
;   TypeKind.ELABORATED
;   name = transformOffset, type = uint32_t, offset = 12, size = 4
    transformOffset dword ?
VkAccelerationStructureBuildRangeInfoKHR ends

; TYPEDEF VkAccelerationStructureBuildRangeInfoKHR = struct VkAccelerationStructureBuildRangeInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureBuildRangeInfoKHR struct
;   TypeKind.ELABORATED
;   name = primitiveCount, type = uint32_t, offset = 0, size = 4
    primitiveCount dword ?
;   TypeKind.ELABORATED
;   name = primitiveOffset, type = uint32_t, offset = 4, size = 4
    primitiveOffset dword ?
;   TypeKind.ELABORATED
;   name = firstVertex, type = uint32_t, offset = 8, size = 4
    firstVertex dword ?
;   TypeKind.ELABORATED
;   name = transformOffset, type = uint32_t, offset = 12, size = 4
    transformOffset dword ?
VkAccelerationStructureBuildRangeInfoKHR ends

VkAccelerationStructureGeometryTrianglesDataKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexFormat, type = VkFormat, offset = 16, size = 4
    vertexFormat VkFormat <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = vertexData, type = VkDeviceOrHostAddressConstKHR, offset = 24, size = 8
    vertexData VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = vertexStride, type = VkDeviceSize, offset = 32, size = 8
    vertexStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = maxVertex, type = uint32_t, offset = 40, size = 4
    maxVertex dword ?
;   TypeKind.ELABORATED
;   name = indexType, type = VkIndexType, offset = 44, size = 4
    indexType VkIndexType <>
;   TypeKind.ELABORATED
;   name = indexData, type = VkDeviceOrHostAddressConstKHR, offset = 48, size = 8
    indexData VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = transformData, type = VkDeviceOrHostAddressConstKHR, offset = 56, size = 8
    transformData VkDeviceOrHostAddressConstKHR <>
VkAccelerationStructureGeometryTrianglesDataKHR ends

; TYPEDEF VkAccelerationStructureGeometryTrianglesDataKHR = struct VkAccelerationStructureGeometryTrianglesDataKHR, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureGeometryTrianglesDataKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = vertexFormat, type = VkFormat, offset = 16, size = 4
    vertexFormat VkFormat <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = vertexData, type = VkDeviceOrHostAddressConstKHR, offset = 24, size = 8
    vertexData VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = vertexStride, type = VkDeviceSize, offset = 32, size = 8
    vertexStride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = maxVertex, type = uint32_t, offset = 40, size = 4
    maxVertex dword ?
;   TypeKind.ELABORATED
;   name = indexType, type = VkIndexType, offset = 44, size = 4
    indexType VkIndexType <>
;   TypeKind.ELABORATED
;   name = indexData, type = VkDeviceOrHostAddressConstKHR, offset = 48, size = 8
    indexData VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = transformData, type = VkDeviceOrHostAddressConstKHR, offset = 56, size = 8
    transformData VkDeviceOrHostAddressConstKHR <>
VkAccelerationStructureGeometryTrianglesDataKHR ends

VkAccelerationStructureGeometryAabbsDataKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = data, type = VkDeviceOrHostAddressConstKHR, offset = 16, size = 8
    data VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = stride, type = VkDeviceSize, offset = 24, size = 8
    stride VkDeviceSize <>
VkAccelerationStructureGeometryAabbsDataKHR ends

; TYPEDEF VkAccelerationStructureGeometryAabbsDataKHR = struct VkAccelerationStructureGeometryAabbsDataKHR, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureGeometryAabbsDataKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = data, type = VkDeviceOrHostAddressConstKHR, offset = 16, size = 8
    data VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = stride, type = VkDeviceSize, offset = 24, size = 8
    stride VkDeviceSize <>
VkAccelerationStructureGeometryAabbsDataKHR ends

VkAccelerationStructureGeometryInstancesDataKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = arrayOfPointers, type = VkBool32, offset = 16, size = 4
    arrayOfPointers VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = data, type = VkDeviceOrHostAddressConstKHR, offset = 24, size = 8
    data VkDeviceOrHostAddressConstKHR <>
VkAccelerationStructureGeometryInstancesDataKHR ends

; TYPEDEF VkAccelerationStructureGeometryInstancesDataKHR = struct VkAccelerationStructureGeometryInstancesDataKHR, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureGeometryInstancesDataKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = arrayOfPointers, type = VkBool32, offset = 16, size = 4
    arrayOfPointers VkBool32 <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = data, type = VkDeviceOrHostAddressConstKHR, offset = 24, size = 8
    data VkDeviceOrHostAddressConstKHR <>
VkAccelerationStructureGeometryInstancesDataKHR ends

; TYPEDEF VkAccelerationStructureGeometryDataKHR = union VkAccelerationStructureGeometryDataKHR, TypeKind.ELABORATED
; remove union typedef

VkAccelerationStructureGeometryKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = geometryType, type = VkGeometryTypeKHR, offset = 16, size = 4
    geometryType VkGeometryTypeKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = geometry, type = VkAccelerationStructureGeometryDataKHR, offset = 24, size = 64
    geometry VkAccelerationStructureGeometryDataKHR <>
;   TypeKind.ELABORATED
;   name = flags, type = VkGeometryFlagsKHR, offset = 88, size = 4
    flags VkGeometryFlagsKHR <>
VkAccelerationStructureGeometryKHR ends

; TYPEDEF VkAccelerationStructureGeometryKHR = struct VkAccelerationStructureGeometryKHR, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureGeometryKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = geometryType, type = VkGeometryTypeKHR, offset = 16, size = 4
    geometryType VkGeometryTypeKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = geometry, type = VkAccelerationStructureGeometryDataKHR, offset = 24, size = 64
    geometry VkAccelerationStructureGeometryDataKHR <>
;   TypeKind.ELABORATED
;   name = flags, type = VkGeometryFlagsKHR, offset = 88, size = 4
    flags VkGeometryFlagsKHR <>
VkAccelerationStructureGeometryKHR ends

VkAccelerationStructureBuildGeometryInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkAccelerationStructureTypeKHR, offset = 16, size = 4
    __type VkAccelerationStructureTypeKHR <>
;   TypeKind.ELABORATED
;   name = flags, type = VkBuildAccelerationStructureFlagsKHR, offset = 20, size = 4
    flags VkBuildAccelerationStructureFlagsKHR <>
;   TypeKind.ELABORATED
;   name = mode, type = VkBuildAccelerationStructureModeKHR, offset = 24, size = 4
    mode VkBuildAccelerationStructureModeKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = srcAccelerationStructure, type = VkAccelerationStructureKHR, offset = 32, size = 8
    srcAccelerationStructure VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = dstAccelerationStructure, type = VkAccelerationStructureKHR, offset = 40, size = 8
    dstAccelerationStructure VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = geometryCount, type = uint32_t, offset = 48, size = 4
    geometryCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pGeometries, type = const VkAccelerationStructureGeometryKHR *, offset = 56, size = 8
    pGeometries qword ?
;   TypeKind.POINTER
;   name = ppGeometries, type = const VkAccelerationStructureGeometryKHR *const *, offset = 64, size = 8
    ppGeometries qword ?
;   TypeKind.ELABORATED
;   name = scratchData, type = VkDeviceOrHostAddressKHR, offset = 72, size = 8
    scratchData VkDeviceOrHostAddressKHR <>
VkAccelerationStructureBuildGeometryInfoKHR ends

; TYPEDEF VkAccelerationStructureBuildGeometryInfoKHR = struct VkAccelerationStructureBuildGeometryInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureBuildGeometryInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkAccelerationStructureTypeKHR, offset = 16, size = 4
    __type VkAccelerationStructureTypeKHR <>
;   TypeKind.ELABORATED
;   name = flags, type = VkBuildAccelerationStructureFlagsKHR, offset = 20, size = 4
    flags VkBuildAccelerationStructureFlagsKHR <>
;   TypeKind.ELABORATED
;   name = mode, type = VkBuildAccelerationStructureModeKHR, offset = 24, size = 4
    mode VkBuildAccelerationStructureModeKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = srcAccelerationStructure, type = VkAccelerationStructureKHR, offset = 32, size = 8
    srcAccelerationStructure VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = dstAccelerationStructure, type = VkAccelerationStructureKHR, offset = 40, size = 8
    dstAccelerationStructure VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = geometryCount, type = uint32_t, offset = 48, size = 4
    geometryCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pGeometries, type = const VkAccelerationStructureGeometryKHR *, offset = 56, size = 8
    pGeometries qword ?
;   TypeKind.POINTER
;   name = ppGeometries, type = const VkAccelerationStructureGeometryKHR *const *, offset = 64, size = 8
    ppGeometries qword ?
;   TypeKind.ELABORATED
;   name = scratchData, type = VkDeviceOrHostAddressKHR, offset = 72, size = 8
    scratchData VkDeviceOrHostAddressKHR <>
VkAccelerationStructureBuildGeometryInfoKHR ends

VkAccelerationStructureCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = createFlags, type = VkAccelerationStructureCreateFlagsKHR, offset = 16, size = 4
    createFlags VkAccelerationStructureCreateFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 24, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 32, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 40, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = type, type = VkAccelerationStructureTypeKHR, offset = 48, size = 4
    __type VkAccelerationStructureTypeKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 56, size = 8
    deviceAddress VkDeviceAddress <>
VkAccelerationStructureCreateInfoKHR ends

; TYPEDEF VkAccelerationStructureCreateInfoKHR = struct VkAccelerationStructureCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = createFlags, type = VkAccelerationStructureCreateFlagsKHR, offset = 16, size = 4
    createFlags VkAccelerationStructureCreateFlagsKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = buffer, type = VkBuffer, offset = 24, size = 8
    _buffer VkBuffer <>
;   TypeKind.ELABORATED
;   name = offset, type = VkDeviceSize, offset = 32, size = 8
    _offset VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 40, size = 8
    _size VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = type, type = VkAccelerationStructureTypeKHR, offset = 48, size = 4
    __type VkAccelerationStructureTypeKHR <>
    byte 4 dup(?)
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 56, size = 8
    deviceAddress VkDeviceAddress <>
VkAccelerationStructureCreateInfoKHR ends

VkWriteDescriptorSetAccelerationStructureKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructureCount, type = uint32_t, offset = 16, size = 4
    accelerationStructureCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAccelerationStructures, type = const VkAccelerationStructureKHR *, offset = 24, size = 8
    pAccelerationStructures qword ?
VkWriteDescriptorSetAccelerationStructureKHR ends

; TYPEDEF VkWriteDescriptorSetAccelerationStructureKHR = struct VkWriteDescriptorSetAccelerationStructureKHR, TypeKind.ELABORATED
; remove struct typedef

VkWriteDescriptorSetAccelerationStructureKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructureCount, type = uint32_t, offset = 16, size = 4
    accelerationStructureCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pAccelerationStructures, type = const VkAccelerationStructureKHR *, offset = 24, size = 8
    pAccelerationStructures qword ?
VkWriteDescriptorSetAccelerationStructureKHR ends

VkPhysicalDeviceAccelerationStructureFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructure, type = VkBool32, offset = 16, size = 4
    accelerationStructure VkBool32 <>
;   TypeKind.ELABORATED
;   name = accelerationStructureCaptureReplay, type = VkBool32, offset = 20, size = 4
    accelerationStructureCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = accelerationStructureIndirectBuild, type = VkBool32, offset = 24, size = 4
    accelerationStructureIndirectBuild VkBool32 <>
;   TypeKind.ELABORATED
;   name = accelerationStructureHostCommands, type = VkBool32, offset = 28, size = 4
    accelerationStructureHostCommands VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingAccelerationStructureUpdateAfterBind, type = VkBool32, offset = 32, size = 4
    descriptorBindingAccelerationStructureUpdateAfterBind VkBool32 <>
VkPhysicalDeviceAccelerationStructureFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceAccelerationStructureFeaturesKHR = struct VkPhysicalDeviceAccelerationStructureFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceAccelerationStructureFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructure, type = VkBool32, offset = 16, size = 4
    accelerationStructure VkBool32 <>
;   TypeKind.ELABORATED
;   name = accelerationStructureCaptureReplay, type = VkBool32, offset = 20, size = 4
    accelerationStructureCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = accelerationStructureIndirectBuild, type = VkBool32, offset = 24, size = 4
    accelerationStructureIndirectBuild VkBool32 <>
;   TypeKind.ELABORATED
;   name = accelerationStructureHostCommands, type = VkBool32, offset = 28, size = 4
    accelerationStructureHostCommands VkBool32 <>
;   TypeKind.ELABORATED
;   name = descriptorBindingAccelerationStructureUpdateAfterBind, type = VkBool32, offset = 32, size = 4
    descriptorBindingAccelerationStructureUpdateAfterBind VkBool32 <>
VkPhysicalDeviceAccelerationStructureFeaturesKHR ends

VkPhysicalDeviceAccelerationStructurePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxGeometryCount, type = uint64_t, offset = 16, size = 8
    maxGeometryCount qword ?
;   TypeKind.ELABORATED
;   name = maxInstanceCount, type = uint64_t, offset = 24, size = 8
    maxInstanceCount qword ?
;   TypeKind.ELABORATED
;   name = maxPrimitiveCount, type = uint64_t, offset = 32, size = 8
    maxPrimitiveCount qword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorAccelerationStructures, type = uint32_t, offset = 40, size = 4
    maxPerStageDescriptorAccelerationStructures dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindAccelerationStructures, type = uint32_t, offset = 44, size = 4
    maxPerStageDescriptorUpdateAfterBindAccelerationStructures dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetAccelerationStructures, type = uint32_t, offset = 48, size = 4
    maxDescriptorSetAccelerationStructures dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindAccelerationStructures, type = uint32_t, offset = 52, size = 4
    maxDescriptorSetUpdateAfterBindAccelerationStructures dword ?
;   TypeKind.ELABORATED
;   name = minAccelerationStructureScratchOffsetAlignment, type = uint32_t, offset = 56, size = 4
    minAccelerationStructureScratchOffsetAlignment dword ?
VkPhysicalDeviceAccelerationStructurePropertiesKHR ends

; TYPEDEF VkPhysicalDeviceAccelerationStructurePropertiesKHR = struct VkPhysicalDeviceAccelerationStructurePropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceAccelerationStructurePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxGeometryCount, type = uint64_t, offset = 16, size = 8
    maxGeometryCount qword ?
;   TypeKind.ELABORATED
;   name = maxInstanceCount, type = uint64_t, offset = 24, size = 8
    maxInstanceCount qword ?
;   TypeKind.ELABORATED
;   name = maxPrimitiveCount, type = uint64_t, offset = 32, size = 8
    maxPrimitiveCount qword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorAccelerationStructures, type = uint32_t, offset = 40, size = 4
    maxPerStageDescriptorAccelerationStructures dword ?
;   TypeKind.ELABORATED
;   name = maxPerStageDescriptorUpdateAfterBindAccelerationStructures, type = uint32_t, offset = 44, size = 4
    maxPerStageDescriptorUpdateAfterBindAccelerationStructures dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetAccelerationStructures, type = uint32_t, offset = 48, size = 4
    maxDescriptorSetAccelerationStructures dword ?
;   TypeKind.ELABORATED
;   name = maxDescriptorSetUpdateAfterBindAccelerationStructures, type = uint32_t, offset = 52, size = 4
    maxDescriptorSetUpdateAfterBindAccelerationStructures dword ?
;   TypeKind.ELABORATED
;   name = minAccelerationStructureScratchOffsetAlignment, type = uint32_t, offset = 56, size = 4
    minAccelerationStructureScratchOffsetAlignment dword ?
VkPhysicalDeviceAccelerationStructurePropertiesKHR ends

VkAccelerationStructureDeviceAddressInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructure, type = VkAccelerationStructureKHR, offset = 16, size = 8
    accelerationStructure VkAccelerationStructureKHR <>
VkAccelerationStructureDeviceAddressInfoKHR ends

; TYPEDEF VkAccelerationStructureDeviceAddressInfoKHR = struct VkAccelerationStructureDeviceAddressInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureDeviceAddressInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructure, type = VkAccelerationStructureKHR, offset = 16, size = 8
    accelerationStructure VkAccelerationStructureKHR <>
VkAccelerationStructureDeviceAddressInfoKHR ends

VkAccelerationStructureVersionInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pVersionData, type = const uint8_t *, offset = 16, size = 8
    pVersionData qword ?
VkAccelerationStructureVersionInfoKHR ends

; TYPEDEF VkAccelerationStructureVersionInfoKHR = struct VkAccelerationStructureVersionInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureVersionInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.POINTER
;   name = pVersionData, type = const uint8_t *, offset = 16, size = 8
    pVersionData qword ?
VkAccelerationStructureVersionInfoKHR ends

VkCopyAccelerationStructureToMemoryInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkAccelerationStructureKHR, offset = 16, size = 8
    src VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = dst, type = VkDeviceOrHostAddressKHR, offset = 24, size = 8
    dst VkDeviceOrHostAddressKHR <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyAccelerationStructureModeKHR, offset = 32, size = 4
    mode VkCopyAccelerationStructureModeKHR <>
VkCopyAccelerationStructureToMemoryInfoKHR ends

; TYPEDEF VkCopyAccelerationStructureToMemoryInfoKHR = struct VkCopyAccelerationStructureToMemoryInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkCopyAccelerationStructureToMemoryInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkAccelerationStructureKHR, offset = 16, size = 8
    src VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = dst, type = VkDeviceOrHostAddressKHR, offset = 24, size = 8
    dst VkDeviceOrHostAddressKHR <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyAccelerationStructureModeKHR, offset = 32, size = 4
    mode VkCopyAccelerationStructureModeKHR <>
VkCopyAccelerationStructureToMemoryInfoKHR ends

VkCopyMemoryToAccelerationStructureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkDeviceOrHostAddressConstKHR, offset = 16, size = 8
    src VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = dst, type = VkAccelerationStructureKHR, offset = 24, size = 8
    dst VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyAccelerationStructureModeKHR, offset = 32, size = 4
    mode VkCopyAccelerationStructureModeKHR <>
VkCopyMemoryToAccelerationStructureInfoKHR ends

; TYPEDEF VkCopyMemoryToAccelerationStructureInfoKHR = struct VkCopyMemoryToAccelerationStructureInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkCopyMemoryToAccelerationStructureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkDeviceOrHostAddressConstKHR, offset = 16, size = 8
    src VkDeviceOrHostAddressConstKHR <>
;   TypeKind.ELABORATED
;   name = dst, type = VkAccelerationStructureKHR, offset = 24, size = 8
    dst VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyAccelerationStructureModeKHR, offset = 32, size = 4
    mode VkCopyAccelerationStructureModeKHR <>
VkCopyMemoryToAccelerationStructureInfoKHR ends

VkCopyAccelerationStructureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkAccelerationStructureKHR, offset = 16, size = 8
    src VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = dst, type = VkAccelerationStructureKHR, offset = 24, size = 8
    dst VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyAccelerationStructureModeKHR, offset = 32, size = 4
    mode VkCopyAccelerationStructureModeKHR <>
VkCopyAccelerationStructureInfoKHR ends

; TYPEDEF VkCopyAccelerationStructureInfoKHR = struct VkCopyAccelerationStructureInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkCopyAccelerationStructureInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = src, type = VkAccelerationStructureKHR, offset = 16, size = 8
    src VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = dst, type = VkAccelerationStructureKHR, offset = 24, size = 8
    dst VkAccelerationStructureKHR <>
;   TypeKind.ELABORATED
;   name = mode, type = VkCopyAccelerationStructureModeKHR, offset = 32, size = 4
    mode VkCopyAccelerationStructureModeKHR <>
VkCopyAccelerationStructureInfoKHR ends

VkAccelerationStructureBuildSizesInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructureSize, type = VkDeviceSize, offset = 16, size = 8
    accelerationStructureSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = updateScratchSize, type = VkDeviceSize, offset = 24, size = 8
    updateScratchSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = buildScratchSize, type = VkDeviceSize, offset = 32, size = 8
    buildScratchSize VkDeviceSize <>
VkAccelerationStructureBuildSizesInfoKHR ends

; TYPEDEF VkAccelerationStructureBuildSizesInfoKHR = struct VkAccelerationStructureBuildSizesInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkAccelerationStructureBuildSizesInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = accelerationStructureSize, type = VkDeviceSize, offset = 16, size = 8
    accelerationStructureSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = updateScratchSize, type = VkDeviceSize, offset = 24, size = 8
    updateScratchSize VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = buildScratchSize, type = VkDeviceSize, offset = 32, size = 8
    buildScratchSize VkDeviceSize <>
VkAccelerationStructureBuildSizesInfoKHR ends

; TYPEDEF PFN_vkCreateAccelerationStructureKHR = VkResult (*)(VkDevice, const VkAccelerationStructureCreateInfoKHR *, const VkAllocationCallbacks *, VkAccelerationStructureKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateAccelerationStructureKHR typedef qword

; TYPEDEF PFN_vkDestroyAccelerationStructureKHR = void (*)(VkDevice, VkAccelerationStructureKHR, const VkAllocationCallbacks *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkDestroyAccelerationStructureKHR typedef qword

; TYPEDEF PFN_vkCmdBuildAccelerationStructuresKHR = void (*)(VkCommandBuffer, uint32_t, const VkAccelerationStructureBuildGeometryInfoKHR *, const VkAccelerationStructureBuildRangeInfoKHR *const *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBuildAccelerationStructuresKHR typedef qword

; TYPEDEF PFN_vkCmdBuildAccelerationStructuresIndirectKHR = void (*)(VkCommandBuffer, uint32_t, const VkAccelerationStructureBuildGeometryInfoKHR *, const VkDeviceAddress *, const uint32_t *, const uint32_t *const *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdBuildAccelerationStructuresIndirectKHR typedef qword

; TYPEDEF PFN_vkBuildAccelerationStructuresKHR = VkResult (*)(VkDevice, VkDeferredOperationKHR, uint32_t, const VkAccelerationStructureBuildGeometryInfoKHR *, const VkAccelerationStructureBuildRangeInfoKHR *const *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkBuildAccelerationStructuresKHR typedef qword

; TYPEDEF PFN_vkCopyAccelerationStructureKHR = VkResult (*)(VkDevice, VkDeferredOperationKHR, const VkCopyAccelerationStructureInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCopyAccelerationStructureKHR typedef qword

; TYPEDEF PFN_vkCopyAccelerationStructureToMemoryKHR = VkResult (*)(VkDevice, VkDeferredOperationKHR, const VkCopyAccelerationStructureToMemoryInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCopyAccelerationStructureToMemoryKHR typedef qword

; TYPEDEF PFN_vkCopyMemoryToAccelerationStructureKHR = VkResult (*)(VkDevice, VkDeferredOperationKHR, const VkCopyMemoryToAccelerationStructureInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCopyMemoryToAccelerationStructureKHR typedef qword

; TYPEDEF PFN_vkWriteAccelerationStructuresPropertiesKHR = VkResult (*)(VkDevice, uint32_t, const VkAccelerationStructureKHR *, VkQueryType, size_t, void *, size_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkWriteAccelerationStructuresPropertiesKHR typedef qword

; TYPEDEF PFN_vkCmdCopyAccelerationStructureKHR = void (*)(VkCommandBuffer, const VkCopyAccelerationStructureInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyAccelerationStructureKHR typedef qword

; TYPEDEF PFN_vkCmdCopyAccelerationStructureToMemoryKHR = void (*)(VkCommandBuffer, const VkCopyAccelerationStructureToMemoryInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyAccelerationStructureToMemoryKHR typedef qword

; TYPEDEF PFN_vkCmdCopyMemoryToAccelerationStructureKHR = void (*)(VkCommandBuffer, const VkCopyMemoryToAccelerationStructureInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdCopyMemoryToAccelerationStructureKHR typedef qword

; TYPEDEF PFN_vkGetAccelerationStructureDeviceAddressKHR = VkDeviceAddress (*)(VkDevice, const VkAccelerationStructureDeviceAddressInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetAccelerationStructureDeviceAddressKHR typedef qword

; TYPEDEF PFN_vkCmdWriteAccelerationStructuresPropertiesKHR = void (*)(VkCommandBuffer, uint32_t, const VkAccelerationStructureKHR *, VkQueryType, VkQueryPool, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdWriteAccelerationStructuresPropertiesKHR typedef qword

; TYPEDEF PFN_vkGetDeviceAccelerationStructureCompatibilityKHR = void (*)(VkDevice, const VkAccelerationStructureVersionInfoKHR *, VkAccelerationStructureCompatibilityKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetDeviceAccelerationStructureCompatibilityKHR typedef qword

; TYPEDEF PFN_vkGetAccelerationStructureBuildSizesKHR = void (*)(VkDevice, VkAccelerationStructureBuildTypeKHR, const VkAccelerationStructureBuildGeometryInfoKHR *, const uint32_t *, VkAccelerationStructureBuildSizesInfoKHR *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetAccelerationStructureBuildSizesKHR typedef qword

; VkResult vkCreateAccelerationStructureKHR(VkDevice device, const VkAccelerationStructureCreateInfoKHR * pCreateInfo, const VkAllocationCallbacks * pAllocator, VkAccelerationStructureKHR * pAccelerationStructure)
vkCreateAccelerationStructureKHR qword ?

; void vkDestroyAccelerationStructureKHR(VkDevice device, VkAccelerationStructureKHR accelerationStructure, const VkAllocationCallbacks * pAllocator)
vkDestroyAccelerationStructureKHR qword ?

; void vkCmdBuildAccelerationStructuresKHR(VkCommandBuffer commandBuffer, uint32_t infoCount, const VkAccelerationStructureBuildGeometryInfoKHR * pInfos, const VkAccelerationStructureBuildRangeInfoKHR *const * ppBuildRangeInfos)
vkCmdBuildAccelerationStructuresKHR qword ?

; void vkCmdBuildAccelerationStructuresIndirectKHR(VkCommandBuffer commandBuffer, uint32_t infoCount, const VkAccelerationStructureBuildGeometryInfoKHR * pInfos, const VkDeviceAddress * pIndirectDeviceAddresses, const uint32_t * pIndirectStrides, const uint32_t *const * ppMaxPrimitiveCounts)
vkCmdBuildAccelerationStructuresIndirectKHR qword ?

; VkResult vkBuildAccelerationStructuresKHR(VkDevice device, VkDeferredOperationKHR deferredOperation, uint32_t infoCount, const VkAccelerationStructureBuildGeometryInfoKHR * pInfos, const VkAccelerationStructureBuildRangeInfoKHR *const * ppBuildRangeInfos)
vkBuildAccelerationStructuresKHR qword ?

; VkResult vkCopyAccelerationStructureKHR(VkDevice device, VkDeferredOperationKHR deferredOperation, const VkCopyAccelerationStructureInfoKHR * pInfo)
vkCopyAccelerationStructureKHR qword ?

; VkResult vkCopyAccelerationStructureToMemoryKHR(VkDevice device, VkDeferredOperationKHR deferredOperation, const VkCopyAccelerationStructureToMemoryInfoKHR * pInfo)
vkCopyAccelerationStructureToMemoryKHR qword ?

; VkResult vkCopyMemoryToAccelerationStructureKHR(VkDevice device, VkDeferredOperationKHR deferredOperation, const VkCopyMemoryToAccelerationStructureInfoKHR * pInfo)
vkCopyMemoryToAccelerationStructureKHR qword ?

; VkResult vkWriteAccelerationStructuresPropertiesKHR(VkDevice device, uint32_t accelerationStructureCount, const VkAccelerationStructureKHR * pAccelerationStructures, VkQueryType queryType, size_t dataSize, void * pData, size_t stride)
vkWriteAccelerationStructuresPropertiesKHR qword ?

; void vkCmdCopyAccelerationStructureKHR(VkCommandBuffer commandBuffer, const VkCopyAccelerationStructureInfoKHR * pInfo)
vkCmdCopyAccelerationStructureKHR qword ?

; void vkCmdCopyAccelerationStructureToMemoryKHR(VkCommandBuffer commandBuffer, const VkCopyAccelerationStructureToMemoryInfoKHR * pInfo)
vkCmdCopyAccelerationStructureToMemoryKHR qword ?

; void vkCmdCopyMemoryToAccelerationStructureKHR(VkCommandBuffer commandBuffer, const VkCopyMemoryToAccelerationStructureInfoKHR * pInfo)
vkCmdCopyMemoryToAccelerationStructureKHR qword ?

; VkDeviceAddress vkGetAccelerationStructureDeviceAddressKHR(VkDevice device, const VkAccelerationStructureDeviceAddressInfoKHR * pInfo)
vkGetAccelerationStructureDeviceAddressKHR qword ?

; void vkCmdWriteAccelerationStructuresPropertiesKHR(VkCommandBuffer commandBuffer, uint32_t accelerationStructureCount, const VkAccelerationStructureKHR * pAccelerationStructures, VkQueryType queryType, VkQueryPool queryPool, uint32_t firstQuery)
vkCmdWriteAccelerationStructuresPropertiesKHR qword ?

; void vkGetDeviceAccelerationStructureCompatibilityKHR(VkDevice device, const VkAccelerationStructureVersionInfoKHR * pVersionInfo, VkAccelerationStructureCompatibilityKHR * pCompatibility)
vkGetDeviceAccelerationStructureCompatibilityKHR qword ?

; void vkGetAccelerationStructureBuildSizesKHR(VkDevice device, VkAccelerationStructureBuildTypeKHR buildType, const VkAccelerationStructureBuildGeometryInfoKHR * pBuildInfo, const uint32_t * pMaxPrimitiveCounts, VkAccelerationStructureBuildSizesInfoKHR * pSizeInfo)
vkGetAccelerationStructureBuildSizesKHR qword ?

; enum VkShaderGroupShaderKHR {
    VK_SHADER_GROUP_SHADER_GENERAL_KHR equ 0
    VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR equ 1
    VK_SHADER_GROUP_SHADER_ANY_HIT_KHR equ 2
    VK_SHADER_GROUP_SHADER_INTERSECTION_KHR equ 3
    VK_SHADER_GROUP_SHADER_MAX_ENUM_KHR equ 2147483647
; }

; TYPEDEF VkShaderGroupShaderKHR = enum VkShaderGroupShaderKHR, TypeKind.ELABORATED
VkShaderGroupShaderKHR typedef dword

; enum VkShaderGroupShaderKHR {
    VK_SHADER_GROUP_SHADER_GENERAL_KHR equ 0
    VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR equ 1
    VK_SHADER_GROUP_SHADER_ANY_HIT_KHR equ 2
    VK_SHADER_GROUP_SHADER_INTERSECTION_KHR equ 3
    VK_SHADER_GROUP_SHADER_MAX_ENUM_KHR equ 2147483647
; }

VkRayTracingShaderGroupCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkRayTracingShaderGroupTypeKHR, offset = 16, size = 4
    __type VkRayTracingShaderGroupTypeKHR <>
;   TypeKind.ELABORATED
;   name = generalShader, type = uint32_t, offset = 20, size = 4
    generalShader dword ?
;   TypeKind.ELABORATED
;   name = closestHitShader, type = uint32_t, offset = 24, size = 4
    closestHitShader dword ?
;   TypeKind.ELABORATED
;   name = anyHitShader, type = uint32_t, offset = 28, size = 4
    anyHitShader dword ?
;   TypeKind.ELABORATED
;   name = intersectionShader, type = uint32_t, offset = 32, size = 4
    intersectionShader dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pShaderGroupCaptureReplayHandle, type = const void *, offset = 40, size = 8
    pShaderGroupCaptureReplayHandle qword ?
VkRayTracingShaderGroupCreateInfoKHR ends

; TYPEDEF VkRayTracingShaderGroupCreateInfoKHR = struct VkRayTracingShaderGroupCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkRayTracingShaderGroupCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = type, type = VkRayTracingShaderGroupTypeKHR, offset = 16, size = 4
    __type VkRayTracingShaderGroupTypeKHR <>
;   TypeKind.ELABORATED
;   name = generalShader, type = uint32_t, offset = 20, size = 4
    generalShader dword ?
;   TypeKind.ELABORATED
;   name = closestHitShader, type = uint32_t, offset = 24, size = 4
    closestHitShader dword ?
;   TypeKind.ELABORATED
;   name = anyHitShader, type = uint32_t, offset = 28, size = 4
    anyHitShader dword ?
;   TypeKind.ELABORATED
;   name = intersectionShader, type = uint32_t, offset = 32, size = 4
    intersectionShader dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pShaderGroupCaptureReplayHandle, type = const void *, offset = 40, size = 8
    pShaderGroupCaptureReplayHandle qword ?
VkRayTracingShaderGroupCreateInfoKHR ends

VkRayTracingPipelineInterfaceCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxPipelineRayPayloadSize, type = uint32_t, offset = 16, size = 4
    maxPipelineRayPayloadSize dword ?
;   TypeKind.ELABORATED
;   name = maxPipelineRayHitAttributeSize, type = uint32_t, offset = 20, size = 4
    maxPipelineRayHitAttributeSize dword ?
VkRayTracingPipelineInterfaceCreateInfoKHR ends

; TYPEDEF VkRayTracingPipelineInterfaceCreateInfoKHR = struct VkRayTracingPipelineInterfaceCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkRayTracingPipelineInterfaceCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxPipelineRayPayloadSize, type = uint32_t, offset = 16, size = 4
    maxPipelineRayPayloadSize dword ?
;   TypeKind.ELABORATED
;   name = maxPipelineRayHitAttributeSize, type = uint32_t, offset = 20, size = 4
    maxPipelineRayHitAttributeSize dword ?
VkRayTracingPipelineInterfaceCreateInfoKHR ends

VkRayTracingPipelineCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreateFlags, offset = 16, size = 4
    flags VkPipelineCreateFlags <>
;   TypeKind.ELABORATED
;   name = stageCount, type = uint32_t, offset = 20, size = 4
    stageCount dword ?
;   TypeKind.POINTER
;   name = pStages, type = const VkPipelineShaderStageCreateInfo *, offset = 24, size = 8
    pStages qword ?
;   TypeKind.ELABORATED
;   name = groupCount, type = uint32_t, offset = 32, size = 4
    groupCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pGroups, type = const VkRayTracingShaderGroupCreateInfoKHR *, offset = 40, size = 8
    pGroups qword ?
;   TypeKind.ELABORATED
;   name = maxPipelineRayRecursionDepth, type = uint32_t, offset = 48, size = 4
    maxPipelineRayRecursionDepth dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pLibraryInfo, type = const VkPipelineLibraryCreateInfoKHR *, offset = 56, size = 8
    pLibraryInfo qword ?
;   TypeKind.POINTER
;   name = pLibraryInterface, type = const VkRayTracingPipelineInterfaceCreateInfoKHR *, offset = 64, size = 8
    pLibraryInterface qword ?
;   TypeKind.POINTER
;   name = pDynamicState, type = const VkPipelineDynamicStateCreateInfo *, offset = 72, size = 8
    pDynamicState qword ?
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 80, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = basePipelineHandle, type = VkPipeline, offset = 88, size = 8
    basePipelineHandle VkPipeline <>
;   TypeKind.ELABORATED
;   name = basePipelineIndex, type = int32_t, offset = 96, size = 4
    basePipelineIndex sdword ?
VkRayTracingPipelineCreateInfoKHR ends

; TYPEDEF VkRayTracingPipelineCreateInfoKHR = struct VkRayTracingPipelineCreateInfoKHR, TypeKind.ELABORATED
; remove struct typedef

VkRayTracingPipelineCreateInfoKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = const void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = flags, type = VkPipelineCreateFlags, offset = 16, size = 4
    flags VkPipelineCreateFlags <>
;   TypeKind.ELABORATED
;   name = stageCount, type = uint32_t, offset = 20, size = 4
    stageCount dword ?
;   TypeKind.POINTER
;   name = pStages, type = const VkPipelineShaderStageCreateInfo *, offset = 24, size = 8
    pStages qword ?
;   TypeKind.ELABORATED
;   name = groupCount, type = uint32_t, offset = 32, size = 4
    groupCount dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pGroups, type = const VkRayTracingShaderGroupCreateInfoKHR *, offset = 40, size = 8
    pGroups qword ?
;   TypeKind.ELABORATED
;   name = maxPipelineRayRecursionDepth, type = uint32_t, offset = 48, size = 4
    maxPipelineRayRecursionDepth dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pLibraryInfo, type = const VkPipelineLibraryCreateInfoKHR *, offset = 56, size = 8
    pLibraryInfo qword ?
;   TypeKind.POINTER
;   name = pLibraryInterface, type = const VkRayTracingPipelineInterfaceCreateInfoKHR *, offset = 64, size = 8
    pLibraryInterface qword ?
;   TypeKind.POINTER
;   name = pDynamicState, type = const VkPipelineDynamicStateCreateInfo *, offset = 72, size = 8
    pDynamicState qword ?
;   TypeKind.ELABORATED
;   name = layout, type = VkPipelineLayout, offset = 80, size = 8
    layout VkPipelineLayout <>
;   TypeKind.ELABORATED
;   name = basePipelineHandle, type = VkPipeline, offset = 88, size = 8
    basePipelineHandle VkPipeline <>
;   TypeKind.ELABORATED
;   name = basePipelineIndex, type = int32_t, offset = 96, size = 4
    basePipelineIndex sdword ?
VkRayTracingPipelineCreateInfoKHR ends

VkPhysicalDeviceRayTracingPipelineFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingPipeline, type = VkBool32, offset = 16, size = 4
    rayTracingPipeline VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTracingPipelineShaderGroupHandleCaptureReplay, type = VkBool32, offset = 20, size = 4
    rayTracingPipelineShaderGroupHandleCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTracingPipelineShaderGroupHandleCaptureReplayMixed, type = VkBool32, offset = 24, size = 4
    rayTracingPipelineShaderGroupHandleCaptureReplayMixed VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTracingPipelineTraceRaysIndirect, type = VkBool32, offset = 28, size = 4
    rayTracingPipelineTraceRaysIndirect VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTraversalPrimitiveCulling, type = VkBool32, offset = 32, size = 4
    rayTraversalPrimitiveCulling VkBool32 <>
VkPhysicalDeviceRayTracingPipelineFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceRayTracingPipelineFeaturesKHR = struct VkPhysicalDeviceRayTracingPipelineFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRayTracingPipelineFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayTracingPipeline, type = VkBool32, offset = 16, size = 4
    rayTracingPipeline VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTracingPipelineShaderGroupHandleCaptureReplay, type = VkBool32, offset = 20, size = 4
    rayTracingPipelineShaderGroupHandleCaptureReplay VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTracingPipelineShaderGroupHandleCaptureReplayMixed, type = VkBool32, offset = 24, size = 4
    rayTracingPipelineShaderGroupHandleCaptureReplayMixed VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTracingPipelineTraceRaysIndirect, type = VkBool32, offset = 28, size = 4
    rayTracingPipelineTraceRaysIndirect VkBool32 <>
;   TypeKind.ELABORATED
;   name = rayTraversalPrimitiveCulling, type = VkBool32, offset = 32, size = 4
    rayTraversalPrimitiveCulling VkBool32 <>
VkPhysicalDeviceRayTracingPipelineFeaturesKHR ends

VkPhysicalDeviceRayTracingPipelinePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderGroupHandleSize, type = uint32_t, offset = 16, size = 4
    shaderGroupHandleSize dword ?
;   TypeKind.ELABORATED
;   name = maxRayRecursionDepth, type = uint32_t, offset = 20, size = 4
    maxRayRecursionDepth dword ?
;   TypeKind.ELABORATED
;   name = maxShaderGroupStride, type = uint32_t, offset = 24, size = 4
    maxShaderGroupStride dword ?
;   TypeKind.ELABORATED
;   name = shaderGroupBaseAlignment, type = uint32_t, offset = 28, size = 4
    shaderGroupBaseAlignment dword ?
;   TypeKind.ELABORATED
;   name = shaderGroupHandleCaptureReplaySize, type = uint32_t, offset = 32, size = 4
    shaderGroupHandleCaptureReplaySize dword ?
;   TypeKind.ELABORATED
;   name = maxRayDispatchInvocationCount, type = uint32_t, offset = 36, size = 4
    maxRayDispatchInvocationCount dword ?
;   TypeKind.ELABORATED
;   name = shaderGroupHandleAlignment, type = uint32_t, offset = 40, size = 4
    shaderGroupHandleAlignment dword ?
;   TypeKind.ELABORATED
;   name = maxRayHitAttributeSize, type = uint32_t, offset = 44, size = 4
    maxRayHitAttributeSize dword ?
VkPhysicalDeviceRayTracingPipelinePropertiesKHR ends

; TYPEDEF VkPhysicalDeviceRayTracingPipelinePropertiesKHR = struct VkPhysicalDeviceRayTracingPipelinePropertiesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRayTracingPipelinePropertiesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = shaderGroupHandleSize, type = uint32_t, offset = 16, size = 4
    shaderGroupHandleSize dword ?
;   TypeKind.ELABORATED
;   name = maxRayRecursionDepth, type = uint32_t, offset = 20, size = 4
    maxRayRecursionDepth dword ?
;   TypeKind.ELABORATED
;   name = maxShaderGroupStride, type = uint32_t, offset = 24, size = 4
    maxShaderGroupStride dword ?
;   TypeKind.ELABORATED
;   name = shaderGroupBaseAlignment, type = uint32_t, offset = 28, size = 4
    shaderGroupBaseAlignment dword ?
;   TypeKind.ELABORATED
;   name = shaderGroupHandleCaptureReplaySize, type = uint32_t, offset = 32, size = 4
    shaderGroupHandleCaptureReplaySize dword ?
;   TypeKind.ELABORATED
;   name = maxRayDispatchInvocationCount, type = uint32_t, offset = 36, size = 4
    maxRayDispatchInvocationCount dword ?
;   TypeKind.ELABORATED
;   name = shaderGroupHandleAlignment, type = uint32_t, offset = 40, size = 4
    shaderGroupHandleAlignment dword ?
;   TypeKind.ELABORATED
;   name = maxRayHitAttributeSize, type = uint32_t, offset = 44, size = 4
    maxRayHitAttributeSize dword ?
VkPhysicalDeviceRayTracingPipelinePropertiesKHR ends

VkStridedDeviceAddressRegionKHR struct
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 0, size = 8
    deviceAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = stride, type = VkDeviceSize, offset = 8, size = 8
    stride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 16, size = 8
    _size VkDeviceSize <>
VkStridedDeviceAddressRegionKHR ends

; TYPEDEF VkStridedDeviceAddressRegionKHR = struct VkStridedDeviceAddressRegionKHR, TypeKind.ELABORATED
; remove struct typedef

VkStridedDeviceAddressRegionKHR struct
;   TypeKind.ELABORATED
;   name = deviceAddress, type = VkDeviceAddress, offset = 0, size = 8
    deviceAddress VkDeviceAddress <>
;   TypeKind.ELABORATED
;   name = stride, type = VkDeviceSize, offset = 8, size = 8
    stride VkDeviceSize <>
;   TypeKind.ELABORATED
;   name = size, type = VkDeviceSize, offset = 16, size = 8
    _size VkDeviceSize <>
VkStridedDeviceAddressRegionKHR ends

VkTraceRaysIndirectCommandKHR struct
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 0, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 4, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = depth, type = uint32_t, offset = 8, size = 4
    depth dword ?
VkTraceRaysIndirectCommandKHR ends

; TYPEDEF VkTraceRaysIndirectCommandKHR = struct VkTraceRaysIndirectCommandKHR, TypeKind.ELABORATED
; remove struct typedef

VkTraceRaysIndirectCommandKHR struct
;   TypeKind.ELABORATED
;   name = width, type = uint32_t, offset = 0, size = 4
    _width dword ?
;   TypeKind.ELABORATED
;   name = height, type = uint32_t, offset = 4, size = 4
    height dword ?
;   TypeKind.ELABORATED
;   name = depth, type = uint32_t, offset = 8, size = 4
    depth dword ?
VkTraceRaysIndirectCommandKHR ends

; TYPEDEF PFN_vkCmdTraceRaysKHR = void (*)(VkCommandBuffer, const VkStridedDeviceAddressRegionKHR *, const VkStridedDeviceAddressRegionKHR *, const VkStridedDeviceAddressRegionKHR *, const VkStridedDeviceAddressRegionKHR *, uint32_t, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdTraceRaysKHR typedef qword

; TYPEDEF PFN_vkCreateRayTracingPipelinesKHR = VkResult (*)(VkDevice, VkDeferredOperationKHR, VkPipelineCache, uint32_t, const VkRayTracingPipelineCreateInfoKHR *, const VkAllocationCallbacks *, VkPipeline *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCreateRayTracingPipelinesKHR typedef qword

; TYPEDEF PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = VkResult (*)(VkDevice, VkPipeline, uint32_t, uint32_t, size_t, void *) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR typedef qword

; TYPEDEF PFN_vkCmdTraceRaysIndirectKHR = void (*)(VkCommandBuffer, const VkStridedDeviceAddressRegionKHR *, const VkStridedDeviceAddressRegionKHR *, const VkStridedDeviceAddressRegionKHR *, const VkStridedDeviceAddressRegionKHR *, VkDeviceAddress) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdTraceRaysIndirectKHR typedef qword

; TYPEDEF PFN_vkGetRayTracingShaderGroupStackSizeKHR = VkDeviceSize (*)(VkDevice, VkPipeline, uint32_t, VkShaderGroupShaderKHR) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkGetRayTracingShaderGroupStackSizeKHR typedef qword

; TYPEDEF PFN_vkCmdSetRayTracingPipelineStackSizeKHR = void (*)(VkCommandBuffer, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdSetRayTracingPipelineStackSizeKHR typedef qword

; void vkCmdTraceRaysKHR(VkCommandBuffer commandBuffer, const VkStridedDeviceAddressRegionKHR * pRaygenShaderBindingTable, const VkStridedDeviceAddressRegionKHR * pMissShaderBindingTable, const VkStridedDeviceAddressRegionKHR * pHitShaderBindingTable, const VkStridedDeviceAddressRegionKHR * pCallableShaderBindingTable, uint32_t width, uint32_t height, uint32_t depth)
vkCmdTraceRaysKHR qword ?

; VkResult vkCreateRayTracingPipelinesKHR(VkDevice device, VkDeferredOperationKHR deferredOperation, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkRayTracingPipelineCreateInfoKHR * pCreateInfos, const VkAllocationCallbacks * pAllocator, VkPipeline * pPipelines)
vkCreateRayTracingPipelinesKHR qword ?

; VkResult vkGetRayTracingCaptureReplayShaderGroupHandlesKHR(VkDevice device, VkPipeline pipeline, uint32_t firstGroup, uint32_t groupCount, size_t dataSize, void * pData)
vkGetRayTracingCaptureReplayShaderGroupHandlesKHR qword ?

; void vkCmdTraceRaysIndirectKHR(VkCommandBuffer commandBuffer, const VkStridedDeviceAddressRegionKHR * pRaygenShaderBindingTable, const VkStridedDeviceAddressRegionKHR * pMissShaderBindingTable, const VkStridedDeviceAddressRegionKHR * pHitShaderBindingTable, const VkStridedDeviceAddressRegionKHR * pCallableShaderBindingTable, VkDeviceAddress indirectDeviceAddress)
vkCmdTraceRaysIndirectKHR qword ?

; VkDeviceSize vkGetRayTracingShaderGroupStackSizeKHR(VkDevice device, VkPipeline pipeline, uint32_t group, VkShaderGroupShaderKHR groupShader)
vkGetRayTracingShaderGroupStackSizeKHR qword ?

; void vkCmdSetRayTracingPipelineStackSizeKHR(VkCommandBuffer commandBuffer, uint32_t pipelineStackSize)
vkCmdSetRayTracingPipelineStackSizeKHR qword ?

VkPhysicalDeviceRayQueryFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayQuery, type = VkBool32, offset = 16, size = 4
    rayQuery VkBool32 <>
VkPhysicalDeviceRayQueryFeaturesKHR ends

; TYPEDEF VkPhysicalDeviceRayQueryFeaturesKHR = struct VkPhysicalDeviceRayQueryFeaturesKHR, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceRayQueryFeaturesKHR struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = rayQuery, type = VkBool32, offset = 16, size = 4
    rayQuery VkBool32 <>
VkPhysicalDeviceRayQueryFeaturesKHR ends

VkPhysicalDeviceMeshShaderFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = taskShader, type = VkBool32, offset = 16, size = 4
    taskShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = meshShader, type = VkBool32, offset = 20, size = 4
    meshShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewMeshShader, type = VkBool32, offset = 24, size = 4
    multiviewMeshShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = primitiveFragmentShadingRateMeshShader, type = VkBool32, offset = 28, size = 4
    primitiveFragmentShadingRateMeshShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = meshShaderQueries, type = VkBool32, offset = 32, size = 4
    meshShaderQueries VkBool32 <>
VkPhysicalDeviceMeshShaderFeaturesEXT ends

; TYPEDEF VkPhysicalDeviceMeshShaderFeaturesEXT = struct VkPhysicalDeviceMeshShaderFeaturesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMeshShaderFeaturesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = taskShader, type = VkBool32, offset = 16, size = 4
    taskShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = meshShader, type = VkBool32, offset = 20, size = 4
    meshShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = multiviewMeshShader, type = VkBool32, offset = 24, size = 4
    multiviewMeshShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = primitiveFragmentShadingRateMeshShader, type = VkBool32, offset = 28, size = 4
    primitiveFragmentShadingRateMeshShader VkBool32 <>
;   TypeKind.ELABORATED
;   name = meshShaderQueries, type = VkBool32, offset = 32, size = 4
    meshShaderQueries VkBool32 <>
VkPhysicalDeviceMeshShaderFeaturesEXT ends

VkPhysicalDeviceMeshShaderPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxTaskWorkGroupTotalCount, type = uint32_t, offset = 16, size = 4
    maxTaskWorkGroupTotalCount dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxTaskWorkGroupCount, type = uint32_t[3], offset = 20, size = 12
    maxTaskWorkGroupCount dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxTaskWorkGroupInvocations, type = uint32_t, offset = 32, size = 4
    maxTaskWorkGroupInvocations dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxTaskWorkGroupSize, type = uint32_t[3], offset = 36, size = 12
    maxTaskWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxTaskPayloadSize, type = uint32_t, offset = 48, size = 4
    maxTaskPayloadSize dword ?
;   TypeKind.ELABORATED
;   name = maxTaskSharedMemorySize, type = uint32_t, offset = 52, size = 4
    maxTaskSharedMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxTaskPayloadAndSharedMemorySize, type = uint32_t, offset = 56, size = 4
    maxTaskPayloadAndSharedMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshWorkGroupTotalCount, type = uint32_t, offset = 60, size = 4
    maxMeshWorkGroupTotalCount dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxMeshWorkGroupCount, type = uint32_t[3], offset = 64, size = 12
    maxMeshWorkGroupCount dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxMeshWorkGroupInvocations, type = uint32_t, offset = 76, size = 4
    maxMeshWorkGroupInvocations dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxMeshWorkGroupSize, type = uint32_t[3], offset = 80, size = 12
    maxMeshWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxMeshSharedMemorySize, type = uint32_t, offset = 92, size = 4
    maxMeshSharedMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshPayloadAndSharedMemorySize, type = uint32_t, offset = 96, size = 4
    maxMeshPayloadAndSharedMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputMemorySize, type = uint32_t, offset = 100, size = 4
    maxMeshOutputMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshPayloadAndOutputMemorySize, type = uint32_t, offset = 104, size = 4
    maxMeshPayloadAndOutputMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputComponents, type = uint32_t, offset = 108, size = 4
    maxMeshOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputVertices, type = uint32_t, offset = 112, size = 4
    maxMeshOutputVertices dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputPrimitives, type = uint32_t, offset = 116, size = 4
    maxMeshOutputPrimitives dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputLayers, type = uint32_t, offset = 120, size = 4
    maxMeshOutputLayers dword ?
;   TypeKind.ELABORATED
;   name = maxMeshMultiviewViewCount, type = uint32_t, offset = 124, size = 4
    maxMeshMultiviewViewCount dword ?
;   TypeKind.ELABORATED
;   name = meshOutputPerVertexGranularity, type = uint32_t, offset = 128, size = 4
    meshOutputPerVertexGranularity dword ?
;   TypeKind.ELABORATED
;   name = meshOutputPerPrimitiveGranularity, type = uint32_t, offset = 132, size = 4
    meshOutputPerPrimitiveGranularity dword ?
;   TypeKind.ELABORATED
;   name = maxPreferredTaskWorkGroupInvocations, type = uint32_t, offset = 136, size = 4
    maxPreferredTaskWorkGroupInvocations dword ?
;   TypeKind.ELABORATED
;   name = maxPreferredMeshWorkGroupInvocations, type = uint32_t, offset = 140, size = 4
    maxPreferredMeshWorkGroupInvocations dword ?
;   TypeKind.ELABORATED
;   name = prefersLocalInvocationVertexOutput, type = VkBool32, offset = 144, size = 4
    prefersLocalInvocationVertexOutput VkBool32 <>
;   TypeKind.ELABORATED
;   name = prefersLocalInvocationPrimitiveOutput, type = VkBool32, offset = 148, size = 4
    prefersLocalInvocationPrimitiveOutput VkBool32 <>
;   TypeKind.ELABORATED
;   name = prefersCompactVertexOutput, type = VkBool32, offset = 152, size = 4
    prefersCompactVertexOutput VkBool32 <>
;   TypeKind.ELABORATED
;   name = prefersCompactPrimitiveOutput, type = VkBool32, offset = 156, size = 4
    prefersCompactPrimitiveOutput VkBool32 <>
VkPhysicalDeviceMeshShaderPropertiesEXT ends

; TYPEDEF VkPhysicalDeviceMeshShaderPropertiesEXT = struct VkPhysicalDeviceMeshShaderPropertiesEXT, TypeKind.ELABORATED
; remove struct typedef

VkPhysicalDeviceMeshShaderPropertiesEXT struct
;   TypeKind.ELABORATED
;   name = sType, type = VkStructureType, offset = 0, size = 4
    _sType dword ?
    byte 4 dup(?)
;   TypeKind.POINTER
;   name = pNext, type = void *, offset = 8, size = 8
    pNext qword ?
;   TypeKind.ELABORATED
;   name = maxTaskWorkGroupTotalCount, type = uint32_t, offset = 16, size = 4
    maxTaskWorkGroupTotalCount dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxTaskWorkGroupCount, type = uint32_t[3], offset = 20, size = 12
    maxTaskWorkGroupCount dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxTaskWorkGroupInvocations, type = uint32_t, offset = 32, size = 4
    maxTaskWorkGroupInvocations dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxTaskWorkGroupSize, type = uint32_t[3], offset = 36, size = 12
    maxTaskWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxTaskPayloadSize, type = uint32_t, offset = 48, size = 4
    maxTaskPayloadSize dword ?
;   TypeKind.ELABORATED
;   name = maxTaskSharedMemorySize, type = uint32_t, offset = 52, size = 4
    maxTaskSharedMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxTaskPayloadAndSharedMemorySize, type = uint32_t, offset = 56, size = 4
    maxTaskPayloadAndSharedMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshWorkGroupTotalCount, type = uint32_t, offset = 60, size = 4
    maxMeshWorkGroupTotalCount dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxMeshWorkGroupCount, type = uint32_t[3], offset = 64, size = 12
    maxMeshWorkGroupCount dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxMeshWorkGroupInvocations, type = uint32_t, offset = 76, size = 4
    maxMeshWorkGroupInvocations dword ?
;   TypeKind.CONSTANTARRAY
;   name = maxMeshWorkGroupSize, type = uint32_t[3], offset = 80, size = 12
    maxMeshWorkGroupSize dword 3 dup(?)
;   TypeKind.ELABORATED
;   name = maxMeshSharedMemorySize, type = uint32_t, offset = 92, size = 4
    maxMeshSharedMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshPayloadAndSharedMemorySize, type = uint32_t, offset = 96, size = 4
    maxMeshPayloadAndSharedMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputMemorySize, type = uint32_t, offset = 100, size = 4
    maxMeshOutputMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshPayloadAndOutputMemorySize, type = uint32_t, offset = 104, size = 4
    maxMeshPayloadAndOutputMemorySize dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputComponents, type = uint32_t, offset = 108, size = 4
    maxMeshOutputComponents dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputVertices, type = uint32_t, offset = 112, size = 4
    maxMeshOutputVertices dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputPrimitives, type = uint32_t, offset = 116, size = 4
    maxMeshOutputPrimitives dword ?
;   TypeKind.ELABORATED
;   name = maxMeshOutputLayers, type = uint32_t, offset = 120, size = 4
    maxMeshOutputLayers dword ?
;   TypeKind.ELABORATED
;   name = maxMeshMultiviewViewCount, type = uint32_t, offset = 124, size = 4
    maxMeshMultiviewViewCount dword ?
;   TypeKind.ELABORATED
;   name = meshOutputPerVertexGranularity, type = uint32_t, offset = 128, size = 4
    meshOutputPerVertexGranularity dword ?
;   TypeKind.ELABORATED
;   name = meshOutputPerPrimitiveGranularity, type = uint32_t, offset = 132, size = 4
    meshOutputPerPrimitiveGranularity dword ?
;   TypeKind.ELABORATED
;   name = maxPreferredTaskWorkGroupInvocations, type = uint32_t, offset = 136, size = 4
    maxPreferredTaskWorkGroupInvocations dword ?
;   TypeKind.ELABORATED
;   name = maxPreferredMeshWorkGroupInvocations, type = uint32_t, offset = 140, size = 4
    maxPreferredMeshWorkGroupInvocations dword ?
;   TypeKind.ELABORATED
;   name = prefersLocalInvocationVertexOutput, type = VkBool32, offset = 144, size = 4
    prefersLocalInvocationVertexOutput VkBool32 <>
;   TypeKind.ELABORATED
;   name = prefersLocalInvocationPrimitiveOutput, type = VkBool32, offset = 148, size = 4
    prefersLocalInvocationPrimitiveOutput VkBool32 <>
;   TypeKind.ELABORATED
;   name = prefersCompactVertexOutput, type = VkBool32, offset = 152, size = 4
    prefersCompactVertexOutput VkBool32 <>
;   TypeKind.ELABORATED
;   name = prefersCompactPrimitiveOutput, type = VkBool32, offset = 156, size = 4
    prefersCompactPrimitiveOutput VkBool32 <>
VkPhysicalDeviceMeshShaderPropertiesEXT ends

VkDrawMeshTasksIndirectCommandEXT struct
;   TypeKind.ELABORATED
;   name = groupCountX, type = uint32_t, offset = 0, size = 4
    groupCountX dword ?
;   TypeKind.ELABORATED
;   name = groupCountY, type = uint32_t, offset = 4, size = 4
    groupCountY dword ?
;   TypeKind.ELABORATED
;   name = groupCountZ, type = uint32_t, offset = 8, size = 4
    groupCountZ dword ?
VkDrawMeshTasksIndirectCommandEXT ends

; TYPEDEF VkDrawMeshTasksIndirectCommandEXT = struct VkDrawMeshTasksIndirectCommandEXT, TypeKind.ELABORATED
; remove struct typedef

VkDrawMeshTasksIndirectCommandEXT struct
;   TypeKind.ELABORATED
;   name = groupCountX, type = uint32_t, offset = 0, size = 4
    groupCountX dword ?
;   TypeKind.ELABORATED
;   name = groupCountY, type = uint32_t, offset = 4, size = 4
    groupCountY dword ?
;   TypeKind.ELABORATED
;   name = groupCountZ, type = uint32_t, offset = 8, size = 4
    groupCountZ dword ?
VkDrawMeshTasksIndirectCommandEXT ends

; TYPEDEF PFN_vkCmdDrawMeshTasksEXT = void (*)(VkCommandBuffer, uint32_t, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawMeshTasksEXT typedef qword

; TYPEDEF PFN_vkCmdDrawMeshTasksIndirectEXT = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawMeshTasksIndirectEXT typedef qword

; TYPEDEF PFN_vkCmdDrawMeshTasksIndirectCountEXT = void (*)(VkCommandBuffer, VkBuffer, VkDeviceSize, VkBuffer, VkDeviceSize, uint32_t, uint32_t) __attribute__((stdcall)), TypeKind.POINTER
PFN_vkCmdDrawMeshTasksIndirectCountEXT typedef qword

; void vkCmdDrawMeshTasksEXT(VkCommandBuffer commandBuffer, uint32_t groupCountX, uint32_t groupCountY, uint32_t groupCountZ)
vkCmdDrawMeshTasksEXT qword ?

; void vkCmdDrawMeshTasksIndirectEXT(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, uint32_t drawCount, uint32_t stride)
vkCmdDrawMeshTasksIndirectEXT qword ?

; void vkCmdDrawMeshTasksIndirectCountEXT(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride)
vkCmdDrawMeshTasksIndirectCountEXT qword ?
